/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gcsdk_gcmessages.proto */

#ifndef PROTOBUF_C_gcsdk_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_C_gcsdk_5fgcmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages.pb-c.h"

typedef struct _CMsgSHA1Digest CMsgSHA1Digest;
typedef struct _CMsgSOIDOwner CMsgSOIDOwner;
typedef struct _CMsgSOSingleObject CMsgSOSingleObject;
typedef struct _CMsgSOMultipleObjects CMsgSOMultipleObjects;
typedef struct _CMsgSOMultipleObjects__SingleObject CMsgSOMultipleObjects__SingleObject;
typedef struct _CMsgSOCacheSubscribed CMsgSOCacheSubscribed;
typedef struct _CMsgSOCacheSubscribed__SubscribedType CMsgSOCacheSubscribed__SubscribedType;
typedef struct _CMsgSOCacheSubscribedUpToDate CMsgSOCacheSubscribedUpToDate;
typedef struct _CMsgSOCacheUnsubscribed CMsgSOCacheUnsubscribed;
typedef struct _CMsgSOCacheSubscriptionCheck CMsgSOCacheSubscriptionCheck;
typedef struct _CMsgSOCacheSubscriptionRefresh CMsgSOCacheSubscriptionRefresh;
typedef struct _CMsgSOCacheVersion CMsgSOCacheVersion;
typedef struct _CMsgGCMultiplexMessage CMsgGCMultiplexMessage;
typedef struct _CGCToGCMsgMasterAck CGCToGCMsgMasterAck;
typedef struct _CGCToGCMsgMasterAck__Process CGCToGCMsgMasterAck__Process;
typedef struct _CGCToGCMsgMasterAckResponse CGCToGCMsgMasterAckResponse;
typedef struct _CMsgGCToGCUniverseStartup CMsgGCToGCUniverseStartup;
typedef struct _CMsgGCToGCUniverseStartupResponse CMsgGCToGCUniverseStartupResponse;
typedef struct _CGCToGCMsgMasterStartupComplete CGCToGCMsgMasterStartupComplete;
typedef struct _CGCToGCMsgMasterStartupComplete__GCInfo CGCToGCMsgMasterStartupComplete__GCInfo;
typedef struct _CGCToGCMsgRouted CGCToGCMsgRouted;
typedef struct _CGCToGCMsgRoutedReply CGCToGCMsgRoutedReply;
typedef struct _CMsgGCUpdateSubGCSessionInfo CMsgGCUpdateSubGCSessionInfo;
typedef struct _CMsgGCUpdateSubGCSessionInfo__CMsgUpdate CMsgGCUpdateSubGCSessionInfo__CMsgUpdate;
typedef struct _CMsgGCRequestSubGCSessionInfo CMsgGCRequestSubGCSessionInfo;
typedef struct _CMsgGCRequestSubGCSessionInfoResponse CMsgGCRequestSubGCSessionInfoResponse;
typedef struct _CMsgSOCacheHaveVersion CMsgSOCacheHaveVersion;
typedef struct _CMsgClientHello CMsgClientHello;
typedef struct _CMsgClientWelcome CMsgClientWelcome;
typedef struct _CMsgClientWelcome__Location CMsgClientWelcome__Location;
typedef struct _CMsgConnectionStatus CMsgConnectionStatus;
typedef struct _CMsgGCToGCSOCacheSubscribe CMsgGCToGCSOCacheSubscribe;
typedef struct _CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions;
typedef struct _CMsgGCToGCSOCacheUnsubscribe CMsgGCToGCSOCacheUnsubscribe;
typedef struct _CMsgGCClientPing CMsgGCClientPing;
typedef struct _CMsgGCToGCLoadSessionSOCache CMsgGCToGCLoadSessionSOCache;
typedef struct _CMsgGCToGCLoadSessionSOCacheResponse CMsgGCToGCLoadSessionSOCacheResponse;
typedef struct _CMsgGCToGCUpdateSessionStats CMsgGCToGCUpdateSessionStats;
typedef struct _CWorkshopPopulateItemDescriptionsRequest CWorkshopPopulateItemDescriptionsRequest;
typedef struct _CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription;
typedef struct _CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock;
typedef struct _CWorkshopGetContributorsRequest CWorkshopGetContributorsRequest;
typedef struct _CWorkshopGetContributorsResponse CWorkshopGetContributorsResponse;
typedef struct _CWorkshopSetItemPaymentRulesRequest CWorkshopSetItemPaymentRulesRequest;
typedef struct _CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule;
typedef struct _CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule;
typedef struct _CWorkshopSetItemPaymentRulesResponse CWorkshopSetItemPaymentRulesResponse;
typedef struct _CBroadcastPostGameDataFrameRequest CBroadcastPostGameDataFrameRequest;
typedef struct _CMsgSerializedSOCache CMsgSerializedSOCache;
typedef struct _CMsgSerializedSOCache__TypeCache CMsgSerializedSOCache__TypeCache;
typedef struct _CMsgSerializedSOCache__Cache CMsgSerializedSOCache__Cache;
typedef struct _CMsgSerializedSOCache__Cache__Version CMsgSerializedSOCache__Cache__Version;
typedef struct _CMsgGCToClientPollConvarRequest CMsgGCToClientPollConvarRequest;
typedef struct _CMsgGCToClientPollConvarResponse CMsgGCToClientPollConvarResponse;


/* --- enums --- */

typedef enum _ESourceEngine {
  ESOURCE_ENGINE__k_ESE_Source1 = 0,
  ESOURCE_ENGINE__k_ESE_Source2 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESOURCE_ENGINE)
} ESourceEngine;
typedef enum _PartnerAccountType {
  PARTNER_ACCOUNT_TYPE__PARTNER_NONE = 0,
  PARTNER_ACCOUNT_TYPE__PARTNER_PERFECT_WORLD = 1,
  PARTNER_ACCOUNT_TYPE__PARTNER_NEXON = 2,
  PARTNER_ACCOUNT_TYPE__PARTNER_INVALID = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PARTNER_ACCOUNT_TYPE)
} PartnerAccountType;
typedef enum _GCConnectionStatus {
  GCCONNECTION_STATUS__GCConnectionStatus_HAVE_SESSION = 0,
  GCCONNECTION_STATUS__GCConnectionStatus_GC_GOING_DOWN = 1,
  GCCONNECTION_STATUS__GCConnectionStatus_NO_SESSION = 2,
  GCCONNECTION_STATUS__GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,
  GCCONNECTION_STATUS__GCConnectionStatus_NO_STEAM = 4,
  GCCONNECTION_STATUS__GCConnectionStatus_SUSPENDED = 5,
  GCCONNECTION_STATUS__GCConnectionStatus_STEAM_GOING_DOWN = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GCCONNECTION_STATUS)
} GCConnectionStatus;

/* --- messages --- */

struct  _CMsgSHA1Digest
{
  ProtobufCMessage base;
  uint64_t block1;
  uint64_t block2;
  uint32_t block3;
};
#define CMSG_SHA1_DIGEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sha1_digest__descriptor) \
    , 0, 0, 0 }


struct  _CMsgSOIDOwner
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_id;
  uint64_t id;
};
#define CMSG_SOIDOWNER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_soidowner__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSOSingleObject
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type_id;
  int32_t type_id;
  protobuf_c_boolean has_object_data;
  ProtobufCBinaryData object_data;
  protobuf_c_boolean has_version;
  uint64_t version;
  CMsgSOIDOwner *owner_soid;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
};
#define CMSG_SOSINGLE_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sosingle_object__descriptor) \
    , 0,0, 0,{0,NULL}, 0,0, NULL, 0,0 }


struct  _CMsgSOMultipleObjects__SingleObject
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type_id;
  int32_t type_id;
  protobuf_c_boolean has_object_data;
  ProtobufCBinaryData object_data;
};
#define CMSG_SOMULTIPLE_OBJECTS__SINGLE_OBJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_somultiple_objects__single_object__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgSOMultipleObjects
{
  ProtobufCMessage base;
  size_t n_objects_modified;
  CMsgSOMultipleObjects__SingleObject **objects_modified;
  protobuf_c_boolean has_version;
  uint64_t version;
  size_t n_objects_added;
  CMsgSOMultipleObjects__SingleObject **objects_added;
  size_t n_objects_removed;
  CMsgSOMultipleObjects__SingleObject **objects_removed;
  CMsgSOIDOwner *owner_soid;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
};
#define CMSG_SOMULTIPLE_OBJECTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_somultiple_objects__descriptor) \
    , 0,NULL, 0,0, 0,NULL, 0,NULL, NULL, 0,0 }


struct  _CMsgSOCacheSubscribed__SubscribedType
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type_id;
  int32_t type_id;
  size_t n_object_data;
  ProtobufCBinaryData *object_data;
};
#define CMSG_SOCACHE_SUBSCRIBED__SUBSCRIBED_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_subscribed__subscribed_type__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgSOCacheSubscribed
{
  ProtobufCMessage base;
  size_t n_objects;
  CMsgSOCacheSubscribed__SubscribedType **objects;
  protobuf_c_boolean has_version;
  uint64_t version;
  CMsgSOIDOwner *owner_soid;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
  size_t n_service_list;
  uint32_t *service_list;
  protobuf_c_boolean has_sync_version;
  uint64_t sync_version;
};
#define CMSG_SOCACHE_SUBSCRIBED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_subscribed__descriptor) \
    , 0,NULL, 0,0, NULL, 0,0, 0,NULL, 0,0 }


struct  _CMsgSOCacheSubscribedUpToDate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint64_t version;
  CMsgSOIDOwner *owner_soid;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
  size_t n_service_list;
  uint32_t *service_list;
  protobuf_c_boolean has_sync_version;
  uint64_t sync_version;
};
#define CMSG_SOCACHE_SUBSCRIBED_UP_TO_DATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_subscribed_up_to_date__descriptor) \
    , 0,0, NULL, 0,0, 0,NULL, 0,0 }


struct  _CMsgSOCacheUnsubscribed
{
  ProtobufCMessage base;
  CMsgSOIDOwner *owner_soid;
};
#define CMSG_SOCACHE_UNSUBSCRIBED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_unsubscribed__descriptor) \
    , NULL }


struct  _CMsgSOCacheSubscriptionCheck
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint64_t version;
  CMsgSOIDOwner *owner_soid;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
  size_t n_service_list;
  uint32_t *service_list;
  protobuf_c_boolean has_sync_version;
  uint64_t sync_version;
};
#define CMSG_SOCACHE_SUBSCRIPTION_CHECK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_subscription_check__descriptor) \
    , 0,0, NULL, 0,0, 0,NULL, 0,0 }


struct  _CMsgSOCacheSubscriptionRefresh
{
  ProtobufCMessage base;
  CMsgSOIDOwner *owner_soid;
};
#define CMSG_SOCACHE_SUBSCRIPTION_REFRESH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_subscription_refresh__descriptor) \
    , NULL }


struct  _CMsgSOCacheVersion
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint64_t version;
};
#define CMSG_SOCACHE_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_version__descriptor) \
    , 0,0 }


struct  _CMsgGCMultiplexMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_msgtype;
  uint32_t msgtype;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  size_t n_steamids;
  uint64_t *steamids;
};
#define CMSG_GCMULTIPLEX_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcmultiplex_message__descriptor) \
    , 0,0, 0,{0,NULL}, 0,NULL }


struct  _CGCToGCMsgMasterAck__Process
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dir_index;
  uint32_t dir_index;
  size_t n_type_instances;
  uint32_t *type_instances;
};
#define CGCTO_GCMSG_MASTER_ACK__PROCESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_master_ack__process__descriptor) \
    , 0,0, 0,NULL }


struct  _CGCToGCMsgMasterAck
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dir_index;
  uint32_t dir_index;
  char *machine_name;
  char *process_name;
  size_t n_directory;
  CGCToGCMsgMasterAck__Process **directory;
};
#define CGCTO_GCMSG_MASTER_ACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_master_ack__descriptor) \
    , 0,0, NULL, NULL, 0,NULL }


struct  _CGCToGCMsgMasterAckResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  int32_t eresult;
};
#define CGCTO_GCMSG_MASTER_ACK__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_master_ack__response__descriptor) \
    , 0,2 }


struct  _CMsgGCToGCUniverseStartup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_is_initial_startup;
  protobuf_c_boolean is_initial_startup;
};
#define CMSG_GCTO_GCUNIVERSE_STARTUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcuniverse_startup__descriptor) \
    , 0,0 }


struct  _CMsgGCToGCUniverseStartupResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  int32_t eresult;
};
#define CMSG_GCTO_GCUNIVERSE_STARTUP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcuniverse_startup_response__descriptor) \
    , 0,0 }


struct  _CGCToGCMsgMasterStartupComplete__GCInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dir_index;
  uint32_t dir_index;
  char *machine_name;
};
#define CGCTO_GCMSG_MASTER_STARTUP_COMPLETE__GCINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_master_startup_complete__gcinfo__descriptor) \
    , 0,0, NULL }


struct  _CGCToGCMsgMasterStartupComplete
{
  ProtobufCMessage base;
  size_t n_gc_info;
  CGCToGCMsgMasterStartupComplete__GCInfo **gc_info;
};
#define CGCTO_GCMSG_MASTER_STARTUP_COMPLETE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_master_startup_complete__descriptor) \
    , 0,NULL }


struct  _CGCToGCMsgRouted
{
  ProtobufCMessage base;
  protobuf_c_boolean has_msg_type;
  uint32_t msg_type;
  protobuf_c_boolean has_sender_id;
  uint64_t sender_id;
  protobuf_c_boolean has_net_message;
  ProtobufCBinaryData net_message;
};
#define CGCTO_GCMSG_ROUTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_routed__descriptor) \
    , 0,0, 0,0, 0,{0,NULL} }


struct  _CGCToGCMsgRoutedReply
{
  ProtobufCMessage base;
  protobuf_c_boolean has_msg_type;
  uint32_t msg_type;
  protobuf_c_boolean has_net_message;
  ProtobufCBinaryData net_message;
};
#define CGCTO_GCMSG_ROUTED_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcto_gcmsg_routed_reply__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgGCUpdateSubGCSessionInfo__CMsgUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_ip;
  uint32_t ip;
  protobuf_c_boolean has_trusted;
  protobuf_c_boolean trusted;
};
#define CMSG_GCUPDATE_SUB_GCSESSION_INFO__CMSG_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcupdate_sub_gcsession_info__cmsg_update__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgGCUpdateSubGCSessionInfo
{
  ProtobufCMessage base;
  size_t n_updates;
  CMsgGCUpdateSubGCSessionInfo__CMsgUpdate **updates;
};
#define CMSG_GCUPDATE_SUB_GCSESSION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcupdate_sub_gcsession_info__descriptor) \
    , 0,NULL }


struct  _CMsgGCRequestSubGCSessionInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
};
#define CMSG_GCREQUEST_SUB_GCSESSION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcrequest_sub_gcsession_info__descriptor) \
    , 0,0 }


struct  _CMsgGCRequestSubGCSessionInfoResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ip;
  uint32_t ip;
  protobuf_c_boolean has_trusted;
  protobuf_c_boolean trusted;
  protobuf_c_boolean has_port;
  uint32_t port;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CMSG_GCREQUEST_SUB_GCSESSION_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcrequest_sub_gcsession_info_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSOCacheHaveVersion
{
  ProtobufCMessage base;
  CMsgSOIDOwner *soid;
  protobuf_c_boolean has_version;
  uint64_t version;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
  protobuf_c_boolean has_cached_file_version;
  uint32_t cached_file_version;
};
#define CMSG_SOCACHE_HAVE_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_socache_have_version__descriptor) \
    , NULL, 0,0, 0,0, 0,0 }


struct  _CMsgClientHello
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint32_t version;
  size_t n_socache_have_versions;
  CMsgSOCacheHaveVersion **socache_have_versions;
  protobuf_c_boolean has_client_session_need;
  uint32_t client_session_need;
  protobuf_c_boolean has_client_launcher;
  PartnerAccountType client_launcher;
  char *secret_key;
  protobuf_c_boolean has_client_language;
  uint32_t client_language;
  protobuf_c_boolean has_engine;
  ESourceEngine engine;
};
#define CMSG_CLIENT_HELLO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_hello__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,PARTNER_ACCOUNT_TYPE__PARTNER_NONE, NULL, 0,0, 0,ESOURCE_ENGINE__k_ESE_Source1 }


struct  _CMsgClientWelcome__Location
{
  ProtobufCMessage base;
  protobuf_c_boolean has_latitude;
  float latitude;
  protobuf_c_boolean has_longitude;
  float longitude;
  char *country;
};
#define CMSG_CLIENT_WELCOME__LOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_welcome__location__descriptor) \
    , 0,0, 0,0, NULL }


struct  _CMsgClientWelcome
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint32_t version;
  protobuf_c_boolean has_game_data;
  ProtobufCBinaryData game_data;
  size_t n_outofdate_subscribed_caches;
  CMsgSOCacheSubscribed **outofdate_subscribed_caches;
  size_t n_uptodate_subscribed_caches;
  CMsgSOCacheSubscriptionCheck **uptodate_subscribed_caches;
  CMsgClientWelcome__Location *location;
  protobuf_c_boolean has_save_game_key;
  ProtobufCBinaryData save_game_key;
  protobuf_c_boolean has_item_schema_crc;
  uint32_t item_schema_crc;
  char *items_game_url;
  protobuf_c_boolean has_gc_socache_file_version;
  uint32_t gc_socache_file_version;
};
#define CMSG_CLIENT_WELCOME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_welcome__descriptor) \
    , 0,0, 0,{0,NULL}, 0,NULL, 0,NULL, NULL, 0,{0,NULL}, 0,0, NULL, 0,0 }


struct  _CMsgConnectionStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_status;
  GCConnectionStatus status;
  protobuf_c_boolean has_client_session_need;
  uint32_t client_session_need;
  protobuf_c_boolean has_queue_position;
  int32_t queue_position;
  protobuf_c_boolean has_queue_size;
  int32_t queue_size;
  protobuf_c_boolean has_wait_seconds;
  int32_t wait_seconds;
  protobuf_c_boolean has_estimated_wait_seconds_remaining;
  int32_t estimated_wait_seconds_remaining;
};
#define CMSG_CONNECTION_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_connection_status__descriptor) \
    , 0,GCCONNECTION_STATUS__GCConnectionStatus_HAVE_SESSION, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
  protobuf_c_boolean has_version;
  uint64_t version;
};
#define CMSG_GCTO_GCSOCACHE_SUBSCRIBE__CMSG_HAVE_VERSIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcsocache_subscribe__cmsg_have_versions__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToGCSOCacheSubscribe
{
  ProtobufCMessage base;
  protobuf_c_boolean has_subscriber;
  uint64_t subscriber;
  protobuf_c_boolean has_subscribe_to_id;
  uint64_t subscribe_to_id;
  protobuf_c_boolean has_sync_version;
  uint64_t sync_version;
  size_t n_have_versions;
  CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions **have_versions;
  protobuf_c_boolean has_subscribe_to_type;
  uint32_t subscribe_to_type;
};
#define CMSG_GCTO_GCSOCACHE_SUBSCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcsocache_subscribe__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, 0,0 }


struct  _CMsgGCToGCSOCacheUnsubscribe
{
  ProtobufCMessage base;
  protobuf_c_boolean has_subscriber;
  uint64_t subscriber;
  protobuf_c_boolean has_unsubscribe_from_id;
  uint64_t unsubscribe_from_id;
  protobuf_c_boolean has_unsubscribe_from_type;
  uint32_t unsubscribe_from_type;
};
#define CMSG_GCTO_GCSOCACHE_UNSUBSCRIBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcsocache_unsubscribe__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgGCClientPing
{
  ProtobufCMessage base;
};
#define CMSG_GCCLIENT_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_ping__descriptor) \
     }


struct  _CMsgGCToGCLoadSessionSOCache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_GCTO_GCLOAD_SESSION_SOCACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcload_session_socache__descriptor) \
    , 0,0 }


struct  _CMsgGCToGCLoadSessionSOCacheResponse
{
  ProtobufCMessage base;
};
#define CMSG_GCTO_GCLOAD_SESSION_SOCACHE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcload_session_socache_response__descriptor) \
     }


struct  _CMsgGCToGCUpdateSessionStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_sessions;
  uint32_t user_sessions;
  protobuf_c_boolean has_server_sessions;
  uint32_t server_sessions;
  protobuf_c_boolean has_in_logon_surge;
  protobuf_c_boolean in_logon_surge;
};
#define CMSG_GCTO_GCUPDATE_SESSION_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcupdate_session_stats__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gameitemid;
  uint32_t gameitemid;
  char *item_description;
};
#define CWORKSHOP__POPULATE_ITEM_DESCRIPTIONS__REQUEST__SINGLE_ITEM_DESCRIPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__populate_item_descriptions__request__single_item_description__descriptor) \
    , 0,0, NULL }


struct  _CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock
{
  ProtobufCMessage base;
  char *language;
  size_t n_descriptions;
  CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription **descriptions;
};
#define CWORKSHOP__POPULATE_ITEM_DESCRIPTIONS__REQUEST__ITEM_DESCRIPTIONS_LANGUAGE_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__populate_item_descriptions__request__item_descriptions_language_block__descriptor) \
    , NULL, 0,NULL }


struct  _CWorkshopPopulateItemDescriptionsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  size_t n_languages;
  CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock **languages;
};
#define CWORKSHOP__POPULATE_ITEM_DESCRIPTIONS__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__populate_item_descriptions__request__descriptor) \
    , 0,0, 0,NULL }


struct  _CWorkshopGetContributorsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_gameitemid;
  uint32_t gameitemid;
};
#define CWORKSHOP__GET_CONTRIBUTORS__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__get_contributors__request__descriptor) \
    , 0,0, 0,0 }


struct  _CWorkshopGetContributorsResponse
{
  ProtobufCMessage base;
  size_t n_contributors;
  uint64_t *contributors;
};
#define CWORKSHOP__GET_CONTRIBUTORS__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__get_contributors__response__descriptor) \
    , 0,NULL }


struct  _CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule
{
  ProtobufCMessage base;
  protobuf_c_boolean has_workshop_file_id;
  uint64_t workshop_file_id;
  protobuf_c_boolean has_revenue_percentage;
  float revenue_percentage;
  char *rule_description;
};
#define CWORKSHOP__SET_ITEM_PAYMENT_RULES__REQUEST__WORKSHOP_ITEM_PAYMENT_RULE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__set_item_payment_rules__request__workshop_item_payment_rule__descriptor) \
    , 0,0, 0,0, NULL }


struct  _CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_revenue_percentage;
  float revenue_percentage;
  char *rule_description;
};
#define CWORKSHOP__SET_ITEM_PAYMENT_RULES__REQUEST__PARTNER_ITEM_PAYMENT_RULE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__set_item_payment_rules__request__partner_item_payment_rule__descriptor) \
    , 0,0, 0,0, NULL }


struct  _CWorkshopSetItemPaymentRulesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_gameitemid;
  uint32_t gameitemid;
  size_t n_associated_workshop_files;
  CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule **associated_workshop_files;
  size_t n_partner_accounts;
  CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule **partner_accounts;
};
#define CWORKSHOP__SET_ITEM_PAYMENT_RULES__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__set_item_payment_rules__request__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CWorkshopSetItemPaymentRulesResponse
{
  ProtobufCMessage base;
};
#define CWORKSHOP__SET_ITEM_PAYMENT_RULES__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cworkshop__set_item_payment_rules__response__descriptor) \
     }


struct  _CBroadcastPostGameDataFrameRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_broadcast_id;
  uint64_t broadcast_id;
  protobuf_c_boolean has_frame_data;
  ProtobufCBinaryData frame_data;
};
#define CBROADCAST__POST_GAME_DATA_FRAME__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cbroadcast__post_game_data_frame__request__descriptor) \
    , 0,0, 0,0, 0,0, 0,{0,NULL} }


struct  _CMsgSerializedSOCache__TypeCache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  uint32_t type;
  size_t n_objects;
  ProtobufCBinaryData *objects;
  protobuf_c_boolean has_service_id;
  uint32_t service_id;
};
#define CMSG_SERIALIZED_SOCACHE__TYPE_CACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_serialized_socache__type_cache__descriptor) \
    , 0,0, 0,NULL, 0,0 }


struct  _CMsgSerializedSOCache__Cache__Version
{
  ProtobufCMessage base;
  protobuf_c_boolean has_service;
  uint32_t service;
  protobuf_c_boolean has_version;
  uint64_t version;
};
#define CMSG_SERIALIZED_SOCACHE__CACHE__VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_serialized_socache__cache__version__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSerializedSOCache__Cache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_id;
  uint64_t id;
  size_t n_versions;
  CMsgSerializedSOCache__Cache__Version **versions;
  size_t n_type_caches;
  CMsgSerializedSOCache__TypeCache **type_caches;
};
#define CMSG_SERIALIZED_SOCACHE__CACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_serialized_socache__cache__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CMsgSerializedSOCache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_file_version;
  uint32_t file_version;
  size_t n_caches;
  CMsgSerializedSOCache__Cache **caches;
  protobuf_c_boolean has_gc_socache_file_version;
  uint32_t gc_socache_file_version;
};
#define CMSG_SERIALIZED_SOCACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_serialized_socache__descriptor) \
    , 0,0, 0,NULL, 0,0 }


struct  _CMsgGCToClientPollConvarRequest
{
  ProtobufCMessage base;
  char *convar_name;
  protobuf_c_boolean has_poll_id;
  uint32_t poll_id;
};
#define CMSG_GCTO_CLIENT_POLL_CONVAR_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_poll_convar_request__descriptor) \
    , NULL, 0,0 }


struct  _CMsgGCToClientPollConvarResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_poll_id;
  uint32_t poll_id;
  char *convar_value;
};
#define CMSG_GCTO_CLIENT_POLL_CONVAR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_poll_convar_response__descriptor) \
    , 0,0, NULL }


/* CMsgSHA1Digest methods */
void   cmsg_sha1_digest__init
                     (CMsgSHA1Digest         *message);
size_t cmsg_sha1_digest__get_packed_size
                     (const CMsgSHA1Digest   *message);
size_t cmsg_sha1_digest__pack
                     (const CMsgSHA1Digest   *message,
                      uint8_t             *out);
size_t cmsg_sha1_digest__pack_to_buffer
                     (const CMsgSHA1Digest   *message,
                      ProtobufCBuffer     *buffer);
CMsgSHA1Digest *
       cmsg_sha1_digest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sha1_digest__free_unpacked
                     (CMsgSHA1Digest *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOIDOwner methods */
void   cmsg_soidowner__init
                     (CMsgSOIDOwner         *message);
size_t cmsg_soidowner__get_packed_size
                     (const CMsgSOIDOwner   *message);
size_t cmsg_soidowner__pack
                     (const CMsgSOIDOwner   *message,
                      uint8_t             *out);
size_t cmsg_soidowner__pack_to_buffer
                     (const CMsgSOIDOwner   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOIDOwner *
       cmsg_soidowner__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_soidowner__free_unpacked
                     (CMsgSOIDOwner *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOSingleObject methods */
void   cmsg_sosingle_object__init
                     (CMsgSOSingleObject         *message);
size_t cmsg_sosingle_object__get_packed_size
                     (const CMsgSOSingleObject   *message);
size_t cmsg_sosingle_object__pack
                     (const CMsgSOSingleObject   *message,
                      uint8_t             *out);
size_t cmsg_sosingle_object__pack_to_buffer
                     (const CMsgSOSingleObject   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOSingleObject *
       cmsg_sosingle_object__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sosingle_object__free_unpacked
                     (CMsgSOSingleObject *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOMultipleObjects__SingleObject methods */
void   cmsg_somultiple_objects__single_object__init
                     (CMsgSOMultipleObjects__SingleObject         *message);
/* CMsgSOMultipleObjects methods */
void   cmsg_somultiple_objects__init
                     (CMsgSOMultipleObjects         *message);
size_t cmsg_somultiple_objects__get_packed_size
                     (const CMsgSOMultipleObjects   *message);
size_t cmsg_somultiple_objects__pack
                     (const CMsgSOMultipleObjects   *message,
                      uint8_t             *out);
size_t cmsg_somultiple_objects__pack_to_buffer
                     (const CMsgSOMultipleObjects   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOMultipleObjects *
       cmsg_somultiple_objects__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_somultiple_objects__free_unpacked
                     (CMsgSOMultipleObjects *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheSubscribed__SubscribedType methods */
void   cmsg_socache_subscribed__subscribed_type__init
                     (CMsgSOCacheSubscribed__SubscribedType         *message);
/* CMsgSOCacheSubscribed methods */
void   cmsg_socache_subscribed__init
                     (CMsgSOCacheSubscribed         *message);
size_t cmsg_socache_subscribed__get_packed_size
                     (const CMsgSOCacheSubscribed   *message);
size_t cmsg_socache_subscribed__pack
                     (const CMsgSOCacheSubscribed   *message,
                      uint8_t             *out);
size_t cmsg_socache_subscribed__pack_to_buffer
                     (const CMsgSOCacheSubscribed   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheSubscribed *
       cmsg_socache_subscribed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_subscribed__free_unpacked
                     (CMsgSOCacheSubscribed *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheSubscribedUpToDate methods */
void   cmsg_socache_subscribed_up_to_date__init
                     (CMsgSOCacheSubscribedUpToDate         *message);
size_t cmsg_socache_subscribed_up_to_date__get_packed_size
                     (const CMsgSOCacheSubscribedUpToDate   *message);
size_t cmsg_socache_subscribed_up_to_date__pack
                     (const CMsgSOCacheSubscribedUpToDate   *message,
                      uint8_t             *out);
size_t cmsg_socache_subscribed_up_to_date__pack_to_buffer
                     (const CMsgSOCacheSubscribedUpToDate   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheSubscribedUpToDate *
       cmsg_socache_subscribed_up_to_date__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_subscribed_up_to_date__free_unpacked
                     (CMsgSOCacheSubscribedUpToDate *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheUnsubscribed methods */
void   cmsg_socache_unsubscribed__init
                     (CMsgSOCacheUnsubscribed         *message);
size_t cmsg_socache_unsubscribed__get_packed_size
                     (const CMsgSOCacheUnsubscribed   *message);
size_t cmsg_socache_unsubscribed__pack
                     (const CMsgSOCacheUnsubscribed   *message,
                      uint8_t             *out);
size_t cmsg_socache_unsubscribed__pack_to_buffer
                     (const CMsgSOCacheUnsubscribed   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheUnsubscribed *
       cmsg_socache_unsubscribed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_unsubscribed__free_unpacked
                     (CMsgSOCacheUnsubscribed *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheSubscriptionCheck methods */
void   cmsg_socache_subscription_check__init
                     (CMsgSOCacheSubscriptionCheck         *message);
size_t cmsg_socache_subscription_check__get_packed_size
                     (const CMsgSOCacheSubscriptionCheck   *message);
size_t cmsg_socache_subscription_check__pack
                     (const CMsgSOCacheSubscriptionCheck   *message,
                      uint8_t             *out);
size_t cmsg_socache_subscription_check__pack_to_buffer
                     (const CMsgSOCacheSubscriptionCheck   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheSubscriptionCheck *
       cmsg_socache_subscription_check__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_subscription_check__free_unpacked
                     (CMsgSOCacheSubscriptionCheck *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheSubscriptionRefresh methods */
void   cmsg_socache_subscription_refresh__init
                     (CMsgSOCacheSubscriptionRefresh         *message);
size_t cmsg_socache_subscription_refresh__get_packed_size
                     (const CMsgSOCacheSubscriptionRefresh   *message);
size_t cmsg_socache_subscription_refresh__pack
                     (const CMsgSOCacheSubscriptionRefresh   *message,
                      uint8_t             *out);
size_t cmsg_socache_subscription_refresh__pack_to_buffer
                     (const CMsgSOCacheSubscriptionRefresh   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheSubscriptionRefresh *
       cmsg_socache_subscription_refresh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_subscription_refresh__free_unpacked
                     (CMsgSOCacheSubscriptionRefresh *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheVersion methods */
void   cmsg_socache_version__init
                     (CMsgSOCacheVersion         *message);
size_t cmsg_socache_version__get_packed_size
                     (const CMsgSOCacheVersion   *message);
size_t cmsg_socache_version__pack
                     (const CMsgSOCacheVersion   *message,
                      uint8_t             *out);
size_t cmsg_socache_version__pack_to_buffer
                     (const CMsgSOCacheVersion   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheVersion *
       cmsg_socache_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_version__free_unpacked
                     (CMsgSOCacheVersion *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCMultiplexMessage methods */
void   cmsg_gcmultiplex_message__init
                     (CMsgGCMultiplexMessage         *message);
size_t cmsg_gcmultiplex_message__get_packed_size
                     (const CMsgGCMultiplexMessage   *message);
size_t cmsg_gcmultiplex_message__pack
                     (const CMsgGCMultiplexMessage   *message,
                      uint8_t             *out);
size_t cmsg_gcmultiplex_message__pack_to_buffer
                     (const CMsgGCMultiplexMessage   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCMultiplexMessage *
       cmsg_gcmultiplex_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcmultiplex_message__free_unpacked
                     (CMsgGCMultiplexMessage *message,
                      ProtobufCAllocator *allocator);
/* CGCToGCMsgMasterAck__Process methods */
void   cgcto_gcmsg_master_ack__process__init
                     (CGCToGCMsgMasterAck__Process         *message);
/* CGCToGCMsgMasterAck methods */
void   cgcto_gcmsg_master_ack__init
                     (CGCToGCMsgMasterAck         *message);
size_t cgcto_gcmsg_master_ack__get_packed_size
                     (const CGCToGCMsgMasterAck   *message);
size_t cgcto_gcmsg_master_ack__pack
                     (const CGCToGCMsgMasterAck   *message,
                      uint8_t             *out);
size_t cgcto_gcmsg_master_ack__pack_to_buffer
                     (const CGCToGCMsgMasterAck   *message,
                      ProtobufCBuffer     *buffer);
CGCToGCMsgMasterAck *
       cgcto_gcmsg_master_ack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcto_gcmsg_master_ack__free_unpacked
                     (CGCToGCMsgMasterAck *message,
                      ProtobufCAllocator *allocator);
/* CGCToGCMsgMasterAckResponse methods */
void   cgcto_gcmsg_master_ack__response__init
                     (CGCToGCMsgMasterAckResponse         *message);
size_t cgcto_gcmsg_master_ack__response__get_packed_size
                     (const CGCToGCMsgMasterAckResponse   *message);
size_t cgcto_gcmsg_master_ack__response__pack
                     (const CGCToGCMsgMasterAckResponse   *message,
                      uint8_t             *out);
size_t cgcto_gcmsg_master_ack__response__pack_to_buffer
                     (const CGCToGCMsgMasterAckResponse   *message,
                      ProtobufCBuffer     *buffer);
CGCToGCMsgMasterAckResponse *
       cgcto_gcmsg_master_ack__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcto_gcmsg_master_ack__response__free_unpacked
                     (CGCToGCMsgMasterAckResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCUniverseStartup methods */
void   cmsg_gcto_gcuniverse_startup__init
                     (CMsgGCToGCUniverseStartup         *message);
size_t cmsg_gcto_gcuniverse_startup__get_packed_size
                     (const CMsgGCToGCUniverseStartup   *message);
size_t cmsg_gcto_gcuniverse_startup__pack
                     (const CMsgGCToGCUniverseStartup   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcuniverse_startup__pack_to_buffer
                     (const CMsgGCToGCUniverseStartup   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCUniverseStartup *
       cmsg_gcto_gcuniverse_startup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcuniverse_startup__free_unpacked
                     (CMsgGCToGCUniverseStartup *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCUniverseStartupResponse methods */
void   cmsg_gcto_gcuniverse_startup_response__init
                     (CMsgGCToGCUniverseStartupResponse         *message);
size_t cmsg_gcto_gcuniverse_startup_response__get_packed_size
                     (const CMsgGCToGCUniverseStartupResponse   *message);
size_t cmsg_gcto_gcuniverse_startup_response__pack
                     (const CMsgGCToGCUniverseStartupResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcuniverse_startup_response__pack_to_buffer
                     (const CMsgGCToGCUniverseStartupResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCUniverseStartupResponse *
       cmsg_gcto_gcuniverse_startup_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcuniverse_startup_response__free_unpacked
                     (CMsgGCToGCUniverseStartupResponse *message,
                      ProtobufCAllocator *allocator);
/* CGCToGCMsgMasterStartupComplete__GCInfo methods */
void   cgcto_gcmsg_master_startup_complete__gcinfo__init
                     (CGCToGCMsgMasterStartupComplete__GCInfo         *message);
/* CGCToGCMsgMasterStartupComplete methods */
void   cgcto_gcmsg_master_startup_complete__init
                     (CGCToGCMsgMasterStartupComplete         *message);
size_t cgcto_gcmsg_master_startup_complete__get_packed_size
                     (const CGCToGCMsgMasterStartupComplete   *message);
size_t cgcto_gcmsg_master_startup_complete__pack
                     (const CGCToGCMsgMasterStartupComplete   *message,
                      uint8_t             *out);
size_t cgcto_gcmsg_master_startup_complete__pack_to_buffer
                     (const CGCToGCMsgMasterStartupComplete   *message,
                      ProtobufCBuffer     *buffer);
CGCToGCMsgMasterStartupComplete *
       cgcto_gcmsg_master_startup_complete__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcto_gcmsg_master_startup_complete__free_unpacked
                     (CGCToGCMsgMasterStartupComplete *message,
                      ProtobufCAllocator *allocator);
/* CGCToGCMsgRouted methods */
void   cgcto_gcmsg_routed__init
                     (CGCToGCMsgRouted         *message);
size_t cgcto_gcmsg_routed__get_packed_size
                     (const CGCToGCMsgRouted   *message);
size_t cgcto_gcmsg_routed__pack
                     (const CGCToGCMsgRouted   *message,
                      uint8_t             *out);
size_t cgcto_gcmsg_routed__pack_to_buffer
                     (const CGCToGCMsgRouted   *message,
                      ProtobufCBuffer     *buffer);
CGCToGCMsgRouted *
       cgcto_gcmsg_routed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcto_gcmsg_routed__free_unpacked
                     (CGCToGCMsgRouted *message,
                      ProtobufCAllocator *allocator);
/* CGCToGCMsgRoutedReply methods */
void   cgcto_gcmsg_routed_reply__init
                     (CGCToGCMsgRoutedReply         *message);
size_t cgcto_gcmsg_routed_reply__get_packed_size
                     (const CGCToGCMsgRoutedReply   *message);
size_t cgcto_gcmsg_routed_reply__pack
                     (const CGCToGCMsgRoutedReply   *message,
                      uint8_t             *out);
size_t cgcto_gcmsg_routed_reply__pack_to_buffer
                     (const CGCToGCMsgRoutedReply   *message,
                      ProtobufCBuffer     *buffer);
CGCToGCMsgRoutedReply *
       cgcto_gcmsg_routed_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcto_gcmsg_routed_reply__free_unpacked
                     (CGCToGCMsgRoutedReply *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCUpdateSubGCSessionInfo__CMsgUpdate methods */
void   cmsg_gcupdate_sub_gcsession_info__cmsg_update__init
                     (CMsgGCUpdateSubGCSessionInfo__CMsgUpdate         *message);
/* CMsgGCUpdateSubGCSessionInfo methods */
void   cmsg_gcupdate_sub_gcsession_info__init
                     (CMsgGCUpdateSubGCSessionInfo         *message);
size_t cmsg_gcupdate_sub_gcsession_info__get_packed_size
                     (const CMsgGCUpdateSubGCSessionInfo   *message);
size_t cmsg_gcupdate_sub_gcsession_info__pack
                     (const CMsgGCUpdateSubGCSessionInfo   *message,
                      uint8_t             *out);
size_t cmsg_gcupdate_sub_gcsession_info__pack_to_buffer
                     (const CMsgGCUpdateSubGCSessionInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCUpdateSubGCSessionInfo *
       cmsg_gcupdate_sub_gcsession_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcupdate_sub_gcsession_info__free_unpacked
                     (CMsgGCUpdateSubGCSessionInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCRequestSubGCSessionInfo methods */
void   cmsg_gcrequest_sub_gcsession_info__init
                     (CMsgGCRequestSubGCSessionInfo         *message);
size_t cmsg_gcrequest_sub_gcsession_info__get_packed_size
                     (const CMsgGCRequestSubGCSessionInfo   *message);
size_t cmsg_gcrequest_sub_gcsession_info__pack
                     (const CMsgGCRequestSubGCSessionInfo   *message,
                      uint8_t             *out);
size_t cmsg_gcrequest_sub_gcsession_info__pack_to_buffer
                     (const CMsgGCRequestSubGCSessionInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCRequestSubGCSessionInfo *
       cmsg_gcrequest_sub_gcsession_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcrequest_sub_gcsession_info__free_unpacked
                     (CMsgGCRequestSubGCSessionInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCRequestSubGCSessionInfoResponse methods */
void   cmsg_gcrequest_sub_gcsession_info_response__init
                     (CMsgGCRequestSubGCSessionInfoResponse         *message);
size_t cmsg_gcrequest_sub_gcsession_info_response__get_packed_size
                     (const CMsgGCRequestSubGCSessionInfoResponse   *message);
size_t cmsg_gcrequest_sub_gcsession_info_response__pack
                     (const CMsgGCRequestSubGCSessionInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcrequest_sub_gcsession_info_response__pack_to_buffer
                     (const CMsgGCRequestSubGCSessionInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCRequestSubGCSessionInfoResponse *
       cmsg_gcrequest_sub_gcsession_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcrequest_sub_gcsession_info_response__free_unpacked
                     (CMsgGCRequestSubGCSessionInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgSOCacheHaveVersion methods */
void   cmsg_socache_have_version__init
                     (CMsgSOCacheHaveVersion         *message);
size_t cmsg_socache_have_version__get_packed_size
                     (const CMsgSOCacheHaveVersion   *message);
size_t cmsg_socache_have_version__pack
                     (const CMsgSOCacheHaveVersion   *message,
                      uint8_t             *out);
size_t cmsg_socache_have_version__pack_to_buffer
                     (const CMsgSOCacheHaveVersion   *message,
                      ProtobufCBuffer     *buffer);
CMsgSOCacheHaveVersion *
       cmsg_socache_have_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_socache_have_version__free_unpacked
                     (CMsgSOCacheHaveVersion *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientHello methods */
void   cmsg_client_hello__init
                     (CMsgClientHello         *message);
size_t cmsg_client_hello__get_packed_size
                     (const CMsgClientHello   *message);
size_t cmsg_client_hello__pack
                     (const CMsgClientHello   *message,
                      uint8_t             *out);
size_t cmsg_client_hello__pack_to_buffer
                     (const CMsgClientHello   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientHello *
       cmsg_client_hello__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_hello__free_unpacked
                     (CMsgClientHello *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientWelcome__Location methods */
void   cmsg_client_welcome__location__init
                     (CMsgClientWelcome__Location         *message);
/* CMsgClientWelcome methods */
void   cmsg_client_welcome__init
                     (CMsgClientWelcome         *message);
size_t cmsg_client_welcome__get_packed_size
                     (const CMsgClientWelcome   *message);
size_t cmsg_client_welcome__pack
                     (const CMsgClientWelcome   *message,
                      uint8_t             *out);
size_t cmsg_client_welcome__pack_to_buffer
                     (const CMsgClientWelcome   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientWelcome *
       cmsg_client_welcome__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_welcome__free_unpacked
                     (CMsgClientWelcome *message,
                      ProtobufCAllocator *allocator);
/* CMsgConnectionStatus methods */
void   cmsg_connection_status__init
                     (CMsgConnectionStatus         *message);
size_t cmsg_connection_status__get_packed_size
                     (const CMsgConnectionStatus   *message);
size_t cmsg_connection_status__pack
                     (const CMsgConnectionStatus   *message,
                      uint8_t             *out);
size_t cmsg_connection_status__pack_to_buffer
                     (const CMsgConnectionStatus   *message,
                      ProtobufCBuffer     *buffer);
CMsgConnectionStatus *
       cmsg_connection_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_connection_status__free_unpacked
                     (CMsgConnectionStatus *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions methods */
void   cmsg_gcto_gcsocache_subscribe__cmsg_have_versions__init
                     (CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions         *message);
/* CMsgGCToGCSOCacheSubscribe methods */
void   cmsg_gcto_gcsocache_subscribe__init
                     (CMsgGCToGCSOCacheSubscribe         *message);
size_t cmsg_gcto_gcsocache_subscribe__get_packed_size
                     (const CMsgGCToGCSOCacheSubscribe   *message);
size_t cmsg_gcto_gcsocache_subscribe__pack
                     (const CMsgGCToGCSOCacheSubscribe   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcsocache_subscribe__pack_to_buffer
                     (const CMsgGCToGCSOCacheSubscribe   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCSOCacheSubscribe *
       cmsg_gcto_gcsocache_subscribe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcsocache_subscribe__free_unpacked
                     (CMsgGCToGCSOCacheSubscribe *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCSOCacheUnsubscribe methods */
void   cmsg_gcto_gcsocache_unsubscribe__init
                     (CMsgGCToGCSOCacheUnsubscribe         *message);
size_t cmsg_gcto_gcsocache_unsubscribe__get_packed_size
                     (const CMsgGCToGCSOCacheUnsubscribe   *message);
size_t cmsg_gcto_gcsocache_unsubscribe__pack
                     (const CMsgGCToGCSOCacheUnsubscribe   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcsocache_unsubscribe__pack_to_buffer
                     (const CMsgGCToGCSOCacheUnsubscribe   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCSOCacheUnsubscribe *
       cmsg_gcto_gcsocache_unsubscribe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcsocache_unsubscribe__free_unpacked
                     (CMsgGCToGCSOCacheUnsubscribe *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientPing methods */
void   cmsg_gcclient_ping__init
                     (CMsgGCClientPing         *message);
size_t cmsg_gcclient_ping__get_packed_size
                     (const CMsgGCClientPing   *message);
size_t cmsg_gcclient_ping__pack
                     (const CMsgGCClientPing   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_ping__pack_to_buffer
                     (const CMsgGCClientPing   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientPing *
       cmsg_gcclient_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_ping__free_unpacked
                     (CMsgGCClientPing *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCLoadSessionSOCache methods */
void   cmsg_gcto_gcload_session_socache__init
                     (CMsgGCToGCLoadSessionSOCache         *message);
size_t cmsg_gcto_gcload_session_socache__get_packed_size
                     (const CMsgGCToGCLoadSessionSOCache   *message);
size_t cmsg_gcto_gcload_session_socache__pack
                     (const CMsgGCToGCLoadSessionSOCache   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcload_session_socache__pack_to_buffer
                     (const CMsgGCToGCLoadSessionSOCache   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCLoadSessionSOCache *
       cmsg_gcto_gcload_session_socache__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcload_session_socache__free_unpacked
                     (CMsgGCToGCLoadSessionSOCache *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCLoadSessionSOCacheResponse methods */
void   cmsg_gcto_gcload_session_socache_response__init
                     (CMsgGCToGCLoadSessionSOCacheResponse         *message);
size_t cmsg_gcto_gcload_session_socache_response__get_packed_size
                     (const CMsgGCToGCLoadSessionSOCacheResponse   *message);
size_t cmsg_gcto_gcload_session_socache_response__pack
                     (const CMsgGCToGCLoadSessionSOCacheResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcload_session_socache_response__pack_to_buffer
                     (const CMsgGCToGCLoadSessionSOCacheResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCLoadSessionSOCacheResponse *
       cmsg_gcto_gcload_session_socache_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcload_session_socache_response__free_unpacked
                     (CMsgGCToGCLoadSessionSOCacheResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCUpdateSessionStats methods */
void   cmsg_gcto_gcupdate_session_stats__init
                     (CMsgGCToGCUpdateSessionStats         *message);
size_t cmsg_gcto_gcupdate_session_stats__get_packed_size
                     (const CMsgGCToGCUpdateSessionStats   *message);
size_t cmsg_gcto_gcupdate_session_stats__pack
                     (const CMsgGCToGCUpdateSessionStats   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcupdate_session_stats__pack_to_buffer
                     (const CMsgGCToGCUpdateSessionStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCUpdateSessionStats *
       cmsg_gcto_gcupdate_session_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcupdate_session_stats__free_unpacked
                     (CMsgGCToGCUpdateSessionStats *message,
                      ProtobufCAllocator *allocator);
/* CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription methods */
void   cworkshop__populate_item_descriptions__request__single_item_description__init
                     (CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription         *message);
/* CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock methods */
void   cworkshop__populate_item_descriptions__request__item_descriptions_language_block__init
                     (CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock         *message);
/* CWorkshopPopulateItemDescriptionsRequest methods */
void   cworkshop__populate_item_descriptions__request__init
                     (CWorkshopPopulateItemDescriptionsRequest         *message);
size_t cworkshop__populate_item_descriptions__request__get_packed_size
                     (const CWorkshopPopulateItemDescriptionsRequest   *message);
size_t cworkshop__populate_item_descriptions__request__pack
                     (const CWorkshopPopulateItemDescriptionsRequest   *message,
                      uint8_t             *out);
size_t cworkshop__populate_item_descriptions__request__pack_to_buffer
                     (const CWorkshopPopulateItemDescriptionsRequest   *message,
                      ProtobufCBuffer     *buffer);
CWorkshopPopulateItemDescriptionsRequest *
       cworkshop__populate_item_descriptions__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cworkshop__populate_item_descriptions__request__free_unpacked
                     (CWorkshopPopulateItemDescriptionsRequest *message,
                      ProtobufCAllocator *allocator);
/* CWorkshopGetContributorsRequest methods */
void   cworkshop__get_contributors__request__init
                     (CWorkshopGetContributorsRequest         *message);
size_t cworkshop__get_contributors__request__get_packed_size
                     (const CWorkshopGetContributorsRequest   *message);
size_t cworkshop__get_contributors__request__pack
                     (const CWorkshopGetContributorsRequest   *message,
                      uint8_t             *out);
size_t cworkshop__get_contributors__request__pack_to_buffer
                     (const CWorkshopGetContributorsRequest   *message,
                      ProtobufCBuffer     *buffer);
CWorkshopGetContributorsRequest *
       cworkshop__get_contributors__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cworkshop__get_contributors__request__free_unpacked
                     (CWorkshopGetContributorsRequest *message,
                      ProtobufCAllocator *allocator);
/* CWorkshopGetContributorsResponse methods */
void   cworkshop__get_contributors__response__init
                     (CWorkshopGetContributorsResponse         *message);
size_t cworkshop__get_contributors__response__get_packed_size
                     (const CWorkshopGetContributorsResponse   *message);
size_t cworkshop__get_contributors__response__pack
                     (const CWorkshopGetContributorsResponse   *message,
                      uint8_t             *out);
size_t cworkshop__get_contributors__response__pack_to_buffer
                     (const CWorkshopGetContributorsResponse   *message,
                      ProtobufCBuffer     *buffer);
CWorkshopGetContributorsResponse *
       cworkshop__get_contributors__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cworkshop__get_contributors__response__free_unpacked
                     (CWorkshopGetContributorsResponse *message,
                      ProtobufCAllocator *allocator);
/* CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule methods */
void   cworkshop__set_item_payment_rules__request__workshop_item_payment_rule__init
                     (CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule         *message);
/* CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule methods */
void   cworkshop__set_item_payment_rules__request__partner_item_payment_rule__init
                     (CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule         *message);
/* CWorkshopSetItemPaymentRulesRequest methods */
void   cworkshop__set_item_payment_rules__request__init
                     (CWorkshopSetItemPaymentRulesRequest         *message);
size_t cworkshop__set_item_payment_rules__request__get_packed_size
                     (const CWorkshopSetItemPaymentRulesRequest   *message);
size_t cworkshop__set_item_payment_rules__request__pack
                     (const CWorkshopSetItemPaymentRulesRequest   *message,
                      uint8_t             *out);
size_t cworkshop__set_item_payment_rules__request__pack_to_buffer
                     (const CWorkshopSetItemPaymentRulesRequest   *message,
                      ProtobufCBuffer     *buffer);
CWorkshopSetItemPaymentRulesRequest *
       cworkshop__set_item_payment_rules__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cworkshop__set_item_payment_rules__request__free_unpacked
                     (CWorkshopSetItemPaymentRulesRequest *message,
                      ProtobufCAllocator *allocator);
/* CWorkshopSetItemPaymentRulesResponse methods */
void   cworkshop__set_item_payment_rules__response__init
                     (CWorkshopSetItemPaymentRulesResponse         *message);
size_t cworkshop__set_item_payment_rules__response__get_packed_size
                     (const CWorkshopSetItemPaymentRulesResponse   *message);
size_t cworkshop__set_item_payment_rules__response__pack
                     (const CWorkshopSetItemPaymentRulesResponse   *message,
                      uint8_t             *out);
size_t cworkshop__set_item_payment_rules__response__pack_to_buffer
                     (const CWorkshopSetItemPaymentRulesResponse   *message,
                      ProtobufCBuffer     *buffer);
CWorkshopSetItemPaymentRulesResponse *
       cworkshop__set_item_payment_rules__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cworkshop__set_item_payment_rules__response__free_unpacked
                     (CWorkshopSetItemPaymentRulesResponse *message,
                      ProtobufCAllocator *allocator);
/* CBroadcastPostGameDataFrameRequest methods */
void   cbroadcast__post_game_data_frame__request__init
                     (CBroadcastPostGameDataFrameRequest         *message);
size_t cbroadcast__post_game_data_frame__request__get_packed_size
                     (const CBroadcastPostGameDataFrameRequest   *message);
size_t cbroadcast__post_game_data_frame__request__pack
                     (const CBroadcastPostGameDataFrameRequest   *message,
                      uint8_t             *out);
size_t cbroadcast__post_game_data_frame__request__pack_to_buffer
                     (const CBroadcastPostGameDataFrameRequest   *message,
                      ProtobufCBuffer     *buffer);
CBroadcastPostGameDataFrameRequest *
       cbroadcast__post_game_data_frame__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cbroadcast__post_game_data_frame__request__free_unpacked
                     (CBroadcastPostGameDataFrameRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgSerializedSOCache__TypeCache methods */
void   cmsg_serialized_socache__type_cache__init
                     (CMsgSerializedSOCache__TypeCache         *message);
/* CMsgSerializedSOCache__Cache__Version methods */
void   cmsg_serialized_socache__cache__version__init
                     (CMsgSerializedSOCache__Cache__Version         *message);
/* CMsgSerializedSOCache__Cache methods */
void   cmsg_serialized_socache__cache__init
                     (CMsgSerializedSOCache__Cache         *message);
/* CMsgSerializedSOCache methods */
void   cmsg_serialized_socache__init
                     (CMsgSerializedSOCache         *message);
size_t cmsg_serialized_socache__get_packed_size
                     (const CMsgSerializedSOCache   *message);
size_t cmsg_serialized_socache__pack
                     (const CMsgSerializedSOCache   *message,
                      uint8_t             *out);
size_t cmsg_serialized_socache__pack_to_buffer
                     (const CMsgSerializedSOCache   *message,
                      ProtobufCBuffer     *buffer);
CMsgSerializedSOCache *
       cmsg_serialized_socache__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_serialized_socache__free_unpacked
                     (CMsgSerializedSOCache *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientPollConvarRequest methods */
void   cmsg_gcto_client_poll_convar_request__init
                     (CMsgGCToClientPollConvarRequest         *message);
size_t cmsg_gcto_client_poll_convar_request__get_packed_size
                     (const CMsgGCToClientPollConvarRequest   *message);
size_t cmsg_gcto_client_poll_convar_request__pack
                     (const CMsgGCToClientPollConvarRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_poll_convar_request__pack_to_buffer
                     (const CMsgGCToClientPollConvarRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientPollConvarRequest *
       cmsg_gcto_client_poll_convar_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_poll_convar_request__free_unpacked
                     (CMsgGCToClientPollConvarRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientPollConvarResponse methods */
void   cmsg_gcto_client_poll_convar_response__init
                     (CMsgGCToClientPollConvarResponse         *message);
size_t cmsg_gcto_client_poll_convar_response__get_packed_size
                     (const CMsgGCToClientPollConvarResponse   *message);
size_t cmsg_gcto_client_poll_convar_response__pack
                     (const CMsgGCToClientPollConvarResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_poll_convar_response__pack_to_buffer
                     (const CMsgGCToClientPollConvarResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientPollConvarResponse *
       cmsg_gcto_client_poll_convar_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_poll_convar_response__free_unpacked
                     (CMsgGCToClientPollConvarResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgSHA1Digest_Closure)
                 (const CMsgSHA1Digest *message,
                  void *closure_data);
typedef void (*CMsgSOIDOwner_Closure)
                 (const CMsgSOIDOwner *message,
                  void *closure_data);
typedef void (*CMsgSOSingleObject_Closure)
                 (const CMsgSOSingleObject *message,
                  void *closure_data);
typedef void (*CMsgSOMultipleObjects__SingleObject_Closure)
                 (const CMsgSOMultipleObjects__SingleObject *message,
                  void *closure_data);
typedef void (*CMsgSOMultipleObjects_Closure)
                 (const CMsgSOMultipleObjects *message,
                  void *closure_data);
typedef void (*CMsgSOCacheSubscribed__SubscribedType_Closure)
                 (const CMsgSOCacheSubscribed__SubscribedType *message,
                  void *closure_data);
typedef void (*CMsgSOCacheSubscribed_Closure)
                 (const CMsgSOCacheSubscribed *message,
                  void *closure_data);
typedef void (*CMsgSOCacheSubscribedUpToDate_Closure)
                 (const CMsgSOCacheSubscribedUpToDate *message,
                  void *closure_data);
typedef void (*CMsgSOCacheUnsubscribed_Closure)
                 (const CMsgSOCacheUnsubscribed *message,
                  void *closure_data);
typedef void (*CMsgSOCacheSubscriptionCheck_Closure)
                 (const CMsgSOCacheSubscriptionCheck *message,
                  void *closure_data);
typedef void (*CMsgSOCacheSubscriptionRefresh_Closure)
                 (const CMsgSOCacheSubscriptionRefresh *message,
                  void *closure_data);
typedef void (*CMsgSOCacheVersion_Closure)
                 (const CMsgSOCacheVersion *message,
                  void *closure_data);
typedef void (*CMsgGCMultiplexMessage_Closure)
                 (const CMsgGCMultiplexMessage *message,
                  void *closure_data);
typedef void (*CGCToGCMsgMasterAck__Process_Closure)
                 (const CGCToGCMsgMasterAck__Process *message,
                  void *closure_data);
typedef void (*CGCToGCMsgMasterAck_Closure)
                 (const CGCToGCMsgMasterAck *message,
                  void *closure_data);
typedef void (*CGCToGCMsgMasterAckResponse_Closure)
                 (const CGCToGCMsgMasterAckResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToGCUniverseStartup_Closure)
                 (const CMsgGCToGCUniverseStartup *message,
                  void *closure_data);
typedef void (*CMsgGCToGCUniverseStartupResponse_Closure)
                 (const CMsgGCToGCUniverseStartupResponse *message,
                  void *closure_data);
typedef void (*CGCToGCMsgMasterStartupComplete__GCInfo_Closure)
                 (const CGCToGCMsgMasterStartupComplete__GCInfo *message,
                  void *closure_data);
typedef void (*CGCToGCMsgMasterStartupComplete_Closure)
                 (const CGCToGCMsgMasterStartupComplete *message,
                  void *closure_data);
typedef void (*CGCToGCMsgRouted_Closure)
                 (const CGCToGCMsgRouted *message,
                  void *closure_data);
typedef void (*CGCToGCMsgRoutedReply_Closure)
                 (const CGCToGCMsgRoutedReply *message,
                  void *closure_data);
typedef void (*CMsgGCUpdateSubGCSessionInfo__CMsgUpdate_Closure)
                 (const CMsgGCUpdateSubGCSessionInfo__CMsgUpdate *message,
                  void *closure_data);
typedef void (*CMsgGCUpdateSubGCSessionInfo_Closure)
                 (const CMsgGCUpdateSubGCSessionInfo *message,
                  void *closure_data);
typedef void (*CMsgGCRequestSubGCSessionInfo_Closure)
                 (const CMsgGCRequestSubGCSessionInfo *message,
                  void *closure_data);
typedef void (*CMsgGCRequestSubGCSessionInfoResponse_Closure)
                 (const CMsgGCRequestSubGCSessionInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgSOCacheHaveVersion_Closure)
                 (const CMsgSOCacheHaveVersion *message,
                  void *closure_data);
typedef void (*CMsgClientHello_Closure)
                 (const CMsgClientHello *message,
                  void *closure_data);
typedef void (*CMsgClientWelcome__Location_Closure)
                 (const CMsgClientWelcome__Location *message,
                  void *closure_data);
typedef void (*CMsgClientWelcome_Closure)
                 (const CMsgClientWelcome *message,
                  void *closure_data);
typedef void (*CMsgConnectionStatus_Closure)
                 (const CMsgConnectionStatus *message,
                  void *closure_data);
typedef void (*CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions_Closure)
                 (const CMsgGCToGCSOCacheSubscribe__CMsgHaveVersions *message,
                  void *closure_data);
typedef void (*CMsgGCToGCSOCacheSubscribe_Closure)
                 (const CMsgGCToGCSOCacheSubscribe *message,
                  void *closure_data);
typedef void (*CMsgGCToGCSOCacheUnsubscribe_Closure)
                 (const CMsgGCToGCSOCacheUnsubscribe *message,
                  void *closure_data);
typedef void (*CMsgGCClientPing_Closure)
                 (const CMsgGCClientPing *message,
                  void *closure_data);
typedef void (*CMsgGCToGCLoadSessionSOCache_Closure)
                 (const CMsgGCToGCLoadSessionSOCache *message,
                  void *closure_data);
typedef void (*CMsgGCToGCLoadSessionSOCacheResponse_Closure)
                 (const CMsgGCToGCLoadSessionSOCacheResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToGCUpdateSessionStats_Closure)
                 (const CMsgGCToGCUpdateSessionStats *message,
                  void *closure_data);
typedef void (*CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription_Closure)
                 (const CWorkshopPopulateItemDescriptionsRequest__SingleItemDescription *message,
                  void *closure_data);
typedef void (*CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock_Closure)
                 (const CWorkshopPopulateItemDescriptionsRequest__ItemDescriptionsLanguageBlock *message,
                  void *closure_data);
typedef void (*CWorkshopPopulateItemDescriptionsRequest_Closure)
                 (const CWorkshopPopulateItemDescriptionsRequest *message,
                  void *closure_data);
typedef void (*CWorkshopGetContributorsRequest_Closure)
                 (const CWorkshopGetContributorsRequest *message,
                  void *closure_data);
typedef void (*CWorkshopGetContributorsResponse_Closure)
                 (const CWorkshopGetContributorsResponse *message,
                  void *closure_data);
typedef void (*CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule_Closure)
                 (const CWorkshopSetItemPaymentRulesRequest__WorkshopItemPaymentRule *message,
                  void *closure_data);
typedef void (*CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule_Closure)
                 (const CWorkshopSetItemPaymentRulesRequest__PartnerItemPaymentRule *message,
                  void *closure_data);
typedef void (*CWorkshopSetItemPaymentRulesRequest_Closure)
                 (const CWorkshopSetItemPaymentRulesRequest *message,
                  void *closure_data);
typedef void (*CWorkshopSetItemPaymentRulesResponse_Closure)
                 (const CWorkshopSetItemPaymentRulesResponse *message,
                  void *closure_data);
typedef void (*CBroadcastPostGameDataFrameRequest_Closure)
                 (const CBroadcastPostGameDataFrameRequest *message,
                  void *closure_data);
typedef void (*CMsgSerializedSOCache__TypeCache_Closure)
                 (const CMsgSerializedSOCache__TypeCache *message,
                  void *closure_data);
typedef void (*CMsgSerializedSOCache__Cache__Version_Closure)
                 (const CMsgSerializedSOCache__Cache__Version *message,
                  void *closure_data);
typedef void (*CMsgSerializedSOCache__Cache_Closure)
                 (const CMsgSerializedSOCache__Cache *message,
                  void *closure_data);
typedef void (*CMsgSerializedSOCache_Closure)
                 (const CMsgSerializedSOCache *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPollConvarRequest_Closure)
                 (const CMsgGCToClientPollConvarRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPollConvarResponse_Closure)
                 (const CMsgGCToClientPollConvarResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    esource_engine__descriptor;
extern const ProtobufCEnumDescriptor    partner_account_type__descriptor;
extern const ProtobufCEnumDescriptor    gcconnection_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sha1_digest__descriptor;
extern const ProtobufCMessageDescriptor cmsg_soidowner__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sosingle_object__descriptor;
extern const ProtobufCMessageDescriptor cmsg_somultiple_objects__descriptor;
extern const ProtobufCMessageDescriptor cmsg_somultiple_objects__single_object__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_subscribed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_subscribed__subscribed_type__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_subscribed_up_to_date__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_unsubscribed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_subscription_check__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_subscription_refresh__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_version__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcmultiplex_message__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_master_ack__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_master_ack__process__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_master_ack__response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcuniverse_startup__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcuniverse_startup_response__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_master_startup_complete__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_master_startup_complete__gcinfo__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_routed__descriptor;
extern const ProtobufCMessageDescriptor cgcto_gcmsg_routed_reply__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcupdate_sub_gcsession_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcupdate_sub_gcsession_info__cmsg_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcrequest_sub_gcsession_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcrequest_sub_gcsession_info_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_socache_have_version__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_hello__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_welcome__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_welcome__location__descriptor;
extern const ProtobufCMessageDescriptor cmsg_connection_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcsocache_subscribe__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcsocache_subscribe__cmsg_have_versions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcsocache_unsubscribe__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_ping__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcload_session_socache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcload_session_socache_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcupdate_session_stats__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__populate_item_descriptions__request__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__populate_item_descriptions__request__single_item_description__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__populate_item_descriptions__request__item_descriptions_language_block__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__get_contributors__request__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__get_contributors__response__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__set_item_payment_rules__request__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__set_item_payment_rules__request__workshop_item_payment_rule__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__set_item_payment_rules__request__partner_item_payment_rule__descriptor;
extern const ProtobufCMessageDescriptor cworkshop__set_item_payment_rules__response__descriptor;
extern const ProtobufCMessageDescriptor cbroadcast__post_game_data_frame__request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_serialized_socache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_serialized_socache__type_cache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_serialized_socache__cache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_serialized_socache__cache__version__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_poll_convar_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_poll_convar_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gcsdk_5fgcmessages_2eproto__INCLUDED */
