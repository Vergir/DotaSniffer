/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_gcmessages_client_chat.proto */

#ifndef PROTOBUF_C_dota_5fgcmessages_5fclient_5fchat_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fgcmessages_5fclient_5fchat_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "dota_shared_enums.pb-c.h"

typedef struct _CMsgClientToGCPrivateChatInvite CMsgClientToGCPrivateChatInvite;
typedef struct _CMsgClientToGCPrivateChatKick CMsgClientToGCPrivateChatKick;
typedef struct _CMsgClientToGCPrivateChatPromote CMsgClientToGCPrivateChatPromote;
typedef struct _CMsgClientToGCPrivateChatDemote CMsgClientToGCPrivateChatDemote;
typedef struct _CMsgGCToClientPrivateChatResponse CMsgGCToClientPrivateChatResponse;
typedef struct _CMsgClientToGCPrivateChatInfoRequest CMsgClientToGCPrivateChatInfoRequest;
typedef struct _CMsgGCToClientPrivateChatInfoResponse CMsgGCToClientPrivateChatInfoResponse;
typedef struct _CMsgGCToClientPrivateChatInfoResponse__Member CMsgGCToClientPrivateChatInfoResponse__Member;
typedef struct _CMsgDOTAJoinChatChannel CMsgDOTAJoinChatChannel;
typedef struct _CMsgDOTALeaveChatChannel CMsgDOTALeaveChatChannel;
typedef struct _CMsgDOTAClientIgnoredUser CMsgDOTAClientIgnoredUser;
typedef struct _CMsgDOTAChatMessage CMsgDOTAChatMessage;
typedef struct _CMsgDOTAChatMessage__DiceRoll CMsgDOTAChatMessage__DiceRoll;
typedef struct _CMsgDOTAChatMember CMsgDOTAChatMember;
typedef struct _CMsgDOTAJoinChatChannelResponse CMsgDOTAJoinChatChannelResponse;
typedef struct _CMsgDOTAChatChannelFullUpdate CMsgDOTAChatChannelFullUpdate;
typedef struct _CMsgDOTAOtherJoinedChatChannel CMsgDOTAOtherJoinedChatChannel;
typedef struct _CMsgDOTAOtherLeftChatChannel CMsgDOTAOtherLeftChatChannel;
typedef struct _CMsgDOTAChatChannelMemberUpdate CMsgDOTAChatChannelMemberUpdate;
typedef struct _CMsgDOTAChatChannelMemberUpdate__JoinedMember CMsgDOTAChatChannelMemberUpdate__JoinedMember;
typedef struct _CMsgDOTARequestChatChannelList CMsgDOTARequestChatChannelList;
typedef struct _CMsgDOTARequestChatChannelListResponse CMsgDOTARequestChatChannelListResponse;
typedef struct _CMsgDOTARequestChatChannelListResponse__ChatChannel CMsgDOTARequestChatChannelListResponse__ChatChannel;
typedef struct _CMsgDOTAChatGetUserList CMsgDOTAChatGetUserList;
typedef struct _CMsgDOTAChatGetUserListResponse CMsgDOTAChatGetUserListResponse;
typedef struct _CMsgDOTAChatGetUserListResponse__Member CMsgDOTAChatGetUserListResponse__Member;
typedef struct _CMsgDOTAChatGetMemberCount CMsgDOTAChatGetMemberCount;
typedef struct _CMsgDOTAChatGetMemberCountResponse CMsgDOTAChatGetMemberCountResponse;
typedef struct _CMsgDOTAChatRegionsEnabled CMsgDOTAChatRegionsEnabled;
typedef struct _CMsgDOTAChatRegionsEnabled__Region CMsgDOTAChatRegionsEnabled__Region;


/* --- enums --- */

typedef enum _CMsgGCToClientPrivateChatResponse__Result {
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_CREATION_LOCK = 1,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_SQL_TRANSACTION = 2,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_SDO_LOAD = 3,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_NO_PERMISSION = 4,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_ALREADY_MEMBER = 5,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_NOT_A_MEMBER = 7,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_NO_REMAINING_ADMINS = 8,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_NO_ROOM = 9,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_CREATION_RATE_LIMITED = 10,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_UNKNOWN_CHANNEL_NAME = 11,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_UNKNOWN_USER = 12,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_UNKNOWN_ERROR = 13,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_CANNOT_KICK_ADMIN = 14,
  CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__FAILURE_ALREADY_ADMIN = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT)
} CMsgGCToClientPrivateChatResponse__Result;
typedef enum _CMsgDOTAJoinChatChannelResponse__Result {
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__JOIN_SUCCESS = 0,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__INVALID_CHANNEL_TYPE = 1,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__ACCOUNT_NOT_FOUND = 2,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__ACH_FAILED = 3,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__USER_IN_TOO_MANY_CHANNELS = 4,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__RATE_LIMIT_EXCEEDED = 5,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__CHANNEL_FULL = 6,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__CHANNEL_FULL_OVERFLOWED = 7,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__FAILED_TO_ADD_USER = 8,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__CHANNEL_TYPE_DISABLED = 9,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__PRIVATE_CHAT_CREATE_FAILED = 10,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__PRIVATE_CHAT_NO_PERMISSION = 11,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__PRIVATE_CHAT_CREATE_LOCK_FAILED = 12,
  CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__PRIVATE_CHAT_KICKED = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT)
} CMsgDOTAJoinChatChannelResponse__Result;

/* --- messages --- */

struct  _CMsgClientToGCPrivateChatInvite
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  protobuf_c_boolean has_invited_account_id;
  uint32_t invited_account_id;
};
#define CMSG_CLIENT_TO_GCPRIVATE_CHAT_INVITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcprivate_chat_invite__descriptor) \
    , NULL, 0,0 }


struct  _CMsgClientToGCPrivateChatKick
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  protobuf_c_boolean has_kick_account_id;
  uint32_t kick_account_id;
};
#define CMSG_CLIENT_TO_GCPRIVATE_CHAT_KICK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcprivate_chat_kick__descriptor) \
    , NULL, 0,0 }


struct  _CMsgClientToGCPrivateChatPromote
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  protobuf_c_boolean has_promote_account_id;
  uint32_t promote_account_id;
};
#define CMSG_CLIENT_TO_GCPRIVATE_CHAT_PROMOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcprivate_chat_promote__descriptor) \
    , NULL, 0,0 }


struct  _CMsgClientToGCPrivateChatDemote
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  protobuf_c_boolean has_demote_account_id;
  uint32_t demote_account_id;
};
#define CMSG_CLIENT_TO_GCPRIVATE_CHAT_DEMOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcprivate_chat_demote__descriptor) \
    , NULL, 0,0 }


struct  _CMsgGCToClientPrivateChatResponse
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  protobuf_c_boolean has_result;
  CMsgGCToClientPrivateChatResponse__Result result;
  char *username;
};
#define CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_private_chat_response__descriptor) \
    , NULL, 0,CMSG_GCTO_CLIENT_PRIVATE_CHAT_RESPONSE__RESULT__SUCCESS, NULL }


struct  _CMsgClientToGCPrivateChatInfoRequest
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
};
#define CMSG_CLIENT_TO_GCPRIVATE_CHAT_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcprivate_chat_info_request__descriptor) \
    , NULL }


struct  _CMsgGCToClientPrivateChatInfoResponse__Member
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  char *name;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_GCTO_CLIENT_PRIVATE_CHAT_INFO_RESPONSE__MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_private_chat_info_response__member__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CMsgGCToClientPrivateChatInfoResponse
{
  ProtobufCMessage base;
  char *private_chat_channel_name;
  size_t n_members;
  CMsgGCToClientPrivateChatInfoResponse__Member **members;
  protobuf_c_boolean has_creator;
  uint32_t creator;
  protobuf_c_boolean has_creation_date;
  uint32_t creation_date;
};
#define CMSG_GCTO_CLIENT_PRIVATE_CHAT_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_private_chat_info_response__descriptor) \
    , NULL, 0,NULL, 0,0, 0,0 }


struct  _CMsgDOTAJoinChatChannel
{
  ProtobufCMessage base;
  char *channel_name;
  protobuf_c_boolean has_channel_type;
  DOTAChatChannelTypeT channel_type;
};
#define CMSG_DOTAJOIN_CHAT_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotajoin_chat_channel__descriptor) \
    , NULL, 0,DOTACHAT_CHANNEL_TYPE_T__DOTAChannelType_Regional }


struct  _CMsgDOTALeaveChatChannel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
};
#define CMSG_DOTALEAVE_CHAT_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleave_chat_channel__descriptor) \
    , 0,0 }


struct  _CMsgDOTAClientIgnoredUser
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ignored_account_id;
  uint32_t ignored_account_id;
};
#define CMSG_DOTACLIENT_IGNORED_USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaclient_ignored_user__descriptor) \
    , 0,0 }


struct  _CMsgDOTAChatMessage__DiceRoll
{
  ProtobufCMessage base;
  protobuf_c_boolean has_roll_min;
  int32_t roll_min;
  protobuf_c_boolean has_roll_max;
  int32_t roll_max;
  protobuf_c_boolean has_result;
  int32_t result;
};
#define CMSG_DOTACHAT_MESSAGE__DICE_ROLL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_message__dice_roll__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAChatMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  char *persona_name;
  char *text;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_suggest_invite_account_id;
  uint32_t suggest_invite_account_id;
  char *suggest_invite_name;
  protobuf_c_boolean has_fantasy_draft_owner_account_id;
  uint32_t fantasy_draft_owner_account_id;
  protobuf_c_boolean has_fantasy_draft_player_account_id;
  uint32_t fantasy_draft_player_account_id;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_suggest_invite_to_lobby;
  protobuf_c_boolean suggest_invite_to_lobby;
  protobuf_c_boolean has_event_points;
  uint32_t event_points;
  protobuf_c_boolean has_coin_flip;
  protobuf_c_boolean coin_flip;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_share_profile_account_id;
  uint32_t share_profile_account_id;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  CMsgDOTAChatMessage__DiceRoll *dice_roll;
  protobuf_c_boolean has_share_party_id;
  uint64_t share_party_id;
  protobuf_c_boolean has_share_lobby_id;
  uint64_t share_lobby_id;
  protobuf_c_boolean has_share_lobby_custom_game_id;
  uint64_t share_lobby_custom_game_id;
  char *share_lobby_passkey;
  protobuf_c_boolean has_private_chat_channel_id;
  uint32_t private_chat_channel_id;
  protobuf_c_boolean has_status;
  uint32_t status;
  protobuf_c_boolean has_battle_cup_victory;
  protobuf_c_boolean battle_cup_victory;
};
#define CMSG_DOTACHAT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_message__descriptor) \
    , 0,0, 0,0, NULL, NULL, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,-1, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAChatMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  char *persona_name;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_DOTACHAT_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_member__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgDOTAJoinChatChannelResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_response;
  uint32_t response;
  char *channel_name;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  protobuf_c_boolean has_max_members;
  uint32_t max_members;
  size_t n_members;
  CMsgDOTAChatMember **members;
  protobuf_c_boolean has_channel_type;
  DOTAChatChannelTypeT channel_type;
  protobuf_c_boolean has_result;
  CMsgDOTAJoinChatChannelResponse__Result result;
  protobuf_c_boolean has_gc_initiated_join;
  protobuf_c_boolean gc_initiated_join;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  char *welcome_message;
};
#define CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotajoin_chat_channel_response__descriptor) \
    , 0,0, NULL, 0,0, 0,0, 0,NULL, 0,DOTACHAT_CHANNEL_TYPE_T__DOTAChannelType_Regional, 0,CMSG_DOTAJOIN_CHAT_CHANNEL_RESPONSE__RESULT__JOIN_SUCCESS, 0,0, 0,0, NULL }


struct  _CMsgDOTAChatChannelFullUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  size_t n_members;
  CMsgDOTAChatMember **members;
};
#define CMSG_DOTACHAT_CHANNEL_FULL_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_channel_full_update__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTAOtherJoinedChatChannel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  char *persona_name;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_DOTAOTHER_JOINED_CHAT_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaother_joined_chat_channel__descriptor) \
    , 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAOtherLeftChatChannel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
};
#define CMSG_DOTAOTHER_LEFT_CHAT_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaother_left_chat_channel__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAChatChannelMemberUpdate__JoinedMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  char *persona_name;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_DOTACHAT_CHANNEL_MEMBER_UPDATE__JOINED_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_channel_member_update__joined_member__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgDOTAChatChannelMemberUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  size_t n_left_steam_ids;
  uint64_t *left_steam_ids;
  size_t n_joined_members;
  CMsgDOTAChatChannelMemberUpdate__JoinedMember **joined_members;
};
#define CMSG_DOTACHAT_CHANNEL_MEMBER_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_channel_member_update__descriptor) \
    , 0,0, 0,NULL, 0,NULL }


struct  _CMsgDOTARequestChatChannelList
{
  ProtobufCMessage base;
};
#define CMSG_DOTAREQUEST_CHAT_CHANNEL_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_chat_channel_list__descriptor) \
     }


struct  _CMsgDOTARequestChatChannelListResponse__ChatChannel
{
  ProtobufCMessage base;
  char *channel_name;
  protobuf_c_boolean has_num_members;
  uint32_t num_members;
  protobuf_c_boolean has_channel_type;
  DOTAChatChannelTypeT channel_type;
};
#define CMSG_DOTAREQUEST_CHAT_CHANNEL_LIST_RESPONSE__CHAT_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_chat_channel_list_response__chat_channel__descriptor) \
    , NULL, 0,0, 0,DOTACHAT_CHANNEL_TYPE_T__DOTAChannelType_Regional }


struct  _CMsgDOTARequestChatChannelListResponse
{
  ProtobufCMessage base;
  size_t n_channels;
  CMsgDOTARequestChatChannelListResponse__ChatChannel **channels;
};
#define CMSG_DOTAREQUEST_CHAT_CHANNEL_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_chat_channel_list_response__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAChatGetUserList
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
};
#define CMSG_DOTACHAT_GET_USER_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_get_user_list__descriptor) \
    , 0,0 }


struct  _CMsgDOTAChatGetUserListResponse__Member
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  char *persona_name;
  protobuf_c_boolean has_channel_user_id;
  uint32_t channel_user_id;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_DOTACHAT_GET_USER_LIST_RESPONSE__MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_get_user_list_response__member__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgDOTAChatGetUserListResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint64_t channel_id;
  size_t n_members;
  CMsgDOTAChatGetUserListResponse__Member **members;
};
#define CMSG_DOTACHAT_GET_USER_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_get_user_list_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTAChatGetMemberCount
{
  ProtobufCMessage base;
  char *channel_name;
  protobuf_c_boolean has_channel_type;
  DOTAChatChannelTypeT channel_type;
};
#define CMSG_DOTACHAT_GET_MEMBER_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_get_member_count__descriptor) \
    , NULL, 0,DOTACHAT_CHANNEL_TYPE_T__DOTAChannelType_Regional }


struct  _CMsgDOTAChatGetMemberCountResponse
{
  ProtobufCMessage base;
  char *channel_name;
  protobuf_c_boolean has_channel_type;
  DOTAChatChannelTypeT channel_type;
  protobuf_c_boolean has_member_count;
  uint32_t member_count;
};
#define CMSG_DOTACHAT_GET_MEMBER_COUNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_get_member_count_response__descriptor) \
    , NULL, 0,DOTACHAT_CHANNEL_TYPE_T__DOTAChannelType_Regional, 0,0 }


struct  _CMsgDOTAChatRegionsEnabled__Region
{
  ProtobufCMessage base;
  protobuf_c_boolean has_min_latitude;
  float min_latitude;
  protobuf_c_boolean has_max_latitude;
  float max_latitude;
  protobuf_c_boolean has_min_longitude;
  float min_longitude;
  protobuf_c_boolean has_max_longitude;
  float max_longitude;
};
#define CMSG_DOTACHAT_REGIONS_ENABLED__REGION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_regions_enabled__region__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAChatRegionsEnabled
{
  ProtobufCMessage base;
  protobuf_c_boolean has_enable_all_regions;
  protobuf_c_boolean enable_all_regions;
  size_t n_enabled_regions;
  CMsgDOTAChatRegionsEnabled__Region **enabled_regions;
};
#define CMSG_DOTACHAT_REGIONS_ENABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotachat_regions_enabled__descriptor) \
    , 0,0, 0,NULL }


/* CMsgClientToGCPrivateChatInvite methods */
void   cmsg_client_to_gcprivate_chat_invite__init
                     (CMsgClientToGCPrivateChatInvite         *message);
size_t cmsg_client_to_gcprivate_chat_invite__get_packed_size
                     (const CMsgClientToGCPrivateChatInvite   *message);
size_t cmsg_client_to_gcprivate_chat_invite__pack
                     (const CMsgClientToGCPrivateChatInvite   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcprivate_chat_invite__pack_to_buffer
                     (const CMsgClientToGCPrivateChatInvite   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPrivateChatInvite *
       cmsg_client_to_gcprivate_chat_invite__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcprivate_chat_invite__free_unpacked
                     (CMsgClientToGCPrivateChatInvite *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPrivateChatKick methods */
void   cmsg_client_to_gcprivate_chat_kick__init
                     (CMsgClientToGCPrivateChatKick         *message);
size_t cmsg_client_to_gcprivate_chat_kick__get_packed_size
                     (const CMsgClientToGCPrivateChatKick   *message);
size_t cmsg_client_to_gcprivate_chat_kick__pack
                     (const CMsgClientToGCPrivateChatKick   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcprivate_chat_kick__pack_to_buffer
                     (const CMsgClientToGCPrivateChatKick   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPrivateChatKick *
       cmsg_client_to_gcprivate_chat_kick__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcprivate_chat_kick__free_unpacked
                     (CMsgClientToGCPrivateChatKick *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPrivateChatPromote methods */
void   cmsg_client_to_gcprivate_chat_promote__init
                     (CMsgClientToGCPrivateChatPromote         *message);
size_t cmsg_client_to_gcprivate_chat_promote__get_packed_size
                     (const CMsgClientToGCPrivateChatPromote   *message);
size_t cmsg_client_to_gcprivate_chat_promote__pack
                     (const CMsgClientToGCPrivateChatPromote   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcprivate_chat_promote__pack_to_buffer
                     (const CMsgClientToGCPrivateChatPromote   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPrivateChatPromote *
       cmsg_client_to_gcprivate_chat_promote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcprivate_chat_promote__free_unpacked
                     (CMsgClientToGCPrivateChatPromote *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPrivateChatDemote methods */
void   cmsg_client_to_gcprivate_chat_demote__init
                     (CMsgClientToGCPrivateChatDemote         *message);
size_t cmsg_client_to_gcprivate_chat_demote__get_packed_size
                     (const CMsgClientToGCPrivateChatDemote   *message);
size_t cmsg_client_to_gcprivate_chat_demote__pack
                     (const CMsgClientToGCPrivateChatDemote   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcprivate_chat_demote__pack_to_buffer
                     (const CMsgClientToGCPrivateChatDemote   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPrivateChatDemote *
       cmsg_client_to_gcprivate_chat_demote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcprivate_chat_demote__free_unpacked
                     (CMsgClientToGCPrivateChatDemote *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientPrivateChatResponse methods */
void   cmsg_gcto_client_private_chat_response__init
                     (CMsgGCToClientPrivateChatResponse         *message);
size_t cmsg_gcto_client_private_chat_response__get_packed_size
                     (const CMsgGCToClientPrivateChatResponse   *message);
size_t cmsg_gcto_client_private_chat_response__pack
                     (const CMsgGCToClientPrivateChatResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_private_chat_response__pack_to_buffer
                     (const CMsgGCToClientPrivateChatResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientPrivateChatResponse *
       cmsg_gcto_client_private_chat_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_private_chat_response__free_unpacked
                     (CMsgGCToClientPrivateChatResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPrivateChatInfoRequest methods */
void   cmsg_client_to_gcprivate_chat_info_request__init
                     (CMsgClientToGCPrivateChatInfoRequest         *message);
size_t cmsg_client_to_gcprivate_chat_info_request__get_packed_size
                     (const CMsgClientToGCPrivateChatInfoRequest   *message);
size_t cmsg_client_to_gcprivate_chat_info_request__pack
                     (const CMsgClientToGCPrivateChatInfoRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcprivate_chat_info_request__pack_to_buffer
                     (const CMsgClientToGCPrivateChatInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPrivateChatInfoRequest *
       cmsg_client_to_gcprivate_chat_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcprivate_chat_info_request__free_unpacked
                     (CMsgClientToGCPrivateChatInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientPrivateChatInfoResponse__Member methods */
void   cmsg_gcto_client_private_chat_info_response__member__init
                     (CMsgGCToClientPrivateChatInfoResponse__Member         *message);
/* CMsgGCToClientPrivateChatInfoResponse methods */
void   cmsg_gcto_client_private_chat_info_response__init
                     (CMsgGCToClientPrivateChatInfoResponse         *message);
size_t cmsg_gcto_client_private_chat_info_response__get_packed_size
                     (const CMsgGCToClientPrivateChatInfoResponse   *message);
size_t cmsg_gcto_client_private_chat_info_response__pack
                     (const CMsgGCToClientPrivateChatInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_private_chat_info_response__pack_to_buffer
                     (const CMsgGCToClientPrivateChatInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientPrivateChatInfoResponse *
       cmsg_gcto_client_private_chat_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_private_chat_info_response__free_unpacked
                     (CMsgGCToClientPrivateChatInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAJoinChatChannel methods */
void   cmsg_dotajoin_chat_channel__init
                     (CMsgDOTAJoinChatChannel         *message);
size_t cmsg_dotajoin_chat_channel__get_packed_size
                     (const CMsgDOTAJoinChatChannel   *message);
size_t cmsg_dotajoin_chat_channel__pack
                     (const CMsgDOTAJoinChatChannel   *message,
                      uint8_t             *out);
size_t cmsg_dotajoin_chat_channel__pack_to_buffer
                     (const CMsgDOTAJoinChatChannel   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAJoinChatChannel *
       cmsg_dotajoin_chat_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotajoin_chat_channel__free_unpacked
                     (CMsgDOTAJoinChatChannel *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeaveChatChannel methods */
void   cmsg_dotaleave_chat_channel__init
                     (CMsgDOTALeaveChatChannel         *message);
size_t cmsg_dotaleave_chat_channel__get_packed_size
                     (const CMsgDOTALeaveChatChannel   *message);
size_t cmsg_dotaleave_chat_channel__pack
                     (const CMsgDOTALeaveChatChannel   *message,
                      uint8_t             *out);
size_t cmsg_dotaleave_chat_channel__pack_to_buffer
                     (const CMsgDOTALeaveChatChannel   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeaveChatChannel *
       cmsg_dotaleave_chat_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleave_chat_channel__free_unpacked
                     (CMsgDOTALeaveChatChannel *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAClientIgnoredUser methods */
void   cmsg_dotaclient_ignored_user__init
                     (CMsgDOTAClientIgnoredUser         *message);
size_t cmsg_dotaclient_ignored_user__get_packed_size
                     (const CMsgDOTAClientIgnoredUser   *message);
size_t cmsg_dotaclient_ignored_user__pack
                     (const CMsgDOTAClientIgnoredUser   *message,
                      uint8_t             *out);
size_t cmsg_dotaclient_ignored_user__pack_to_buffer
                     (const CMsgDOTAClientIgnoredUser   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAClientIgnoredUser *
       cmsg_dotaclient_ignored_user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaclient_ignored_user__free_unpacked
                     (CMsgDOTAClientIgnoredUser *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatMessage__DiceRoll methods */
void   cmsg_dotachat_message__dice_roll__init
                     (CMsgDOTAChatMessage__DiceRoll         *message);
/* CMsgDOTAChatMessage methods */
void   cmsg_dotachat_message__init
                     (CMsgDOTAChatMessage         *message);
size_t cmsg_dotachat_message__get_packed_size
                     (const CMsgDOTAChatMessage   *message);
size_t cmsg_dotachat_message__pack
                     (const CMsgDOTAChatMessage   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_message__pack_to_buffer
                     (const CMsgDOTAChatMessage   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatMessage *
       cmsg_dotachat_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_message__free_unpacked
                     (CMsgDOTAChatMessage *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatMember methods */
void   cmsg_dotachat_member__init
                     (CMsgDOTAChatMember         *message);
size_t cmsg_dotachat_member__get_packed_size
                     (const CMsgDOTAChatMember   *message);
size_t cmsg_dotachat_member__pack
                     (const CMsgDOTAChatMember   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_member__pack_to_buffer
                     (const CMsgDOTAChatMember   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatMember *
       cmsg_dotachat_member__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_member__free_unpacked
                     (CMsgDOTAChatMember *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAJoinChatChannelResponse methods */
void   cmsg_dotajoin_chat_channel_response__init
                     (CMsgDOTAJoinChatChannelResponse         *message);
size_t cmsg_dotajoin_chat_channel_response__get_packed_size
                     (const CMsgDOTAJoinChatChannelResponse   *message);
size_t cmsg_dotajoin_chat_channel_response__pack
                     (const CMsgDOTAJoinChatChannelResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotajoin_chat_channel_response__pack_to_buffer
                     (const CMsgDOTAJoinChatChannelResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAJoinChatChannelResponse *
       cmsg_dotajoin_chat_channel_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotajoin_chat_channel_response__free_unpacked
                     (CMsgDOTAJoinChatChannelResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatChannelFullUpdate methods */
void   cmsg_dotachat_channel_full_update__init
                     (CMsgDOTAChatChannelFullUpdate         *message);
size_t cmsg_dotachat_channel_full_update__get_packed_size
                     (const CMsgDOTAChatChannelFullUpdate   *message);
size_t cmsg_dotachat_channel_full_update__pack
                     (const CMsgDOTAChatChannelFullUpdate   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_channel_full_update__pack_to_buffer
                     (const CMsgDOTAChatChannelFullUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatChannelFullUpdate *
       cmsg_dotachat_channel_full_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_channel_full_update__free_unpacked
                     (CMsgDOTAChatChannelFullUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAOtherJoinedChatChannel methods */
void   cmsg_dotaother_joined_chat_channel__init
                     (CMsgDOTAOtherJoinedChatChannel         *message);
size_t cmsg_dotaother_joined_chat_channel__get_packed_size
                     (const CMsgDOTAOtherJoinedChatChannel   *message);
size_t cmsg_dotaother_joined_chat_channel__pack
                     (const CMsgDOTAOtherJoinedChatChannel   *message,
                      uint8_t             *out);
size_t cmsg_dotaother_joined_chat_channel__pack_to_buffer
                     (const CMsgDOTAOtherJoinedChatChannel   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAOtherJoinedChatChannel *
       cmsg_dotaother_joined_chat_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaother_joined_chat_channel__free_unpacked
                     (CMsgDOTAOtherJoinedChatChannel *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAOtherLeftChatChannel methods */
void   cmsg_dotaother_left_chat_channel__init
                     (CMsgDOTAOtherLeftChatChannel         *message);
size_t cmsg_dotaother_left_chat_channel__get_packed_size
                     (const CMsgDOTAOtherLeftChatChannel   *message);
size_t cmsg_dotaother_left_chat_channel__pack
                     (const CMsgDOTAOtherLeftChatChannel   *message,
                      uint8_t             *out);
size_t cmsg_dotaother_left_chat_channel__pack_to_buffer
                     (const CMsgDOTAOtherLeftChatChannel   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAOtherLeftChatChannel *
       cmsg_dotaother_left_chat_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaother_left_chat_channel__free_unpacked
                     (CMsgDOTAOtherLeftChatChannel *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatChannelMemberUpdate__JoinedMember methods */
void   cmsg_dotachat_channel_member_update__joined_member__init
                     (CMsgDOTAChatChannelMemberUpdate__JoinedMember         *message);
/* CMsgDOTAChatChannelMemberUpdate methods */
void   cmsg_dotachat_channel_member_update__init
                     (CMsgDOTAChatChannelMemberUpdate         *message);
size_t cmsg_dotachat_channel_member_update__get_packed_size
                     (const CMsgDOTAChatChannelMemberUpdate   *message);
size_t cmsg_dotachat_channel_member_update__pack
                     (const CMsgDOTAChatChannelMemberUpdate   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_channel_member_update__pack_to_buffer
                     (const CMsgDOTAChatChannelMemberUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatChannelMemberUpdate *
       cmsg_dotachat_channel_member_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_channel_member_update__free_unpacked
                     (CMsgDOTAChatChannelMemberUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestChatChannelList methods */
void   cmsg_dotarequest_chat_channel_list__init
                     (CMsgDOTARequestChatChannelList         *message);
size_t cmsg_dotarequest_chat_channel_list__get_packed_size
                     (const CMsgDOTARequestChatChannelList   *message);
size_t cmsg_dotarequest_chat_channel_list__pack
                     (const CMsgDOTARequestChatChannelList   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_chat_channel_list__pack_to_buffer
                     (const CMsgDOTARequestChatChannelList   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestChatChannelList *
       cmsg_dotarequest_chat_channel_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_chat_channel_list__free_unpacked
                     (CMsgDOTARequestChatChannelList *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestChatChannelListResponse__ChatChannel methods */
void   cmsg_dotarequest_chat_channel_list_response__chat_channel__init
                     (CMsgDOTARequestChatChannelListResponse__ChatChannel         *message);
/* CMsgDOTARequestChatChannelListResponse methods */
void   cmsg_dotarequest_chat_channel_list_response__init
                     (CMsgDOTARequestChatChannelListResponse         *message);
size_t cmsg_dotarequest_chat_channel_list_response__get_packed_size
                     (const CMsgDOTARequestChatChannelListResponse   *message);
size_t cmsg_dotarequest_chat_channel_list_response__pack
                     (const CMsgDOTARequestChatChannelListResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_chat_channel_list_response__pack_to_buffer
                     (const CMsgDOTARequestChatChannelListResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestChatChannelListResponse *
       cmsg_dotarequest_chat_channel_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_chat_channel_list_response__free_unpacked
                     (CMsgDOTARequestChatChannelListResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatGetUserList methods */
void   cmsg_dotachat_get_user_list__init
                     (CMsgDOTAChatGetUserList         *message);
size_t cmsg_dotachat_get_user_list__get_packed_size
                     (const CMsgDOTAChatGetUserList   *message);
size_t cmsg_dotachat_get_user_list__pack
                     (const CMsgDOTAChatGetUserList   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_get_user_list__pack_to_buffer
                     (const CMsgDOTAChatGetUserList   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatGetUserList *
       cmsg_dotachat_get_user_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_get_user_list__free_unpacked
                     (CMsgDOTAChatGetUserList *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatGetUserListResponse__Member methods */
void   cmsg_dotachat_get_user_list_response__member__init
                     (CMsgDOTAChatGetUserListResponse__Member         *message);
/* CMsgDOTAChatGetUserListResponse methods */
void   cmsg_dotachat_get_user_list_response__init
                     (CMsgDOTAChatGetUserListResponse         *message);
size_t cmsg_dotachat_get_user_list_response__get_packed_size
                     (const CMsgDOTAChatGetUserListResponse   *message);
size_t cmsg_dotachat_get_user_list_response__pack
                     (const CMsgDOTAChatGetUserListResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_get_user_list_response__pack_to_buffer
                     (const CMsgDOTAChatGetUserListResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatGetUserListResponse *
       cmsg_dotachat_get_user_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_get_user_list_response__free_unpacked
                     (CMsgDOTAChatGetUserListResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatGetMemberCount methods */
void   cmsg_dotachat_get_member_count__init
                     (CMsgDOTAChatGetMemberCount         *message);
size_t cmsg_dotachat_get_member_count__get_packed_size
                     (const CMsgDOTAChatGetMemberCount   *message);
size_t cmsg_dotachat_get_member_count__pack
                     (const CMsgDOTAChatGetMemberCount   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_get_member_count__pack_to_buffer
                     (const CMsgDOTAChatGetMemberCount   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatGetMemberCount *
       cmsg_dotachat_get_member_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_get_member_count__free_unpacked
                     (CMsgDOTAChatGetMemberCount *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatGetMemberCountResponse methods */
void   cmsg_dotachat_get_member_count_response__init
                     (CMsgDOTAChatGetMemberCountResponse         *message);
size_t cmsg_dotachat_get_member_count_response__get_packed_size
                     (const CMsgDOTAChatGetMemberCountResponse   *message);
size_t cmsg_dotachat_get_member_count_response__pack
                     (const CMsgDOTAChatGetMemberCountResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_get_member_count_response__pack_to_buffer
                     (const CMsgDOTAChatGetMemberCountResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatGetMemberCountResponse *
       cmsg_dotachat_get_member_count_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_get_member_count_response__free_unpacked
                     (CMsgDOTAChatGetMemberCountResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAChatRegionsEnabled__Region methods */
void   cmsg_dotachat_regions_enabled__region__init
                     (CMsgDOTAChatRegionsEnabled__Region         *message);
/* CMsgDOTAChatRegionsEnabled methods */
void   cmsg_dotachat_regions_enabled__init
                     (CMsgDOTAChatRegionsEnabled         *message);
size_t cmsg_dotachat_regions_enabled__get_packed_size
                     (const CMsgDOTAChatRegionsEnabled   *message);
size_t cmsg_dotachat_regions_enabled__pack
                     (const CMsgDOTAChatRegionsEnabled   *message,
                      uint8_t             *out);
size_t cmsg_dotachat_regions_enabled__pack_to_buffer
                     (const CMsgDOTAChatRegionsEnabled   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAChatRegionsEnabled *
       cmsg_dotachat_regions_enabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotachat_regions_enabled__free_unpacked
                     (CMsgDOTAChatRegionsEnabled *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgClientToGCPrivateChatInvite_Closure)
                 (const CMsgClientToGCPrivateChatInvite *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPrivateChatKick_Closure)
                 (const CMsgClientToGCPrivateChatKick *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPrivateChatPromote_Closure)
                 (const CMsgClientToGCPrivateChatPromote *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPrivateChatDemote_Closure)
                 (const CMsgClientToGCPrivateChatDemote *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPrivateChatResponse_Closure)
                 (const CMsgGCToClientPrivateChatResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPrivateChatInfoRequest_Closure)
                 (const CMsgClientToGCPrivateChatInfoRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPrivateChatInfoResponse__Member_Closure)
                 (const CMsgGCToClientPrivateChatInfoResponse__Member *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPrivateChatInfoResponse_Closure)
                 (const CMsgGCToClientPrivateChatInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAJoinChatChannel_Closure)
                 (const CMsgDOTAJoinChatChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTALeaveChatChannel_Closure)
                 (const CMsgDOTALeaveChatChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTAClientIgnoredUser_Closure)
                 (const CMsgDOTAClientIgnoredUser *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatMessage__DiceRoll_Closure)
                 (const CMsgDOTAChatMessage__DiceRoll *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatMessage_Closure)
                 (const CMsgDOTAChatMessage *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatMember_Closure)
                 (const CMsgDOTAChatMember *message,
                  void *closure_data);
typedef void (*CMsgDOTAJoinChatChannelResponse_Closure)
                 (const CMsgDOTAJoinChatChannelResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatChannelFullUpdate_Closure)
                 (const CMsgDOTAChatChannelFullUpdate *message,
                  void *closure_data);
typedef void (*CMsgDOTAOtherJoinedChatChannel_Closure)
                 (const CMsgDOTAOtherJoinedChatChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTAOtherLeftChatChannel_Closure)
                 (const CMsgDOTAOtherLeftChatChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatChannelMemberUpdate__JoinedMember_Closure)
                 (const CMsgDOTAChatChannelMemberUpdate__JoinedMember *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatChannelMemberUpdate_Closure)
                 (const CMsgDOTAChatChannelMemberUpdate *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestChatChannelList_Closure)
                 (const CMsgDOTARequestChatChannelList *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestChatChannelListResponse__ChatChannel_Closure)
                 (const CMsgDOTARequestChatChannelListResponse__ChatChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestChatChannelListResponse_Closure)
                 (const CMsgDOTARequestChatChannelListResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatGetUserList_Closure)
                 (const CMsgDOTAChatGetUserList *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatGetUserListResponse__Member_Closure)
                 (const CMsgDOTAChatGetUserListResponse__Member *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatGetUserListResponse_Closure)
                 (const CMsgDOTAChatGetUserListResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatGetMemberCount_Closure)
                 (const CMsgDOTAChatGetMemberCount *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatGetMemberCountResponse_Closure)
                 (const CMsgDOTAChatGetMemberCountResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatRegionsEnabled__Region_Closure)
                 (const CMsgDOTAChatRegionsEnabled__Region *message,
                  void *closure_data);
typedef void (*CMsgDOTAChatRegionsEnabled_Closure)
                 (const CMsgDOTAChatRegionsEnabled *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cmsg_client_to_gcprivate_chat_invite__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcprivate_chat_kick__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcprivate_chat_promote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcprivate_chat_demote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_private_chat_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcto_client_private_chat_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcprivate_chat_info_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_private_chat_info_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_private_chat_info_response__member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotajoin_chat_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleave_chat_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaclient_ignored_user__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_message__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_message__dice_roll__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotajoin_chat_channel_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotajoin_chat_channel_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_channel_full_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaother_joined_chat_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaother_left_chat_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_channel_member_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_channel_member_update__joined_member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_chat_channel_list__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_chat_channel_list_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_chat_channel_list_response__chat_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_get_user_list__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_get_user_list_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_get_user_list_response__member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_get_member_count__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_get_member_count_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_regions_enabled__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotachat_regions_enabled__region__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fgcmessages_5fclient_5fchat_2eproto__INCLUDED */
