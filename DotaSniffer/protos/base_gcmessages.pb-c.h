/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: base_gcmessages.proto */

#ifndef PROTOBUF_C_base_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_C_base_5fgcmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages.pb-c.h"

typedef struct _CGCStorePurchaseInitLineItem CGCStorePurchaseInitLineItem;
typedef struct _CMsgGCStorePurchaseInit CMsgGCStorePurchaseInit;
typedef struct _CMsgGCStorePurchaseInitResponse CMsgGCStorePurchaseInitResponse;
typedef struct _CMsgSystemBroadcast CMsgSystemBroadcast;
typedef struct _CMsgClientPingData CMsgClientPingData;
typedef struct _CMsgInviteToParty CMsgInviteToParty;
typedef struct _CMsgInviteToLobby CMsgInviteToLobby;
typedef struct _CMsgInvitationCreated CMsgInvitationCreated;
typedef struct _CMsgPartyInviteResponse CMsgPartyInviteResponse;
typedef struct _CMsgLobbyInviteResponse CMsgLobbyInviteResponse;
typedef struct _CMsgKickFromParty CMsgKickFromParty;
typedef struct _CMsgLeaveParty CMsgLeaveParty;
typedef struct _CMsgCustomGameInstallStatus CMsgCustomGameInstallStatus;
typedef struct _CMsgServerAvailable CMsgServerAvailable;
typedef struct _CMsgLANServerAvailable CMsgLANServerAvailable;
typedef struct _CSOEconGameAccountClient CSOEconGameAccountClient;
typedef struct _CSOItemCriteriaCondition CSOItemCriteriaCondition;
typedef struct _CSOItemCriteria CSOItemCriteria;
typedef struct _CSOItemRecipe CSOItemRecipe;
typedef struct _CMsgApplyStrangePart CMsgApplyStrangePart;
typedef struct _CMsgApplyPennantUpgrade CMsgApplyPennantUpgrade;
typedef struct _CMsgApplyEggEssence CMsgApplyEggEssence;
typedef struct _CSOEconItemAttribute CSOEconItemAttribute;
typedef struct _CSOEconItemEquipped CSOEconItemEquipped;
typedef struct _CSOEconItem CSOEconItem;
typedef struct _CMsgSortItems CMsgSortItems;
typedef struct _CSOEconClaimCode CSOEconClaimCode;
typedef struct _CMsgStoreGetUserData CMsgStoreGetUserData;
typedef struct _CMsgStoreGetUserDataResponse CMsgStoreGetUserDataResponse;
typedef struct _CMsgUpdateItemSchema CMsgUpdateItemSchema;
typedef struct _CMsgGCError CMsgGCError;
typedef struct _CMsgRequestInventoryRefresh CMsgRequestInventoryRefresh;
typedef struct _CMsgConVarValue CMsgConVarValue;
typedef struct _CMsgReplicateConVars CMsgReplicateConVars;
typedef struct _CMsgReplayUploadedToYouTube CMsgReplayUploadedToYouTube;
typedef struct _CMsgConsumableExhausted CMsgConsumableExhausted;
typedef struct _CMsgItemAcknowledged CMsgItemAcknowledged;
typedef struct _CMsgSetItemPositions CMsgSetItemPositions;
typedef struct _CMsgSetItemPositions__ItemPosition CMsgSetItemPositions__ItemPosition;
typedef struct _CMsgGCNameItemNotification CMsgGCNameItemNotification;
typedef struct _CMsgGCClientDisplayNotification CMsgGCClientDisplayNotification;
typedef struct _CMsgGCShowItemsPickedUp CMsgGCShowItemsPickedUp;
typedef struct _CMsgGCIncrementKillCountResponse CMsgGCIncrementKillCountResponse;
typedef struct _CSOEconItemDropRateBonus CSOEconItemDropRateBonus;
typedef struct _CSOEconItemLeagueViewPass CSOEconItemLeagueViewPass;
typedef struct _CSOEconItemEventTicket CSOEconItemEventTicket;
typedef struct _CSOEconItemTournamentPassport CSOEconItemTournamentPassport;
typedef struct _CMsgGCItemPreviewItemBoughtNotification CMsgGCItemPreviewItemBoughtNotification;
typedef struct _CMsgGCStorePurchaseCancel CMsgGCStorePurchaseCancel;
typedef struct _CMsgGCStorePurchaseCancelResponse CMsgGCStorePurchaseCancelResponse;
typedef struct _CMsgGCStorePurchaseFinalize CMsgGCStorePurchaseFinalize;
typedef struct _CMsgGCStorePurchaseFinalizeResponse CMsgGCStorePurchaseFinalizeResponse;
typedef struct _CMsgGCBannedWordListRequest CMsgGCBannedWordListRequest;
typedef struct _CMsgGCBannedWord CMsgGCBannedWord;
typedef struct _CMsgGCBannedWordListResponse CMsgGCBannedWordListResponse;
typedef struct _CMsgGCToGCBannedWordListBroadcast CMsgGCToGCBannedWordListBroadcast;
typedef struct _CMsgGCToGCBannedWordListUpdated CMsgGCToGCBannedWordListUpdated;
typedef struct _CMsgGCToGCDirtySDOCache CMsgGCToGCDirtySDOCache;
typedef struct _CMsgGCToGCDirtyMultipleSDOCache CMsgGCToGCDirtyMultipleSDOCache;
typedef struct _CMsgGCToGCApplyLocalizationDiff CMsgGCToGCApplyLocalizationDiff;
typedef struct _CMsgGCToGCApplyLocalizationDiffResponse CMsgGCToGCApplyLocalizationDiffResponse;
typedef struct _CMsgGCCollectItem CMsgGCCollectItem;
typedef struct _CMsgSDONoMemcached CMsgSDONoMemcached;
typedef struct _CMsgGCToGCUpdateSQLKeyValue CMsgGCToGCUpdateSQLKeyValue;
typedef struct _CMsgGCServerVersionUpdated CMsgGCServerVersionUpdated;
typedef struct _CMsgGCClientVersionUpdated CMsgGCClientVersionUpdated;
typedef struct _CMsgGCToGCWebAPIAccountChanged CMsgGCToGCWebAPIAccountChanged;
typedef struct _CMsgRecipeComponent CMsgRecipeComponent;
typedef struct _CMsgFulfillDynamicRecipeComponent CMsgFulfillDynamicRecipeComponent;
typedef struct _CMsgGCClientMarketDataRequest CMsgGCClientMarketDataRequest;
typedef struct _CMsgGCClientMarketDataEntry CMsgGCClientMarketDataEntry;
typedef struct _CMsgGCClientMarketData CMsgGCClientMarketData;
typedef struct _CMsgExtractGems CMsgExtractGems;
typedef struct _CMsgExtractGemsResponse CMsgExtractGemsResponse;
typedef struct _CMsgAddSocket CMsgAddSocket;
typedef struct _CMsgAddSocketResponse CMsgAddSocketResponse;
typedef struct _CMsgAddItemToSocketData CMsgAddItemToSocketData;
typedef struct _CMsgAddItemToSocket CMsgAddItemToSocket;
typedef struct _CMsgAddItemToSocketResponse CMsgAddItemToSocketResponse;
typedef struct _CMsgResetStrangeGemCount CMsgResetStrangeGemCount;
typedef struct _CMsgResetStrangeGemCountResponse CMsgResetStrangeGemCountResponse;


/* --- enums --- */

typedef enum _CMsgExtractGemsResponse__EExtractGems {
  CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Succeeded = 0,
  CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Failed_ToolIsInvalid = 1,
  CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Failed_ItemIsInvalid = 2,
  CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Failed_ToolCannotRemoveGem = 3,
  CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Failed_FailedToRemoveGem = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS)
} CMsgExtractGemsResponse__EExtractGems;
typedef enum _CMsgAddSocketResponse__EAddSocket {
  CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET__k_AddSocket_Succeeded = 0,
  CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET__k_AddSocket_Failed_ToolIsInvalid = 1,
  CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET__k_AddSocket_Failed_ItemCannotBeSocketed = 2,
  CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET__k_AddSocket_Failed_FailedToAddSocket = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET)
} CMsgAddSocketResponse__EAddSocket;
typedef enum _CMsgAddItemToSocketResponse__EAddGem {
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Succeeded = 0,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_GemIsInvalid = 1,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_ItemIsInvalid = 2,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_FailedToAddGem = 3,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_InvalidGemTypeForSocket = 4,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_InvalidGemTypeForHero = 5,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_InvalidGemTypeForSlot = 6,
  CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Failed_SocketContainsUnremovableGem = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM)
} CMsgAddItemToSocketResponse__EAddGem;
typedef enum _CMsgResetStrangeGemCountResponse__EResetGem {
  CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Succeeded = 0,
  CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Failed_FailedToResetGem = 1,
  CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Failed_ItemIsInvalid = 2,
  CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Failed_InvalidSocketId = 3,
  CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Failed_SocketCannotBeReset = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM)
} CMsgResetStrangeGemCountResponse__EResetGem;
typedef enum _EGCBaseMsg {
  EGCBASE_MSG__k_EMsgGCSystemMessage = 4001,
  EGCBASE_MSG__k_EMsgGCReplicateConVars = 4002,
  EGCBASE_MSG__k_EMsgGCConVarUpdated = 4003,
  EGCBASE_MSG__k_EMsgGCInviteToParty = 4501,
  EGCBASE_MSG__k_EMsgGCInvitationCreated = 4502,
  EGCBASE_MSG__k_EMsgGCPartyInviteResponse = 4503,
  EGCBASE_MSG__k_EMsgGCKickFromParty = 4504,
  EGCBASE_MSG__k_EMsgGCLeaveParty = 4505,
  EGCBASE_MSG__k_EMsgGCServerAvailable = 4506,
  EGCBASE_MSG__k_EMsgGCClientConnectToServer = 4507,
  EGCBASE_MSG__k_EMsgGCGameServerInfo = 4508,
  EGCBASE_MSG__k_EMsgGCError = 4509,
  EGCBASE_MSG__k_EMsgGCReplay_UploadedToYouTube = 4510,
  EGCBASE_MSG__k_EMsgGCLANServerAvailable = 4511,
  EGCBASE_MSG__k_EMsgGCInviteToLobby = 4512,
  EGCBASE_MSG__k_EMsgGCLobbyInviteResponse = 4513
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EGCBASE_MSG)
} EGCBaseMsg;
typedef enum _EGCBaseProtoObjectTypes {
  EGCBASE_PROTO_OBJECT_TYPES__k_EProtoObjectPartyInvite = 1001,
  EGCBASE_PROTO_OBJECT_TYPES__k_EProtoObjectLobbyInvite = 1002
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EGCBASE_PROTO_OBJECT_TYPES)
} EGCBaseProtoObjectTypes;
typedef enum _ECustomGameInstallStatus {
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_Unknown = 0,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_Ready = 1,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_Busy = 2,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_FailedGeneric = 101,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_FailedInternalError = 102,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_RequestedTimestampTooOld = 103,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_RequestedTimestampTooNew = 104,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_CRCMismatch = 105,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_FailedSteam = 106,
  ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_FailedCanceled = 107
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ECUSTOM_GAME_INSTALL_STATUS)
} ECustomGameInstallStatus;
typedef enum _GCBannedWordType {
  GC__BANNED_WORD_TYPE__GC_BANNED_WORD_DISABLE_WORD = 0,
  GC__BANNED_WORD_TYPE__GC_BANNED_WORD_ENABLE_WORD = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GC__BANNED_WORD_TYPE)
} GCBannedWordType;

/* --- messages --- */

struct  _CGCStorePurchaseInitLineItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def_id;
  uint32_t item_def_id;
  protobuf_c_boolean has_quantity;
  uint32_t quantity;
  protobuf_c_boolean has_cost_in_local_currency;
  uint32_t cost_in_local_currency;
  protobuf_c_boolean has_purchase_type;
  uint32_t purchase_type;
  protobuf_c_boolean has_source_reference_id;
  uint64_t source_reference_id;
};
#define CGCSTORE_PURCHASE_INIT__LINE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgcstore_purchase_init__line_item__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCStorePurchaseInit
{
  ProtobufCMessage base;
  char *country;
  protobuf_c_boolean has_language;
  int32_t language;
  protobuf_c_boolean has_currency;
  int32_t currency;
  size_t n_line_items;
  CGCStorePurchaseInitLineItem **line_items;
};
#define CMSG_GCSTORE_PURCHASE_INIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_init__descriptor) \
    , NULL, 0,0, 0,0, 0,NULL }


struct  _CMsgGCStorePurchaseInitResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  int32_t result;
  protobuf_c_boolean has_txn_id;
  uint64_t txn_id;
};
#define CMSG_GCSTORE_PURCHASE_INIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_init_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSystemBroadcast
{
  ProtobufCMessage base;
  char *message;
};
#define CMSG_SYSTEM_BROADCAST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_system_broadcast__descriptor) \
    , NULL }


struct  _CMsgClientPingData
{
  ProtobufCMessage base;
  size_t n_relay_codes;
  uint32_t *relay_codes;
  size_t n_relay_pings;
  uint32_t *relay_pings;
  size_t n_region_codes;
  uint32_t *region_codes;
  size_t n_region_pings;
  uint32_t *region_pings;
  protobuf_c_boolean has_region_ping_failed_bitmask;
  uint32_t region_ping_failed_bitmask;
};
#define CMSG_CLIENT_PING_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_ping_data__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,0 }


struct  _CMsgInviteToParty
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_client_version;
  uint32_t client_version;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_as_coach;
  protobuf_c_boolean as_coach;
  CMsgClientPingData *ping_data;
};
#define CMSG_INVITE_TO_PARTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_invite_to_party__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL }


struct  _CMsgInviteToLobby
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_client_version;
  uint32_t client_version;
};
#define CMSG_INVITE_TO_LOBBY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_invite_to_lobby__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgInvitationCreated
{
  ProtobufCMessage base;
  protobuf_c_boolean has_group_id;
  uint64_t group_id;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_user_offline;
  protobuf_c_boolean user_offline;
};
#define CMSG_INVITATION_CREATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_invitation_created__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgPartyInviteResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_accept;
  protobuf_c_boolean accept;
  protobuf_c_boolean has_client_version;
  uint32_t client_version;
  CMsgClientPingData *ping_data;
};
#define CMSG_PARTY_INVITE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_party_invite_response__descriptor) \
    , 0,0, 0,0, 0,0, NULL }


struct  _CMsgLobbyInviteResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_accept;
  protobuf_c_boolean accept;
  protobuf_c_boolean has_client_version;
  uint32_t client_version;
  protobuf_c_boolean has_custom_game_crc;
  uint64_t custom_game_crc;
  protobuf_c_boolean has_custom_game_timestamp;
  uint32_t custom_game_timestamp;
};
#define CMSG_LOBBY_INVITE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_lobby_invite_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgKickFromParty
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
};
#define CMSG_KICK_FROM_PARTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_kick_from_party__descriptor) \
    , 0,0 }


struct  _CMsgLeaveParty
{
  ProtobufCMessage base;
};
#define CMSG_LEAVE_PARTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_leave_party__descriptor) \
     }


struct  _CMsgCustomGameInstallStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_status;
  ECustomGameInstallStatus status;
  char *message;
  protobuf_c_boolean has_latest_timestamp_from_steam;
  uint32_t latest_timestamp_from_steam;
};
#define CMSG_CUSTOM_GAME_INSTALL_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_custom_game_install_status__descriptor) \
    , 0,ECUSTOM_GAME_INSTALL_STATUS__k_ECustomGameInstallStatus_Unknown, NULL, 0,0 }


struct  _CMsgServerAvailable
{
  ProtobufCMessage base;
  CMsgCustomGameInstallStatus *custom_game_install_status;
};
#define CMSG_SERVER_AVAILABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_available__descriptor) \
    , NULL }


struct  _CMsgLANServerAvailable
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
};
#define CMSG_LANSERVER_AVAILABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_lanserver_available__descriptor) \
    , 0,0 }


struct  _CSOEconGameAccountClient
{
  ProtobufCMessage base;
  protobuf_c_boolean has_additional_backpack_slots;
  uint32_t additional_backpack_slots;
  protobuf_c_boolean has_trial_account;
  protobuf_c_boolean trial_account;
  protobuf_c_boolean has_eligible_for_online_play;
  protobuf_c_boolean eligible_for_online_play;
  protobuf_c_boolean has_need_to_choose_most_helpful_friend;
  protobuf_c_boolean need_to_choose_most_helpful_friend;
  protobuf_c_boolean has_in_coaches_list;
  protobuf_c_boolean in_coaches_list;
  protobuf_c_boolean has_trade_ban_expiration;
  uint32_t trade_ban_expiration;
  protobuf_c_boolean has_duel_ban_expiration;
  uint32_t duel_ban_expiration;
  protobuf_c_boolean has_preview_item_def;
  uint32_t preview_item_def;
  protobuf_c_boolean has_made_first_purchase;
  protobuf_c_boolean made_first_purchase;
};
#define CSOECON_GAME_ACCOUNT_CLIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_game_account_client__descriptor) \
    , 0,0u, 0,0, 0,1, 0,0, 0,0, 0,0, 0,0, 0,0u, 0,0 }


struct  _CSOItemCriteriaCondition
{
  ProtobufCMessage base;
  protobuf_c_boolean has_op;
  int32_t op;
  char *field;
  protobuf_c_boolean has_required;
  protobuf_c_boolean required;
  protobuf_c_boolean has_float_value;
  float float_value;
  char *string_value;
};
#define CSOITEM_CRITERIA_CONDITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoitem_criteria_condition__descriptor) \
    , 0,0, NULL, 0,0, 0,0, NULL }


struct  _CSOItemCriteria
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_level;
  uint32_t item_level;
  protobuf_c_boolean has_item_quality;
  int32_t item_quality;
  protobuf_c_boolean has_item_level_set;
  protobuf_c_boolean item_level_set;
  protobuf_c_boolean has_item_quality_set;
  protobuf_c_boolean item_quality_set;
  protobuf_c_boolean has_initial_inventory;
  uint32_t initial_inventory;
  protobuf_c_boolean has_initial_quantity;
  uint32_t initial_quantity;
  protobuf_c_boolean has_ignore_enabled_flag;
  protobuf_c_boolean ignore_enabled_flag;
  size_t n_conditions;
  CSOItemCriteriaCondition **conditions;
  protobuf_c_boolean has_recent_only;
  protobuf_c_boolean recent_only;
};
#define CSOITEM_CRITERIA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoitem_criteria__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0 }


struct  _CSOItemRecipe
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  char *name;
  char *n_a;
  char *desc_inputs;
  char *desc_outputs;
  char *di_a;
  char *di_b;
  char *di_c;
  char *do_a;
  char *do_b;
  char *do_c;
  protobuf_c_boolean has_requires_all_same_class;
  protobuf_c_boolean requires_all_same_class;
  protobuf_c_boolean has_requires_all_same_slot;
  protobuf_c_boolean requires_all_same_slot;
  protobuf_c_boolean has_class_usage_for_output;
  int32_t class_usage_for_output;
  protobuf_c_boolean has_slot_usage_for_output;
  int32_t slot_usage_for_output;
  protobuf_c_boolean has_set_for_output;
  int32_t set_for_output;
  size_t n_input_items_criteria;
  CSOItemCriteria **input_items_criteria;
  size_t n_output_items_criteria;
  CSOItemCriteria **output_items_criteria;
  size_t n_input_item_dupe_counts;
  uint32_t *input_item_dupe_counts;
};
#define CSOITEM_RECIPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoitem_recipe__descriptor) \
    , 0,0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL }


struct  _CMsgApplyStrangePart
{
  ProtobufCMessage base;
  protobuf_c_boolean has_strange_part_item_id;
  uint64_t strange_part_item_id;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
};
#define CMSG_APPLY_STRANGE_PART__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_apply_strange_part__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgApplyPennantUpgrade
{
  ProtobufCMessage base;
  protobuf_c_boolean has_upgrade_item_id;
  uint64_t upgrade_item_id;
  protobuf_c_boolean has_pennant_item_id;
  uint64_t pennant_item_id;
};
#define CMSG_APPLY_PENNANT_UPGRADE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_apply_pennant_upgrade__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgApplyEggEssence
{
  ProtobufCMessage base;
  protobuf_c_boolean has_essence_item_id;
  uint64_t essence_item_id;
  protobuf_c_boolean has_egg_item_id;
  uint64_t egg_item_id;
};
#define CMSG_APPLY_EGG_ESSENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_apply_egg_essence__descriptor) \
    , 0,0, 0,0 }


struct  _CSOEconItemAttribute
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_value;
  uint32_t value;
  protobuf_c_boolean has_value_bytes;
  ProtobufCBinaryData value_bytes;
};
#define CSOECON_ITEM_ATTRIBUTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_attribute__descriptor) \
    , 0,0, 0,0, 0,{0,NULL} }


struct  _CSOEconItemEquipped
{
  ProtobufCMessage base;
  protobuf_c_boolean has_new_class;
  uint32_t new_class;
  protobuf_c_boolean has_new_slot;
  uint32_t new_slot;
};
#define CSOECON_ITEM_EQUIPPED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_equipped__descriptor) \
    , 0,0, 0,0 }


struct  _CSOEconItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint64_t id;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_inventory;
  uint32_t inventory;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_quantity;
  uint32_t quantity;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_quality;
  uint32_t quality;
  protobuf_c_boolean has_flags;
  uint32_t flags;
  protobuf_c_boolean has_origin;
  uint32_t origin;
  size_t n_attribute;
  CSOEconItemAttribute **attribute;
  CSOEconItem *interior_item;
  protobuf_c_boolean has_in_use;
  protobuf_c_boolean in_use;
  protobuf_c_boolean has_style;
  uint32_t style;
  protobuf_c_boolean has_original_id;
  uint64_t original_id;
  size_t n_equipped_state;
  CSOEconItemEquipped **equipped_state;
};
#define CSOECON_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,1u, 0,1u, 0,4u, 0,0u, 0,0u, 0,NULL, NULL, 0,0, 0,0u, 0,0ull, 0,NULL }


struct  _CMsgSortItems
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sort_type;
  uint32_t sort_type;
};
#define CMSG_SORT_ITEMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sort_items__descriptor) \
    , 0,0 }


struct  _CSOEconClaimCode
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_code_type;
  uint32_t code_type;
  protobuf_c_boolean has_time_acquired;
  uint32_t time_acquired;
  char *code;
};
#define CSOECON_CLAIM_CODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_claim_code__descriptor) \
    , 0,0, 0,0, 0,0, NULL }


struct  _CMsgStoreGetUserData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_price_sheet_version;
  uint32_t price_sheet_version;
};
#define CMSG_STORE_GET_USER_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_store_get_user_data__descriptor) \
    , 0,0 }


struct  _CMsgStoreGetUserDataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  int32_t result;
  protobuf_c_boolean has_currency;
  int32_t currency;
  char *country;
  protobuf_c_boolean has_price_sheet_version;
  uint32_t price_sheet_version;
  protobuf_c_boolean has_experiment_data;
  uint64_t experiment_data;
  protobuf_c_boolean has_featured_item_idx;
  int32_t featured_item_idx;
  protobuf_c_boolean has_show_hat_descriptions;
  protobuf_c_boolean show_hat_descriptions;
  protobuf_c_boolean has_price_sheet;
  ProtobufCBinaryData price_sheet;
  protobuf_c_boolean has_default_item_sort;
  int32_t default_item_sort;
  size_t n_popular_items;
  uint32_t *popular_items;
};
#define CMSG_STORE_GET_USER_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_store_get_user_data_response__descriptor) \
    , 0,0, 0,0, NULL, 0,0, 0,0ull, 0,0, 0,1, 0,{0,NULL}, 0,0, 0,NULL }


struct  _CMsgUpdateItemSchema
{
  ProtobufCMessage base;
  protobuf_c_boolean has_items_game;
  ProtobufCBinaryData items_game;
  protobuf_c_boolean has_item_schema_version;
  uint32_t item_schema_version;
  char *items_game_url;
};
#define CMSG_UPDATE_ITEM_SCHEMA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_update_item_schema__descriptor) \
    , 0,{0,NULL}, 0,0, NULL }


struct  _CMsgGCError
{
  ProtobufCMessage base;
  char *error_text;
};
#define CMSG_GCERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcerror__descriptor) \
    , NULL }


struct  _CMsgRequestInventoryRefresh
{
  ProtobufCMessage base;
};
#define CMSG_REQUEST_INVENTORY_REFRESH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_inventory_refresh__descriptor) \
     }


struct  _CMsgConVarValue
{
  ProtobufCMessage base;
  char *name;
  char *value;
};
#define CMSG_CON_VAR_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_con_var_value__descriptor) \
    , NULL, NULL }


struct  _CMsgReplicateConVars
{
  ProtobufCMessage base;
  size_t n_convars;
  CMsgConVarValue **convars;
};
#define CMSG_REPLICATE_CON_VARS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_replicate_con_vars__descriptor) \
    , 0,NULL }


struct  _CMsgReplayUploadedToYouTube
{
  ProtobufCMessage base;
  char *youtube_url;
  char *youtube_account_name;
  protobuf_c_boolean has_session_id;
  uint64_t session_id;
};
#define CMSG_REPLAY_UPLOADED_TO_YOU_TUBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_replay_uploaded_to_you_tube__descriptor) \
    , NULL, NULL, 0,0 }


struct  _CMsgConsumableExhausted
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def_id;
  int32_t item_def_id;
};
#define CMSG_CONSUMABLE_EXHAUSTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_consumable_exhausted__descriptor) \
    , 0,0 }


struct  _CMsgItemAcknowledged
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_inventory;
  uint32_t inventory;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_quality;
  uint32_t quality;
  protobuf_c_boolean has_rarity;
  uint32_t rarity;
  protobuf_c_boolean has_origin;
  uint32_t origin;
};
#define CMSG_ITEM_ACKNOWLEDGED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_item_acknowledged__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSetItemPositions__ItemPosition
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  protobuf_c_boolean has_position;
  uint32_t position;
};
#define CMSG_SET_ITEM_POSITIONS__ITEM_POSITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_item_positions__item_position__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSetItemPositions
{
  ProtobufCMessage base;
  size_t n_item_positions;
  CMsgSetItemPositions__ItemPosition **item_positions;
};
#define CMSG_SET_ITEM_POSITIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_item_positions__descriptor) \
    , 0,NULL }


struct  _CMsgGCNameItemNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_steamid;
  uint64_t player_steamid;
  protobuf_c_boolean has_item_def_index;
  uint32_t item_def_index;
  char *item_name_custom;
};
#define CMSG_GCNAME_ITEM_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcname_item_notification__descriptor) \
    , 0,0, 0,0, NULL }


struct  _CMsgGCClientDisplayNotification
{
  ProtobufCMessage base;
  char *notification_title_localization_key;
  char *notification_body_localization_key;
  size_t n_body_substring_keys;
  char **body_substring_keys;
  size_t n_body_substring_values;
  char **body_substring_values;
};
#define CMSG_GCCLIENT_DISPLAY_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_display_notification__descriptor) \
    , NULL, NULL, 0,NULL, 0,NULL }


struct  _CMsgGCShowItemsPickedUp
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_steamid;
  uint64_t player_steamid;
};
#define CMSG_GCSHOW_ITEMS_PICKED_UP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcshow_items_picked_up__descriptor) \
    , 0,0 }


struct  _CMsgGCIncrementKillCountResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_killer_account_id;
  uint32_t killer_account_id;
  protobuf_c_boolean has_num_kills;
  uint32_t num_kills;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
  protobuf_c_boolean has_level_type;
  uint32_t level_type;
};
#define CMSG_GCINCREMENT_KILL_COUNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcincrement_kill_count_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CSOEconItemDropRateBonus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_expiration_date;
  uint32_t expiration_date;
  protobuf_c_boolean has_bonus;
  float bonus;
  protobuf_c_boolean has_bonus_count;
  uint32_t bonus_count;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_seconds_left;
  uint32_t seconds_left;
  protobuf_c_boolean has_booster_type;
  uint32_t booster_type;
};
#define CSOECON_ITEM_DROP_RATE_BONUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_drop_rate_bonus__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CSOEconItemLeagueViewPass
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_itemindex;
  uint32_t itemindex;
  protobuf_c_boolean has_grant_reason;
  uint32_t grant_reason;
};
#define CSOECON_ITEM_LEAGUE_VIEW_PASS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_league_view_pass__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CSOEconItemEventTicket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
};
#define CSOECON_ITEM_EVENT_TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_event_ticket__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CSOEconItemTournamentPassport
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  protobuf_c_boolean has_original_purchaser_id;
  uint32_t original_purchaser_id;
  protobuf_c_boolean has_passports_bought;
  uint32_t passports_bought;
  protobuf_c_boolean has_version;
  uint32_t version;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_reward_flags;
  uint32_t reward_flags;
};
#define CSOECON_ITEM_TOURNAMENT_PASSPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csoecon_item_tournament_passport__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCItemPreviewItemBoughtNotification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def_index;
  uint32_t item_def_index;
};
#define CMSG_GCITEM_PREVIEW_ITEM_BOUGHT_NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_preview_item_bought_notification__descriptor) \
    , 0,0 }


struct  _CMsgGCStorePurchaseCancel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_txn_id;
  uint64_t txn_id;
};
#define CMSG_GCSTORE_PURCHASE_CANCEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_cancel__descriptor) \
    , 0,0 }


struct  _CMsgGCStorePurchaseCancelResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_GCSTORE_PURCHASE_CANCEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_cancel_response__descriptor) \
    , 0,0 }


struct  _CMsgGCStorePurchaseFinalize
{
  ProtobufCMessage base;
  protobuf_c_boolean has_txn_id;
  uint64_t txn_id;
};
#define CMSG_GCSTORE_PURCHASE_FINALIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_finalize__descriptor) \
    , 0,0 }


struct  _CMsgGCStorePurchaseFinalizeResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  size_t n_item_ids;
  uint64_t *item_ids;
};
#define CMSG_GCSTORE_PURCHASE_FINALIZE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcstore_purchase_finalize_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCBannedWordListRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ban_list_group_id;
  uint32_t ban_list_group_id;
  protobuf_c_boolean has_word_id;
  uint32_t word_id;
};
#define CMSG_GCBANNED_WORD_LIST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcbanned_word_list_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCBannedWord
{
  ProtobufCMessage base;
  protobuf_c_boolean has_word_id;
  uint32_t word_id;
  protobuf_c_boolean has_word_type;
  GCBannedWordType word_type;
  char *word;
};
#define CMSG_GCBANNED_WORD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcbanned_word__descriptor) \
    , 0,0, 0,GC__BANNED_WORD_TYPE__GC_BANNED_WORD_DISABLE_WORD, NULL }


struct  _CMsgGCBannedWordListResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ban_list_group_id;
  uint32_t ban_list_group_id;
  size_t n_word_list;
  CMsgGCBannedWord **word_list;
};
#define CMSG_GCBANNED_WORD_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcbanned_word_list_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCToGCBannedWordListBroadcast
{
  ProtobufCMessage base;
  CMsgGCBannedWordListResponse *broadcast;
};
#define CMSG_GCTO_GCBANNED_WORD_LIST_BROADCAST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcbanned_word_list_broadcast__descriptor) \
    , NULL }


struct  _CMsgGCToGCBannedWordListUpdated
{
  ProtobufCMessage base;
  protobuf_c_boolean has_group_id;
  uint32_t group_id;
};
#define CMSG_GCTO_GCBANNED_WORD_LIST_UPDATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcbanned_word_list_updated__descriptor) \
    , 0,0 }


struct  _CMsgGCToGCDirtySDOCache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sdo_type;
  uint32_t sdo_type;
  protobuf_c_boolean has_key_uint64;
  uint64_t key_uint64;
};
#define CMSG_GCTO_GCDIRTY_SDOCACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcdirty_sdocache__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToGCDirtyMultipleSDOCache
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sdo_type;
  uint32_t sdo_type;
  size_t n_key_uint64;
  uint64_t *key_uint64;
};
#define CMSG_GCTO_GCDIRTY_MULTIPLE_SDOCACHE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcdirty_multiple_sdocache__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCToGCApplyLocalizationDiff
{
  ProtobufCMessage base;
  protobuf_c_boolean has_language;
  uint32_t language;
  char *packed_diff;
};
#define CMSG_GCTO_GCAPPLY_LOCALIZATION_DIFF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcapply_localization_diff__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCToGCApplyLocalizationDiffResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CMSG_GCTO_GCAPPLY_LOCALIZATION_DIFF_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcapply_localization_diff_response__descriptor) \
    , 0,0 }


struct  _CMsgGCCollectItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_collection_item_id;
  uint64_t collection_item_id;
  protobuf_c_boolean has_subject_item_id;
  uint64_t subject_item_id;
};
#define CMSG_GCCOLLECT_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gccollect_item__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSDONoMemcached
{
  ProtobufCMessage base;
};
#define CMSG_SDONO_MEMCACHED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sdono_memcached__descriptor) \
     }


struct  _CMsgGCToGCUpdateSQLKeyValue
{
  ProtobufCMessage base;
  char *key_name;
};
#define CMSG_GCTO_GCUPDATE_SQLKEY_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcupdate_sqlkey_value__descriptor) \
    , NULL }


struct  _CMsgGCServerVersionUpdated
{
  ProtobufCMessage base;
  protobuf_c_boolean has_server_version;
  uint32_t server_version;
};
#define CMSG_GCSERVER_VERSION_UPDATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcserver_version_updated__descriptor) \
    , 0,0 }


struct  _CMsgGCClientVersionUpdated
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_version;
  uint32_t client_version;
};
#define CMSG_GCCLIENT_VERSION_UPDATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_version_updated__descriptor) \
    , 0,0 }


struct  _CMsgGCToGCWebAPIAccountChanged
{
  ProtobufCMessage base;
};
#define CMSG_GCTO_GCWEB_APIACCOUNT_CHANGED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcweb_apiaccount_changed__descriptor) \
     }


struct  _CMsgRecipeComponent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_subject_item_id;
  uint64_t subject_item_id;
  protobuf_c_boolean has_attribute_index;
  uint64_t attribute_index;
};
#define CMSG_RECIPE_COMPONENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_recipe_component__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgFulfillDynamicRecipeComponent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tool_item_id;
  uint64_t tool_item_id;
  size_t n_consumption_components;
  CMsgRecipeComponent **consumption_components;
};
#define CMSG_FULFILL_DYNAMIC_RECIPE_COMPONENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_fulfill_dynamic_recipe_component__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCClientMarketDataRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_currency;
  uint32_t user_currency;
};
#define CMSG_GCCLIENT_MARKET_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_market_data_request__descriptor) \
    , 0,0 }


struct  _CMsgGCClientMarketDataEntry
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def_index;
  uint32_t item_def_index;
  protobuf_c_boolean has_item_quality;
  uint32_t item_quality;
  protobuf_c_boolean has_item_sell_listings;
  uint32_t item_sell_listings;
  protobuf_c_boolean has_price_in_local_currency;
  uint32_t price_in_local_currency;
};
#define CMSG_GCCLIENT_MARKET_DATA_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_market_data_entry__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCClientMarketData
{
  ProtobufCMessage base;
  size_t n_entries;
  CMsgGCClientMarketDataEntry **entries;
};
#define CMSG_GCCLIENT_MARKET_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcclient_market_data__descriptor) \
    , 0,NULL }


struct  _CMsgExtractGems
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tool_item_id;
  uint64_t tool_item_id;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
  protobuf_c_boolean has_item_socket_id;
  uint32_t item_socket_id;
};
#define CMSG_EXTRACT_GEMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_extract_gems__descriptor) \
    , 0,0, 0,0, 0,65535u }


struct  _CMsgExtractGemsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  protobuf_c_boolean has_response;
  CMsgExtractGemsResponse__EExtractGems response;
};
#define CMSG_EXTRACT_GEMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_extract_gems_response__descriptor) \
    , 0,0, 0,CMSG_EXTRACT_GEMS_RESPONSE__EEXTRACT_GEMS__k_ExtractGems_Succeeded }


struct  _CMsgAddSocket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tool_item_id;
  uint64_t tool_item_id;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
  protobuf_c_boolean has_unusual;
  protobuf_c_boolean unusual;
};
#define CMSG_ADD_SOCKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_add_socket__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgAddSocketResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  size_t n_updated_socket_index;
  uint32_t *updated_socket_index;
  protobuf_c_boolean has_response;
  CMsgAddSocketResponse__EAddSocket response;
};
#define CMSG_ADD_SOCKET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_add_socket_response__descriptor) \
    , 0,0, 0,NULL, 0,CMSG_ADD_SOCKET_RESPONSE__EADD_SOCKET__k_AddSocket_Succeeded }


struct  _CMsgAddItemToSocketData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gem_item_id;
  uint64_t gem_item_id;
  protobuf_c_boolean has_socket_index;
  uint32_t socket_index;
};
#define CMSG_ADD_ITEM_TO_SOCKET_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_add_item_to_socket_data__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgAddItemToSocket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
  size_t n_gems_to_socket;
  CMsgAddItemToSocketData **gems_to_socket;
};
#define CMSG_ADD_ITEM_TO_SOCKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_add_item_to_socket__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgAddItemToSocketResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
  size_t n_updated_socket_index;
  uint32_t *updated_socket_index;
  protobuf_c_boolean has_response;
  CMsgAddItemToSocketResponse__EAddGem response;
};
#define CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_add_item_to_socket_response__descriptor) \
    , 0,0, 0,NULL, 0,CMSG_ADD_ITEM_TO_SOCKET_RESPONSE__EADD_GEM__k_AddGem_Succeeded }


struct  _CMsgResetStrangeGemCount
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_item_id;
  uint64_t item_item_id;
  protobuf_c_boolean has_socket_index;
  uint32_t socket_index;
};
#define CMSG_RESET_STRANGE_GEM_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_reset_strange_gem_count__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgResetStrangeGemCountResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_response;
  CMsgResetStrangeGemCountResponse__EResetGem response;
};
#define CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_reset_strange_gem_count_response__descriptor) \
    , 0,CMSG_RESET_STRANGE_GEM_COUNT_RESPONSE__ERESET_GEM__k_ResetGem_Succeeded }


/* CGCStorePurchaseInitLineItem methods */
void   cgcstore_purchase_init__line_item__init
                     (CGCStorePurchaseInitLineItem         *message);
size_t cgcstore_purchase_init__line_item__get_packed_size
                     (const CGCStorePurchaseInitLineItem   *message);
size_t cgcstore_purchase_init__line_item__pack
                     (const CGCStorePurchaseInitLineItem   *message,
                      uint8_t             *out);
size_t cgcstore_purchase_init__line_item__pack_to_buffer
                     (const CGCStorePurchaseInitLineItem   *message,
                      ProtobufCBuffer     *buffer);
CGCStorePurchaseInitLineItem *
       cgcstore_purchase_init__line_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgcstore_purchase_init__line_item__free_unpacked
                     (CGCStorePurchaseInitLineItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseInit methods */
void   cmsg_gcstore_purchase_init__init
                     (CMsgGCStorePurchaseInit         *message);
size_t cmsg_gcstore_purchase_init__get_packed_size
                     (const CMsgGCStorePurchaseInit   *message);
size_t cmsg_gcstore_purchase_init__pack
                     (const CMsgGCStorePurchaseInit   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_init__pack_to_buffer
                     (const CMsgGCStorePurchaseInit   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseInit *
       cmsg_gcstore_purchase_init__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_init__free_unpacked
                     (CMsgGCStorePurchaseInit *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseInitResponse methods */
void   cmsg_gcstore_purchase_init_response__init
                     (CMsgGCStorePurchaseInitResponse         *message);
size_t cmsg_gcstore_purchase_init_response__get_packed_size
                     (const CMsgGCStorePurchaseInitResponse   *message);
size_t cmsg_gcstore_purchase_init_response__pack
                     (const CMsgGCStorePurchaseInitResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_init_response__pack_to_buffer
                     (const CMsgGCStorePurchaseInitResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseInitResponse *
       cmsg_gcstore_purchase_init_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_init_response__free_unpacked
                     (CMsgGCStorePurchaseInitResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgSystemBroadcast methods */
void   cmsg_system_broadcast__init
                     (CMsgSystemBroadcast         *message);
size_t cmsg_system_broadcast__get_packed_size
                     (const CMsgSystemBroadcast   *message);
size_t cmsg_system_broadcast__pack
                     (const CMsgSystemBroadcast   *message,
                      uint8_t             *out);
size_t cmsg_system_broadcast__pack_to_buffer
                     (const CMsgSystemBroadcast   *message,
                      ProtobufCBuffer     *buffer);
CMsgSystemBroadcast *
       cmsg_system_broadcast__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_system_broadcast__free_unpacked
                     (CMsgSystemBroadcast *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientPingData methods */
void   cmsg_client_ping_data__init
                     (CMsgClientPingData         *message);
size_t cmsg_client_ping_data__get_packed_size
                     (const CMsgClientPingData   *message);
size_t cmsg_client_ping_data__pack
                     (const CMsgClientPingData   *message,
                      uint8_t             *out);
size_t cmsg_client_ping_data__pack_to_buffer
                     (const CMsgClientPingData   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientPingData *
       cmsg_client_ping_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_ping_data__free_unpacked
                     (CMsgClientPingData *message,
                      ProtobufCAllocator *allocator);
/* CMsgInviteToParty methods */
void   cmsg_invite_to_party__init
                     (CMsgInviteToParty         *message);
size_t cmsg_invite_to_party__get_packed_size
                     (const CMsgInviteToParty   *message);
size_t cmsg_invite_to_party__pack
                     (const CMsgInviteToParty   *message,
                      uint8_t             *out);
size_t cmsg_invite_to_party__pack_to_buffer
                     (const CMsgInviteToParty   *message,
                      ProtobufCBuffer     *buffer);
CMsgInviteToParty *
       cmsg_invite_to_party__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_invite_to_party__free_unpacked
                     (CMsgInviteToParty *message,
                      ProtobufCAllocator *allocator);
/* CMsgInviteToLobby methods */
void   cmsg_invite_to_lobby__init
                     (CMsgInviteToLobby         *message);
size_t cmsg_invite_to_lobby__get_packed_size
                     (const CMsgInviteToLobby   *message);
size_t cmsg_invite_to_lobby__pack
                     (const CMsgInviteToLobby   *message,
                      uint8_t             *out);
size_t cmsg_invite_to_lobby__pack_to_buffer
                     (const CMsgInviteToLobby   *message,
                      ProtobufCBuffer     *buffer);
CMsgInviteToLobby *
       cmsg_invite_to_lobby__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_invite_to_lobby__free_unpacked
                     (CMsgInviteToLobby *message,
                      ProtobufCAllocator *allocator);
/* CMsgInvitationCreated methods */
void   cmsg_invitation_created__init
                     (CMsgInvitationCreated         *message);
size_t cmsg_invitation_created__get_packed_size
                     (const CMsgInvitationCreated   *message);
size_t cmsg_invitation_created__pack
                     (const CMsgInvitationCreated   *message,
                      uint8_t             *out);
size_t cmsg_invitation_created__pack_to_buffer
                     (const CMsgInvitationCreated   *message,
                      ProtobufCBuffer     *buffer);
CMsgInvitationCreated *
       cmsg_invitation_created__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_invitation_created__free_unpacked
                     (CMsgInvitationCreated *message,
                      ProtobufCAllocator *allocator);
/* CMsgPartyInviteResponse methods */
void   cmsg_party_invite_response__init
                     (CMsgPartyInviteResponse         *message);
size_t cmsg_party_invite_response__get_packed_size
                     (const CMsgPartyInviteResponse   *message);
size_t cmsg_party_invite_response__pack
                     (const CMsgPartyInviteResponse   *message,
                      uint8_t             *out);
size_t cmsg_party_invite_response__pack_to_buffer
                     (const CMsgPartyInviteResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgPartyInviteResponse *
       cmsg_party_invite_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_party_invite_response__free_unpacked
                     (CMsgPartyInviteResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgLobbyInviteResponse methods */
void   cmsg_lobby_invite_response__init
                     (CMsgLobbyInviteResponse         *message);
size_t cmsg_lobby_invite_response__get_packed_size
                     (const CMsgLobbyInviteResponse   *message);
size_t cmsg_lobby_invite_response__pack
                     (const CMsgLobbyInviteResponse   *message,
                      uint8_t             *out);
size_t cmsg_lobby_invite_response__pack_to_buffer
                     (const CMsgLobbyInviteResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgLobbyInviteResponse *
       cmsg_lobby_invite_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_lobby_invite_response__free_unpacked
                     (CMsgLobbyInviteResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgKickFromParty methods */
void   cmsg_kick_from_party__init
                     (CMsgKickFromParty         *message);
size_t cmsg_kick_from_party__get_packed_size
                     (const CMsgKickFromParty   *message);
size_t cmsg_kick_from_party__pack
                     (const CMsgKickFromParty   *message,
                      uint8_t             *out);
size_t cmsg_kick_from_party__pack_to_buffer
                     (const CMsgKickFromParty   *message,
                      ProtobufCBuffer     *buffer);
CMsgKickFromParty *
       cmsg_kick_from_party__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_kick_from_party__free_unpacked
                     (CMsgKickFromParty *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeaveParty methods */
void   cmsg_leave_party__init
                     (CMsgLeaveParty         *message);
size_t cmsg_leave_party__get_packed_size
                     (const CMsgLeaveParty   *message);
size_t cmsg_leave_party__pack
                     (const CMsgLeaveParty   *message,
                      uint8_t             *out);
size_t cmsg_leave_party__pack_to_buffer
                     (const CMsgLeaveParty   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeaveParty *
       cmsg_leave_party__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_leave_party__free_unpacked
                     (CMsgLeaveParty *message,
                      ProtobufCAllocator *allocator);
/* CMsgCustomGameInstallStatus methods */
void   cmsg_custom_game_install_status__init
                     (CMsgCustomGameInstallStatus         *message);
size_t cmsg_custom_game_install_status__get_packed_size
                     (const CMsgCustomGameInstallStatus   *message);
size_t cmsg_custom_game_install_status__pack
                     (const CMsgCustomGameInstallStatus   *message,
                      uint8_t             *out);
size_t cmsg_custom_game_install_status__pack_to_buffer
                     (const CMsgCustomGameInstallStatus   *message,
                      ProtobufCBuffer     *buffer);
CMsgCustomGameInstallStatus *
       cmsg_custom_game_install_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_custom_game_install_status__free_unpacked
                     (CMsgCustomGameInstallStatus *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerAvailable methods */
void   cmsg_server_available__init
                     (CMsgServerAvailable         *message);
size_t cmsg_server_available__get_packed_size
                     (const CMsgServerAvailable   *message);
size_t cmsg_server_available__pack
                     (const CMsgServerAvailable   *message,
                      uint8_t             *out);
size_t cmsg_server_available__pack_to_buffer
                     (const CMsgServerAvailable   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerAvailable *
       cmsg_server_available__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_available__free_unpacked
                     (CMsgServerAvailable *message,
                      ProtobufCAllocator *allocator);
/* CMsgLANServerAvailable methods */
void   cmsg_lanserver_available__init
                     (CMsgLANServerAvailable         *message);
size_t cmsg_lanserver_available__get_packed_size
                     (const CMsgLANServerAvailable   *message);
size_t cmsg_lanserver_available__pack
                     (const CMsgLANServerAvailable   *message,
                      uint8_t             *out);
size_t cmsg_lanserver_available__pack_to_buffer
                     (const CMsgLANServerAvailable   *message,
                      ProtobufCBuffer     *buffer);
CMsgLANServerAvailable *
       cmsg_lanserver_available__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_lanserver_available__free_unpacked
                     (CMsgLANServerAvailable *message,
                      ProtobufCAllocator *allocator);
/* CSOEconGameAccountClient methods */
void   csoecon_game_account_client__init
                     (CSOEconGameAccountClient         *message);
size_t csoecon_game_account_client__get_packed_size
                     (const CSOEconGameAccountClient   *message);
size_t csoecon_game_account_client__pack
                     (const CSOEconGameAccountClient   *message,
                      uint8_t             *out);
size_t csoecon_game_account_client__pack_to_buffer
                     (const CSOEconGameAccountClient   *message,
                      ProtobufCBuffer     *buffer);
CSOEconGameAccountClient *
       csoecon_game_account_client__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_game_account_client__free_unpacked
                     (CSOEconGameAccountClient *message,
                      ProtobufCAllocator *allocator);
/* CSOItemCriteriaCondition methods */
void   csoitem_criteria_condition__init
                     (CSOItemCriteriaCondition         *message);
size_t csoitem_criteria_condition__get_packed_size
                     (const CSOItemCriteriaCondition   *message);
size_t csoitem_criteria_condition__pack
                     (const CSOItemCriteriaCondition   *message,
                      uint8_t             *out);
size_t csoitem_criteria_condition__pack_to_buffer
                     (const CSOItemCriteriaCondition   *message,
                      ProtobufCBuffer     *buffer);
CSOItemCriteriaCondition *
       csoitem_criteria_condition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoitem_criteria_condition__free_unpacked
                     (CSOItemCriteriaCondition *message,
                      ProtobufCAllocator *allocator);
/* CSOItemCriteria methods */
void   csoitem_criteria__init
                     (CSOItemCriteria         *message);
size_t csoitem_criteria__get_packed_size
                     (const CSOItemCriteria   *message);
size_t csoitem_criteria__pack
                     (const CSOItemCriteria   *message,
                      uint8_t             *out);
size_t csoitem_criteria__pack_to_buffer
                     (const CSOItemCriteria   *message,
                      ProtobufCBuffer     *buffer);
CSOItemCriteria *
       csoitem_criteria__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoitem_criteria__free_unpacked
                     (CSOItemCriteria *message,
                      ProtobufCAllocator *allocator);
/* CSOItemRecipe methods */
void   csoitem_recipe__init
                     (CSOItemRecipe         *message);
size_t csoitem_recipe__get_packed_size
                     (const CSOItemRecipe   *message);
size_t csoitem_recipe__pack
                     (const CSOItemRecipe   *message,
                      uint8_t             *out);
size_t csoitem_recipe__pack_to_buffer
                     (const CSOItemRecipe   *message,
                      ProtobufCBuffer     *buffer);
CSOItemRecipe *
       csoitem_recipe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoitem_recipe__free_unpacked
                     (CSOItemRecipe *message,
                      ProtobufCAllocator *allocator);
/* CMsgApplyStrangePart methods */
void   cmsg_apply_strange_part__init
                     (CMsgApplyStrangePart         *message);
size_t cmsg_apply_strange_part__get_packed_size
                     (const CMsgApplyStrangePart   *message);
size_t cmsg_apply_strange_part__pack
                     (const CMsgApplyStrangePart   *message,
                      uint8_t             *out);
size_t cmsg_apply_strange_part__pack_to_buffer
                     (const CMsgApplyStrangePart   *message,
                      ProtobufCBuffer     *buffer);
CMsgApplyStrangePart *
       cmsg_apply_strange_part__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_apply_strange_part__free_unpacked
                     (CMsgApplyStrangePart *message,
                      ProtobufCAllocator *allocator);
/* CMsgApplyPennantUpgrade methods */
void   cmsg_apply_pennant_upgrade__init
                     (CMsgApplyPennantUpgrade         *message);
size_t cmsg_apply_pennant_upgrade__get_packed_size
                     (const CMsgApplyPennantUpgrade   *message);
size_t cmsg_apply_pennant_upgrade__pack
                     (const CMsgApplyPennantUpgrade   *message,
                      uint8_t             *out);
size_t cmsg_apply_pennant_upgrade__pack_to_buffer
                     (const CMsgApplyPennantUpgrade   *message,
                      ProtobufCBuffer     *buffer);
CMsgApplyPennantUpgrade *
       cmsg_apply_pennant_upgrade__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_apply_pennant_upgrade__free_unpacked
                     (CMsgApplyPennantUpgrade *message,
                      ProtobufCAllocator *allocator);
/* CMsgApplyEggEssence methods */
void   cmsg_apply_egg_essence__init
                     (CMsgApplyEggEssence         *message);
size_t cmsg_apply_egg_essence__get_packed_size
                     (const CMsgApplyEggEssence   *message);
size_t cmsg_apply_egg_essence__pack
                     (const CMsgApplyEggEssence   *message,
                      uint8_t             *out);
size_t cmsg_apply_egg_essence__pack_to_buffer
                     (const CMsgApplyEggEssence   *message,
                      ProtobufCBuffer     *buffer);
CMsgApplyEggEssence *
       cmsg_apply_egg_essence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_apply_egg_essence__free_unpacked
                     (CMsgApplyEggEssence *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemAttribute methods */
void   csoecon_item_attribute__init
                     (CSOEconItemAttribute         *message);
size_t csoecon_item_attribute__get_packed_size
                     (const CSOEconItemAttribute   *message);
size_t csoecon_item_attribute__pack
                     (const CSOEconItemAttribute   *message,
                      uint8_t             *out);
size_t csoecon_item_attribute__pack_to_buffer
                     (const CSOEconItemAttribute   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemAttribute *
       csoecon_item_attribute__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_attribute__free_unpacked
                     (CSOEconItemAttribute *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemEquipped methods */
void   csoecon_item_equipped__init
                     (CSOEconItemEquipped         *message);
size_t csoecon_item_equipped__get_packed_size
                     (const CSOEconItemEquipped   *message);
size_t csoecon_item_equipped__pack
                     (const CSOEconItemEquipped   *message,
                      uint8_t             *out);
size_t csoecon_item_equipped__pack_to_buffer
                     (const CSOEconItemEquipped   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemEquipped *
       csoecon_item_equipped__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_equipped__free_unpacked
                     (CSOEconItemEquipped *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItem methods */
void   csoecon_item__init
                     (CSOEconItem         *message);
size_t csoecon_item__get_packed_size
                     (const CSOEconItem   *message);
size_t csoecon_item__pack
                     (const CSOEconItem   *message,
                      uint8_t             *out);
size_t csoecon_item__pack_to_buffer
                     (const CSOEconItem   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItem *
       csoecon_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item__free_unpacked
                     (CSOEconItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgSortItems methods */
void   cmsg_sort_items__init
                     (CMsgSortItems         *message);
size_t cmsg_sort_items__get_packed_size
                     (const CMsgSortItems   *message);
size_t cmsg_sort_items__pack
                     (const CMsgSortItems   *message,
                      uint8_t             *out);
size_t cmsg_sort_items__pack_to_buffer
                     (const CMsgSortItems   *message,
                      ProtobufCBuffer     *buffer);
CMsgSortItems *
       cmsg_sort_items__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sort_items__free_unpacked
                     (CMsgSortItems *message,
                      ProtobufCAllocator *allocator);
/* CSOEconClaimCode methods */
void   csoecon_claim_code__init
                     (CSOEconClaimCode         *message);
size_t csoecon_claim_code__get_packed_size
                     (const CSOEconClaimCode   *message);
size_t csoecon_claim_code__pack
                     (const CSOEconClaimCode   *message,
                      uint8_t             *out);
size_t csoecon_claim_code__pack_to_buffer
                     (const CSOEconClaimCode   *message,
                      ProtobufCBuffer     *buffer);
CSOEconClaimCode *
       csoecon_claim_code__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_claim_code__free_unpacked
                     (CSOEconClaimCode *message,
                      ProtobufCAllocator *allocator);
/* CMsgStoreGetUserData methods */
void   cmsg_store_get_user_data__init
                     (CMsgStoreGetUserData         *message);
size_t cmsg_store_get_user_data__get_packed_size
                     (const CMsgStoreGetUserData   *message);
size_t cmsg_store_get_user_data__pack
                     (const CMsgStoreGetUserData   *message,
                      uint8_t             *out);
size_t cmsg_store_get_user_data__pack_to_buffer
                     (const CMsgStoreGetUserData   *message,
                      ProtobufCBuffer     *buffer);
CMsgStoreGetUserData *
       cmsg_store_get_user_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_store_get_user_data__free_unpacked
                     (CMsgStoreGetUserData *message,
                      ProtobufCAllocator *allocator);
/* CMsgStoreGetUserDataResponse methods */
void   cmsg_store_get_user_data_response__init
                     (CMsgStoreGetUserDataResponse         *message);
size_t cmsg_store_get_user_data_response__get_packed_size
                     (const CMsgStoreGetUserDataResponse   *message);
size_t cmsg_store_get_user_data_response__pack
                     (const CMsgStoreGetUserDataResponse   *message,
                      uint8_t             *out);
size_t cmsg_store_get_user_data_response__pack_to_buffer
                     (const CMsgStoreGetUserDataResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgStoreGetUserDataResponse *
       cmsg_store_get_user_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_store_get_user_data_response__free_unpacked
                     (CMsgStoreGetUserDataResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgUpdateItemSchema methods */
void   cmsg_update_item_schema__init
                     (CMsgUpdateItemSchema         *message);
size_t cmsg_update_item_schema__get_packed_size
                     (const CMsgUpdateItemSchema   *message);
size_t cmsg_update_item_schema__pack
                     (const CMsgUpdateItemSchema   *message,
                      uint8_t             *out);
size_t cmsg_update_item_schema__pack_to_buffer
                     (const CMsgUpdateItemSchema   *message,
                      ProtobufCBuffer     *buffer);
CMsgUpdateItemSchema *
       cmsg_update_item_schema__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_update_item_schema__free_unpacked
                     (CMsgUpdateItemSchema *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCError methods */
void   cmsg_gcerror__init
                     (CMsgGCError         *message);
size_t cmsg_gcerror__get_packed_size
                     (const CMsgGCError   *message);
size_t cmsg_gcerror__pack
                     (const CMsgGCError   *message,
                      uint8_t             *out);
size_t cmsg_gcerror__pack_to_buffer
                     (const CMsgGCError   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCError *
       cmsg_gcerror__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcerror__free_unpacked
                     (CMsgGCError *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestInventoryRefresh methods */
void   cmsg_request_inventory_refresh__init
                     (CMsgRequestInventoryRefresh         *message);
size_t cmsg_request_inventory_refresh__get_packed_size
                     (const CMsgRequestInventoryRefresh   *message);
size_t cmsg_request_inventory_refresh__pack
                     (const CMsgRequestInventoryRefresh   *message,
                      uint8_t             *out);
size_t cmsg_request_inventory_refresh__pack_to_buffer
                     (const CMsgRequestInventoryRefresh   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestInventoryRefresh *
       cmsg_request_inventory_refresh__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_inventory_refresh__free_unpacked
                     (CMsgRequestInventoryRefresh *message,
                      ProtobufCAllocator *allocator);
/* CMsgConVarValue methods */
void   cmsg_con_var_value__init
                     (CMsgConVarValue         *message);
size_t cmsg_con_var_value__get_packed_size
                     (const CMsgConVarValue   *message);
size_t cmsg_con_var_value__pack
                     (const CMsgConVarValue   *message,
                      uint8_t             *out);
size_t cmsg_con_var_value__pack_to_buffer
                     (const CMsgConVarValue   *message,
                      ProtobufCBuffer     *buffer);
CMsgConVarValue *
       cmsg_con_var_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_con_var_value__free_unpacked
                     (CMsgConVarValue *message,
                      ProtobufCAllocator *allocator);
/* CMsgReplicateConVars methods */
void   cmsg_replicate_con_vars__init
                     (CMsgReplicateConVars         *message);
size_t cmsg_replicate_con_vars__get_packed_size
                     (const CMsgReplicateConVars   *message);
size_t cmsg_replicate_con_vars__pack
                     (const CMsgReplicateConVars   *message,
                      uint8_t             *out);
size_t cmsg_replicate_con_vars__pack_to_buffer
                     (const CMsgReplicateConVars   *message,
                      ProtobufCBuffer     *buffer);
CMsgReplicateConVars *
       cmsg_replicate_con_vars__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_replicate_con_vars__free_unpacked
                     (CMsgReplicateConVars *message,
                      ProtobufCAllocator *allocator);
/* CMsgReplayUploadedToYouTube methods */
void   cmsg_replay_uploaded_to_you_tube__init
                     (CMsgReplayUploadedToYouTube         *message);
size_t cmsg_replay_uploaded_to_you_tube__get_packed_size
                     (const CMsgReplayUploadedToYouTube   *message);
size_t cmsg_replay_uploaded_to_you_tube__pack
                     (const CMsgReplayUploadedToYouTube   *message,
                      uint8_t             *out);
size_t cmsg_replay_uploaded_to_you_tube__pack_to_buffer
                     (const CMsgReplayUploadedToYouTube   *message,
                      ProtobufCBuffer     *buffer);
CMsgReplayUploadedToYouTube *
       cmsg_replay_uploaded_to_you_tube__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_replay_uploaded_to_you_tube__free_unpacked
                     (CMsgReplayUploadedToYouTube *message,
                      ProtobufCAllocator *allocator);
/* CMsgConsumableExhausted methods */
void   cmsg_consumable_exhausted__init
                     (CMsgConsumableExhausted         *message);
size_t cmsg_consumable_exhausted__get_packed_size
                     (const CMsgConsumableExhausted   *message);
size_t cmsg_consumable_exhausted__pack
                     (const CMsgConsumableExhausted   *message,
                      uint8_t             *out);
size_t cmsg_consumable_exhausted__pack_to_buffer
                     (const CMsgConsumableExhausted   *message,
                      ProtobufCBuffer     *buffer);
CMsgConsumableExhausted *
       cmsg_consumable_exhausted__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_consumable_exhausted__free_unpacked
                     (CMsgConsumableExhausted *message,
                      ProtobufCAllocator *allocator);
/* CMsgItemAcknowledged methods */
void   cmsg_item_acknowledged__init
                     (CMsgItemAcknowledged         *message);
size_t cmsg_item_acknowledged__get_packed_size
                     (const CMsgItemAcknowledged   *message);
size_t cmsg_item_acknowledged__pack
                     (const CMsgItemAcknowledged   *message,
                      uint8_t             *out);
size_t cmsg_item_acknowledged__pack_to_buffer
                     (const CMsgItemAcknowledged   *message,
                      ProtobufCBuffer     *buffer);
CMsgItemAcknowledged *
       cmsg_item_acknowledged__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_item_acknowledged__free_unpacked
                     (CMsgItemAcknowledged *message,
                      ProtobufCAllocator *allocator);
/* CMsgSetItemPositions__ItemPosition methods */
void   cmsg_set_item_positions__item_position__init
                     (CMsgSetItemPositions__ItemPosition         *message);
/* CMsgSetItemPositions methods */
void   cmsg_set_item_positions__init
                     (CMsgSetItemPositions         *message);
size_t cmsg_set_item_positions__get_packed_size
                     (const CMsgSetItemPositions   *message);
size_t cmsg_set_item_positions__pack
                     (const CMsgSetItemPositions   *message,
                      uint8_t             *out);
size_t cmsg_set_item_positions__pack_to_buffer
                     (const CMsgSetItemPositions   *message,
                      ProtobufCBuffer     *buffer);
CMsgSetItemPositions *
       cmsg_set_item_positions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_set_item_positions__free_unpacked
                     (CMsgSetItemPositions *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCNameItemNotification methods */
void   cmsg_gcname_item_notification__init
                     (CMsgGCNameItemNotification         *message);
size_t cmsg_gcname_item_notification__get_packed_size
                     (const CMsgGCNameItemNotification   *message);
size_t cmsg_gcname_item_notification__pack
                     (const CMsgGCNameItemNotification   *message,
                      uint8_t             *out);
size_t cmsg_gcname_item_notification__pack_to_buffer
                     (const CMsgGCNameItemNotification   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCNameItemNotification *
       cmsg_gcname_item_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcname_item_notification__free_unpacked
                     (CMsgGCNameItemNotification *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientDisplayNotification methods */
void   cmsg_gcclient_display_notification__init
                     (CMsgGCClientDisplayNotification         *message);
size_t cmsg_gcclient_display_notification__get_packed_size
                     (const CMsgGCClientDisplayNotification   *message);
size_t cmsg_gcclient_display_notification__pack
                     (const CMsgGCClientDisplayNotification   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_display_notification__pack_to_buffer
                     (const CMsgGCClientDisplayNotification   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientDisplayNotification *
       cmsg_gcclient_display_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_display_notification__free_unpacked
                     (CMsgGCClientDisplayNotification *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCShowItemsPickedUp methods */
void   cmsg_gcshow_items_picked_up__init
                     (CMsgGCShowItemsPickedUp         *message);
size_t cmsg_gcshow_items_picked_up__get_packed_size
                     (const CMsgGCShowItemsPickedUp   *message);
size_t cmsg_gcshow_items_picked_up__pack
                     (const CMsgGCShowItemsPickedUp   *message,
                      uint8_t             *out);
size_t cmsg_gcshow_items_picked_up__pack_to_buffer
                     (const CMsgGCShowItemsPickedUp   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCShowItemsPickedUp *
       cmsg_gcshow_items_picked_up__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcshow_items_picked_up__free_unpacked
                     (CMsgGCShowItemsPickedUp *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCIncrementKillCountResponse methods */
void   cmsg_gcincrement_kill_count_response__init
                     (CMsgGCIncrementKillCountResponse         *message);
size_t cmsg_gcincrement_kill_count_response__get_packed_size
                     (const CMsgGCIncrementKillCountResponse   *message);
size_t cmsg_gcincrement_kill_count_response__pack
                     (const CMsgGCIncrementKillCountResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcincrement_kill_count_response__pack_to_buffer
                     (const CMsgGCIncrementKillCountResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCIncrementKillCountResponse *
       cmsg_gcincrement_kill_count_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcincrement_kill_count_response__free_unpacked
                     (CMsgGCIncrementKillCountResponse *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemDropRateBonus methods */
void   csoecon_item_drop_rate_bonus__init
                     (CSOEconItemDropRateBonus         *message);
size_t csoecon_item_drop_rate_bonus__get_packed_size
                     (const CSOEconItemDropRateBonus   *message);
size_t csoecon_item_drop_rate_bonus__pack
                     (const CSOEconItemDropRateBonus   *message,
                      uint8_t             *out);
size_t csoecon_item_drop_rate_bonus__pack_to_buffer
                     (const CSOEconItemDropRateBonus   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemDropRateBonus *
       csoecon_item_drop_rate_bonus__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_drop_rate_bonus__free_unpacked
                     (CSOEconItemDropRateBonus *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemLeagueViewPass methods */
void   csoecon_item_league_view_pass__init
                     (CSOEconItemLeagueViewPass         *message);
size_t csoecon_item_league_view_pass__get_packed_size
                     (const CSOEconItemLeagueViewPass   *message);
size_t csoecon_item_league_view_pass__pack
                     (const CSOEconItemLeagueViewPass   *message,
                      uint8_t             *out);
size_t csoecon_item_league_view_pass__pack_to_buffer
                     (const CSOEconItemLeagueViewPass   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemLeagueViewPass *
       csoecon_item_league_view_pass__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_league_view_pass__free_unpacked
                     (CSOEconItemLeagueViewPass *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemEventTicket methods */
void   csoecon_item_event_ticket__init
                     (CSOEconItemEventTicket         *message);
size_t csoecon_item_event_ticket__get_packed_size
                     (const CSOEconItemEventTicket   *message);
size_t csoecon_item_event_ticket__pack
                     (const CSOEconItemEventTicket   *message,
                      uint8_t             *out);
size_t csoecon_item_event_ticket__pack_to_buffer
                     (const CSOEconItemEventTicket   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemEventTicket *
       csoecon_item_event_ticket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_event_ticket__free_unpacked
                     (CSOEconItemEventTicket *message,
                      ProtobufCAllocator *allocator);
/* CSOEconItemTournamentPassport methods */
void   csoecon_item_tournament_passport__init
                     (CSOEconItemTournamentPassport         *message);
size_t csoecon_item_tournament_passport__get_packed_size
                     (const CSOEconItemTournamentPassport   *message);
size_t csoecon_item_tournament_passport__pack
                     (const CSOEconItemTournamentPassport   *message,
                      uint8_t             *out);
size_t csoecon_item_tournament_passport__pack_to_buffer
                     (const CSOEconItemTournamentPassport   *message,
                      ProtobufCBuffer     *buffer);
CSOEconItemTournamentPassport *
       csoecon_item_tournament_passport__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csoecon_item_tournament_passport__free_unpacked
                     (CSOEconItemTournamentPassport *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemPreviewItemBoughtNotification methods */
void   cmsg_gcitem_preview_item_bought_notification__init
                     (CMsgGCItemPreviewItemBoughtNotification         *message);
size_t cmsg_gcitem_preview_item_bought_notification__get_packed_size
                     (const CMsgGCItemPreviewItemBoughtNotification   *message);
size_t cmsg_gcitem_preview_item_bought_notification__pack
                     (const CMsgGCItemPreviewItemBoughtNotification   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_preview_item_bought_notification__pack_to_buffer
                     (const CMsgGCItemPreviewItemBoughtNotification   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemPreviewItemBoughtNotification *
       cmsg_gcitem_preview_item_bought_notification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_preview_item_bought_notification__free_unpacked
                     (CMsgGCItemPreviewItemBoughtNotification *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseCancel methods */
void   cmsg_gcstore_purchase_cancel__init
                     (CMsgGCStorePurchaseCancel         *message);
size_t cmsg_gcstore_purchase_cancel__get_packed_size
                     (const CMsgGCStorePurchaseCancel   *message);
size_t cmsg_gcstore_purchase_cancel__pack
                     (const CMsgGCStorePurchaseCancel   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_cancel__pack_to_buffer
                     (const CMsgGCStorePurchaseCancel   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseCancel *
       cmsg_gcstore_purchase_cancel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_cancel__free_unpacked
                     (CMsgGCStorePurchaseCancel *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseCancelResponse methods */
void   cmsg_gcstore_purchase_cancel_response__init
                     (CMsgGCStorePurchaseCancelResponse         *message);
size_t cmsg_gcstore_purchase_cancel_response__get_packed_size
                     (const CMsgGCStorePurchaseCancelResponse   *message);
size_t cmsg_gcstore_purchase_cancel_response__pack
                     (const CMsgGCStorePurchaseCancelResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_cancel_response__pack_to_buffer
                     (const CMsgGCStorePurchaseCancelResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseCancelResponse *
       cmsg_gcstore_purchase_cancel_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_cancel_response__free_unpacked
                     (CMsgGCStorePurchaseCancelResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseFinalize methods */
void   cmsg_gcstore_purchase_finalize__init
                     (CMsgGCStorePurchaseFinalize         *message);
size_t cmsg_gcstore_purchase_finalize__get_packed_size
                     (const CMsgGCStorePurchaseFinalize   *message);
size_t cmsg_gcstore_purchase_finalize__pack
                     (const CMsgGCStorePurchaseFinalize   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_finalize__pack_to_buffer
                     (const CMsgGCStorePurchaseFinalize   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseFinalize *
       cmsg_gcstore_purchase_finalize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_finalize__free_unpacked
                     (CMsgGCStorePurchaseFinalize *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCStorePurchaseFinalizeResponse methods */
void   cmsg_gcstore_purchase_finalize_response__init
                     (CMsgGCStorePurchaseFinalizeResponse         *message);
size_t cmsg_gcstore_purchase_finalize_response__get_packed_size
                     (const CMsgGCStorePurchaseFinalizeResponse   *message);
size_t cmsg_gcstore_purchase_finalize_response__pack
                     (const CMsgGCStorePurchaseFinalizeResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcstore_purchase_finalize_response__pack_to_buffer
                     (const CMsgGCStorePurchaseFinalizeResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCStorePurchaseFinalizeResponse *
       cmsg_gcstore_purchase_finalize_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcstore_purchase_finalize_response__free_unpacked
                     (CMsgGCStorePurchaseFinalizeResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCBannedWordListRequest methods */
void   cmsg_gcbanned_word_list_request__init
                     (CMsgGCBannedWordListRequest         *message);
size_t cmsg_gcbanned_word_list_request__get_packed_size
                     (const CMsgGCBannedWordListRequest   *message);
size_t cmsg_gcbanned_word_list_request__pack
                     (const CMsgGCBannedWordListRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcbanned_word_list_request__pack_to_buffer
                     (const CMsgGCBannedWordListRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCBannedWordListRequest *
       cmsg_gcbanned_word_list_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcbanned_word_list_request__free_unpacked
                     (CMsgGCBannedWordListRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCBannedWord methods */
void   cmsg_gcbanned_word__init
                     (CMsgGCBannedWord         *message);
size_t cmsg_gcbanned_word__get_packed_size
                     (const CMsgGCBannedWord   *message);
size_t cmsg_gcbanned_word__pack
                     (const CMsgGCBannedWord   *message,
                      uint8_t             *out);
size_t cmsg_gcbanned_word__pack_to_buffer
                     (const CMsgGCBannedWord   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCBannedWord *
       cmsg_gcbanned_word__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcbanned_word__free_unpacked
                     (CMsgGCBannedWord *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCBannedWordListResponse methods */
void   cmsg_gcbanned_word_list_response__init
                     (CMsgGCBannedWordListResponse         *message);
size_t cmsg_gcbanned_word_list_response__get_packed_size
                     (const CMsgGCBannedWordListResponse   *message);
size_t cmsg_gcbanned_word_list_response__pack
                     (const CMsgGCBannedWordListResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcbanned_word_list_response__pack_to_buffer
                     (const CMsgGCBannedWordListResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCBannedWordListResponse *
       cmsg_gcbanned_word_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcbanned_word_list_response__free_unpacked
                     (CMsgGCBannedWordListResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCBannedWordListBroadcast methods */
void   cmsg_gcto_gcbanned_word_list_broadcast__init
                     (CMsgGCToGCBannedWordListBroadcast         *message);
size_t cmsg_gcto_gcbanned_word_list_broadcast__get_packed_size
                     (const CMsgGCToGCBannedWordListBroadcast   *message);
size_t cmsg_gcto_gcbanned_word_list_broadcast__pack
                     (const CMsgGCToGCBannedWordListBroadcast   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcbanned_word_list_broadcast__pack_to_buffer
                     (const CMsgGCToGCBannedWordListBroadcast   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCBannedWordListBroadcast *
       cmsg_gcto_gcbanned_word_list_broadcast__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcbanned_word_list_broadcast__free_unpacked
                     (CMsgGCToGCBannedWordListBroadcast *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCBannedWordListUpdated methods */
void   cmsg_gcto_gcbanned_word_list_updated__init
                     (CMsgGCToGCBannedWordListUpdated         *message);
size_t cmsg_gcto_gcbanned_word_list_updated__get_packed_size
                     (const CMsgGCToGCBannedWordListUpdated   *message);
size_t cmsg_gcto_gcbanned_word_list_updated__pack
                     (const CMsgGCToGCBannedWordListUpdated   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcbanned_word_list_updated__pack_to_buffer
                     (const CMsgGCToGCBannedWordListUpdated   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCBannedWordListUpdated *
       cmsg_gcto_gcbanned_word_list_updated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcbanned_word_list_updated__free_unpacked
                     (CMsgGCToGCBannedWordListUpdated *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCDirtySDOCache methods */
void   cmsg_gcto_gcdirty_sdocache__init
                     (CMsgGCToGCDirtySDOCache         *message);
size_t cmsg_gcto_gcdirty_sdocache__get_packed_size
                     (const CMsgGCToGCDirtySDOCache   *message);
size_t cmsg_gcto_gcdirty_sdocache__pack
                     (const CMsgGCToGCDirtySDOCache   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcdirty_sdocache__pack_to_buffer
                     (const CMsgGCToGCDirtySDOCache   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCDirtySDOCache *
       cmsg_gcto_gcdirty_sdocache__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcdirty_sdocache__free_unpacked
                     (CMsgGCToGCDirtySDOCache *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCDirtyMultipleSDOCache methods */
void   cmsg_gcto_gcdirty_multiple_sdocache__init
                     (CMsgGCToGCDirtyMultipleSDOCache         *message);
size_t cmsg_gcto_gcdirty_multiple_sdocache__get_packed_size
                     (const CMsgGCToGCDirtyMultipleSDOCache   *message);
size_t cmsg_gcto_gcdirty_multiple_sdocache__pack
                     (const CMsgGCToGCDirtyMultipleSDOCache   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcdirty_multiple_sdocache__pack_to_buffer
                     (const CMsgGCToGCDirtyMultipleSDOCache   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCDirtyMultipleSDOCache *
       cmsg_gcto_gcdirty_multiple_sdocache__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcdirty_multiple_sdocache__free_unpacked
                     (CMsgGCToGCDirtyMultipleSDOCache *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCApplyLocalizationDiff methods */
void   cmsg_gcto_gcapply_localization_diff__init
                     (CMsgGCToGCApplyLocalizationDiff         *message);
size_t cmsg_gcto_gcapply_localization_diff__get_packed_size
                     (const CMsgGCToGCApplyLocalizationDiff   *message);
size_t cmsg_gcto_gcapply_localization_diff__pack
                     (const CMsgGCToGCApplyLocalizationDiff   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcapply_localization_diff__pack_to_buffer
                     (const CMsgGCToGCApplyLocalizationDiff   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCApplyLocalizationDiff *
       cmsg_gcto_gcapply_localization_diff__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcapply_localization_diff__free_unpacked
                     (CMsgGCToGCApplyLocalizationDiff *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCApplyLocalizationDiffResponse methods */
void   cmsg_gcto_gcapply_localization_diff_response__init
                     (CMsgGCToGCApplyLocalizationDiffResponse         *message);
size_t cmsg_gcto_gcapply_localization_diff_response__get_packed_size
                     (const CMsgGCToGCApplyLocalizationDiffResponse   *message);
size_t cmsg_gcto_gcapply_localization_diff_response__pack
                     (const CMsgGCToGCApplyLocalizationDiffResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcapply_localization_diff_response__pack_to_buffer
                     (const CMsgGCToGCApplyLocalizationDiffResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCApplyLocalizationDiffResponse *
       cmsg_gcto_gcapply_localization_diff_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcapply_localization_diff_response__free_unpacked
                     (CMsgGCToGCApplyLocalizationDiffResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCCollectItem methods */
void   cmsg_gccollect_item__init
                     (CMsgGCCollectItem         *message);
size_t cmsg_gccollect_item__get_packed_size
                     (const CMsgGCCollectItem   *message);
size_t cmsg_gccollect_item__pack
                     (const CMsgGCCollectItem   *message,
                      uint8_t             *out);
size_t cmsg_gccollect_item__pack_to_buffer
                     (const CMsgGCCollectItem   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCCollectItem *
       cmsg_gccollect_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gccollect_item__free_unpacked
                     (CMsgGCCollectItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgSDONoMemcached methods */
void   cmsg_sdono_memcached__init
                     (CMsgSDONoMemcached         *message);
size_t cmsg_sdono_memcached__get_packed_size
                     (const CMsgSDONoMemcached   *message);
size_t cmsg_sdono_memcached__pack
                     (const CMsgSDONoMemcached   *message,
                      uint8_t             *out);
size_t cmsg_sdono_memcached__pack_to_buffer
                     (const CMsgSDONoMemcached   *message,
                      ProtobufCBuffer     *buffer);
CMsgSDONoMemcached *
       cmsg_sdono_memcached__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sdono_memcached__free_unpacked
                     (CMsgSDONoMemcached *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCUpdateSQLKeyValue methods */
void   cmsg_gcto_gcupdate_sqlkey_value__init
                     (CMsgGCToGCUpdateSQLKeyValue         *message);
size_t cmsg_gcto_gcupdate_sqlkey_value__get_packed_size
                     (const CMsgGCToGCUpdateSQLKeyValue   *message);
size_t cmsg_gcto_gcupdate_sqlkey_value__pack
                     (const CMsgGCToGCUpdateSQLKeyValue   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcupdate_sqlkey_value__pack_to_buffer
                     (const CMsgGCToGCUpdateSQLKeyValue   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCUpdateSQLKeyValue *
       cmsg_gcto_gcupdate_sqlkey_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcupdate_sqlkey_value__free_unpacked
                     (CMsgGCToGCUpdateSQLKeyValue *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCServerVersionUpdated methods */
void   cmsg_gcserver_version_updated__init
                     (CMsgGCServerVersionUpdated         *message);
size_t cmsg_gcserver_version_updated__get_packed_size
                     (const CMsgGCServerVersionUpdated   *message);
size_t cmsg_gcserver_version_updated__pack
                     (const CMsgGCServerVersionUpdated   *message,
                      uint8_t             *out);
size_t cmsg_gcserver_version_updated__pack_to_buffer
                     (const CMsgGCServerVersionUpdated   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCServerVersionUpdated *
       cmsg_gcserver_version_updated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcserver_version_updated__free_unpacked
                     (CMsgGCServerVersionUpdated *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientVersionUpdated methods */
void   cmsg_gcclient_version_updated__init
                     (CMsgGCClientVersionUpdated         *message);
size_t cmsg_gcclient_version_updated__get_packed_size
                     (const CMsgGCClientVersionUpdated   *message);
size_t cmsg_gcclient_version_updated__pack
                     (const CMsgGCClientVersionUpdated   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_version_updated__pack_to_buffer
                     (const CMsgGCClientVersionUpdated   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientVersionUpdated *
       cmsg_gcclient_version_updated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_version_updated__free_unpacked
                     (CMsgGCClientVersionUpdated *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCWebAPIAccountChanged methods */
void   cmsg_gcto_gcweb_apiaccount_changed__init
                     (CMsgGCToGCWebAPIAccountChanged         *message);
size_t cmsg_gcto_gcweb_apiaccount_changed__get_packed_size
                     (const CMsgGCToGCWebAPIAccountChanged   *message);
size_t cmsg_gcto_gcweb_apiaccount_changed__pack
                     (const CMsgGCToGCWebAPIAccountChanged   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcweb_apiaccount_changed__pack_to_buffer
                     (const CMsgGCToGCWebAPIAccountChanged   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCWebAPIAccountChanged *
       cmsg_gcto_gcweb_apiaccount_changed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcweb_apiaccount_changed__free_unpacked
                     (CMsgGCToGCWebAPIAccountChanged *message,
                      ProtobufCAllocator *allocator);
/* CMsgRecipeComponent methods */
void   cmsg_recipe_component__init
                     (CMsgRecipeComponent         *message);
size_t cmsg_recipe_component__get_packed_size
                     (const CMsgRecipeComponent   *message);
size_t cmsg_recipe_component__pack
                     (const CMsgRecipeComponent   *message,
                      uint8_t             *out);
size_t cmsg_recipe_component__pack_to_buffer
                     (const CMsgRecipeComponent   *message,
                      ProtobufCBuffer     *buffer);
CMsgRecipeComponent *
       cmsg_recipe_component__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_recipe_component__free_unpacked
                     (CMsgRecipeComponent *message,
                      ProtobufCAllocator *allocator);
/* CMsgFulfillDynamicRecipeComponent methods */
void   cmsg_fulfill_dynamic_recipe_component__init
                     (CMsgFulfillDynamicRecipeComponent         *message);
size_t cmsg_fulfill_dynamic_recipe_component__get_packed_size
                     (const CMsgFulfillDynamicRecipeComponent   *message);
size_t cmsg_fulfill_dynamic_recipe_component__pack
                     (const CMsgFulfillDynamicRecipeComponent   *message,
                      uint8_t             *out);
size_t cmsg_fulfill_dynamic_recipe_component__pack_to_buffer
                     (const CMsgFulfillDynamicRecipeComponent   *message,
                      ProtobufCBuffer     *buffer);
CMsgFulfillDynamicRecipeComponent *
       cmsg_fulfill_dynamic_recipe_component__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_fulfill_dynamic_recipe_component__free_unpacked
                     (CMsgFulfillDynamicRecipeComponent *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientMarketDataRequest methods */
void   cmsg_gcclient_market_data_request__init
                     (CMsgGCClientMarketDataRequest         *message);
size_t cmsg_gcclient_market_data_request__get_packed_size
                     (const CMsgGCClientMarketDataRequest   *message);
size_t cmsg_gcclient_market_data_request__pack
                     (const CMsgGCClientMarketDataRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_market_data_request__pack_to_buffer
                     (const CMsgGCClientMarketDataRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientMarketDataRequest *
       cmsg_gcclient_market_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_market_data_request__free_unpacked
                     (CMsgGCClientMarketDataRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientMarketDataEntry methods */
void   cmsg_gcclient_market_data_entry__init
                     (CMsgGCClientMarketDataEntry         *message);
size_t cmsg_gcclient_market_data_entry__get_packed_size
                     (const CMsgGCClientMarketDataEntry   *message);
size_t cmsg_gcclient_market_data_entry__pack
                     (const CMsgGCClientMarketDataEntry   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_market_data_entry__pack_to_buffer
                     (const CMsgGCClientMarketDataEntry   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientMarketDataEntry *
       cmsg_gcclient_market_data_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_market_data_entry__free_unpacked
                     (CMsgGCClientMarketDataEntry *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCClientMarketData methods */
void   cmsg_gcclient_market_data__init
                     (CMsgGCClientMarketData         *message);
size_t cmsg_gcclient_market_data__get_packed_size
                     (const CMsgGCClientMarketData   *message);
size_t cmsg_gcclient_market_data__pack
                     (const CMsgGCClientMarketData   *message,
                      uint8_t             *out);
size_t cmsg_gcclient_market_data__pack_to_buffer
                     (const CMsgGCClientMarketData   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCClientMarketData *
       cmsg_gcclient_market_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcclient_market_data__free_unpacked
                     (CMsgGCClientMarketData *message,
                      ProtobufCAllocator *allocator);
/* CMsgExtractGems methods */
void   cmsg_extract_gems__init
                     (CMsgExtractGems         *message);
size_t cmsg_extract_gems__get_packed_size
                     (const CMsgExtractGems   *message);
size_t cmsg_extract_gems__pack
                     (const CMsgExtractGems   *message,
                      uint8_t             *out);
size_t cmsg_extract_gems__pack_to_buffer
                     (const CMsgExtractGems   *message,
                      ProtobufCBuffer     *buffer);
CMsgExtractGems *
       cmsg_extract_gems__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_extract_gems__free_unpacked
                     (CMsgExtractGems *message,
                      ProtobufCAllocator *allocator);
/* CMsgExtractGemsResponse methods */
void   cmsg_extract_gems_response__init
                     (CMsgExtractGemsResponse         *message);
size_t cmsg_extract_gems_response__get_packed_size
                     (const CMsgExtractGemsResponse   *message);
size_t cmsg_extract_gems_response__pack
                     (const CMsgExtractGemsResponse   *message,
                      uint8_t             *out);
size_t cmsg_extract_gems_response__pack_to_buffer
                     (const CMsgExtractGemsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgExtractGemsResponse *
       cmsg_extract_gems_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_extract_gems_response__free_unpacked
                     (CMsgExtractGemsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgAddSocket methods */
void   cmsg_add_socket__init
                     (CMsgAddSocket         *message);
size_t cmsg_add_socket__get_packed_size
                     (const CMsgAddSocket   *message);
size_t cmsg_add_socket__pack
                     (const CMsgAddSocket   *message,
                      uint8_t             *out);
size_t cmsg_add_socket__pack_to_buffer
                     (const CMsgAddSocket   *message,
                      ProtobufCBuffer     *buffer);
CMsgAddSocket *
       cmsg_add_socket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_add_socket__free_unpacked
                     (CMsgAddSocket *message,
                      ProtobufCAllocator *allocator);
/* CMsgAddSocketResponse methods */
void   cmsg_add_socket_response__init
                     (CMsgAddSocketResponse         *message);
size_t cmsg_add_socket_response__get_packed_size
                     (const CMsgAddSocketResponse   *message);
size_t cmsg_add_socket_response__pack
                     (const CMsgAddSocketResponse   *message,
                      uint8_t             *out);
size_t cmsg_add_socket_response__pack_to_buffer
                     (const CMsgAddSocketResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgAddSocketResponse *
       cmsg_add_socket_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_add_socket_response__free_unpacked
                     (CMsgAddSocketResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgAddItemToSocketData methods */
void   cmsg_add_item_to_socket_data__init
                     (CMsgAddItemToSocketData         *message);
size_t cmsg_add_item_to_socket_data__get_packed_size
                     (const CMsgAddItemToSocketData   *message);
size_t cmsg_add_item_to_socket_data__pack
                     (const CMsgAddItemToSocketData   *message,
                      uint8_t             *out);
size_t cmsg_add_item_to_socket_data__pack_to_buffer
                     (const CMsgAddItemToSocketData   *message,
                      ProtobufCBuffer     *buffer);
CMsgAddItemToSocketData *
       cmsg_add_item_to_socket_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_add_item_to_socket_data__free_unpacked
                     (CMsgAddItemToSocketData *message,
                      ProtobufCAllocator *allocator);
/* CMsgAddItemToSocket methods */
void   cmsg_add_item_to_socket__init
                     (CMsgAddItemToSocket         *message);
size_t cmsg_add_item_to_socket__get_packed_size
                     (const CMsgAddItemToSocket   *message);
size_t cmsg_add_item_to_socket__pack
                     (const CMsgAddItemToSocket   *message,
                      uint8_t             *out);
size_t cmsg_add_item_to_socket__pack_to_buffer
                     (const CMsgAddItemToSocket   *message,
                      ProtobufCBuffer     *buffer);
CMsgAddItemToSocket *
       cmsg_add_item_to_socket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_add_item_to_socket__free_unpacked
                     (CMsgAddItemToSocket *message,
                      ProtobufCAllocator *allocator);
/* CMsgAddItemToSocketResponse methods */
void   cmsg_add_item_to_socket_response__init
                     (CMsgAddItemToSocketResponse         *message);
size_t cmsg_add_item_to_socket_response__get_packed_size
                     (const CMsgAddItemToSocketResponse   *message);
size_t cmsg_add_item_to_socket_response__pack
                     (const CMsgAddItemToSocketResponse   *message,
                      uint8_t             *out);
size_t cmsg_add_item_to_socket_response__pack_to_buffer
                     (const CMsgAddItemToSocketResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgAddItemToSocketResponse *
       cmsg_add_item_to_socket_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_add_item_to_socket_response__free_unpacked
                     (CMsgAddItemToSocketResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgResetStrangeGemCount methods */
void   cmsg_reset_strange_gem_count__init
                     (CMsgResetStrangeGemCount         *message);
size_t cmsg_reset_strange_gem_count__get_packed_size
                     (const CMsgResetStrangeGemCount   *message);
size_t cmsg_reset_strange_gem_count__pack
                     (const CMsgResetStrangeGemCount   *message,
                      uint8_t             *out);
size_t cmsg_reset_strange_gem_count__pack_to_buffer
                     (const CMsgResetStrangeGemCount   *message,
                      ProtobufCBuffer     *buffer);
CMsgResetStrangeGemCount *
       cmsg_reset_strange_gem_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_reset_strange_gem_count__free_unpacked
                     (CMsgResetStrangeGemCount *message,
                      ProtobufCAllocator *allocator);
/* CMsgResetStrangeGemCountResponse methods */
void   cmsg_reset_strange_gem_count_response__init
                     (CMsgResetStrangeGemCountResponse         *message);
size_t cmsg_reset_strange_gem_count_response__get_packed_size
                     (const CMsgResetStrangeGemCountResponse   *message);
size_t cmsg_reset_strange_gem_count_response__pack
                     (const CMsgResetStrangeGemCountResponse   *message,
                      uint8_t             *out);
size_t cmsg_reset_strange_gem_count_response__pack_to_buffer
                     (const CMsgResetStrangeGemCountResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgResetStrangeGemCountResponse *
       cmsg_reset_strange_gem_count_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_reset_strange_gem_count_response__free_unpacked
                     (CMsgResetStrangeGemCountResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CGCStorePurchaseInitLineItem_Closure)
                 (const CGCStorePurchaseInitLineItem *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseInit_Closure)
                 (const CMsgGCStorePurchaseInit *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseInitResponse_Closure)
                 (const CMsgGCStorePurchaseInitResponse *message,
                  void *closure_data);
typedef void (*CMsgSystemBroadcast_Closure)
                 (const CMsgSystemBroadcast *message,
                  void *closure_data);
typedef void (*CMsgClientPingData_Closure)
                 (const CMsgClientPingData *message,
                  void *closure_data);
typedef void (*CMsgInviteToParty_Closure)
                 (const CMsgInviteToParty *message,
                  void *closure_data);
typedef void (*CMsgInviteToLobby_Closure)
                 (const CMsgInviteToLobby *message,
                  void *closure_data);
typedef void (*CMsgInvitationCreated_Closure)
                 (const CMsgInvitationCreated *message,
                  void *closure_data);
typedef void (*CMsgPartyInviteResponse_Closure)
                 (const CMsgPartyInviteResponse *message,
                  void *closure_data);
typedef void (*CMsgLobbyInviteResponse_Closure)
                 (const CMsgLobbyInviteResponse *message,
                  void *closure_data);
typedef void (*CMsgKickFromParty_Closure)
                 (const CMsgKickFromParty *message,
                  void *closure_data);
typedef void (*CMsgLeaveParty_Closure)
                 (const CMsgLeaveParty *message,
                  void *closure_data);
typedef void (*CMsgCustomGameInstallStatus_Closure)
                 (const CMsgCustomGameInstallStatus *message,
                  void *closure_data);
typedef void (*CMsgServerAvailable_Closure)
                 (const CMsgServerAvailable *message,
                  void *closure_data);
typedef void (*CMsgLANServerAvailable_Closure)
                 (const CMsgLANServerAvailable *message,
                  void *closure_data);
typedef void (*CSOEconGameAccountClient_Closure)
                 (const CSOEconGameAccountClient *message,
                  void *closure_data);
typedef void (*CSOItemCriteriaCondition_Closure)
                 (const CSOItemCriteriaCondition *message,
                  void *closure_data);
typedef void (*CSOItemCriteria_Closure)
                 (const CSOItemCriteria *message,
                  void *closure_data);
typedef void (*CSOItemRecipe_Closure)
                 (const CSOItemRecipe *message,
                  void *closure_data);
typedef void (*CMsgApplyStrangePart_Closure)
                 (const CMsgApplyStrangePart *message,
                  void *closure_data);
typedef void (*CMsgApplyPennantUpgrade_Closure)
                 (const CMsgApplyPennantUpgrade *message,
                  void *closure_data);
typedef void (*CMsgApplyEggEssence_Closure)
                 (const CMsgApplyEggEssence *message,
                  void *closure_data);
typedef void (*CSOEconItemAttribute_Closure)
                 (const CSOEconItemAttribute *message,
                  void *closure_data);
typedef void (*CSOEconItemEquipped_Closure)
                 (const CSOEconItemEquipped *message,
                  void *closure_data);
typedef void (*CSOEconItem_Closure)
                 (const CSOEconItem *message,
                  void *closure_data);
typedef void (*CMsgSortItems_Closure)
                 (const CMsgSortItems *message,
                  void *closure_data);
typedef void (*CSOEconClaimCode_Closure)
                 (const CSOEconClaimCode *message,
                  void *closure_data);
typedef void (*CMsgStoreGetUserData_Closure)
                 (const CMsgStoreGetUserData *message,
                  void *closure_data);
typedef void (*CMsgStoreGetUserDataResponse_Closure)
                 (const CMsgStoreGetUserDataResponse *message,
                  void *closure_data);
typedef void (*CMsgUpdateItemSchema_Closure)
                 (const CMsgUpdateItemSchema *message,
                  void *closure_data);
typedef void (*CMsgGCError_Closure)
                 (const CMsgGCError *message,
                  void *closure_data);
typedef void (*CMsgRequestInventoryRefresh_Closure)
                 (const CMsgRequestInventoryRefresh *message,
                  void *closure_data);
typedef void (*CMsgConVarValue_Closure)
                 (const CMsgConVarValue *message,
                  void *closure_data);
typedef void (*CMsgReplicateConVars_Closure)
                 (const CMsgReplicateConVars *message,
                  void *closure_data);
typedef void (*CMsgReplayUploadedToYouTube_Closure)
                 (const CMsgReplayUploadedToYouTube *message,
                  void *closure_data);
typedef void (*CMsgConsumableExhausted_Closure)
                 (const CMsgConsumableExhausted *message,
                  void *closure_data);
typedef void (*CMsgItemAcknowledged_Closure)
                 (const CMsgItemAcknowledged *message,
                  void *closure_data);
typedef void (*CMsgSetItemPositions__ItemPosition_Closure)
                 (const CMsgSetItemPositions__ItemPosition *message,
                  void *closure_data);
typedef void (*CMsgSetItemPositions_Closure)
                 (const CMsgSetItemPositions *message,
                  void *closure_data);
typedef void (*CMsgGCNameItemNotification_Closure)
                 (const CMsgGCNameItemNotification *message,
                  void *closure_data);
typedef void (*CMsgGCClientDisplayNotification_Closure)
                 (const CMsgGCClientDisplayNotification *message,
                  void *closure_data);
typedef void (*CMsgGCShowItemsPickedUp_Closure)
                 (const CMsgGCShowItemsPickedUp *message,
                  void *closure_data);
typedef void (*CMsgGCIncrementKillCountResponse_Closure)
                 (const CMsgGCIncrementKillCountResponse *message,
                  void *closure_data);
typedef void (*CSOEconItemDropRateBonus_Closure)
                 (const CSOEconItemDropRateBonus *message,
                  void *closure_data);
typedef void (*CSOEconItemLeagueViewPass_Closure)
                 (const CSOEconItemLeagueViewPass *message,
                  void *closure_data);
typedef void (*CSOEconItemEventTicket_Closure)
                 (const CSOEconItemEventTicket *message,
                  void *closure_data);
typedef void (*CSOEconItemTournamentPassport_Closure)
                 (const CSOEconItemTournamentPassport *message,
                  void *closure_data);
typedef void (*CMsgGCItemPreviewItemBoughtNotification_Closure)
                 (const CMsgGCItemPreviewItemBoughtNotification *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseCancel_Closure)
                 (const CMsgGCStorePurchaseCancel *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseCancelResponse_Closure)
                 (const CMsgGCStorePurchaseCancelResponse *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseFinalize_Closure)
                 (const CMsgGCStorePurchaseFinalize *message,
                  void *closure_data);
typedef void (*CMsgGCStorePurchaseFinalizeResponse_Closure)
                 (const CMsgGCStorePurchaseFinalizeResponse *message,
                  void *closure_data);
typedef void (*CMsgGCBannedWordListRequest_Closure)
                 (const CMsgGCBannedWordListRequest *message,
                  void *closure_data);
typedef void (*CMsgGCBannedWord_Closure)
                 (const CMsgGCBannedWord *message,
                  void *closure_data);
typedef void (*CMsgGCBannedWordListResponse_Closure)
                 (const CMsgGCBannedWordListResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToGCBannedWordListBroadcast_Closure)
                 (const CMsgGCToGCBannedWordListBroadcast *message,
                  void *closure_data);
typedef void (*CMsgGCToGCBannedWordListUpdated_Closure)
                 (const CMsgGCToGCBannedWordListUpdated *message,
                  void *closure_data);
typedef void (*CMsgGCToGCDirtySDOCache_Closure)
                 (const CMsgGCToGCDirtySDOCache *message,
                  void *closure_data);
typedef void (*CMsgGCToGCDirtyMultipleSDOCache_Closure)
                 (const CMsgGCToGCDirtyMultipleSDOCache *message,
                  void *closure_data);
typedef void (*CMsgGCToGCApplyLocalizationDiff_Closure)
                 (const CMsgGCToGCApplyLocalizationDiff *message,
                  void *closure_data);
typedef void (*CMsgGCToGCApplyLocalizationDiffResponse_Closure)
                 (const CMsgGCToGCApplyLocalizationDiffResponse *message,
                  void *closure_data);
typedef void (*CMsgGCCollectItem_Closure)
                 (const CMsgGCCollectItem *message,
                  void *closure_data);
typedef void (*CMsgSDONoMemcached_Closure)
                 (const CMsgSDONoMemcached *message,
                  void *closure_data);
typedef void (*CMsgGCToGCUpdateSQLKeyValue_Closure)
                 (const CMsgGCToGCUpdateSQLKeyValue *message,
                  void *closure_data);
typedef void (*CMsgGCServerVersionUpdated_Closure)
                 (const CMsgGCServerVersionUpdated *message,
                  void *closure_data);
typedef void (*CMsgGCClientVersionUpdated_Closure)
                 (const CMsgGCClientVersionUpdated *message,
                  void *closure_data);
typedef void (*CMsgGCToGCWebAPIAccountChanged_Closure)
                 (const CMsgGCToGCWebAPIAccountChanged *message,
                  void *closure_data);
typedef void (*CMsgRecipeComponent_Closure)
                 (const CMsgRecipeComponent *message,
                  void *closure_data);
typedef void (*CMsgFulfillDynamicRecipeComponent_Closure)
                 (const CMsgFulfillDynamicRecipeComponent *message,
                  void *closure_data);
typedef void (*CMsgGCClientMarketDataRequest_Closure)
                 (const CMsgGCClientMarketDataRequest *message,
                  void *closure_data);
typedef void (*CMsgGCClientMarketDataEntry_Closure)
                 (const CMsgGCClientMarketDataEntry *message,
                  void *closure_data);
typedef void (*CMsgGCClientMarketData_Closure)
                 (const CMsgGCClientMarketData *message,
                  void *closure_data);
typedef void (*CMsgExtractGems_Closure)
                 (const CMsgExtractGems *message,
                  void *closure_data);
typedef void (*CMsgExtractGemsResponse_Closure)
                 (const CMsgExtractGemsResponse *message,
                  void *closure_data);
typedef void (*CMsgAddSocket_Closure)
                 (const CMsgAddSocket *message,
                  void *closure_data);
typedef void (*CMsgAddSocketResponse_Closure)
                 (const CMsgAddSocketResponse *message,
                  void *closure_data);
typedef void (*CMsgAddItemToSocketData_Closure)
                 (const CMsgAddItemToSocketData *message,
                  void *closure_data);
typedef void (*CMsgAddItemToSocket_Closure)
                 (const CMsgAddItemToSocket *message,
                  void *closure_data);
typedef void (*CMsgAddItemToSocketResponse_Closure)
                 (const CMsgAddItemToSocketResponse *message,
                  void *closure_data);
typedef void (*CMsgResetStrangeGemCount_Closure)
                 (const CMsgResetStrangeGemCount *message,
                  void *closure_data);
typedef void (*CMsgResetStrangeGemCountResponse_Closure)
                 (const CMsgResetStrangeGemCountResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    egcbase_msg__descriptor;
extern const ProtobufCEnumDescriptor    egcbase_proto_object_types__descriptor;
extern const ProtobufCEnumDescriptor    ecustom_game_install_status__descriptor;
extern const ProtobufCEnumDescriptor    gc__banned_word_type__descriptor;
extern const ProtobufCMessageDescriptor cgcstore_purchase_init__line_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_init__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_init_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_system_broadcast__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_ping_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_invite_to_party__descriptor;
extern const ProtobufCMessageDescriptor cmsg_invite_to_lobby__descriptor;
extern const ProtobufCMessageDescriptor cmsg_invitation_created__descriptor;
extern const ProtobufCMessageDescriptor cmsg_party_invite_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_lobby_invite_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_kick_from_party__descriptor;
extern const ProtobufCMessageDescriptor cmsg_leave_party__descriptor;
extern const ProtobufCMessageDescriptor cmsg_custom_game_install_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_available__descriptor;
extern const ProtobufCMessageDescriptor cmsg_lanserver_available__descriptor;
extern const ProtobufCMessageDescriptor csoecon_game_account_client__descriptor;
extern const ProtobufCMessageDescriptor csoitem_criteria_condition__descriptor;
extern const ProtobufCMessageDescriptor csoitem_criteria__descriptor;
extern const ProtobufCMessageDescriptor csoitem_recipe__descriptor;
extern const ProtobufCMessageDescriptor cmsg_apply_strange_part__descriptor;
extern const ProtobufCMessageDescriptor cmsg_apply_pennant_upgrade__descriptor;
extern const ProtobufCMessageDescriptor cmsg_apply_egg_essence__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_attribute__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_equipped__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sort_items__descriptor;
extern const ProtobufCMessageDescriptor csoecon_claim_code__descriptor;
extern const ProtobufCMessageDescriptor cmsg_store_get_user_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_store_get_user_data_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_update_item_schema__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcerror__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_inventory_refresh__descriptor;
extern const ProtobufCMessageDescriptor cmsg_con_var_value__descriptor;
extern const ProtobufCMessageDescriptor cmsg_replicate_con_vars__descriptor;
extern const ProtobufCMessageDescriptor cmsg_replay_uploaded_to_you_tube__descriptor;
extern const ProtobufCMessageDescriptor cmsg_consumable_exhausted__descriptor;
extern const ProtobufCMessageDescriptor cmsg_item_acknowledged__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_item_positions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_item_positions__item_position__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcname_item_notification__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_display_notification__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcshow_items_picked_up__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcincrement_kill_count_response__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_drop_rate_bonus__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_league_view_pass__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_event_ticket__descriptor;
extern const ProtobufCMessageDescriptor csoecon_item_tournament_passport__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_preview_item_bought_notification__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_cancel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_cancel_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_finalize__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcstore_purchase_finalize_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcbanned_word_list_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcbanned_word__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcbanned_word_list_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcbanned_word_list_broadcast__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcbanned_word_list_updated__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcdirty_sdocache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcdirty_multiple_sdocache__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcapply_localization_diff__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcapply_localization_diff_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gccollect_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sdono_memcached__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcupdate_sqlkey_value__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcserver_version_updated__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_version_updated__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcweb_apiaccount_changed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_recipe_component__descriptor;
extern const ProtobufCMessageDescriptor cmsg_fulfill_dynamic_recipe_component__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_market_data_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_market_data_entry__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcclient_market_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_extract_gems__descriptor;
extern const ProtobufCMessageDescriptor cmsg_extract_gems_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_extract_gems_response__eextract_gems__descriptor;
extern const ProtobufCMessageDescriptor cmsg_add_socket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_add_socket_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_add_socket_response__eadd_socket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_add_item_to_socket_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_add_item_to_socket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_add_item_to_socket_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_add_item_to_socket_response__eadd_gem__descriptor;
extern const ProtobufCMessageDescriptor cmsg_reset_strange_gem_count__descriptor;
extern const ProtobufCMessageDescriptor cmsg_reset_strange_gem_count_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_reset_strange_gem_count_response__ereset_gem__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_base_5fgcmessages_2eproto__INCLUDED */
