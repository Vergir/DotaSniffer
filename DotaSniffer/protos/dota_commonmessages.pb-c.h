/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_commonmessages.proto */

#ifndef PROTOBUF_C_dota_5fcommonmessages_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fcommonmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "networkbasetypes.pb-c.h"

typedef struct _CDOTAMsgLocationPing CDOTAMsgLocationPing;
typedef struct _CDOTAMsgItemAlert CDOTAMsgItemAlert;
typedef struct _CDOTAMsgMapLine CDOTAMsgMapLine;
typedef struct _CDOTAMsgWorldLine CDOTAMsgWorldLine;
typedef struct _CDOTAMsgSendStatPopup CDOTAMsgSendStatPopup;
typedef struct _CDOTAMsgCoachHUDPing CDOTAMsgCoachHUDPing;
typedef struct _CDOTAMsgUnitOrder CDOTAMsgUnitOrder;


/* --- enums --- */

typedef enum _EDOTAChatWheelMessage {
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ok = 0,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Care = 1,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_GetBack = 2,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_NeedWards = 3,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Stun = 4,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Help = 5,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Push = 6,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_GoodJob = 7,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Missing = 8,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Missing_Top = 9,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Missing_Mid = 10,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Missing_Bottom = 11,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Go = 12,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Initiate = 13,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Follow = 14,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Group_Up = 15,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Spread_Out = 16,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Split_Farm = 17,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Attack = 18,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_BRB = 19,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Dive = 20,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_OMW = 21,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Get_Ready = 22,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Bait = 23,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Heal = 24,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Mana = 25,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_OOM = 26,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Skill_Cooldown = 27,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ulti_Ready = 28,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Enemy_Returned = 29,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_All_Missing = 30,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Enemy_Incoming = 31,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Invis_Enemy = 32,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Enemy_Had_Rune = 33,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Split_Push = 34,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Coming_To_Gank = 35,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Request_Gank = 36,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Fight_Under_Tower = 37,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Deny_Tower = 38,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Buy_Courier = 39,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Upgrade_Courier = 40,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Need_Detection = 41,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_They_Have_Detection = 42,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Buy_TP = 43,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Reuse_Courier = 44,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Deward = 45,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Building_Mek = 46,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Building_Pipe = 47,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Stack_And_Pull = 48,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Pull = 49,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Pulling = 50,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Stack = 51,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Jungling = 52,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Roshan = 53,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Affirmative = 54,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Wait = 55,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Pause = 56,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Current_Time = 57,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Check_Runes = 58,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Smoke_Gank = 59,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_GLHF = 60,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Nice = 61,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Thanks = 62,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Sorry = 63,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_No_Give_Up = 64,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Just_Happened = 65,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Game_Is_Hard = 66,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_New_Meta = 67,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_My_Bad = 68,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Regret = 69,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Relax = 70,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_MissingHero = 71,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_ReturnedHero = 72,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_GG = 73,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_GGWP = 74,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_All_GG = 75,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_All_GGWP = 76,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_What_To_Buy = 77,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Im_Retreating = 78,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Space_Created = 79,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Whoops = 80,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Tower_then_Back = 81,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Barracks_then_Back = 82,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ward_Bottom_Rune = 83,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ward_Top_Rune = 84,
  EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Zeus_Ult = 85
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTACHAT_WHEEL_MESSAGE)
} EDOTAChatWheelMessage;
typedef enum _EDOTAStatPopupTypes {
  EDOTASTAT_POPUP_TYPES__k_EDOTA_SPT_Textline = 0,
  EDOTASTAT_POPUP_TYPES__k_EDOTA_SPT_Basic = 1,
  EDOTASTAT_POPUP_TYPES__k_EDOTA_SPT_Poll = 2,
  EDOTASTAT_POPUP_TYPES__k_EDOTA_SPT_Grid = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTASTAT_POPUP_TYPES)
} EDOTAStatPopupTypes;
typedef enum _DotaunitorderT {
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_NONE = 0,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_MOVE_TO_POSITION = 1,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_MOVE_TO_TARGET = 2,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_ATTACK_MOVE = 3,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_ATTACK_TARGET = 4,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_POSITION = 5,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_TARGET = 6,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_TARGET_TREE = 7,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_NO_TARGET = 8,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_TOGGLE = 9,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_HOLD_POSITION = 10,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_TRAIN_ABILITY = 11,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_DROP_ITEM = 12,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_GIVE_ITEM = 13,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_PICKUP_ITEM = 14,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_PICKUP_RUNE = 15,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_PURCHASE_ITEM = 16,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_SELL_ITEM = 17,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_DISASSEMBLE_ITEM = 18,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_MOVE_ITEM = 19,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO = 20,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_STOP = 21,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_TAUNT = 22,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_BUYBACK = 23,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_GLYPH = 24,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH = 25,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CAST_RUNE = 26,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_PING_ABILITY = 27,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_MOVE_TO_DIRECTION = 28,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_PATROL = 29,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION = 30,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_RADAR = 31,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK = 32,
  DOTAUNITORDER_T__DOTA_UNIT_ORDER_CONTINUE = 33
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTAUNITORDER_T)
} DotaunitorderT;

/* --- messages --- */

struct  _CDOTAMsgLocationPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  int32_t x;
  protobuf_c_boolean has_y;
  int32_t y;
  protobuf_c_boolean has_target;
  int32_t target;
  protobuf_c_boolean has_direct_ping;
  protobuf_c_boolean direct_ping;
  protobuf_c_boolean has_type;
  int32_t type;
};
#define CDOTAMSG__LOCATION_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__location_ping__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAMsgItemAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  int32_t x;
  protobuf_c_boolean has_y;
  int32_t y;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
};
#define CDOTAMSG__ITEM_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__item_alert__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAMsgMapLine
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  int32_t x;
  protobuf_c_boolean has_y;
  int32_t y;
  protobuf_c_boolean has_initial;
  protobuf_c_boolean initial;
};
#define CDOTAMSG__MAP_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__map_line__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAMsgWorldLine
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  int32_t x;
  protobuf_c_boolean has_y;
  int32_t y;
  protobuf_c_boolean has_z;
  int32_t z;
  protobuf_c_boolean has_initial;
  protobuf_c_boolean initial;
  protobuf_c_boolean has_end;
  protobuf_c_boolean end;
};
#define CDOTAMSG__WORLD_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__world_line__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAMsgSendStatPopup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_style;
  EDOTAStatPopupTypes style;
  size_t n_stat_strings;
  char **stat_strings;
  size_t n_stat_images;
  int32_t *stat_images;
};
#define CDOTAMSG__SEND_STAT_POPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__send_stat_popup__descriptor) \
    , 0,EDOTASTAT_POPUP_TYPES__k_EDOTA_SPT_Textline, 0,NULL, 0,NULL }


struct  _CDOTAMsgCoachHUDPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_x;
  uint32_t x;
  protobuf_c_boolean has_y;
  uint32_t y;
  char *tgtpath;
};
#define CDOTAMSG__COACH_HUDPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__coach_hudping__descriptor) \
    , 0,0, 0,0, NULL }


struct  _CDOTAMsgUnitOrder
{
  ProtobufCMessage base;
  protobuf_c_boolean has_issuer;
  int32_t issuer;
  protobuf_c_boolean has_order_type;
  DotaunitorderT order_type;
  size_t n_units;
  int32_t *units;
  protobuf_c_boolean has_target_index;
  int32_t target_index;
  protobuf_c_boolean has_ability_index;
  int32_t ability_index;
  CMsgVector *position;
  protobuf_c_boolean has_queue;
  protobuf_c_boolean queue;
  protobuf_c_boolean has_sequence_number;
  int32_t sequence_number;
};
#define CDOTAMSG__UNIT_ORDER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotamsg__unit_order__descriptor) \
    , 0,-1, 0,DOTAUNITORDER_T__DOTA_UNIT_ORDER_NONE, 0,NULL, 0,0, 0,0, NULL, 0,0, 0,0 }


/* CDOTAMsgLocationPing methods */
void   cdotamsg__location_ping__init
                     (CDOTAMsgLocationPing         *message);
size_t cdotamsg__location_ping__get_packed_size
                     (const CDOTAMsgLocationPing   *message);
size_t cdotamsg__location_ping__pack
                     (const CDOTAMsgLocationPing   *message,
                      uint8_t             *out);
size_t cdotamsg__location_ping__pack_to_buffer
                     (const CDOTAMsgLocationPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgLocationPing *
       cdotamsg__location_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__location_ping__free_unpacked
                     (CDOTAMsgLocationPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgItemAlert methods */
void   cdotamsg__item_alert__init
                     (CDOTAMsgItemAlert         *message);
size_t cdotamsg__item_alert__get_packed_size
                     (const CDOTAMsgItemAlert   *message);
size_t cdotamsg__item_alert__pack
                     (const CDOTAMsgItemAlert   *message,
                      uint8_t             *out);
size_t cdotamsg__item_alert__pack_to_buffer
                     (const CDOTAMsgItemAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgItemAlert *
       cdotamsg__item_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__item_alert__free_unpacked
                     (CDOTAMsgItemAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgMapLine methods */
void   cdotamsg__map_line__init
                     (CDOTAMsgMapLine         *message);
size_t cdotamsg__map_line__get_packed_size
                     (const CDOTAMsgMapLine   *message);
size_t cdotamsg__map_line__pack
                     (const CDOTAMsgMapLine   *message,
                      uint8_t             *out);
size_t cdotamsg__map_line__pack_to_buffer
                     (const CDOTAMsgMapLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgMapLine *
       cdotamsg__map_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__map_line__free_unpacked
                     (CDOTAMsgMapLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgWorldLine methods */
void   cdotamsg__world_line__init
                     (CDOTAMsgWorldLine         *message);
size_t cdotamsg__world_line__get_packed_size
                     (const CDOTAMsgWorldLine   *message);
size_t cdotamsg__world_line__pack
                     (const CDOTAMsgWorldLine   *message,
                      uint8_t             *out);
size_t cdotamsg__world_line__pack_to_buffer
                     (const CDOTAMsgWorldLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgWorldLine *
       cdotamsg__world_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__world_line__free_unpacked
                     (CDOTAMsgWorldLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgSendStatPopup methods */
void   cdotamsg__send_stat_popup__init
                     (CDOTAMsgSendStatPopup         *message);
size_t cdotamsg__send_stat_popup__get_packed_size
                     (const CDOTAMsgSendStatPopup   *message);
size_t cdotamsg__send_stat_popup__pack
                     (const CDOTAMsgSendStatPopup   *message,
                      uint8_t             *out);
size_t cdotamsg__send_stat_popup__pack_to_buffer
                     (const CDOTAMsgSendStatPopup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgSendStatPopup *
       cdotamsg__send_stat_popup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__send_stat_popup__free_unpacked
                     (CDOTAMsgSendStatPopup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgCoachHUDPing methods */
void   cdotamsg__coach_hudping__init
                     (CDOTAMsgCoachHUDPing         *message);
size_t cdotamsg__coach_hudping__get_packed_size
                     (const CDOTAMsgCoachHUDPing   *message);
size_t cdotamsg__coach_hudping__pack
                     (const CDOTAMsgCoachHUDPing   *message,
                      uint8_t             *out);
size_t cdotamsg__coach_hudping__pack_to_buffer
                     (const CDOTAMsgCoachHUDPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgCoachHUDPing *
       cdotamsg__coach_hudping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__coach_hudping__free_unpacked
                     (CDOTAMsgCoachHUDPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAMsgUnitOrder methods */
void   cdotamsg__unit_order__init
                     (CDOTAMsgUnitOrder         *message);
size_t cdotamsg__unit_order__get_packed_size
                     (const CDOTAMsgUnitOrder   *message);
size_t cdotamsg__unit_order__pack
                     (const CDOTAMsgUnitOrder   *message,
                      uint8_t             *out);
size_t cdotamsg__unit_order__pack_to_buffer
                     (const CDOTAMsgUnitOrder   *message,
                      ProtobufCBuffer     *buffer);
CDOTAMsgUnitOrder *
       cdotamsg__unit_order__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotamsg__unit_order__free_unpacked
                     (CDOTAMsgUnitOrder *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDOTAMsgLocationPing_Closure)
                 (const CDOTAMsgLocationPing *message,
                  void *closure_data);
typedef void (*CDOTAMsgItemAlert_Closure)
                 (const CDOTAMsgItemAlert *message,
                  void *closure_data);
typedef void (*CDOTAMsgMapLine_Closure)
                 (const CDOTAMsgMapLine *message,
                  void *closure_data);
typedef void (*CDOTAMsgWorldLine_Closure)
                 (const CDOTAMsgWorldLine *message,
                  void *closure_data);
typedef void (*CDOTAMsgSendStatPopup_Closure)
                 (const CDOTAMsgSendStatPopup *message,
                  void *closure_data);
typedef void (*CDOTAMsgCoachHUDPing_Closure)
                 (const CDOTAMsgCoachHUDPing *message,
                  void *closure_data);
typedef void (*CDOTAMsgUnitOrder_Closure)
                 (const CDOTAMsgUnitOrder *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    edotachat_wheel_message__descriptor;
extern const ProtobufCEnumDescriptor    edotastat_popup_types__descriptor;
extern const ProtobufCEnumDescriptor    dotaunitorder_t__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__location_ping__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__item_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__map_line__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__world_line__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__send_stat_popup__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__coach_hudping__descriptor;
extern const ProtobufCMessageDescriptor cdotamsg__unit_order__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fcommonmessages_2eproto__INCLUDED */
