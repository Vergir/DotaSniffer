/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_gcmessages_common_match_management.proto */

#ifndef PROTOBUF_C_dota_5fgcmessages_5fcommon_5fmatch_5fmanagement_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fgcmessages_5fcommon_5fmatch_5fmanagement_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages.pb-c.h"
#include "gcsdk_gcmessages.pb-c.h"
#include "dota_shared_enums.pb-c.h"

typedef struct _CSODOTAPartyMember CSODOTAPartyMember;
typedef struct _CSODOTAParty CSODOTAParty;
typedef struct _CSODOTAPartyInvite CSODOTAPartyInvite;
typedef struct _CSODOTAPartyInvite__PartyMember CSODOTAPartyInvite__PartyMember;
typedef struct _CSODOTALobbyInvite CSODOTALobbyInvite;
typedef struct _CSODOTALobbyInvite__LobbyMember CSODOTALobbyInvite__LobbyMember;
typedef struct _CMsgLeaverState CMsgLeaverState;
typedef struct _CDOTALobbyMember CDOTALobbyMember;
typedef struct _CDOTALobbyMember__CDOTALobbyMemberXPBonus CDOTALobbyMember__CDOTALobbyMemberXPBonus;
typedef struct _CLobbyTeamDetails CLobbyTeamDetails;
typedef struct _CLobbyTimedRewardDetails CLobbyTimedRewardDetails;
typedef struct _CLobbyBroadcastChannelInfo CLobbyBroadcastChannelInfo;
typedef struct _CSODOTALobby CSODOTALobby;
typedef struct _CSODOTALobby__CExtraMsg CSODOTALobby__CExtraMsg;


/* --- enums --- */

typedef enum _CSODOTAParty__State {
  CSODOTAPARTY__STATE__UI = 0,
  CSODOTAPARTY__STATE__FINDING_MATCH = 1,
  CSODOTAPARTY__STATE__IN_MATCH = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CSODOTAPARTY__STATE)
} CSODOTAParty__State;
typedef enum _CSODOTALobby__State {
  CSODOTALOBBY__STATE__UI = 0,
  CSODOTALOBBY__STATE__READYUP = 4,
  CSODOTALOBBY__STATE__SERVERSETUP = 1,
  CSODOTALOBBY__STATE__RUN = 2,
  CSODOTALOBBY__STATE__POSTGAME = 3,
  CSODOTALOBBY__STATE__NOTREADY = 5,
  CSODOTALOBBY__STATE__SERVERASSIGN = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CSODOTALOBBY__STATE)
} CSODOTALobby__State;
typedef enum _CSODOTALobby__LobbyType {
  CSODOTALOBBY__LOBBY_TYPE__INVALID = -1,
  CSODOTALOBBY__LOBBY_TYPE__CASUAL_MATCH = 0,
  CSODOTALOBBY__LOBBY_TYPE__PRACTICE = 1,
  CSODOTALOBBY__LOBBY_TYPE__TOURNAMENT = 2,
  CSODOTALOBBY__LOBBY_TYPE__COOP_BOT_MATCH = 4,
  CSODOTALOBBY__LOBBY_TYPE__LEGACY_TEAM_MATCH = 5,
  CSODOTALOBBY__LOBBY_TYPE__LEGACY_SOLO_QUEUE_MATCH = 6,
  CSODOTALOBBY__LOBBY_TYPE__COMPETITIVE_MATCH = 7,
  CSODOTALOBBY__LOBBY_TYPE__CASUAL_1V1_MATCH = 8,
  CSODOTALOBBY__LOBBY_TYPE__WEEKEND_TOURNEY = 9,
  CSODOTALOBBY__LOBBY_TYPE__LOCAL_BOT_MATCH = 10,
  CSODOTALOBBY__LOBBY_TYPE__SPECTATOR = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CSODOTALOBBY__LOBBY_TYPE)
} CSODOTALobby__LobbyType;
typedef enum _LobbyDotaTVDelay {
  LOBBY_DOTA_TVDELAY__LobbyDotaTV_10 = 0,
  LOBBY_DOTA_TVDELAY__LobbyDotaTV_120 = 1,
  LOBBY_DOTA_TVDELAY__LobbyDotaTV_300 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LOBBY_DOTA_TVDELAY)
} LobbyDotaTVDelay;
typedef enum _LobbyDotaPauseSetting {
  LOBBY_DOTA_PAUSE_SETTING__LobbyDotaPauseSetting_Unlimited = 0,
  LOBBY_DOTA_PAUSE_SETTING__LobbyDotaPauseSetting_Limited = 1,
  LOBBY_DOTA_PAUSE_SETTING__LobbyDotaPauseSetting_Disabled = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LOBBY_DOTA_PAUSE_SETTING)
} LobbyDotaPauseSetting;

/* --- messages --- */

struct  _CSODOTAPartyMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_partner_type;
  PartnerAccountType partner_type;
  protobuf_c_boolean has_is_coach;
  protobuf_c_boolean is_coach;
  size_t n_region_ping_codes;
  uint32_t *region_ping_codes;
  size_t n_region_ping_times;
  uint32_t *region_ping_times;
  protobuf_c_boolean has_region_ping_failed_bitmask;
  uint32_t region_ping_failed_bitmask;
  protobuf_c_boolean has_tourney_skill_level;
  uint32_t tourney_skill_level;
  protobuf_c_boolean has_tourney_buyin;
  uint32_t tourney_buyin;
};
#define CSODOTAPARTY_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotaparty_member__descriptor) \
    , 0,PARTNER_ACCOUNT_TYPE__PARTNER_NONE, 0,0, 0,NULL, 0,NULL, 0,0, 0,0, 0,0 }


struct  _CSODOTAParty
{
  ProtobufCMessage base;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_leader_id;
  uint64_t leader_id;
  size_t n_member_ids;
  uint64_t *member_ids;
  protobuf_c_boolean has_game_modes;
  uint32_t game_modes;
  protobuf_c_boolean has_state;
  CSODOTAParty__State state;
  protobuf_c_boolean has_effective_started_matchmaking_time;
  uint32_t effective_started_matchmaking_time;
  protobuf_c_boolean has_raw_started_matchmaking_time;
  uint32_t raw_started_matchmaking_time;
  protobuf_c_boolean has_attempt_start_time;
  uint32_t attempt_start_time;
  protobuf_c_boolean has_attempt_num;
  uint32_t attempt_num;
  protobuf_c_boolean has_matchgroups;
  uint32_t matchgroups;
  protobuf_c_boolean has_low_priority_account_id;
  uint32_t low_priority_account_id;
  protobuf_c_boolean has_match_type;
  MatchType match_type;
  protobuf_c_boolean has_bot_difficulty;
  DOTABotDifficulty bot_difficulty;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *team_name;
  protobuf_c_boolean has_team_ui_logo;
  uint64_t team_ui_logo;
  protobuf_c_boolean has_team_base_logo;
  uint64_t team_base_logo;
  protobuf_c_boolean has_match_disabled_until_date;
  uint32_t match_disabled_until_date;
  protobuf_c_boolean has_match_disabled_account_id;
  uint32_t match_disabled_account_id;
  protobuf_c_boolean has_matchmaking_max_range_minutes;
  uint32_t matchmaking_max_range_minutes;
  protobuf_c_boolean has_matchlanguages;
  uint32_t matchlanguages;
  protobuf_c_boolean has_map_preference;
  uint32_t map_preference;
  size_t n_members;
  CSODOTAPartyMember **members;
  protobuf_c_boolean has_open_guild_id;
  uint32_t open_guild_id;
  size_t n_common_guilds;
  uint32_t *common_guilds;
  protobuf_c_boolean has_low_priority_games_remaining;
  uint32_t low_priority_games_remaining;
  size_t n_active_ingame_events;
  EEvent *active_ingame_events;
  protobuf_c_boolean has_open_for_join_requests;
  protobuf_c_boolean open_for_join_requests;
  size_t n_sent_invites;
  CSODOTAPartyInvite **sent_invites;
  size_t n_recv_invites;
  CSODOTAPartyInvite **recv_invites;
  protobuf_c_boolean has_account_flags;
  uint32_t account_flags;
  protobuf_c_boolean has_region_select_flags;
  uint32_t region_select_flags;
  protobuf_c_boolean has_exclusive_tournament_id;
  uint32_t exclusive_tournament_id;
  protobuf_c_boolean has_tourney_division_id;
  uint32_t tourney_division_id;
  protobuf_c_boolean has_tourney_schedule_time;
  uint32_t tourney_schedule_time;
  protobuf_c_boolean has_tourney_skill_level;
  uint32_t tourney_skill_level;
  protobuf_c_boolean has_tourney_bracket_round;
  uint32_t tourney_bracket_round;
  protobuf_c_boolean has_tourney_queue_deadline_time;
  uint32_t tourney_queue_deadline_time;
  protobuf_c_boolean has_tourney_queue_deadline_state;
  ETourneyQueueDeadlineState tourney_queue_deadline_state;
};
#define CSODOTAPARTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotaparty__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,0, 0,CSODOTAPARTY__STATE__UI, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,MATCH_TYPE__MATCH_TYPE_CASUAL, 0,DOTABOT_DIFFICULTY__BOT_DIFFICULTY_PASSIVE, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL, 0,0, 0,NULL, 0,0, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,ETOURNEY_QUEUE_DEADLINE_STATE__k_ETourneyQueueDeadlineState_Normal }


struct  _CSODOTAPartyInvite__PartyMember
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_is_coach;
  protobuf_c_boolean is_coach;
};
#define CSODOTAPARTY_INVITE__PARTY_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotaparty_invite__party_member__descriptor) \
    , NULL, 0,0, 0,0 }


struct  _CSODOTAPartyInvite
{
  ProtobufCMessage base;
  protobuf_c_boolean has_group_id;
  uint64_t group_id;
  protobuf_c_boolean has_sender_id;
  uint64_t sender_id;
  char *sender_name;
  size_t n_members;
  CSODOTAPartyInvite__PartyMember **members;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_low_priority_status;
  protobuf_c_boolean low_priority_status;
  protobuf_c_boolean has_as_coach;
  protobuf_c_boolean as_coach;
  protobuf_c_boolean has_invite_gid;
  uint64_t invite_gid;
};
#define CSODOTAPARTY_INVITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotaparty_invite__descriptor) \
    , 0,0, 0,0, NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CSODOTALobbyInvite__LobbyMember
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
};
#define CSODOTALOBBY_INVITE__LOBBY_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotalobby_invite__lobby_member__descriptor) \
    , NULL, 0,0 }


struct  _CSODOTALobbyInvite
{
  ProtobufCMessage base;
  protobuf_c_boolean has_group_id;
  uint64_t group_id;
  protobuf_c_boolean has_sender_id;
  uint64_t sender_id;
  char *sender_name;
  size_t n_members;
  CSODOTALobbyInvite__LobbyMember **members;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  protobuf_c_boolean has_invite_gid;
  uint64_t invite_gid;
  protobuf_c_boolean has_custom_game_crc;
  uint64_t custom_game_crc;
  protobuf_c_boolean has_custom_game_timestamp;
  uint32_t custom_game_timestamp;
};
#define CSODOTALOBBY_INVITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotalobby_invite__descriptor) \
    , 0,0, 0,0, NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgLeaverState
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_state;
  uint32_t lobby_state;
  protobuf_c_boolean has_game_state;
  DOTAGameState game_state;
  protobuf_c_boolean has_leaver_detected;
  protobuf_c_boolean leaver_detected;
  protobuf_c_boolean has_first_blood_happened;
  protobuf_c_boolean first_blood_happened;
  protobuf_c_boolean has_discard_match_results;
  protobuf_c_boolean discard_match_results;
  protobuf_c_boolean has_mass_disconnect;
  protobuf_c_boolean mass_disconnect;
};
#define CMSG_LEAVER_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_leaver_state__descriptor) \
    , 0,0, 0,DOTA__GAME_STATE__DOTA_GAMERULES_STATE_INIT, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTALobbyMember__CDOTALobbyMemberXPBonus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_xp_bonus;
  float xp_bonus;
  protobuf_c_boolean has_source_key;
  uint64_t source_key;
};
#define CDOTALOBBY_MEMBER__CDOTALOBBY_MEMBER_XPBONUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotalobby_member__cdotalobby_member_xpbonus__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTALobbyMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint64_t id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_team;
  DOTAGCTEAM team;
  char *name;
  protobuf_c_boolean has_slot;
  uint32_t slot;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_meta_level;
  uint32_t meta_level;
  protobuf_c_boolean has_meta_xp;
  uint32_t meta_xp;
  protobuf_c_boolean has_meta_xp_awarded;
  uint32_t meta_xp_awarded;
  protobuf_c_boolean has_leaver_status;
  DOTALeaverStatusT leaver_status;
  protobuf_c_boolean has_leaver_actions;
  uint32_t leaver_actions;
  protobuf_c_boolean has_channel;
  uint32_t channel;
  protobuf_c_boolean has_prize_def_index;
  uint32_t prize_def_index;
  size_t n_disabled_hero_id;
  uint32_t *disabled_hero_id;
  protobuf_c_boolean has_partner_account_type;
  PartnerAccountType partner_account_type;
  size_t n_enabled_hero_id;
  uint32_t *enabled_hero_id;
  protobuf_c_boolean has_coach_team;
  DOTAGCTEAM coach_team;
  protobuf_c_boolean has_nexon_pc_bang_no;
  uint32_t nexon_pc_bang_no;
  char *nexon_pc_bang_name;
  size_t n_xp_bonuses;
  CDOTALobbyMember__CDOTALobbyMemberXPBonus **xp_bonuses;
  protobuf_c_boolean has_rank_change;
  int32_t rank_change;
  protobuf_c_boolean has_cameraman;
  protobuf_c_boolean cameraman;
  size_t n_custom_game_product_ids;
  uint32_t *custom_game_product_ids;
  protobuf_c_boolean has_lobby_mvp_vote_account_id;
  uint32_t lobby_mvp_vote_account_id;
  protobuf_c_boolean has_search_match_type;
  MatchType search_match_type;
};
#define CDOTALOBBY_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotalobby_member__descriptor) \
    , 0,0, 0,0, 0,DOTA__GC__TEAM__DOTA_GC_TEAM_GOOD_GUYS, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,DOTALEAVER_STATUS_T__DOTA_LEAVER_NONE, 0,0, 0,0, 0,0, 0,NULL, 0,PARTNER_ACCOUNT_TYPE__PARTNER_NONE, 0,NULL, 0,DOTA__GC__TEAM__DOTA_GC_TEAM_GOOD_GUYS, 0,0, NULL, 0,NULL, 0,0, 0,0, 0,NULL, 0,0, 0,MATCH_TYPE__MATCH_TYPE_CASUAL }


struct  _CLobbyTeamDetails
{
  ProtobufCMessage base;
  char *team_name;
  char *team_tag;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_team_logo;
  uint64_t team_logo;
  protobuf_c_boolean has_team_base_logo;
  uint64_t team_base_logo;
  protobuf_c_boolean has_team_banner_logo;
  uint64_t team_banner_logo;
  protobuf_c_boolean has_team_complete;
  protobuf_c_boolean team_complete;
  char *guild_name;
  char *guild_tag;
  protobuf_c_boolean has_guild_id;
  uint32_t guild_id;
  protobuf_c_boolean has_guild_logo;
  uint64_t guild_logo;
  protobuf_c_boolean has_guild_base_logo;
  uint64_t guild_base_logo;
  protobuf_c_boolean has_guild_banner_logo;
  uint64_t guild_banner_logo;
  protobuf_c_boolean has_rank;
  uint32_t rank;
  protobuf_c_boolean has_rank_change;
  int32_t rank_change;
  protobuf_c_boolean has_is_home_team;
  protobuf_c_boolean is_home_team;
};
#define CLOBBY_TEAM_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&clobby_team_details__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CLobbyTimedRewardDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def_index;
  uint32_t item_def_index;
  protobuf_c_boolean has_is_supply_crate;
  protobuf_c_boolean is_supply_crate;
  protobuf_c_boolean has_is_timed_drop;
  protobuf_c_boolean is_timed_drop;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_origin;
  uint32_t origin;
};
#define CLOBBY_TIMED_REWARD_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&clobby_timed_reward_details__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CLobbyBroadcastChannelInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint32_t channel_id;
  char *country_code;
  char *description;
  char *language_code;
};
#define CLOBBY_BROADCAST_CHANNEL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&clobby_broadcast_channel_info__descriptor) \
    , 0,0, NULL, NULL, NULL }


struct  _CSODOTALobby__CExtraMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint32_t id;
  protobuf_c_boolean has_contents;
  ProtobufCBinaryData contents;
};
#define CSODOTALOBBY__CEXTRA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotalobby__cextra_msg__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CSODOTALobby
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  size_t n_members;
  CDOTALobbyMember **members;
  size_t n_left_members;
  CDOTALobbyMember **left_members;
  protobuf_c_boolean has_leader_id;
  uint64_t leader_id;
  protobuf_c_boolean has_server_id;
  uint64_t server_id;
  protobuf_c_boolean has_game_mode;
  uint32_t game_mode;
  size_t n_pending_invites;
  uint64_t *pending_invites;
  protobuf_c_boolean has_state;
  CSODOTALobby__State state;
  char *connect;
  protobuf_c_boolean has_lobby_type;
  CSODOTALobby__LobbyType lobby_type;
  protobuf_c_boolean has_allow_cheats;
  protobuf_c_boolean allow_cheats;
  protobuf_c_boolean has_fill_with_bots;
  protobuf_c_boolean fill_with_bots;
  protobuf_c_boolean has_intro_mode;
  protobuf_c_boolean intro_mode;
  char *game_name;
  size_t n_team_details;
  CLobbyTeamDetails **team_details;
  protobuf_c_boolean has_tutorial_lesson;
  uint32_t tutorial_lesson;
  protobuf_c_boolean has_tournament_id;
  uint32_t tournament_id;
  protobuf_c_boolean has_tournament_game_id;
  uint32_t tournament_game_id;
  protobuf_c_boolean has_server_region;
  uint32_t server_region;
  protobuf_c_boolean has_game_state;
  DOTAGameState game_state;
  protobuf_c_boolean has_num_spectators;
  uint32_t num_spectators;
  protobuf_c_boolean has_matchgroup;
  uint32_t matchgroup;
  protobuf_c_boolean has_cm_pick;
  DOTACMPICK cm_pick;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_allow_spectating;
  protobuf_c_boolean allow_spectating;
  protobuf_c_boolean has_bot_difficulty;
  DOTABotDifficulty bot_difficulty;
  protobuf_c_boolean has_game_version;
  DOTAGameVersion game_version;
  size_t n_timed_reward_details;
  CLobbyTimedRewardDetails **timed_reward_details;
  char *pass_key;
  size_t n_bot_slot_difficulty;
  DOTABotDifficulty *bot_slot_difficulty;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  protobuf_c_boolean has_penalty_level_radiant;
  uint32_t penalty_level_radiant;
  protobuf_c_boolean has_penalty_level_dire;
  uint32_t penalty_level_dire;
  protobuf_c_boolean has_load_game_id;
  uint32_t load_game_id;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
  protobuf_c_boolean has_radiant_series_wins;
  uint32_t radiant_series_wins;
  protobuf_c_boolean has_dire_series_wins;
  uint32_t dire_series_wins;
  protobuf_c_boolean has_loot_generated;
  uint32_t loot_generated;
  protobuf_c_boolean has_loot_awarded;
  uint32_t loot_awarded;
  protobuf_c_boolean has_allchat;
  protobuf_c_boolean allchat;
  protobuf_c_boolean has_dota_tv_delay;
  LobbyDotaTVDelay dota_tv_delay;
  char *custom_game_mode;
  char *custom_map_name;
  protobuf_c_boolean has_custom_difficulty;
  uint32_t custom_difficulty;
  protobuf_c_boolean has_lan;
  protobuf_c_boolean lan;
  size_t n_broadcast_channel_info;
  CLobbyBroadcastChannelInfo **broadcast_channel_info;
  protobuf_c_boolean has_first_leaver_accountid;
  uint32_t first_leaver_accountid;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_low_priority;
  protobuf_c_boolean low_priority;
  size_t n_extra_messages;
  CSODOTALobby__CExtraMsg **extra_messages;
  CDOTASaveGame *save_game;
  protobuf_c_boolean has_first_blood_happened;
  protobuf_c_boolean first_blood_happened;
  protobuf_c_boolean has_match_outcome;
  EMatchOutcome match_outcome;
  protobuf_c_boolean has_mass_disconnect;
  protobuf_c_boolean mass_disconnect;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  size_t n_active_ingame_events;
  EEvent *active_ingame_events;
  protobuf_c_boolean has_custom_min_players;
  uint32_t custom_min_players;
  protobuf_c_boolean has_custom_max_players;
  uint32_t custom_max_players;
  protobuf_c_boolean has_partner_type;
  PartnerAccountType partner_type;
  protobuf_c_boolean has_lan_host_ping_to_server_region;
  uint32_t lan_host_ping_to_server_region;
  protobuf_c_boolean has_visibility;
  DOTALobbyVisibility visibility;
  protobuf_c_boolean has_custom_game_crc;
  uint64_t custom_game_crc;
  protobuf_c_boolean has_custom_game_auto_created_lobby;
  protobuf_c_boolean custom_game_auto_created_lobby;
  protobuf_c_boolean has_league_series_id;
  uint32_t league_series_id;
  protobuf_c_boolean has_league_game_id;
  uint32_t league_game_id;
  protobuf_c_boolean has_custom_game_timestamp;
  uint32_t custom_game_timestamp;
  size_t n_previous_series_matches;
  uint64_t *previous_series_matches;
  protobuf_c_boolean has_previous_match_override;
  uint64_t previous_match_override;
  protobuf_c_boolean has_custom_game_uses_account_records;
  protobuf_c_boolean custom_game_uses_account_records;
  protobuf_c_boolean has_league_selection_priority_team;
  uint32_t league_selection_priority_team;
  protobuf_c_boolean has_league_selection_priority_choice;
  SelectionPriorityType league_selection_priority_choice;
  protobuf_c_boolean has_league_non_selection_priority_choice;
  SelectionPriorityType league_non_selection_priority_choice;
  protobuf_c_boolean has_game_start_time;
  uint32_t game_start_time;
  protobuf_c_boolean has_pause_setting;
  LobbyDotaPauseSetting pause_setting;
  protobuf_c_boolean has_lobby_mvp_account_id;
  uint32_t lobby_mvp_account_id;
};
#define CSODOTALOBBY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotalobby__descriptor) \
    , 0,0, 0,NULL, 0,NULL, 0,0, 0,0ull, 0,0, 0,NULL, 0,CSODOTALOBBY__STATE__UI, NULL, 0,CSODOTALOBBY__LOBBY_TYPE__INVALID, 0,0, 0,0, 0,0, NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0u, 0,DOTA__GAME_STATE__DOTA_GAMERULES_STATE_INIT, 0,0, 0,0, 0,DOTA__CM__PICK__DOTA_CM_RANDOM, 0,0, 0,1, 0,DOTABOT_DIFFICULTY__BOT_DIFFICULTY_HARD, 0,DOTAGAME_VERSION__GAME_VERSION_CURRENT, 0,NULL, NULL, 0,NULL, 0,0, 0,0u, 0,0u, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,LOBBY_DOTA_TVDELAY__LobbyDotaTV_10, NULL, NULL, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,NULL, NULL, 0,0, 0,EMATCH_OUTCOME__k_EMatchOutcome_Unknown, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,PARTNER_ACCOUNT_TYPE__PARTNER_NONE, 0,0, 0,DOTALOBBY_VISIBILITY__DOTALobbyVisibility_Public, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,SELECTION_PRIORITY_TYPE__UNDEFINED, 0,SELECTION_PRIORITY_TYPE__UNDEFINED, 0,0, 0,LOBBY_DOTA_PAUSE_SETTING__LobbyDotaPauseSetting_Unlimited, 0,0 }


/* CSODOTAPartyMember methods */
void   csodotaparty_member__init
                     (CSODOTAPartyMember         *message);
size_t csodotaparty_member__get_packed_size
                     (const CSODOTAPartyMember   *message);
size_t csodotaparty_member__pack
                     (const CSODOTAPartyMember   *message,
                      uint8_t             *out);
size_t csodotaparty_member__pack_to_buffer
                     (const CSODOTAPartyMember   *message,
                      ProtobufCBuffer     *buffer);
CSODOTAPartyMember *
       csodotaparty_member__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotaparty_member__free_unpacked
                     (CSODOTAPartyMember *message,
                      ProtobufCAllocator *allocator);
/* CSODOTAParty methods */
void   csodotaparty__init
                     (CSODOTAParty         *message);
size_t csodotaparty__get_packed_size
                     (const CSODOTAParty   *message);
size_t csodotaparty__pack
                     (const CSODOTAParty   *message,
                      uint8_t             *out);
size_t csodotaparty__pack_to_buffer
                     (const CSODOTAParty   *message,
                      ProtobufCBuffer     *buffer);
CSODOTAParty *
       csodotaparty__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotaparty__free_unpacked
                     (CSODOTAParty *message,
                      ProtobufCAllocator *allocator);
/* CSODOTAPartyInvite__PartyMember methods */
void   csodotaparty_invite__party_member__init
                     (CSODOTAPartyInvite__PartyMember         *message);
/* CSODOTAPartyInvite methods */
void   csodotaparty_invite__init
                     (CSODOTAPartyInvite         *message);
size_t csodotaparty_invite__get_packed_size
                     (const CSODOTAPartyInvite   *message);
size_t csodotaparty_invite__pack
                     (const CSODOTAPartyInvite   *message,
                      uint8_t             *out);
size_t csodotaparty_invite__pack_to_buffer
                     (const CSODOTAPartyInvite   *message,
                      ProtobufCBuffer     *buffer);
CSODOTAPartyInvite *
       csodotaparty_invite__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotaparty_invite__free_unpacked
                     (CSODOTAPartyInvite *message,
                      ProtobufCAllocator *allocator);
/* CSODOTALobbyInvite__LobbyMember methods */
void   csodotalobby_invite__lobby_member__init
                     (CSODOTALobbyInvite__LobbyMember         *message);
/* CSODOTALobbyInvite methods */
void   csodotalobby_invite__init
                     (CSODOTALobbyInvite         *message);
size_t csodotalobby_invite__get_packed_size
                     (const CSODOTALobbyInvite   *message);
size_t csodotalobby_invite__pack
                     (const CSODOTALobbyInvite   *message,
                      uint8_t             *out);
size_t csodotalobby_invite__pack_to_buffer
                     (const CSODOTALobbyInvite   *message,
                      ProtobufCBuffer     *buffer);
CSODOTALobbyInvite *
       csodotalobby_invite__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotalobby_invite__free_unpacked
                     (CSODOTALobbyInvite *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeaverState methods */
void   cmsg_leaver_state__init
                     (CMsgLeaverState         *message);
size_t cmsg_leaver_state__get_packed_size
                     (const CMsgLeaverState   *message);
size_t cmsg_leaver_state__pack
                     (const CMsgLeaverState   *message,
                      uint8_t             *out);
size_t cmsg_leaver_state__pack_to_buffer
                     (const CMsgLeaverState   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeaverState *
       cmsg_leaver_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_leaver_state__free_unpacked
                     (CMsgLeaverState *message,
                      ProtobufCAllocator *allocator);
/* CDOTALobbyMember__CDOTALobbyMemberXPBonus methods */
void   cdotalobby_member__cdotalobby_member_xpbonus__init
                     (CDOTALobbyMember__CDOTALobbyMemberXPBonus         *message);
/* CDOTALobbyMember methods */
void   cdotalobby_member__init
                     (CDOTALobbyMember         *message);
size_t cdotalobby_member__get_packed_size
                     (const CDOTALobbyMember   *message);
size_t cdotalobby_member__pack
                     (const CDOTALobbyMember   *message,
                      uint8_t             *out);
size_t cdotalobby_member__pack_to_buffer
                     (const CDOTALobbyMember   *message,
                      ProtobufCBuffer     *buffer);
CDOTALobbyMember *
       cdotalobby_member__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotalobby_member__free_unpacked
                     (CDOTALobbyMember *message,
                      ProtobufCAllocator *allocator);
/* CLobbyTeamDetails methods */
void   clobby_team_details__init
                     (CLobbyTeamDetails         *message);
size_t clobby_team_details__get_packed_size
                     (const CLobbyTeamDetails   *message);
size_t clobby_team_details__pack
                     (const CLobbyTeamDetails   *message,
                      uint8_t             *out);
size_t clobby_team_details__pack_to_buffer
                     (const CLobbyTeamDetails   *message,
                      ProtobufCBuffer     *buffer);
CLobbyTeamDetails *
       clobby_team_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   clobby_team_details__free_unpacked
                     (CLobbyTeamDetails *message,
                      ProtobufCAllocator *allocator);
/* CLobbyTimedRewardDetails methods */
void   clobby_timed_reward_details__init
                     (CLobbyTimedRewardDetails         *message);
size_t clobby_timed_reward_details__get_packed_size
                     (const CLobbyTimedRewardDetails   *message);
size_t clobby_timed_reward_details__pack
                     (const CLobbyTimedRewardDetails   *message,
                      uint8_t             *out);
size_t clobby_timed_reward_details__pack_to_buffer
                     (const CLobbyTimedRewardDetails   *message,
                      ProtobufCBuffer     *buffer);
CLobbyTimedRewardDetails *
       clobby_timed_reward_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   clobby_timed_reward_details__free_unpacked
                     (CLobbyTimedRewardDetails *message,
                      ProtobufCAllocator *allocator);
/* CLobbyBroadcastChannelInfo methods */
void   clobby_broadcast_channel_info__init
                     (CLobbyBroadcastChannelInfo         *message);
size_t clobby_broadcast_channel_info__get_packed_size
                     (const CLobbyBroadcastChannelInfo   *message);
size_t clobby_broadcast_channel_info__pack
                     (const CLobbyBroadcastChannelInfo   *message,
                      uint8_t             *out);
size_t clobby_broadcast_channel_info__pack_to_buffer
                     (const CLobbyBroadcastChannelInfo   *message,
                      ProtobufCBuffer     *buffer);
CLobbyBroadcastChannelInfo *
       clobby_broadcast_channel_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   clobby_broadcast_channel_info__free_unpacked
                     (CLobbyBroadcastChannelInfo *message,
                      ProtobufCAllocator *allocator);
/* CSODOTALobby__CExtraMsg methods */
void   csodotalobby__cextra_msg__init
                     (CSODOTALobby__CExtraMsg         *message);
/* CSODOTALobby methods */
void   csodotalobby__init
                     (CSODOTALobby         *message);
size_t csodotalobby__get_packed_size
                     (const CSODOTALobby   *message);
size_t csodotalobby__pack
                     (const CSODOTALobby   *message,
                      uint8_t             *out);
size_t csodotalobby__pack_to_buffer
                     (const CSODOTALobby   *message,
                      ProtobufCBuffer     *buffer);
CSODOTALobby *
       csodotalobby__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotalobby__free_unpacked
                     (CSODOTALobby *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CSODOTAPartyMember_Closure)
                 (const CSODOTAPartyMember *message,
                  void *closure_data);
typedef void (*CSODOTAParty_Closure)
                 (const CSODOTAParty *message,
                  void *closure_data);
typedef void (*CSODOTAPartyInvite__PartyMember_Closure)
                 (const CSODOTAPartyInvite__PartyMember *message,
                  void *closure_data);
typedef void (*CSODOTAPartyInvite_Closure)
                 (const CSODOTAPartyInvite *message,
                  void *closure_data);
typedef void (*CSODOTALobbyInvite__LobbyMember_Closure)
                 (const CSODOTALobbyInvite__LobbyMember *message,
                  void *closure_data);
typedef void (*CSODOTALobbyInvite_Closure)
                 (const CSODOTALobbyInvite *message,
                  void *closure_data);
typedef void (*CMsgLeaverState_Closure)
                 (const CMsgLeaverState *message,
                  void *closure_data);
typedef void (*CDOTALobbyMember__CDOTALobbyMemberXPBonus_Closure)
                 (const CDOTALobbyMember__CDOTALobbyMemberXPBonus *message,
                  void *closure_data);
typedef void (*CDOTALobbyMember_Closure)
                 (const CDOTALobbyMember *message,
                  void *closure_data);
typedef void (*CLobbyTeamDetails_Closure)
                 (const CLobbyTeamDetails *message,
                  void *closure_data);
typedef void (*CLobbyTimedRewardDetails_Closure)
                 (const CLobbyTimedRewardDetails *message,
                  void *closure_data);
typedef void (*CLobbyBroadcastChannelInfo_Closure)
                 (const CLobbyBroadcastChannelInfo *message,
                  void *closure_data);
typedef void (*CSODOTALobby__CExtraMsg_Closure)
                 (const CSODOTALobby__CExtraMsg *message,
                  void *closure_data);
typedef void (*CSODOTALobby_Closure)
                 (const CSODOTALobby *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    lobby_dota_tvdelay__descriptor;
extern const ProtobufCEnumDescriptor    lobby_dota_pause_setting__descriptor;
extern const ProtobufCMessageDescriptor csodotaparty_member__descriptor;
extern const ProtobufCMessageDescriptor csodotaparty__descriptor;
extern const ProtobufCEnumDescriptor    csodotaparty__state__descriptor;
extern const ProtobufCMessageDescriptor csodotaparty_invite__descriptor;
extern const ProtobufCMessageDescriptor csodotaparty_invite__party_member__descriptor;
extern const ProtobufCMessageDescriptor csodotalobby_invite__descriptor;
extern const ProtobufCMessageDescriptor csodotalobby_invite__lobby_member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_leaver_state__descriptor;
extern const ProtobufCMessageDescriptor cdotalobby_member__descriptor;
extern const ProtobufCMessageDescriptor cdotalobby_member__cdotalobby_member_xpbonus__descriptor;
extern const ProtobufCMessageDescriptor clobby_team_details__descriptor;
extern const ProtobufCMessageDescriptor clobby_timed_reward_details__descriptor;
extern const ProtobufCMessageDescriptor clobby_broadcast_channel_info__descriptor;
extern const ProtobufCMessageDescriptor csodotalobby__descriptor;
extern const ProtobufCMessageDescriptor csodotalobby__cextra_msg__descriptor;
extern const ProtobufCEnumDescriptor    csodotalobby__state__descriptor;
extern const ProtobufCEnumDescriptor    csodotalobby__lobby_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fgcmessages_5fcommon_5fmatch_5fmanagement_2eproto__INCLUDED */
