/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_clientmessages.proto */

#ifndef PROTOBUF_C_dota_5fclientmessages_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fclientmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "dota_commonmessages.pb-c.h"

typedef struct _CDOTAClientMsgMapPing CDOTAClientMsgMapPing;
typedef struct _CDOTAClientMsgItemAlert CDOTAClientMsgItemAlert;
typedef struct _CDOTAClientMsgEnemyItemAlert CDOTAClientMsgEnemyItemAlert;
typedef struct _CDOTAClientMsgModifierAlert CDOTAClientMsgModifierAlert;
typedef struct _CDOTAClientMsgClickedBuff CDOTAClientMsgClickedBuff;
typedef struct _CDOTAClientMsgHPManaAlert CDOTAClientMsgHPManaAlert;
typedef struct _CDOTAClientMsgGlyphAlert CDOTAClientMsgGlyphAlert;
typedef struct _CDOTAClientMsgMapLine CDOTAClientMsgMapLine;
typedef struct _CDOTAClientMsgAspectRatio CDOTAClientMsgAspectRatio;
typedef struct _CDOTAClientMsgUnitsAutoAttackMode CDOTAClientMsgUnitsAutoAttackMode;
typedef struct _CDOTAClientMsgUnitsAutoAttackAfterSpell CDOTAClientMsgUnitsAutoAttackAfterSpell;
typedef struct _CDOTAClientMsgTeleportRequiresHalt CDOTAClientMsgTeleportRequiresHalt;
typedef struct _CDOTAClientMsgSearchString CDOTAClientMsgSearchString;
typedef struct _CDOTAClientMsgPause CDOTAClientMsgPause;
typedef struct _CDOTAClientMsgShopViewMode CDOTAClientMsgShopViewMode;
typedef struct _CDOTAClientMsgSetUnitShareFlag CDOTAClientMsgSetUnitShareFlag;
typedef struct _CDOTAClientMsgSwapRequest CDOTAClientMsgSwapRequest;
typedef struct _CDOTAClientMsgSwapAccept CDOTAClientMsgSwapAccept;
typedef struct _CDOTAClientMsgWorldLine CDOTAClientMsgWorldLine;
typedef struct _CDOTAClientMsgRequestGraphUpdate CDOTAClientMsgRequestGraphUpdate;
typedef struct _CDOTAClientMsgChatWheel CDOTAClientMsgChatWheel;
typedef struct _CDOTAClientMsgSendStatPopup CDOTAClientMsgSendStatPopup;
typedef struct _CDOTAClientMsgBeginLastHitChallenge CDOTAClientMsgBeginLastHitChallenge;
typedef struct _CDOTAClientMsgUpdateQuickBuyItem CDOTAClientMsgUpdateQuickBuyItem;
typedef struct _CDOTAClientMsgUpdateQuickBuy CDOTAClientMsgUpdateQuickBuy;
typedef struct _CDOTAClientMsgUpdateCoachListen CDOTAClientMsgUpdateCoachListen;
typedef struct _CDOTAClientMsgCoachHUDPing CDOTAClientMsgCoachHUDPing;
typedef struct _CDOTAClientMsgRecordVote CDOTAClientMsgRecordVote;
typedef struct _CDOTAClientMsgWillPurchaseAlert CDOTAClientMsgWillPurchaseAlert;
typedef struct _CDOTAClientMsgBuyBackStateAlert CDOTAClientMsgBuyBackStateAlert;
typedef struct _CDOTAClientMsgQuickBuyAlert CDOTAClientMsgQuickBuyAlert;
typedef struct _CDOTAClientMsgPlayerShowCase CDOTAClientMsgPlayerShowCase;
typedef struct _CDOTAClientMsgCameraZoomAmount CDOTAClientMsgCameraZoomAmount;
typedef struct _CDOTAClientMsgBroadcasterUsingCameraman CDOTAClientMsgBroadcasterUsingCameraman;
typedef struct _CDOTAClientMsgBroadcasterUsingAssistedCameraOperator CDOTAClientMsgBroadcasterUsingAssistedCameraOperator;
typedef struct _CAdditionalEquipSlotClientMsg CAdditionalEquipSlotClientMsg;
typedef struct _CDOTAClientMsgFreeInventory CDOTAClientMsgFreeInventory;
typedef struct _CDOTAClientMsgFillEmptySlotsWithBots CDOTAClientMsgFillEmptySlotsWithBots;
typedef struct _CDOTAClientMsgHeroStatueLike CDOTAClientMsgHeroStatueLike;
typedef struct _CDOTAClientMsgTeamShowcaseEditor CDOTAClientMsgTeamShowcaseEditor;
typedef struct _CDOTAClientMsgTeamShowcaseClientData CDOTAClientMsgTeamShowcaseClientData;
typedef struct _CDOTAClientMsgPlayTeamShowcase CDOTAClientMsgPlayTeamShowcase;
typedef struct _CDOTAClientMsgEventCNY2015Cmd CDOTAClientMsgEventCNY2015Cmd;
typedef struct _CDOTAClientMsgDemoHero CDOTAClientMsgDemoHero;
typedef struct _CDOTAClientMsgChallengeSelect CDOTAClientMsgChallengeSelect;
typedef struct _CDOTAClientMsgChallengeReroll CDOTAClientMsgChallengeReroll;
typedef struct _CDOTAClientMsgCoinWager CDOTAClientMsgCoinWager;
typedef struct _CDOTAClientMsgEventPointsTip CDOTAClientMsgEventPointsTip;
typedef struct _CDOTAClientMsgExecuteOrders CDOTAClientMsgExecuteOrders;
typedef struct _CDOTAClientMsgXPAlert CDOTAClientMsgXPAlert;
typedef struct _CDOTAClientMsgMatchMetadata CDOTAClientMsgMatchMetadata;
typedef struct _CDOTAClientMsgKillMyHero CDOTAClientMsgKillMyHero;
typedef struct _CDOTAClientMsgQuestStatus CDOTAClientMsgQuestStatus;
typedef struct _CDOTAClientMsgToggleAutoattack CDOTAClientMsgToggleAutoattack;


/* --- enums --- */

typedef enum _CDOTAClientMsgUnitsAutoAttackMode__EMode {
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE__INVALID = -1,
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE__NEVER = 0,
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE__AFTER_SPELLCAST = 1,
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE__ALWAYS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE)
} CDOTAClientMsgUnitsAutoAttackMode__EMode;
typedef enum _CDOTAClientMsgUnitsAutoAttackMode__EUnitType {
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EUNIT_TYPE__NORMAL = 0,
  CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EUNIT_TYPE__SUMMONED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EUNIT_TYPE)
} CDOTAClientMsgUnitsAutoAttackMode__EUnitType;
typedef enum _EDotaClientMessages {
  EDOTA_CLIENT_MESSAGES__DOTA_CM_MapLine = 301,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_AspectRatio = 302,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_MapPing = 303,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_UnitsAutoAttack = 304,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_SearchString = 307,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_Pause = 308,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ShopViewMode = 309,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_SetUnitShareFlag = 310,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_SwapRequest = 311,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_SwapAccept = 312,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_WorldLine = 313,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_RequestGraphUpdate = 314,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ItemAlert = 315,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ChatWheel = 316,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_SendStatPopup = 317,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_BeginLastHitChallenge = 318,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_UpdateQuickBuy = 319,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_UpdateCoachListen = 320,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_CoachHUDPing = 321,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_RecordVote = 322,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_UnitsAutoAttackAfterSpell = 323,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_WillPurchaseAlert = 324,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_PlayerShowCase = 325,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_TeleportRequiresHalt = 326,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_CameraZoomAmount = 327,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_BroadcasterUsingCamerman = 328,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_BroadcasterUsingAssistedCameraOperator = 329,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_EnemyItemAlert = 330,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_FreeInventory = 331,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_BuyBackStateAlert = 332,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_QuickBuyAlert = 333,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_HeroStatueLike = 334,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ModifierAlert = 335,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_TeamShowcaseEditor = 336,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_HPManaAlert = 337,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_GlyphAlert = 338,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_TeamShowcaseClientData = 339,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_PlayTeamShowcase = 340,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_EventCNY2015Cmd = 341,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_FillEmptySlotsWithBots = 342,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_DemoHero = 343,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_AbilityLearnModeToggled = 344,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_AbilityStartUse = 345,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ChallengeSelect = 346,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ChallengeReroll = 347,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ClickedBuff = 348,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_CoinWager = 349,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ExecuteOrders = 350,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_XPAlert = 351,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_EventPointsTip = 353,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_MatchMetadata = 354,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_KillMyHero = 355,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_QuestStatus = 356,
  EDOTA_CLIENT_MESSAGES__DOTA_CM_ToggleAutoattack = 357
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTA_CLIENT_MESSAGES)
} EDotaClientMessages;

/* --- messages --- */

struct  _CDOTAClientMsgMapPing
{
  ProtobufCMessage base;
  CDOTAMsgLocationPing *location_ping;
};
#define CDOTACLIENT_MSG__MAP_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__map_ping__descriptor) \
    , NULL }


struct  _CDOTAClientMsgItemAlert
{
  ProtobufCMessage base;
  CDOTAMsgItemAlert *item_alert;
};
#define CDOTACLIENT_MSG__ITEM_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__item_alert__descriptor) \
    , NULL }


struct  _CDOTAClientMsgEnemyItemAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_entindex;
  uint32_t item_entindex;
};
#define CDOTACLIENT_MSG__ENEMY_ITEM_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__enemy_item_alert__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgModifierAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_buff_internal_index;
  int32_t buff_internal_index;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTACLIENT_MSG__MODIFIER_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__modifier_alert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgClickedBuff
{
  ProtobufCMessage base;
  protobuf_c_boolean has_buff_internal_index;
  int32_t buff_internal_index;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTACLIENT_MSG__CLICKED_BUFF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__clicked_buff__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgHPManaAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTACLIENT_MSG__HPMANA_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__hpmana_alert__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgGlyphAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_negative;
  protobuf_c_boolean negative;
};
#define CDOTACLIENT_MSG__GLYPH_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__glyph_alert__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgMapLine
{
  ProtobufCMessage base;
  CDOTAMsgMapLine *mapline;
};
#define CDOTACLIENT_MSG__MAP_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__map_line__descriptor) \
    , NULL }


struct  _CDOTAClientMsgAspectRatio
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ratio;
  float ratio;
};
#define CDOTACLIENT_MSG__ASPECT_RATIO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__aspect_ratio__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgUnitsAutoAttackMode
{
  ProtobufCMessage base;
  protobuf_c_boolean has_mode;
  CDOTAClientMsgUnitsAutoAttackMode__EMode mode;
  protobuf_c_boolean has_unit_type;
  CDOTAClientMsgUnitsAutoAttackMode__EUnitType unit_type;
};
#define CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__units_auto_attack_mode__descriptor) \
    , 0,CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EMODE__INVALID, 0,CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_MODE__EUNIT_TYPE__NORMAL }


struct  _CDOTAClientMsgUnitsAutoAttackAfterSpell
{
  ProtobufCMessage base;
  protobuf_c_boolean has_enabled;
  protobuf_c_boolean enabled;
};
#define CDOTACLIENT_MSG__UNITS_AUTO_ATTACK_AFTER_SPELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__units_auto_attack_after_spell__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgTeleportRequiresHalt
{
  ProtobufCMessage base;
  protobuf_c_boolean has_enabled;
  protobuf_c_boolean enabled;
};
#define CDOTACLIENT_MSG__TELEPORT_REQUIRES_HALT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__teleport_requires_halt__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgSearchString
{
  ProtobufCMessage base;
  char *search;
};
#define CDOTACLIENT_MSG__SEARCH_STRING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__search_string__descriptor) \
    , NULL }


struct  _CDOTAClientMsgPause
{
  ProtobufCMessage base;
};
#define CDOTACLIENT_MSG__PAUSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__pause__descriptor) \
     }


struct  _CDOTAClientMsgShopViewMode
{
  ProtobufCMessage base;
  protobuf_c_boolean has_mode;
  uint32_t mode;
};
#define CDOTACLIENT_MSG__SHOP_VIEW_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__shop_view_mode__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgSetUnitShareFlag
{
  ProtobufCMessage base;
  protobuf_c_boolean has_playerid;
  uint32_t playerid;
  protobuf_c_boolean has_flag;
  uint32_t flag;
  protobuf_c_boolean has_state;
  protobuf_c_boolean state;
};
#define CDOTACLIENT_MSG__SET_UNIT_SHARE_FLAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__set_unit_share_flag__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAClientMsgSwapRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
};
#define CDOTACLIENT_MSG__SWAP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__swap_request__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgSwapAccept
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
};
#define CDOTACLIENT_MSG__SWAP_ACCEPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__swap_accept__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgWorldLine
{
  ProtobufCMessage base;
  CDOTAMsgWorldLine *worldline;
};
#define CDOTACLIENT_MSG__WORLD_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__world_line__descriptor) \
    , NULL }


struct  _CDOTAClientMsgRequestGraphUpdate
{
  ProtobufCMessage base;
};
#define CDOTACLIENT_MSG__REQUEST_GRAPH_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__request_graph_update__descriptor) \
     }


struct  _CDOTAClientMsgChatWheel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_chat_message;
  EDOTAChatWheelMessage chat_message;
  protobuf_c_boolean has_param_hero_id;
  uint32_t param_hero_id;
};
#define CDOTACLIENT_MSG__CHAT_WHEEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__chat_wheel__descriptor) \
    , 0,EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ok, 0,0 }


struct  _CDOTAClientMsgSendStatPopup
{
  ProtobufCMessage base;
  CDOTAMsgSendStatPopup *statpopup;
};
#define CDOTACLIENT_MSG__SEND_STAT_POPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__send_stat_popup__descriptor) \
    , NULL }


struct  _CDOTAClientMsgBeginLastHitChallenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_chosen_lane;
  uint32_t chosen_lane;
  protobuf_c_boolean has_helper_enabled;
  protobuf_c_boolean helper_enabled;
};
#define CDOTACLIENT_MSG__BEGIN_LAST_HIT_CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__begin_last_hit_challenge__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgUpdateQuickBuyItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_type;
  int32_t item_type;
  protobuf_c_boolean has_purchasable;
  protobuf_c_boolean purchasable;
};
#define CDOTACLIENT_MSG__UPDATE_QUICK_BUY_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__update_quick_buy_item__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgUpdateQuickBuy
{
  ProtobufCMessage base;
  size_t n_items;
  CDOTAClientMsgUpdateQuickBuyItem **items;
};
#define CDOTACLIENT_MSG__UPDATE_QUICK_BUY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__update_quick_buy__descriptor) \
    , 0,NULL }


struct  _CDOTAClientMsgUpdateCoachListen
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_mask;
  uint32_t player_mask;
};
#define CDOTACLIENT_MSG__UPDATE_COACH_LISTEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__update_coach_listen__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgCoachHUDPing
{
  ProtobufCMessage base;
  CDOTAMsgCoachHUDPing *hud_ping;
};
#define CDOTACLIENT_MSG__COACH_HUDPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__coach_hudping__descriptor) \
    , NULL }


struct  _CDOTAClientMsgRecordVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_choice_index;
  int32_t choice_index;
};
#define CDOTACLIENT_MSG__RECORD_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__record_vote__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgWillPurchaseAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
  protobuf_c_boolean has_gold_remaining;
  uint32_t gold_remaining;
};
#define CDOTACLIENT_MSG__WILL_PURCHASE_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__will_purchase_alert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgBuyBackStateAlert
{
  ProtobufCMessage base;
};
#define CDOTACLIENT_MSG__BUY_BACK_STATE_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__buy_back_state_alert__descriptor) \
     }


struct  _CDOTAClientMsgQuickBuyAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
  protobuf_c_boolean has_gold_required;
  int32_t gold_required;
};
#define CDOTACLIENT_MSG__QUICK_BUY_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__quick_buy_alert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAClientMsgPlayerShowCase
{
  ProtobufCMessage base;
  protobuf_c_boolean has_showcase;
  protobuf_c_boolean showcase;
};
#define CDOTACLIENT_MSG__PLAYER_SHOW_CASE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__player_show_case__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgCameraZoomAmount
{
  ProtobufCMessage base;
  protobuf_c_boolean has_zoom_amount;
  float zoom_amount;
};
#define CDOTACLIENT_MSG__CAMERA_ZOOM_AMOUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__camera_zoom_amount__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgBroadcasterUsingCameraman
{
  ProtobufCMessage base;
  protobuf_c_boolean has_cameraman;
  protobuf_c_boolean cameraman;
};
#define CDOTACLIENT_MSG__BROADCASTER_USING_CAMERAMAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__broadcaster_using_cameraman__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgBroadcasterUsingAssistedCameraOperator
{
  ProtobufCMessage base;
  protobuf_c_boolean has_enabled;
  protobuf_c_boolean enabled;
};
#define CDOTACLIENT_MSG__BROADCASTER_USING_ASSISTED_CAMERA_OPERATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__broadcaster_using_assisted_camera_operator__descriptor) \
    , 0,0 }


struct  _CAdditionalEquipSlotClientMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_class_id;
  uint32_t class_id;
  protobuf_c_boolean has_slot_id;
  uint32_t slot_id;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
};
#define CADDITIONAL_EQUIP_SLOT_CLIENT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cadditional_equip_slot_client_msg__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAClientMsgFreeInventory
{
  ProtobufCMessage base;
  size_t n_equips;
  CAdditionalEquipSlotClientMsg **equips;
};
#define CDOTACLIENT_MSG__FREE_INVENTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__free_inventory__descriptor) \
    , 0,NULL }


struct  _CDOTAClientMsgFillEmptySlotsWithBots
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fillwithbots;
  protobuf_c_boolean fillwithbots;
};
#define CDOTACLIENT_MSG__FILL_EMPTY_SLOTS_WITH_BOTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__fill_empty_slots_with_bots__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgHeroStatueLike
{
  ProtobufCMessage base;
  protobuf_c_boolean has_owner_player_id;
  uint32_t owner_player_id;
};
#define CDOTACLIENT_MSG__HERO_STATUE_LIKE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__hero_statue_like__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgTeamShowcaseEditor
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDOTACLIENT_MSG__TEAM_SHOWCASE_EDITOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__team_showcase_editor__descriptor) \
    , 0,{0,NULL} }


struct  _CDOTAClientMsgTeamShowcaseClientData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDOTACLIENT_MSG__TEAM_SHOWCASE_CLIENT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__team_showcase_client_data__descriptor) \
    , 0,{0,NULL} }


struct  _CDOTAClientMsgPlayTeamShowcase
{
  ProtobufCMessage base;
};
#define CDOTACLIENT_MSG__PLAY_TEAM_SHOWCASE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__play_team_showcase__descriptor) \
     }


struct  _CDOTAClientMsgEventCNY2015Cmd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDOTACLIENT_MSG__EVENT_CNY2015_CMD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__event_cny2015_cmd__descriptor) \
    , 0,{0,NULL} }


struct  _CDOTAClientMsgDemoHero
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  int32_t hero_id;
  protobuf_c_boolean has_hero_id_to_spawn;
  int32_t hero_id_to_spawn;
  size_t n_item_defs;
  uint32_t *item_defs;
  size_t n_item_ids;
  uint64_t *item_ids;
  protobuf_c_boolean has_style_index;
  uint32_t style_index;
  protobuf_c_boolean has_keep_existing_demohero;
  protobuf_c_boolean keep_existing_demohero;
};
#define CDOTACLIENT_MSG__DEMO_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__demo_hero__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL, 0,0, 0,0 }


struct  _CDOTAClientMsgChallengeSelect
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_slot_id;
  uint32_t slot_id;
  protobuf_c_boolean has_sequence_id;
  uint32_t sequence_id;
};
#define CDOTACLIENT_MSG__CHALLENGE_SELECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__challenge_select__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAClientMsgChallengeReroll
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_slot_id;
  uint32_t slot_id;
  protobuf_c_boolean has_sequence_id;
  uint32_t sequence_id;
};
#define CDOTACLIENT_MSG__CHALLENGE_REROLL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__challenge_reroll__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAClientMsgCoinWager
{
  ProtobufCMessage base;
  protobuf_c_boolean has_wager_amount;
  uint32_t wager_amount;
};
#define CDOTACLIENT_MSG__COIN_WAGER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__coin_wager__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgEventPointsTip
{
  ProtobufCMessage base;
  protobuf_c_boolean has_recipient_player_id;
  uint32_t recipient_player_id;
};
#define CDOTACLIENT_MSG__EVENT_POINTS_TIP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__event_points_tip__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgExecuteOrders
{
  ProtobufCMessage base;
  size_t n_orders;
  CDOTAMsgUnitOrder **orders;
};
#define CDOTACLIENT_MSG__EXECUTE_ORDERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__execute_orders__descriptor) \
    , 0,NULL }


struct  _CDOTAClientMsgXPAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTACLIENT_MSG__XPALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__xpalert__descriptor) \
    , 0,0 }


struct  _CDOTAClientMsgMatchMetadata
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_metadata;
  ProtobufCBinaryData metadata;
};
#define CDOTACLIENT_MSG__MATCH_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__match_metadata__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CDOTAClientMsgKillMyHero
{
  ProtobufCMessage base;
};
#define CDOTACLIENT_MSG__KILL_MY_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__kill_my_hero__descriptor) \
     }


struct  _CDOTAClientMsgQuestStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quest_id;
  uint32_t quest_id;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
  protobuf_c_boolean has_progress;
  uint32_t progress;
  protobuf_c_boolean has_goal;
  uint32_t goal;
  protobuf_c_boolean has_query;
  uint32_t query;
  protobuf_c_boolean has_fail_gametime;
  float fail_gametime;
  protobuf_c_boolean has_item_id;
  uint32_t item_id;
};
#define CDOTACLIENT_MSG__QUEST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__quest_status__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAClientMsgToggleAutoattack
{
  ProtobufCMessage base;
  protobuf_c_boolean has_mode;
  int32_t mode;
  protobuf_c_boolean has_show_message;
  protobuf_c_boolean show_message;
};
#define CDOTACLIENT_MSG__TOGGLE_AUTOATTACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaclient_msg__toggle_autoattack__descriptor) \
    , 0,0, 0,0 }


/* CDOTAClientMsgMapPing methods */
void   cdotaclient_msg__map_ping__init
                     (CDOTAClientMsgMapPing         *message);
size_t cdotaclient_msg__map_ping__get_packed_size
                     (const CDOTAClientMsgMapPing   *message);
size_t cdotaclient_msg__map_ping__pack
                     (const CDOTAClientMsgMapPing   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__map_ping__pack_to_buffer
                     (const CDOTAClientMsgMapPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgMapPing *
       cdotaclient_msg__map_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__map_ping__free_unpacked
                     (CDOTAClientMsgMapPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgItemAlert methods */
void   cdotaclient_msg__item_alert__init
                     (CDOTAClientMsgItemAlert         *message);
size_t cdotaclient_msg__item_alert__get_packed_size
                     (const CDOTAClientMsgItemAlert   *message);
size_t cdotaclient_msg__item_alert__pack
                     (const CDOTAClientMsgItemAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__item_alert__pack_to_buffer
                     (const CDOTAClientMsgItemAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgItemAlert *
       cdotaclient_msg__item_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__item_alert__free_unpacked
                     (CDOTAClientMsgItemAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgEnemyItemAlert methods */
void   cdotaclient_msg__enemy_item_alert__init
                     (CDOTAClientMsgEnemyItemAlert         *message);
size_t cdotaclient_msg__enemy_item_alert__get_packed_size
                     (const CDOTAClientMsgEnemyItemAlert   *message);
size_t cdotaclient_msg__enemy_item_alert__pack
                     (const CDOTAClientMsgEnemyItemAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__enemy_item_alert__pack_to_buffer
                     (const CDOTAClientMsgEnemyItemAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgEnemyItemAlert *
       cdotaclient_msg__enemy_item_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__enemy_item_alert__free_unpacked
                     (CDOTAClientMsgEnemyItemAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgModifierAlert methods */
void   cdotaclient_msg__modifier_alert__init
                     (CDOTAClientMsgModifierAlert         *message);
size_t cdotaclient_msg__modifier_alert__get_packed_size
                     (const CDOTAClientMsgModifierAlert   *message);
size_t cdotaclient_msg__modifier_alert__pack
                     (const CDOTAClientMsgModifierAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__modifier_alert__pack_to_buffer
                     (const CDOTAClientMsgModifierAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgModifierAlert *
       cdotaclient_msg__modifier_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__modifier_alert__free_unpacked
                     (CDOTAClientMsgModifierAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgClickedBuff methods */
void   cdotaclient_msg__clicked_buff__init
                     (CDOTAClientMsgClickedBuff         *message);
size_t cdotaclient_msg__clicked_buff__get_packed_size
                     (const CDOTAClientMsgClickedBuff   *message);
size_t cdotaclient_msg__clicked_buff__pack
                     (const CDOTAClientMsgClickedBuff   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__clicked_buff__pack_to_buffer
                     (const CDOTAClientMsgClickedBuff   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgClickedBuff *
       cdotaclient_msg__clicked_buff__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__clicked_buff__free_unpacked
                     (CDOTAClientMsgClickedBuff *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgHPManaAlert methods */
void   cdotaclient_msg__hpmana_alert__init
                     (CDOTAClientMsgHPManaAlert         *message);
size_t cdotaclient_msg__hpmana_alert__get_packed_size
                     (const CDOTAClientMsgHPManaAlert   *message);
size_t cdotaclient_msg__hpmana_alert__pack
                     (const CDOTAClientMsgHPManaAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__hpmana_alert__pack_to_buffer
                     (const CDOTAClientMsgHPManaAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgHPManaAlert *
       cdotaclient_msg__hpmana_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__hpmana_alert__free_unpacked
                     (CDOTAClientMsgHPManaAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgGlyphAlert methods */
void   cdotaclient_msg__glyph_alert__init
                     (CDOTAClientMsgGlyphAlert         *message);
size_t cdotaclient_msg__glyph_alert__get_packed_size
                     (const CDOTAClientMsgGlyphAlert   *message);
size_t cdotaclient_msg__glyph_alert__pack
                     (const CDOTAClientMsgGlyphAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__glyph_alert__pack_to_buffer
                     (const CDOTAClientMsgGlyphAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgGlyphAlert *
       cdotaclient_msg__glyph_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__glyph_alert__free_unpacked
                     (CDOTAClientMsgGlyphAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgMapLine methods */
void   cdotaclient_msg__map_line__init
                     (CDOTAClientMsgMapLine         *message);
size_t cdotaclient_msg__map_line__get_packed_size
                     (const CDOTAClientMsgMapLine   *message);
size_t cdotaclient_msg__map_line__pack
                     (const CDOTAClientMsgMapLine   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__map_line__pack_to_buffer
                     (const CDOTAClientMsgMapLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgMapLine *
       cdotaclient_msg__map_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__map_line__free_unpacked
                     (CDOTAClientMsgMapLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgAspectRatio methods */
void   cdotaclient_msg__aspect_ratio__init
                     (CDOTAClientMsgAspectRatio         *message);
size_t cdotaclient_msg__aspect_ratio__get_packed_size
                     (const CDOTAClientMsgAspectRatio   *message);
size_t cdotaclient_msg__aspect_ratio__pack
                     (const CDOTAClientMsgAspectRatio   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__aspect_ratio__pack_to_buffer
                     (const CDOTAClientMsgAspectRatio   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgAspectRatio *
       cdotaclient_msg__aspect_ratio__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__aspect_ratio__free_unpacked
                     (CDOTAClientMsgAspectRatio *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgUnitsAutoAttackMode methods */
void   cdotaclient_msg__units_auto_attack_mode__init
                     (CDOTAClientMsgUnitsAutoAttackMode         *message);
size_t cdotaclient_msg__units_auto_attack_mode__get_packed_size
                     (const CDOTAClientMsgUnitsAutoAttackMode   *message);
size_t cdotaclient_msg__units_auto_attack_mode__pack
                     (const CDOTAClientMsgUnitsAutoAttackMode   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__units_auto_attack_mode__pack_to_buffer
                     (const CDOTAClientMsgUnitsAutoAttackMode   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgUnitsAutoAttackMode *
       cdotaclient_msg__units_auto_attack_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__units_auto_attack_mode__free_unpacked
                     (CDOTAClientMsgUnitsAutoAttackMode *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgUnitsAutoAttackAfterSpell methods */
void   cdotaclient_msg__units_auto_attack_after_spell__init
                     (CDOTAClientMsgUnitsAutoAttackAfterSpell         *message);
size_t cdotaclient_msg__units_auto_attack_after_spell__get_packed_size
                     (const CDOTAClientMsgUnitsAutoAttackAfterSpell   *message);
size_t cdotaclient_msg__units_auto_attack_after_spell__pack
                     (const CDOTAClientMsgUnitsAutoAttackAfterSpell   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__units_auto_attack_after_spell__pack_to_buffer
                     (const CDOTAClientMsgUnitsAutoAttackAfterSpell   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgUnitsAutoAttackAfterSpell *
       cdotaclient_msg__units_auto_attack_after_spell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__units_auto_attack_after_spell__free_unpacked
                     (CDOTAClientMsgUnitsAutoAttackAfterSpell *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgTeleportRequiresHalt methods */
void   cdotaclient_msg__teleport_requires_halt__init
                     (CDOTAClientMsgTeleportRequiresHalt         *message);
size_t cdotaclient_msg__teleport_requires_halt__get_packed_size
                     (const CDOTAClientMsgTeleportRequiresHalt   *message);
size_t cdotaclient_msg__teleport_requires_halt__pack
                     (const CDOTAClientMsgTeleportRequiresHalt   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__teleport_requires_halt__pack_to_buffer
                     (const CDOTAClientMsgTeleportRequiresHalt   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgTeleportRequiresHalt *
       cdotaclient_msg__teleport_requires_halt__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__teleport_requires_halt__free_unpacked
                     (CDOTAClientMsgTeleportRequiresHalt *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgSearchString methods */
void   cdotaclient_msg__search_string__init
                     (CDOTAClientMsgSearchString         *message);
size_t cdotaclient_msg__search_string__get_packed_size
                     (const CDOTAClientMsgSearchString   *message);
size_t cdotaclient_msg__search_string__pack
                     (const CDOTAClientMsgSearchString   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__search_string__pack_to_buffer
                     (const CDOTAClientMsgSearchString   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgSearchString *
       cdotaclient_msg__search_string__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__search_string__free_unpacked
                     (CDOTAClientMsgSearchString *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgPause methods */
void   cdotaclient_msg__pause__init
                     (CDOTAClientMsgPause         *message);
size_t cdotaclient_msg__pause__get_packed_size
                     (const CDOTAClientMsgPause   *message);
size_t cdotaclient_msg__pause__pack
                     (const CDOTAClientMsgPause   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__pause__pack_to_buffer
                     (const CDOTAClientMsgPause   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgPause *
       cdotaclient_msg__pause__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__pause__free_unpacked
                     (CDOTAClientMsgPause *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgShopViewMode methods */
void   cdotaclient_msg__shop_view_mode__init
                     (CDOTAClientMsgShopViewMode         *message);
size_t cdotaclient_msg__shop_view_mode__get_packed_size
                     (const CDOTAClientMsgShopViewMode   *message);
size_t cdotaclient_msg__shop_view_mode__pack
                     (const CDOTAClientMsgShopViewMode   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__shop_view_mode__pack_to_buffer
                     (const CDOTAClientMsgShopViewMode   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgShopViewMode *
       cdotaclient_msg__shop_view_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__shop_view_mode__free_unpacked
                     (CDOTAClientMsgShopViewMode *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgSetUnitShareFlag methods */
void   cdotaclient_msg__set_unit_share_flag__init
                     (CDOTAClientMsgSetUnitShareFlag         *message);
size_t cdotaclient_msg__set_unit_share_flag__get_packed_size
                     (const CDOTAClientMsgSetUnitShareFlag   *message);
size_t cdotaclient_msg__set_unit_share_flag__pack
                     (const CDOTAClientMsgSetUnitShareFlag   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__set_unit_share_flag__pack_to_buffer
                     (const CDOTAClientMsgSetUnitShareFlag   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgSetUnitShareFlag *
       cdotaclient_msg__set_unit_share_flag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__set_unit_share_flag__free_unpacked
                     (CDOTAClientMsgSetUnitShareFlag *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgSwapRequest methods */
void   cdotaclient_msg__swap_request__init
                     (CDOTAClientMsgSwapRequest         *message);
size_t cdotaclient_msg__swap_request__get_packed_size
                     (const CDOTAClientMsgSwapRequest   *message);
size_t cdotaclient_msg__swap_request__pack
                     (const CDOTAClientMsgSwapRequest   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__swap_request__pack_to_buffer
                     (const CDOTAClientMsgSwapRequest   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgSwapRequest *
       cdotaclient_msg__swap_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__swap_request__free_unpacked
                     (CDOTAClientMsgSwapRequest *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgSwapAccept methods */
void   cdotaclient_msg__swap_accept__init
                     (CDOTAClientMsgSwapAccept         *message);
size_t cdotaclient_msg__swap_accept__get_packed_size
                     (const CDOTAClientMsgSwapAccept   *message);
size_t cdotaclient_msg__swap_accept__pack
                     (const CDOTAClientMsgSwapAccept   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__swap_accept__pack_to_buffer
                     (const CDOTAClientMsgSwapAccept   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgSwapAccept *
       cdotaclient_msg__swap_accept__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__swap_accept__free_unpacked
                     (CDOTAClientMsgSwapAccept *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgWorldLine methods */
void   cdotaclient_msg__world_line__init
                     (CDOTAClientMsgWorldLine         *message);
size_t cdotaclient_msg__world_line__get_packed_size
                     (const CDOTAClientMsgWorldLine   *message);
size_t cdotaclient_msg__world_line__pack
                     (const CDOTAClientMsgWorldLine   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__world_line__pack_to_buffer
                     (const CDOTAClientMsgWorldLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgWorldLine *
       cdotaclient_msg__world_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__world_line__free_unpacked
                     (CDOTAClientMsgWorldLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgRequestGraphUpdate methods */
void   cdotaclient_msg__request_graph_update__init
                     (CDOTAClientMsgRequestGraphUpdate         *message);
size_t cdotaclient_msg__request_graph_update__get_packed_size
                     (const CDOTAClientMsgRequestGraphUpdate   *message);
size_t cdotaclient_msg__request_graph_update__pack
                     (const CDOTAClientMsgRequestGraphUpdate   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__request_graph_update__pack_to_buffer
                     (const CDOTAClientMsgRequestGraphUpdate   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgRequestGraphUpdate *
       cdotaclient_msg__request_graph_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__request_graph_update__free_unpacked
                     (CDOTAClientMsgRequestGraphUpdate *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgChatWheel methods */
void   cdotaclient_msg__chat_wheel__init
                     (CDOTAClientMsgChatWheel         *message);
size_t cdotaclient_msg__chat_wheel__get_packed_size
                     (const CDOTAClientMsgChatWheel   *message);
size_t cdotaclient_msg__chat_wheel__pack
                     (const CDOTAClientMsgChatWheel   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__chat_wheel__pack_to_buffer
                     (const CDOTAClientMsgChatWheel   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgChatWheel *
       cdotaclient_msg__chat_wheel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__chat_wheel__free_unpacked
                     (CDOTAClientMsgChatWheel *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgSendStatPopup methods */
void   cdotaclient_msg__send_stat_popup__init
                     (CDOTAClientMsgSendStatPopup         *message);
size_t cdotaclient_msg__send_stat_popup__get_packed_size
                     (const CDOTAClientMsgSendStatPopup   *message);
size_t cdotaclient_msg__send_stat_popup__pack
                     (const CDOTAClientMsgSendStatPopup   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__send_stat_popup__pack_to_buffer
                     (const CDOTAClientMsgSendStatPopup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgSendStatPopup *
       cdotaclient_msg__send_stat_popup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__send_stat_popup__free_unpacked
                     (CDOTAClientMsgSendStatPopup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgBeginLastHitChallenge methods */
void   cdotaclient_msg__begin_last_hit_challenge__init
                     (CDOTAClientMsgBeginLastHitChallenge         *message);
size_t cdotaclient_msg__begin_last_hit_challenge__get_packed_size
                     (const CDOTAClientMsgBeginLastHitChallenge   *message);
size_t cdotaclient_msg__begin_last_hit_challenge__pack
                     (const CDOTAClientMsgBeginLastHitChallenge   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__begin_last_hit_challenge__pack_to_buffer
                     (const CDOTAClientMsgBeginLastHitChallenge   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgBeginLastHitChallenge *
       cdotaclient_msg__begin_last_hit_challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__begin_last_hit_challenge__free_unpacked
                     (CDOTAClientMsgBeginLastHitChallenge *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgUpdateQuickBuyItem methods */
void   cdotaclient_msg__update_quick_buy_item__init
                     (CDOTAClientMsgUpdateQuickBuyItem         *message);
size_t cdotaclient_msg__update_quick_buy_item__get_packed_size
                     (const CDOTAClientMsgUpdateQuickBuyItem   *message);
size_t cdotaclient_msg__update_quick_buy_item__pack
                     (const CDOTAClientMsgUpdateQuickBuyItem   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__update_quick_buy_item__pack_to_buffer
                     (const CDOTAClientMsgUpdateQuickBuyItem   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgUpdateQuickBuyItem *
       cdotaclient_msg__update_quick_buy_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__update_quick_buy_item__free_unpacked
                     (CDOTAClientMsgUpdateQuickBuyItem *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgUpdateQuickBuy methods */
void   cdotaclient_msg__update_quick_buy__init
                     (CDOTAClientMsgUpdateQuickBuy         *message);
size_t cdotaclient_msg__update_quick_buy__get_packed_size
                     (const CDOTAClientMsgUpdateQuickBuy   *message);
size_t cdotaclient_msg__update_quick_buy__pack
                     (const CDOTAClientMsgUpdateQuickBuy   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__update_quick_buy__pack_to_buffer
                     (const CDOTAClientMsgUpdateQuickBuy   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgUpdateQuickBuy *
       cdotaclient_msg__update_quick_buy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__update_quick_buy__free_unpacked
                     (CDOTAClientMsgUpdateQuickBuy *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgUpdateCoachListen methods */
void   cdotaclient_msg__update_coach_listen__init
                     (CDOTAClientMsgUpdateCoachListen         *message);
size_t cdotaclient_msg__update_coach_listen__get_packed_size
                     (const CDOTAClientMsgUpdateCoachListen   *message);
size_t cdotaclient_msg__update_coach_listen__pack
                     (const CDOTAClientMsgUpdateCoachListen   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__update_coach_listen__pack_to_buffer
                     (const CDOTAClientMsgUpdateCoachListen   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgUpdateCoachListen *
       cdotaclient_msg__update_coach_listen__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__update_coach_listen__free_unpacked
                     (CDOTAClientMsgUpdateCoachListen *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgCoachHUDPing methods */
void   cdotaclient_msg__coach_hudping__init
                     (CDOTAClientMsgCoachHUDPing         *message);
size_t cdotaclient_msg__coach_hudping__get_packed_size
                     (const CDOTAClientMsgCoachHUDPing   *message);
size_t cdotaclient_msg__coach_hudping__pack
                     (const CDOTAClientMsgCoachHUDPing   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__coach_hudping__pack_to_buffer
                     (const CDOTAClientMsgCoachHUDPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgCoachHUDPing *
       cdotaclient_msg__coach_hudping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__coach_hudping__free_unpacked
                     (CDOTAClientMsgCoachHUDPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgRecordVote methods */
void   cdotaclient_msg__record_vote__init
                     (CDOTAClientMsgRecordVote         *message);
size_t cdotaclient_msg__record_vote__get_packed_size
                     (const CDOTAClientMsgRecordVote   *message);
size_t cdotaclient_msg__record_vote__pack
                     (const CDOTAClientMsgRecordVote   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__record_vote__pack_to_buffer
                     (const CDOTAClientMsgRecordVote   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgRecordVote *
       cdotaclient_msg__record_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__record_vote__free_unpacked
                     (CDOTAClientMsgRecordVote *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgWillPurchaseAlert methods */
void   cdotaclient_msg__will_purchase_alert__init
                     (CDOTAClientMsgWillPurchaseAlert         *message);
size_t cdotaclient_msg__will_purchase_alert__get_packed_size
                     (const CDOTAClientMsgWillPurchaseAlert   *message);
size_t cdotaclient_msg__will_purchase_alert__pack
                     (const CDOTAClientMsgWillPurchaseAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__will_purchase_alert__pack_to_buffer
                     (const CDOTAClientMsgWillPurchaseAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgWillPurchaseAlert *
       cdotaclient_msg__will_purchase_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__will_purchase_alert__free_unpacked
                     (CDOTAClientMsgWillPurchaseAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgBuyBackStateAlert methods */
void   cdotaclient_msg__buy_back_state_alert__init
                     (CDOTAClientMsgBuyBackStateAlert         *message);
size_t cdotaclient_msg__buy_back_state_alert__get_packed_size
                     (const CDOTAClientMsgBuyBackStateAlert   *message);
size_t cdotaclient_msg__buy_back_state_alert__pack
                     (const CDOTAClientMsgBuyBackStateAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__buy_back_state_alert__pack_to_buffer
                     (const CDOTAClientMsgBuyBackStateAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgBuyBackStateAlert *
       cdotaclient_msg__buy_back_state_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__buy_back_state_alert__free_unpacked
                     (CDOTAClientMsgBuyBackStateAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgQuickBuyAlert methods */
void   cdotaclient_msg__quick_buy_alert__init
                     (CDOTAClientMsgQuickBuyAlert         *message);
size_t cdotaclient_msg__quick_buy_alert__get_packed_size
                     (const CDOTAClientMsgQuickBuyAlert   *message);
size_t cdotaclient_msg__quick_buy_alert__pack
                     (const CDOTAClientMsgQuickBuyAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__quick_buy_alert__pack_to_buffer
                     (const CDOTAClientMsgQuickBuyAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgQuickBuyAlert *
       cdotaclient_msg__quick_buy_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__quick_buy_alert__free_unpacked
                     (CDOTAClientMsgQuickBuyAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgPlayerShowCase methods */
void   cdotaclient_msg__player_show_case__init
                     (CDOTAClientMsgPlayerShowCase         *message);
size_t cdotaclient_msg__player_show_case__get_packed_size
                     (const CDOTAClientMsgPlayerShowCase   *message);
size_t cdotaclient_msg__player_show_case__pack
                     (const CDOTAClientMsgPlayerShowCase   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__player_show_case__pack_to_buffer
                     (const CDOTAClientMsgPlayerShowCase   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgPlayerShowCase *
       cdotaclient_msg__player_show_case__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__player_show_case__free_unpacked
                     (CDOTAClientMsgPlayerShowCase *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgCameraZoomAmount methods */
void   cdotaclient_msg__camera_zoom_amount__init
                     (CDOTAClientMsgCameraZoomAmount         *message);
size_t cdotaclient_msg__camera_zoom_amount__get_packed_size
                     (const CDOTAClientMsgCameraZoomAmount   *message);
size_t cdotaclient_msg__camera_zoom_amount__pack
                     (const CDOTAClientMsgCameraZoomAmount   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__camera_zoom_amount__pack_to_buffer
                     (const CDOTAClientMsgCameraZoomAmount   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgCameraZoomAmount *
       cdotaclient_msg__camera_zoom_amount__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__camera_zoom_amount__free_unpacked
                     (CDOTAClientMsgCameraZoomAmount *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgBroadcasterUsingCameraman methods */
void   cdotaclient_msg__broadcaster_using_cameraman__init
                     (CDOTAClientMsgBroadcasterUsingCameraman         *message);
size_t cdotaclient_msg__broadcaster_using_cameraman__get_packed_size
                     (const CDOTAClientMsgBroadcasterUsingCameraman   *message);
size_t cdotaclient_msg__broadcaster_using_cameraman__pack
                     (const CDOTAClientMsgBroadcasterUsingCameraman   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__broadcaster_using_cameraman__pack_to_buffer
                     (const CDOTAClientMsgBroadcasterUsingCameraman   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgBroadcasterUsingCameraman *
       cdotaclient_msg__broadcaster_using_cameraman__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__broadcaster_using_cameraman__free_unpacked
                     (CDOTAClientMsgBroadcasterUsingCameraman *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgBroadcasterUsingAssistedCameraOperator methods */
void   cdotaclient_msg__broadcaster_using_assisted_camera_operator__init
                     (CDOTAClientMsgBroadcasterUsingAssistedCameraOperator         *message);
size_t cdotaclient_msg__broadcaster_using_assisted_camera_operator__get_packed_size
                     (const CDOTAClientMsgBroadcasterUsingAssistedCameraOperator   *message);
size_t cdotaclient_msg__broadcaster_using_assisted_camera_operator__pack
                     (const CDOTAClientMsgBroadcasterUsingAssistedCameraOperator   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__broadcaster_using_assisted_camera_operator__pack_to_buffer
                     (const CDOTAClientMsgBroadcasterUsingAssistedCameraOperator   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgBroadcasterUsingAssistedCameraOperator *
       cdotaclient_msg__broadcaster_using_assisted_camera_operator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__broadcaster_using_assisted_camera_operator__free_unpacked
                     (CDOTAClientMsgBroadcasterUsingAssistedCameraOperator *message,
                      ProtobufCAllocator *allocator);
/* CAdditionalEquipSlotClientMsg methods */
void   cadditional_equip_slot_client_msg__init
                     (CAdditionalEquipSlotClientMsg         *message);
size_t cadditional_equip_slot_client_msg__get_packed_size
                     (const CAdditionalEquipSlotClientMsg   *message);
size_t cadditional_equip_slot_client_msg__pack
                     (const CAdditionalEquipSlotClientMsg   *message,
                      uint8_t             *out);
size_t cadditional_equip_slot_client_msg__pack_to_buffer
                     (const CAdditionalEquipSlotClientMsg   *message,
                      ProtobufCBuffer     *buffer);
CAdditionalEquipSlotClientMsg *
       cadditional_equip_slot_client_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cadditional_equip_slot_client_msg__free_unpacked
                     (CAdditionalEquipSlotClientMsg *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgFreeInventory methods */
void   cdotaclient_msg__free_inventory__init
                     (CDOTAClientMsgFreeInventory         *message);
size_t cdotaclient_msg__free_inventory__get_packed_size
                     (const CDOTAClientMsgFreeInventory   *message);
size_t cdotaclient_msg__free_inventory__pack
                     (const CDOTAClientMsgFreeInventory   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__free_inventory__pack_to_buffer
                     (const CDOTAClientMsgFreeInventory   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgFreeInventory *
       cdotaclient_msg__free_inventory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__free_inventory__free_unpacked
                     (CDOTAClientMsgFreeInventory *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgFillEmptySlotsWithBots methods */
void   cdotaclient_msg__fill_empty_slots_with_bots__init
                     (CDOTAClientMsgFillEmptySlotsWithBots         *message);
size_t cdotaclient_msg__fill_empty_slots_with_bots__get_packed_size
                     (const CDOTAClientMsgFillEmptySlotsWithBots   *message);
size_t cdotaclient_msg__fill_empty_slots_with_bots__pack
                     (const CDOTAClientMsgFillEmptySlotsWithBots   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__fill_empty_slots_with_bots__pack_to_buffer
                     (const CDOTAClientMsgFillEmptySlotsWithBots   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgFillEmptySlotsWithBots *
       cdotaclient_msg__fill_empty_slots_with_bots__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__fill_empty_slots_with_bots__free_unpacked
                     (CDOTAClientMsgFillEmptySlotsWithBots *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgHeroStatueLike methods */
void   cdotaclient_msg__hero_statue_like__init
                     (CDOTAClientMsgHeroStatueLike         *message);
size_t cdotaclient_msg__hero_statue_like__get_packed_size
                     (const CDOTAClientMsgHeroStatueLike   *message);
size_t cdotaclient_msg__hero_statue_like__pack
                     (const CDOTAClientMsgHeroStatueLike   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__hero_statue_like__pack_to_buffer
                     (const CDOTAClientMsgHeroStatueLike   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgHeroStatueLike *
       cdotaclient_msg__hero_statue_like__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__hero_statue_like__free_unpacked
                     (CDOTAClientMsgHeroStatueLike *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgTeamShowcaseEditor methods */
void   cdotaclient_msg__team_showcase_editor__init
                     (CDOTAClientMsgTeamShowcaseEditor         *message);
size_t cdotaclient_msg__team_showcase_editor__get_packed_size
                     (const CDOTAClientMsgTeamShowcaseEditor   *message);
size_t cdotaclient_msg__team_showcase_editor__pack
                     (const CDOTAClientMsgTeamShowcaseEditor   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__team_showcase_editor__pack_to_buffer
                     (const CDOTAClientMsgTeamShowcaseEditor   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgTeamShowcaseEditor *
       cdotaclient_msg__team_showcase_editor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__team_showcase_editor__free_unpacked
                     (CDOTAClientMsgTeamShowcaseEditor *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgTeamShowcaseClientData methods */
void   cdotaclient_msg__team_showcase_client_data__init
                     (CDOTAClientMsgTeamShowcaseClientData         *message);
size_t cdotaclient_msg__team_showcase_client_data__get_packed_size
                     (const CDOTAClientMsgTeamShowcaseClientData   *message);
size_t cdotaclient_msg__team_showcase_client_data__pack
                     (const CDOTAClientMsgTeamShowcaseClientData   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__team_showcase_client_data__pack_to_buffer
                     (const CDOTAClientMsgTeamShowcaseClientData   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgTeamShowcaseClientData *
       cdotaclient_msg__team_showcase_client_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__team_showcase_client_data__free_unpacked
                     (CDOTAClientMsgTeamShowcaseClientData *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgPlayTeamShowcase methods */
void   cdotaclient_msg__play_team_showcase__init
                     (CDOTAClientMsgPlayTeamShowcase         *message);
size_t cdotaclient_msg__play_team_showcase__get_packed_size
                     (const CDOTAClientMsgPlayTeamShowcase   *message);
size_t cdotaclient_msg__play_team_showcase__pack
                     (const CDOTAClientMsgPlayTeamShowcase   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__play_team_showcase__pack_to_buffer
                     (const CDOTAClientMsgPlayTeamShowcase   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgPlayTeamShowcase *
       cdotaclient_msg__play_team_showcase__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__play_team_showcase__free_unpacked
                     (CDOTAClientMsgPlayTeamShowcase *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgEventCNY2015Cmd methods */
void   cdotaclient_msg__event_cny2015_cmd__init
                     (CDOTAClientMsgEventCNY2015Cmd         *message);
size_t cdotaclient_msg__event_cny2015_cmd__get_packed_size
                     (const CDOTAClientMsgEventCNY2015Cmd   *message);
size_t cdotaclient_msg__event_cny2015_cmd__pack
                     (const CDOTAClientMsgEventCNY2015Cmd   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__event_cny2015_cmd__pack_to_buffer
                     (const CDOTAClientMsgEventCNY2015Cmd   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgEventCNY2015Cmd *
       cdotaclient_msg__event_cny2015_cmd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__event_cny2015_cmd__free_unpacked
                     (CDOTAClientMsgEventCNY2015Cmd *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgDemoHero methods */
void   cdotaclient_msg__demo_hero__init
                     (CDOTAClientMsgDemoHero         *message);
size_t cdotaclient_msg__demo_hero__get_packed_size
                     (const CDOTAClientMsgDemoHero   *message);
size_t cdotaclient_msg__demo_hero__pack
                     (const CDOTAClientMsgDemoHero   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__demo_hero__pack_to_buffer
                     (const CDOTAClientMsgDemoHero   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgDemoHero *
       cdotaclient_msg__demo_hero__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__demo_hero__free_unpacked
                     (CDOTAClientMsgDemoHero *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgChallengeSelect methods */
void   cdotaclient_msg__challenge_select__init
                     (CDOTAClientMsgChallengeSelect         *message);
size_t cdotaclient_msg__challenge_select__get_packed_size
                     (const CDOTAClientMsgChallengeSelect   *message);
size_t cdotaclient_msg__challenge_select__pack
                     (const CDOTAClientMsgChallengeSelect   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__challenge_select__pack_to_buffer
                     (const CDOTAClientMsgChallengeSelect   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgChallengeSelect *
       cdotaclient_msg__challenge_select__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__challenge_select__free_unpacked
                     (CDOTAClientMsgChallengeSelect *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgChallengeReroll methods */
void   cdotaclient_msg__challenge_reroll__init
                     (CDOTAClientMsgChallengeReroll         *message);
size_t cdotaclient_msg__challenge_reroll__get_packed_size
                     (const CDOTAClientMsgChallengeReroll   *message);
size_t cdotaclient_msg__challenge_reroll__pack
                     (const CDOTAClientMsgChallengeReroll   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__challenge_reroll__pack_to_buffer
                     (const CDOTAClientMsgChallengeReroll   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgChallengeReroll *
       cdotaclient_msg__challenge_reroll__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__challenge_reroll__free_unpacked
                     (CDOTAClientMsgChallengeReroll *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgCoinWager methods */
void   cdotaclient_msg__coin_wager__init
                     (CDOTAClientMsgCoinWager         *message);
size_t cdotaclient_msg__coin_wager__get_packed_size
                     (const CDOTAClientMsgCoinWager   *message);
size_t cdotaclient_msg__coin_wager__pack
                     (const CDOTAClientMsgCoinWager   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__coin_wager__pack_to_buffer
                     (const CDOTAClientMsgCoinWager   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgCoinWager *
       cdotaclient_msg__coin_wager__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__coin_wager__free_unpacked
                     (CDOTAClientMsgCoinWager *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgEventPointsTip methods */
void   cdotaclient_msg__event_points_tip__init
                     (CDOTAClientMsgEventPointsTip         *message);
size_t cdotaclient_msg__event_points_tip__get_packed_size
                     (const CDOTAClientMsgEventPointsTip   *message);
size_t cdotaclient_msg__event_points_tip__pack
                     (const CDOTAClientMsgEventPointsTip   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__event_points_tip__pack_to_buffer
                     (const CDOTAClientMsgEventPointsTip   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgEventPointsTip *
       cdotaclient_msg__event_points_tip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__event_points_tip__free_unpacked
                     (CDOTAClientMsgEventPointsTip *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgExecuteOrders methods */
void   cdotaclient_msg__execute_orders__init
                     (CDOTAClientMsgExecuteOrders         *message);
size_t cdotaclient_msg__execute_orders__get_packed_size
                     (const CDOTAClientMsgExecuteOrders   *message);
size_t cdotaclient_msg__execute_orders__pack
                     (const CDOTAClientMsgExecuteOrders   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__execute_orders__pack_to_buffer
                     (const CDOTAClientMsgExecuteOrders   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgExecuteOrders *
       cdotaclient_msg__execute_orders__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__execute_orders__free_unpacked
                     (CDOTAClientMsgExecuteOrders *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgXPAlert methods */
void   cdotaclient_msg__xpalert__init
                     (CDOTAClientMsgXPAlert         *message);
size_t cdotaclient_msg__xpalert__get_packed_size
                     (const CDOTAClientMsgXPAlert   *message);
size_t cdotaclient_msg__xpalert__pack
                     (const CDOTAClientMsgXPAlert   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__xpalert__pack_to_buffer
                     (const CDOTAClientMsgXPAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgXPAlert *
       cdotaclient_msg__xpalert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__xpalert__free_unpacked
                     (CDOTAClientMsgXPAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgMatchMetadata methods */
void   cdotaclient_msg__match_metadata__init
                     (CDOTAClientMsgMatchMetadata         *message);
size_t cdotaclient_msg__match_metadata__get_packed_size
                     (const CDOTAClientMsgMatchMetadata   *message);
size_t cdotaclient_msg__match_metadata__pack
                     (const CDOTAClientMsgMatchMetadata   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__match_metadata__pack_to_buffer
                     (const CDOTAClientMsgMatchMetadata   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgMatchMetadata *
       cdotaclient_msg__match_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__match_metadata__free_unpacked
                     (CDOTAClientMsgMatchMetadata *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgKillMyHero methods */
void   cdotaclient_msg__kill_my_hero__init
                     (CDOTAClientMsgKillMyHero         *message);
size_t cdotaclient_msg__kill_my_hero__get_packed_size
                     (const CDOTAClientMsgKillMyHero   *message);
size_t cdotaclient_msg__kill_my_hero__pack
                     (const CDOTAClientMsgKillMyHero   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__kill_my_hero__pack_to_buffer
                     (const CDOTAClientMsgKillMyHero   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgKillMyHero *
       cdotaclient_msg__kill_my_hero__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__kill_my_hero__free_unpacked
                     (CDOTAClientMsgKillMyHero *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgQuestStatus methods */
void   cdotaclient_msg__quest_status__init
                     (CDOTAClientMsgQuestStatus         *message);
size_t cdotaclient_msg__quest_status__get_packed_size
                     (const CDOTAClientMsgQuestStatus   *message);
size_t cdotaclient_msg__quest_status__pack
                     (const CDOTAClientMsgQuestStatus   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__quest_status__pack_to_buffer
                     (const CDOTAClientMsgQuestStatus   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgQuestStatus *
       cdotaclient_msg__quest_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__quest_status__free_unpacked
                     (CDOTAClientMsgQuestStatus *message,
                      ProtobufCAllocator *allocator);
/* CDOTAClientMsgToggleAutoattack methods */
void   cdotaclient_msg__toggle_autoattack__init
                     (CDOTAClientMsgToggleAutoattack         *message);
size_t cdotaclient_msg__toggle_autoattack__get_packed_size
                     (const CDOTAClientMsgToggleAutoattack   *message);
size_t cdotaclient_msg__toggle_autoattack__pack
                     (const CDOTAClientMsgToggleAutoattack   *message,
                      uint8_t             *out);
size_t cdotaclient_msg__toggle_autoattack__pack_to_buffer
                     (const CDOTAClientMsgToggleAutoattack   *message,
                      ProtobufCBuffer     *buffer);
CDOTAClientMsgToggleAutoattack *
       cdotaclient_msg__toggle_autoattack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaclient_msg__toggle_autoattack__free_unpacked
                     (CDOTAClientMsgToggleAutoattack *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDOTAClientMsgMapPing_Closure)
                 (const CDOTAClientMsgMapPing *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgItemAlert_Closure)
                 (const CDOTAClientMsgItemAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgEnemyItemAlert_Closure)
                 (const CDOTAClientMsgEnemyItemAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgModifierAlert_Closure)
                 (const CDOTAClientMsgModifierAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgClickedBuff_Closure)
                 (const CDOTAClientMsgClickedBuff *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgHPManaAlert_Closure)
                 (const CDOTAClientMsgHPManaAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgGlyphAlert_Closure)
                 (const CDOTAClientMsgGlyphAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgMapLine_Closure)
                 (const CDOTAClientMsgMapLine *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgAspectRatio_Closure)
                 (const CDOTAClientMsgAspectRatio *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgUnitsAutoAttackMode_Closure)
                 (const CDOTAClientMsgUnitsAutoAttackMode *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgUnitsAutoAttackAfterSpell_Closure)
                 (const CDOTAClientMsgUnitsAutoAttackAfterSpell *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgTeleportRequiresHalt_Closure)
                 (const CDOTAClientMsgTeleportRequiresHalt *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgSearchString_Closure)
                 (const CDOTAClientMsgSearchString *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgPause_Closure)
                 (const CDOTAClientMsgPause *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgShopViewMode_Closure)
                 (const CDOTAClientMsgShopViewMode *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgSetUnitShareFlag_Closure)
                 (const CDOTAClientMsgSetUnitShareFlag *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgSwapRequest_Closure)
                 (const CDOTAClientMsgSwapRequest *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgSwapAccept_Closure)
                 (const CDOTAClientMsgSwapAccept *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgWorldLine_Closure)
                 (const CDOTAClientMsgWorldLine *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgRequestGraphUpdate_Closure)
                 (const CDOTAClientMsgRequestGraphUpdate *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgChatWheel_Closure)
                 (const CDOTAClientMsgChatWheel *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgSendStatPopup_Closure)
                 (const CDOTAClientMsgSendStatPopup *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgBeginLastHitChallenge_Closure)
                 (const CDOTAClientMsgBeginLastHitChallenge *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgUpdateQuickBuyItem_Closure)
                 (const CDOTAClientMsgUpdateQuickBuyItem *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgUpdateQuickBuy_Closure)
                 (const CDOTAClientMsgUpdateQuickBuy *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgUpdateCoachListen_Closure)
                 (const CDOTAClientMsgUpdateCoachListen *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgCoachHUDPing_Closure)
                 (const CDOTAClientMsgCoachHUDPing *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgRecordVote_Closure)
                 (const CDOTAClientMsgRecordVote *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgWillPurchaseAlert_Closure)
                 (const CDOTAClientMsgWillPurchaseAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgBuyBackStateAlert_Closure)
                 (const CDOTAClientMsgBuyBackStateAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgQuickBuyAlert_Closure)
                 (const CDOTAClientMsgQuickBuyAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgPlayerShowCase_Closure)
                 (const CDOTAClientMsgPlayerShowCase *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgCameraZoomAmount_Closure)
                 (const CDOTAClientMsgCameraZoomAmount *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgBroadcasterUsingCameraman_Closure)
                 (const CDOTAClientMsgBroadcasterUsingCameraman *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgBroadcasterUsingAssistedCameraOperator_Closure)
                 (const CDOTAClientMsgBroadcasterUsingAssistedCameraOperator *message,
                  void *closure_data);
typedef void (*CAdditionalEquipSlotClientMsg_Closure)
                 (const CAdditionalEquipSlotClientMsg *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgFreeInventory_Closure)
                 (const CDOTAClientMsgFreeInventory *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgFillEmptySlotsWithBots_Closure)
                 (const CDOTAClientMsgFillEmptySlotsWithBots *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgHeroStatueLike_Closure)
                 (const CDOTAClientMsgHeroStatueLike *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgTeamShowcaseEditor_Closure)
                 (const CDOTAClientMsgTeamShowcaseEditor *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgTeamShowcaseClientData_Closure)
                 (const CDOTAClientMsgTeamShowcaseClientData *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgPlayTeamShowcase_Closure)
                 (const CDOTAClientMsgPlayTeamShowcase *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgEventCNY2015Cmd_Closure)
                 (const CDOTAClientMsgEventCNY2015Cmd *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgDemoHero_Closure)
                 (const CDOTAClientMsgDemoHero *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgChallengeSelect_Closure)
                 (const CDOTAClientMsgChallengeSelect *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgChallengeReroll_Closure)
                 (const CDOTAClientMsgChallengeReroll *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgCoinWager_Closure)
                 (const CDOTAClientMsgCoinWager *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgEventPointsTip_Closure)
                 (const CDOTAClientMsgEventPointsTip *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgExecuteOrders_Closure)
                 (const CDOTAClientMsgExecuteOrders *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgXPAlert_Closure)
                 (const CDOTAClientMsgXPAlert *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgMatchMetadata_Closure)
                 (const CDOTAClientMsgMatchMetadata *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgKillMyHero_Closure)
                 (const CDOTAClientMsgKillMyHero *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgQuestStatus_Closure)
                 (const CDOTAClientMsgQuestStatus *message,
                  void *closure_data);
typedef void (*CDOTAClientMsgToggleAutoattack_Closure)
                 (const CDOTAClientMsgToggleAutoattack *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    edota_client_messages__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__map_ping__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__item_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__enemy_item_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__modifier_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__clicked_buff__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__hpmana_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__glyph_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__map_line__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__aspect_ratio__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__units_auto_attack_mode__descriptor;
extern const ProtobufCEnumDescriptor    cdotaclient_msg__units_auto_attack_mode__emode__descriptor;
extern const ProtobufCEnumDescriptor    cdotaclient_msg__units_auto_attack_mode__eunit_type__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__units_auto_attack_after_spell__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__teleport_requires_halt__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__search_string__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__pause__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__shop_view_mode__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__set_unit_share_flag__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__swap_request__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__swap_accept__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__world_line__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__request_graph_update__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__chat_wheel__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__send_stat_popup__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__begin_last_hit_challenge__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__update_quick_buy_item__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__update_quick_buy__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__update_coach_listen__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__coach_hudping__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__record_vote__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__will_purchase_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__buy_back_state_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__quick_buy_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__player_show_case__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__camera_zoom_amount__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__broadcaster_using_cameraman__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__broadcaster_using_assisted_camera_operator__descriptor;
extern const ProtobufCMessageDescriptor cadditional_equip_slot_client_msg__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__free_inventory__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__fill_empty_slots_with_bots__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__hero_statue_like__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__team_showcase_editor__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__team_showcase_client_data__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__play_team_showcase__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__event_cny2015_cmd__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__demo_hero__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__challenge_select__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__challenge_reroll__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__coin_wager__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__event_points_tip__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__execute_orders__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__xpalert__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__match_metadata__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__kill_my_hero__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__quest_status__descriptor;
extern const ProtobufCMessageDescriptor cdotaclient_msg__toggle_autoattack__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fclientmessages_2eproto__INCLUDED */
