/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_broadcastmessages.proto */

#ifndef PROTOBUF_C_dota_5fbroadcastmessages_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fbroadcastmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _CDOTABroadcastMsg CDOTABroadcastMsg;
typedef struct _CDOTABroadcastMsgLANLobbyRequest CDOTABroadcastMsgLANLobbyRequest;
typedef struct _CDOTABroadcastMsgLANLobbyReply CDOTABroadcastMsgLANLobbyReply;
typedef struct _CDOTABroadcastMsgLANLobbyReply__CLobbyMember CDOTABroadcastMsgLANLobbyReply__CLobbyMember;


/* --- enums --- */

typedef enum _EDotaBroadcastMessages {
  EDOTA_BROADCAST_MESSAGES__DOTA_BM_LANLobbyRequest = 1,
  EDOTA_BROADCAST_MESSAGES__DOTA_BM_LANLobbyReply = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTA_BROADCAST_MESSAGES)
} EDotaBroadcastMessages;

/* --- messages --- */

struct  _CDOTABroadcastMsg
{
  ProtobufCMessage base;
  EDotaBroadcastMessages type;
  protobuf_c_boolean has_msg;
  ProtobufCBinaryData msg;
};
#define CDOTABROADCAST_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotabroadcast_msg__descriptor) \
    , EDOTA_BROADCAST_MESSAGES__DOTA_BM_LANLobbyRequest, 0,{0,NULL} }


struct  _CDOTABroadcastMsgLANLobbyRequest
{
  ProtobufCMessage base;
};
#define CDOTABROADCAST_MSG__LANLOBBY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotabroadcast_msg__lanlobby_request__descriptor) \
     }


struct  _CDOTABroadcastMsgLANLobbyReply__CLobbyMember
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  char *player_name;
};
#define CDOTABROADCAST_MSG__LANLOBBY_REPLY__CLOBBY_MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotabroadcast_msg__lanlobby_reply__clobby_member__descriptor) \
    , 0,0, NULL }


struct  _CDOTABroadcastMsgLANLobbyReply
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint64_t id;
  protobuf_c_boolean has_tournament_id;
  uint32_t tournament_id;
  protobuf_c_boolean has_tournament_game_id;
  uint32_t tournament_game_id;
  size_t n_members;
  CDOTABroadcastMsgLANLobbyReply__CLobbyMember **members;
  protobuf_c_boolean has_requires_pass_key;
  protobuf_c_boolean requires_pass_key;
  protobuf_c_boolean has_leader_account_id;
  uint32_t leader_account_id;
  protobuf_c_boolean has_game_mode;
  uint32_t game_mode;
  char *name;
  protobuf_c_boolean has_players;
  uint32_t players;
};
#define CDOTABROADCAST_MSG__LANLOBBY_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotabroadcast_msg__lanlobby_reply__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, NULL, 0,0 }


/* CDOTABroadcastMsg methods */
void   cdotabroadcast_msg__init
                     (CDOTABroadcastMsg         *message);
size_t cdotabroadcast_msg__get_packed_size
                     (const CDOTABroadcastMsg   *message);
size_t cdotabroadcast_msg__pack
                     (const CDOTABroadcastMsg   *message,
                      uint8_t             *out);
size_t cdotabroadcast_msg__pack_to_buffer
                     (const CDOTABroadcastMsg   *message,
                      ProtobufCBuffer     *buffer);
CDOTABroadcastMsg *
       cdotabroadcast_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotabroadcast_msg__free_unpacked
                     (CDOTABroadcastMsg *message,
                      ProtobufCAllocator *allocator);
/* CDOTABroadcastMsgLANLobbyRequest methods */
void   cdotabroadcast_msg__lanlobby_request__init
                     (CDOTABroadcastMsgLANLobbyRequest         *message);
size_t cdotabroadcast_msg__lanlobby_request__get_packed_size
                     (const CDOTABroadcastMsgLANLobbyRequest   *message);
size_t cdotabroadcast_msg__lanlobby_request__pack
                     (const CDOTABroadcastMsgLANLobbyRequest   *message,
                      uint8_t             *out);
size_t cdotabroadcast_msg__lanlobby_request__pack_to_buffer
                     (const CDOTABroadcastMsgLANLobbyRequest   *message,
                      ProtobufCBuffer     *buffer);
CDOTABroadcastMsgLANLobbyRequest *
       cdotabroadcast_msg__lanlobby_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotabroadcast_msg__lanlobby_request__free_unpacked
                     (CDOTABroadcastMsgLANLobbyRequest *message,
                      ProtobufCAllocator *allocator);
/* CDOTABroadcastMsgLANLobbyReply__CLobbyMember methods */
void   cdotabroadcast_msg__lanlobby_reply__clobby_member__init
                     (CDOTABroadcastMsgLANLobbyReply__CLobbyMember         *message);
/* CDOTABroadcastMsgLANLobbyReply methods */
void   cdotabroadcast_msg__lanlobby_reply__init
                     (CDOTABroadcastMsgLANLobbyReply         *message);
size_t cdotabroadcast_msg__lanlobby_reply__get_packed_size
                     (const CDOTABroadcastMsgLANLobbyReply   *message);
size_t cdotabroadcast_msg__lanlobby_reply__pack
                     (const CDOTABroadcastMsgLANLobbyReply   *message,
                      uint8_t             *out);
size_t cdotabroadcast_msg__lanlobby_reply__pack_to_buffer
                     (const CDOTABroadcastMsgLANLobbyReply   *message,
                      ProtobufCBuffer     *buffer);
CDOTABroadcastMsgLANLobbyReply *
       cdotabroadcast_msg__lanlobby_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotabroadcast_msg__lanlobby_reply__free_unpacked
                     (CDOTABroadcastMsgLANLobbyReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDOTABroadcastMsg_Closure)
                 (const CDOTABroadcastMsg *message,
                  void *closure_data);
typedef void (*CDOTABroadcastMsgLANLobbyRequest_Closure)
                 (const CDOTABroadcastMsgLANLobbyRequest *message,
                  void *closure_data);
typedef void (*CDOTABroadcastMsgLANLobbyReply__CLobbyMember_Closure)
                 (const CDOTABroadcastMsgLANLobbyReply__CLobbyMember *message,
                  void *closure_data);
typedef void (*CDOTABroadcastMsgLANLobbyReply_Closure)
                 (const CDOTABroadcastMsgLANLobbyReply *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    edota_broadcast_messages__descriptor;
extern const ProtobufCMessageDescriptor cdotabroadcast_msg__descriptor;
extern const ProtobufCMessageDescriptor cdotabroadcast_msg__lanlobby_request__descriptor;
extern const ProtobufCMessageDescriptor cdotabroadcast_msg__lanlobby_reply__descriptor;
extern const ProtobufCMessageDescriptor cdotabroadcast_msg__lanlobby_reply__clobby_member__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fbroadcastmessages_2eproto__INCLUDED */
