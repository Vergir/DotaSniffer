/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_gcmessages_client_fantasy.proto */

#ifndef PROTOBUF_C_dota_5fgcmessages_5fclient_5ffantasy_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fgcmessages_5fclient_5ffantasy_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "dota_shared_enums.pb-c.h"

typedef struct _CMsgGCPlayerInfo CMsgGCPlayerInfo;
typedef struct _CMsgGCPlayerInfo__PlayerInfo CMsgGCPlayerInfo__PlayerInfo;
typedef struct _CMsgGCPlayerInfo__RegionLeaderboard CMsgGCPlayerInfo__RegionLeaderboard;
typedef struct _CMsgDOTACreateFantasyLeagueRequest CMsgDOTACreateFantasyLeagueRequest;
typedef struct _CMsgDOTACreateFantasyLeagueResponse CMsgDOTACreateFantasyLeagueResponse;
typedef struct _CMsgFantasyLeagueScoring CMsgFantasyLeagueScoring;
typedef struct _CMsgDOTAFantasyLeagueInfo CMsgDOTAFantasyLeagueInfo;
typedef struct _CMsgDOTAFantasyLeagueInfo__OwnerInfo CMsgDOTAFantasyLeagueInfo__OwnerInfo;
typedef struct _CMsgDOTAFantasyLeagueEditInfoRequest CMsgDOTAFantasyLeagueEditInfoRequest;
typedef struct _CMsgDOTAFantasyLeagueEditInfoResponse CMsgDOTAFantasyLeagueEditInfoResponse;
typedef struct _CMsgDOTAFantasyLeagueFindRequest CMsgDOTAFantasyLeagueFindRequest;
typedef struct _CMsgDOTAFantasyLeagueFindResponse CMsgDOTAFantasyLeagueFindResponse;
typedef struct _CMsgDOTAFantasyLeagueInfoRequest CMsgDOTAFantasyLeagueInfoRequest;
typedef struct _CMsgDOTAFantasyLeagueInfoResponse CMsgDOTAFantasyLeagueInfoResponse;
typedef struct _CMsgDOTAFantasyLeagueMatchupsRequest CMsgDOTAFantasyLeagueMatchupsRequest;
typedef struct _CMsgDOTAFantasyLeagueMatchupsResponse CMsgDOTAFantasyLeagueMatchupsResponse;
typedef struct _CMsgDOTAFantasyLeagueMatchupsResponse__Matchup CMsgDOTAFantasyLeagueMatchupsResponse__Matchup;
typedef struct _CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups;
typedef struct _CMsgDOTAEditFantasyTeamRequest CMsgDOTAEditFantasyTeamRequest;
typedef struct _CMsgDOTAEditFantasyTeamResponse CMsgDOTAEditFantasyTeamResponse;
typedef struct _CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID;
typedef struct _CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID;
typedef struct _CMsgDOTAFantasyTeamInfoResponse CMsgDOTAFantasyTeamInfoResponse;
typedef struct _CMsgDOTAFantasyTeamInfo CMsgDOTAFantasyTeamInfo;
typedef struct _CMsgDOTAFantasyTeamScoreRequest CMsgDOTAFantasyTeamScoreRequest;
typedef struct _CMsgDOTAFantasyTeamScoreResponse CMsgDOTAFantasyTeamScoreResponse;
typedef struct _CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore;
typedef struct _CMsgDOTAFantasyTeamStandingsRequest CMsgDOTAFantasyTeamStandingsRequest;
typedef struct _CMsgDOTAFantasyTeamStandingsResponse CMsgDOTAFantasyTeamStandingsResponse;
typedef struct _CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore;
typedef struct _CMsgDOTAFantasyPlayerScoreRequest CMsgDOTAFantasyPlayerScoreRequest;
typedef struct _CMsgDOTAFantasyPlayerScoreResponse CMsgDOTAFantasyPlayerScoreResponse;
typedef struct _CMsgDOTAFantasyPlayerStandingsRequest CMsgDOTAFantasyPlayerStandingsRequest;
typedef struct _CMsgDOTAFantasyPlayerStandingsResponse CMsgDOTAFantasyPlayerStandingsResponse;
typedef struct _CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore;
typedef struct _CMsgDOTAFantasyPlayerInfoRequest CMsgDOTAFantasyPlayerInfoRequest;
typedef struct _CMsgDOTAFantasyPlayerInfoResponse CMsgDOTAFantasyPlayerInfoResponse;
typedef struct _CMsgDOTAFantasyLeagueCreateRequest CMsgDOTAFantasyLeagueCreateRequest;
typedef struct _CMsgDOTAFantasyLeagueCreateResponse CMsgDOTAFantasyLeagueCreateResponse;
typedef struct _CMsgDOTAFantasyTeamCreateRequest CMsgDOTAFantasyTeamCreateRequest;
typedef struct _CMsgDOTAFantasyTeamCreateResponse CMsgDOTAFantasyTeamCreateResponse;
typedef struct _CMsgDOTAFantasyLeagueEditInvitesRequest CMsgDOTAFantasyLeagueEditInvitesRequest;
typedef struct _CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange;
typedef struct _CMsgDOTAFantasyLeagueEditInvitesResponse CMsgDOTAFantasyLeagueEditInvitesResponse;
typedef struct _CMsgDOTAFantasyLeagueDraftStatusRequest CMsgDOTAFantasyLeagueDraftStatusRequest;
typedef struct _CMsgDOTAFantasyLeagueDraftStatus CMsgDOTAFantasyLeagueDraftStatus;
typedef struct _CMsgDOTAFantasyLeagueDraftPlayerRequest CMsgDOTAFantasyLeagueDraftPlayerRequest;
typedef struct _CMsgDOTAFantasyLeagueDraftPlayerResponse CMsgDOTAFantasyLeagueDraftPlayerResponse;
typedef struct _CMsgDOTAFantasyTeamRosterSwapRequest CMsgDOTAFantasyTeamRosterSwapRequest;
typedef struct _CMsgDOTAFantasyTeamRosterSwapResponse CMsgDOTAFantasyTeamRosterSwapResponse;
typedef struct _CMsgDOTAFantasyTeamRosterAddDropRequest CMsgDOTAFantasyTeamRosterAddDropRequest;
typedef struct _CMsgDOTAFantasyTeamRosterAddDropResponse CMsgDOTAFantasyTeamRosterAddDropResponse;
typedef struct _CMsgDOTAFantasyTeamTradesRequest CMsgDOTAFantasyTeamTradesRequest;
typedef struct _CMsgDOTAFantasyTeamTradesResponse CMsgDOTAFantasyTeamTradesResponse;
typedef struct _CMsgDOTAFantasyTeamTradesResponse__Trade CMsgDOTAFantasyTeamTradesResponse__Trade;
typedef struct _CMsgDOTAFantasyTeamTradeCancelRequest CMsgDOTAFantasyTeamTradeCancelRequest;
typedef struct _CMsgDOTAFantasyTeamTradeCancelResponse CMsgDOTAFantasyTeamTradeCancelResponse;
typedef struct _CMsgDOTAFantasyTeamRosterRequest CMsgDOTAFantasyTeamRosterRequest;
typedef struct _CMsgDOTAFantasyTeamRosterResponse CMsgDOTAFantasyTeamRosterResponse;
typedef struct _CMsgDOTAFantasyPlayerHisoricalStatsRequest CMsgDOTAFantasyPlayerHisoricalStatsRequest;
typedef struct _CMsgDOTAFantasyPlayerHisoricalStatsResponse CMsgDOTAFantasyPlayerHisoricalStatsResponse;
typedef struct _CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator;
typedef struct _CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats;
typedef struct _CMsgDOTAFantasyMessageAdd CMsgDOTAFantasyMessageAdd;
typedef struct _CMsgDOTAFantasyMessagesRequest CMsgDOTAFantasyMessagesRequest;
typedef struct _CMsgDOTAFantasyMessagesResponse CMsgDOTAFantasyMessagesResponse;
typedef struct _CMsgDOTAFantasyMessagesResponse__Message CMsgDOTAFantasyMessagesResponse__Message;
typedef struct _CMsgDOTAFantasyRemoveOwner CMsgDOTAFantasyRemoveOwner;
typedef struct _CMsgDOTAFantasyRemoveOwnerResponse CMsgDOTAFantasyRemoveOwnerResponse;
typedef struct _CMsgDOTAFantasyScheduledMatchesRequest CMsgDOTAFantasyScheduledMatchesRequest;
typedef struct _CMsgDOTAFantasyScheduledMatchesResponse CMsgDOTAFantasyScheduledMatchesResponse;
typedef struct _CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays;
typedef struct _CMsgDOTAFantasyLeaveLeagueRequest CMsgDOTAFantasyLeaveLeagueRequest;
typedef struct _CMsgDOTAFantasyLeaveLeagueResponse CMsgDOTAFantasyLeaveLeagueResponse;
typedef struct _CMsgDOTAFantasyPlayerScoreDetailsRequest CMsgDOTAFantasyPlayerScoreDetailsRequest;
typedef struct _CMsgDOTAFantasyPlayerScoreDetailsResponse CMsgDOTAFantasyPlayerScoreDetailsResponse;
typedef struct _CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData;
typedef struct _CMsgDOTAPassportVoteTeamGuess CMsgDOTAPassportVoteTeamGuess;
typedef struct _CMsgDOTAPassportVoteGenericSelection CMsgDOTAPassportVoteGenericSelection;
typedef struct _CMsgDOTAPassportStampedPlayer CMsgDOTAPassportStampedPlayer;
typedef struct _CMsgDOTAPassportPlayerCardChallenge CMsgDOTAPassportPlayerCardChallenge;
typedef struct _CMsgDOTAPassportVote CMsgDOTAPassportVote;
typedef struct _CMsgDOTAFantasyPlayerMatchStats CMsgDOTAFantasyPlayerMatchStats;
typedef struct _CMsgDOTAFantasyPlayerMatchStats__Match CMsgDOTAFantasyPlayerMatchStats__Match;
typedef struct _CMsgClientToGCGetPlayerCardRosterRequest CMsgClientToGCGetPlayerCardRosterRequest;
typedef struct _CMsgClientToGCGetPlayerCardRosterResponse CMsgClientToGCGetPlayerCardRosterResponse;
typedef struct _CMsgClientToGCSetPlayerCardRosterRequest CMsgClientToGCSetPlayerCardRosterRequest;
typedef struct _CMsgClientToGCSetPlayerCardRosterResponse CMsgClientToGCSetPlayerCardRosterResponse;


/* --- enums --- */

typedef enum _CMsgDOTACreateFantasyLeagueResponse__EResult {
  CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__ERROR_TOO_MANY_LEAGUES = 2,
  CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__ERROR_INVALID_TEAM_COUNT = 3,
  CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__ERROR_CREATION_DISABLED = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT)
} CMsgDOTACreateFantasyLeagueResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueEditInfoResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueEditInfoResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueFindResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_LEAGUE_NOT_FOUND = 1,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_BAD_PASSWORD = 2,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 3,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_FULL = 4,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_ALREADY_MEMBER = 5,
  CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__ERROR_LEAGUE_LOCKED = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueFindResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueInfoResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__ERESULT__ERROR_BAD_LEAGUE_ID = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueInfoResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueMatchupsResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT__ERROR_BAD_LEAGUE_ID = 2,
  CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueMatchupsResponse__EResult;
typedef enum _CMsgDOTAEditFantasyTeamResponse__EResult {
  CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__ERROR_INVALID_TEAM_INFO = 2,
  CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__ERROR_NAME_ALREADY_TAKEN = 3,
  CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT)
} CMsgDOTAEditFantasyTeamResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamScoreResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2,
  CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT__ERROR_OWNER_NOT_IN_LEAGUE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamScoreResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamStandingsResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamStandingsResponse__EResult;
typedef enum _CMsgDOTAFantasyPlayerScoreResponse__EResult {
  CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__ERESULT)
} CMsgDOTAFantasyPlayerScoreResponse__EResult;
typedef enum _CMsgDOTAFantasyPlayerStandingsResponse__EResult {
  CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__ERESULT)
} CMsgDOTAFantasyPlayerStandingsResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueCreateResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 1,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_BAD_SEASON_ID = 2,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_BAD_LEAGUE_NAME = 3,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_BAD_TEAM_NAME = 4,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 5,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_FAILED_LOGO_UPLOAD = 6,
  CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__ERROR_NO_TICKET = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueCreateResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamCreateResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 1,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_FAILED_LOGO_UPLOAD = 2,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_BAD_FANTASY_LEAGUE_ID = 3,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_BAD_NAME = 4,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_FULL = 5,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_ALREADY_MEMBER = 6,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_BAD_PASSWORD = 7,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 8,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_NO_TICKET = 9,
  CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__ERROR_LEAGUE_LOCKED = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamCreateResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueEditInvitesResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueEditInvitesResponse__EResult;
typedef enum _CMsgDOTAFantasyLeagueDraftPlayerResponse__EResult {
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_INVALID_FANTASY_LEAGUE = 2,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_FANTASY_LEAGUE_NOT_DRAFTING = 3,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_OWNER_NOT_IN_LEAGUE = 4,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_NOT_OWNERS_TURN = 5,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_PLAYER_INVALID = 6,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_PLAYER_UNAVAILABLE = 7,
  CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__ERROR_PLAYER_NO_VALID_SLOTS = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeagueDraftPlayerResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamRosterSwapResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__ERROR_OWNER_NOT_IN_LEAGUE = 2,
  CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__ERROR_SLOTS_INVALID = 3,
  CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__ERROR_SLOT_LOCKED = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamRosterSwapResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamRosterAddDropResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__ERROR_OWNER_NOT_IN_LEAGUE = 2,
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__ERROR_PLAYER_NOT_AVAILABLE = 3,
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__ERROR_PLAYER_NOT_ON_TEAM = 4,
  CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__ERROR_TRADE_ALREADY_PENDING = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamRosterAddDropResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamTradesResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamTradesResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamTradeCancelResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2,
  CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT__ERROR_NO_TRADE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamTradeCancelResponse__EResult;
typedef enum _CMsgDOTAFantasyTeamRosterResponse__EResult {
  CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2,
  CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT__ERROR_OWNER_NOT_IN_LEAGUE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT)
} CMsgDOTAFantasyTeamRosterResponse__EResult;
typedef enum _CMsgDOTAFantasyPlayerHisoricalStatsResponse__EResult {
  CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__ERESULT)
} CMsgDOTAFantasyPlayerHisoricalStatsResponse__EResult;
typedef enum _CMsgDOTAFantasyMessagesResponse__EResult {
  CMSG_DOTAFANTASY_MESSAGES_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_MESSAGES_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_MESSAGES_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_MESSAGES_RESPONSE__ERESULT)
} CMsgDOTAFantasyMessagesResponse__EResult;
typedef enum _CMsgDOTAFantasyRemoveOwnerResponse__EResult {
  CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__ERROR_NO_PERMISSION = 2,
  CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__ERROR_LEAGUE_LOCKED = 3,
  CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__ERROR_NOT_A_MEMBER = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT)
} CMsgDOTAFantasyRemoveOwnerResponse__EResult;
typedef enum _CMsgDOTAFantasyScheduledMatchesResponse__EResult {
  CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__ERESULT)
} CMsgDOTAFantasyScheduledMatchesResponse__EResult;
typedef enum _CMsgDOTAFantasyLeaveLeagueResponse__EResult {
  CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__ERROR_NOT_MEMBER = 2,
  CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__ERROR_LEAGUE_NOT_FOUND = 3,
  CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__ERROR_DRAFT_ACTIVE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT)
} CMsgDOTAFantasyLeaveLeagueResponse__EResult;
typedef enum _CMsgDOTAFantasyPlayerScoreDetailsResponse__EResult {
  CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__ERESULT__ERROR_NOT_MEMBER = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__ERESULT)
} CMsgDOTAFantasyPlayerScoreDetailsResponse__EResult;
typedef enum _CMsgClientToGCGetPlayerCardRosterResponse__Result {
  CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_UNSPECIFIED = 1,
  CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_INVALID_LEAGUE_ID = 2,
  CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_INVALID_TIMESTAMP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT)
} CMsgClientToGCGetPlayerCardRosterResponse__Result;
typedef enum _CMsgClientToGCSetPlayerCardRosterResponse__Result {
  CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_UNSPECIFIED = 1,
  CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_INVALID_LEAGUE_ID = 2,
  CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_INVALID_TIMESTAMP = 3,
  CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__ERROR_PLAYER_CARD_NOT_OWNED = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT)
} CMsgClientToGCSetPlayerCardRosterResponse__Result;
typedef enum _DOTA2013PassportSelectionIndices {
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_0 = 0,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_1 = 1,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_2 = 2,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_3 = 3,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_4 = 4,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_5 = 5,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_6 = 6,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_7 = 7,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_8 = 8,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_9 = 9,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_0 = 10,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_1 = 11,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_2 = 12,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_3 = 13,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_4 = 14,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_5 = 15,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_6 = 16,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_7 = 17,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_8 = 18,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_9 = 19,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_10 = 20,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_11 = 21,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_12 = 22,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_13 = 23,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_WEST_14 = 24,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_0 = 25,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_1 = 26,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_2 = 27,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_3 = 28,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_4 = 29,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_5 = 30,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_6 = 31,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_7 = 32,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_8 = 33,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_9 = 34,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_10 = 35,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_11 = 36,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_12 = 37,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_13 = 38,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_QUALPRED_EAST_14 = 39,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_TEAMCUP_TEAM = 40,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_TEAMCUP_PLAYER = 41,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_TEAMCUP_TEAM_LOCK = 42,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_TEAMCUP_PLAYER_LOCK = 43,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_0 = 44,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_1 = 45,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_2 = 46,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_3 = 47,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_4 = 48,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_5 = 49,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_6 = 50,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_7 = 51,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_8 = 52,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_9 = 53,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_10 = 54,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_11 = 55,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_12 = 56,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_13 = 57,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_14 = 58,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_15 = 59,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_16 = 60,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_17 = 61,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_18 = 62,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_19 = 63,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_20 = 64,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_21 = 65,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_22 = 66,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_23 = 67,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_24 = 68,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_25 = 69,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_26 = 70,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_27 = 71,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_28 = 72,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_29 = 73,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_30 = 74,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_31 = 75,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_32 = 76,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_33 = 77,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_34 = 78,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_35 = 79,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_36 = 80,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_37 = 81,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_38 = 82,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_39 = 83,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_40 = 84,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_41 = 85,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_42 = 86,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_EVENTPRED_43 = 87,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_0 = 88,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_1 = 89,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_2 = 90,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_3 = 91,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_4 = 92,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_5 = 93,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_6 = 94,
  DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_SOLO_7 = 95
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA_2013_PASSPORT_SELECTION_INDICES)
} DOTA2013PassportSelectionIndices;

/* --- messages --- */

struct  _CMsgGCPlayerInfo__PlayerInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  char *name;
  char *country_code;
  protobuf_c_boolean has_fantasy_role;
  uint32_t fantasy_role;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *team_name;
  char *team_tag;
  char *sponsor;
  protobuf_c_boolean has_is_locked;
  protobuf_c_boolean is_locked;
  protobuf_c_boolean has_is_pro;
  protobuf_c_boolean is_pro;
  protobuf_c_boolean has_locked_until;
  uint32_t locked_until;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};
#define CMSG_GCPLAYER_INFO__PLAYER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info__player_info__descriptor) \
    , 0,0, NULL, NULL, 0,0, 0,0, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCPlayerInfo__RegionLeaderboard
{
  ProtobufCMessage base;
  protobuf_c_boolean has_division;
  uint32_t division;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_GCPLAYER_INFO__REGION_LEADERBOARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info__region_leaderboard__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCPlayerInfo
{
  ProtobufCMessage base;
  size_t n_player_infos;
  CMsgGCPlayerInfo__PlayerInfo **player_infos;
  size_t n_leaderboards;
  CMsgGCPlayerInfo__RegionLeaderboard **leaderboards;
};
#define CMSG_GCPLAYER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info__descriptor) \
    , 0,NULL, 0,NULL }


struct  _CMsgDOTACreateFantasyLeagueRequest
{
  ProtobufCMessage base;
  char *league_name;
  protobuf_c_boolean has_league_logo;
  uint64_t league_logo;
  protobuf_c_boolean has_selection_mode;
  FantasySelectionMode selection_mode;
  protobuf_c_boolean has_team_count;
  uint32_t team_count;
};
#define CMSG_DOTACREATE_FANTASY_LEAGUE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacreate_fantasy_league_request__descriptor) \
    , NULL, 0,0, 0,FANTASY__SELECTION__MODE__FANTASY_SELECTION_INVALID, 0,0 }


struct  _CMsgDOTACreateFantasyLeagueResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTACreateFantasyLeagueResponse__EResult result;
};
#define CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacreate_fantasy_league_response__descriptor) \
    , 0,CMSG_DOTACREATE_FANTASY_LEAGUE_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgFantasyLeagueScoring
{
  ProtobufCMessage base;
  protobuf_c_boolean has_level;
  float level;
  protobuf_c_boolean has_kills;
  float kills;
  protobuf_c_boolean has_deaths;
  float deaths;
  protobuf_c_boolean has_assists;
  float assists;
  protobuf_c_boolean has_last_hits;
  float last_hits;
  protobuf_c_boolean has_denies;
  float denies;
  protobuf_c_boolean has_gpm;
  float gpm;
  protobuf_c_boolean has_xppm;
  float xppm;
  protobuf_c_boolean has_stuns;
  float stuns;
  protobuf_c_boolean has_healing;
  float healing;
  protobuf_c_boolean has_tower_kills;
  float tower_kills;
  protobuf_c_boolean has_roshan_kills;
  float roshan_kills;
  protobuf_c_boolean has_multiplier_premium;
  float multiplier_premium;
  protobuf_c_boolean has_multiplier_professional;
  float multiplier_professional;
};
#define CMSG_FANTASY_LEAGUE_SCORING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_fantasy_league_scoring__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueInfo__OwnerInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_left_league;
  protobuf_c_boolean left_league;
  size_t n_player_account_id;
  uint32_t *player_account_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_INFO__OWNER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_info__owner_info__descriptor) \
    , 0,0, 0,0, 0,NULL }


struct  _CMsgDOTAFantasyLeagueInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_commissioner_account_id;
  uint32_t commissioner_account_id;
  char *fantasy_league_name;
  protobuf_c_boolean has_selection_mode;
  FantasySelectionMode selection_mode;
  protobuf_c_boolean has_team_count;
  uint32_t team_count;
  protobuf_c_boolean has_logo;
  uint64_t logo;
  CMsgFantasyLeagueScoring *scoring;
  protobuf_c_boolean has_draft_time;
  uint32_t draft_time;
  protobuf_c_boolean has_draft_pick_time;
  uint32_t draft_pick_time;
  protobuf_c_boolean has_season_start;
  uint32_t season_start;
  protobuf_c_boolean has_season_length;
  uint32_t season_length;
  protobuf_c_boolean has_veto_votes;
  uint32_t veto_votes;
  protobuf_c_boolean has_acquisitions;
  uint32_t acquisitions;
  protobuf_c_boolean has_slot_1;
  uint32_t slot_1;
  protobuf_c_boolean has_slot_2;
  uint32_t slot_2;
  protobuf_c_boolean has_slot_3;
  uint32_t slot_3;
  protobuf_c_boolean has_slot_4;
  uint32_t slot_4;
  protobuf_c_boolean has_slot_5;
  uint32_t slot_5;
  protobuf_c_boolean has_bench_slots;
  uint32_t bench_slots;
  size_t n_owner_info;
  CMsgDOTAFantasyLeagueInfo__OwnerInfo **owner_info;
  size_t n_players;
  uint32_t *players;
  protobuf_c_boolean has_time_zone;
  uint32_t time_zone;
  protobuf_c_boolean has_season;
  uint32_t season;
  char *password;
};
#define CMSG_DOTAFANTASY_LEAGUE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_info__descriptor) \
    , 0,0, 0,0, NULL, 0,FANTASY__SELECTION__MODE__FANTASY_SELECTION_INVALID, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,0, 0,0, NULL }


struct  _CMsgDOTAFantasyLeagueEditInfoRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  CMsgDOTAFantasyLeagueInfo *edit_info;
};
#define CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_edit_info_request__descriptor) \
    , 0,0, NULL }


struct  _CMsgDOTAFantasyLeagueEditInfoResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueEditInfoResponse__EResult result;
};
#define CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_edit_info_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_EDIT_INFO_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyLeagueFindRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  char *password;
};
#define CMSG_DOTAFANTASY_LEAGUE_FIND_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_find_request__descriptor) \
    , 0,0, NULL }


struct  _CMsgDOTAFantasyLeagueFindResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueFindResponse__EResult result;
  char *fantasy_league_name;
  char *commissioner_name;
};
#define CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_find_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_FIND_RESPONSE__ERESULT__SUCCESS, NULL, NULL }


struct  _CMsgDOTAFantasyLeagueInfoRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_info_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyLeagueInfoResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueInfoResponse__EResult result;
};
#define CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_info_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_INFO_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyLeagueMatchupsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_matchups_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyLeagueMatchupsResponse__Matchup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_owner_account_id_1;
  uint32_t owner_account_id_1;
  protobuf_c_boolean has_owner_account_id_2;
  uint32_t owner_account_id_2;
  protobuf_c_boolean has_score_1;
  float score_1;
  protobuf_c_boolean has_score_2;
  float score_2;
};
#define CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__MATCHUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_matchups_response__matchup__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups
{
  ProtobufCMessage base;
  size_t n_matchup;
  CMsgDOTAFantasyLeagueMatchupsResponse__Matchup **matchup;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_end_time;
  uint32_t end_time;
};
#define CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__WEEKLY_MATCHUPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_matchups_response__weekly_matchups__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueMatchupsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueMatchupsResponse__EResult result;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  size_t n_weekly_matchups;
  CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups **weekly_matchups;
};
#define CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_matchups_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_MATCHUPS_RESPONSE__ERESULT__SUCCESS, 0,0, 0,NULL }


struct  _CMsgDOTAEditFantasyTeamRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
  char *team_name;
  protobuf_c_boolean has_team_logo;
  uint64_t team_logo;
};
#define CMSG_DOTAEDIT_FANTASY_TEAM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaedit_fantasy_team_request__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _CMsgDOTAEditFantasyTeamResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAEditFantasyTeamResponse__EResult result;
};
#define CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaedit_fantasy_team_response__descriptor) \
    , 0,CMSG_DOTAEDIT_FANTASY_TEAM_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_TEAM_INFO_REQUEST_BY_FANTASY_LEAGUE_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_info_request_by_fantasy_league_id__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID
{
  ProtobufCMessage base;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
};
#define CMSG_DOTAFANTASY_TEAM_INFO_REQUEST_BY_OWNER_ACCOUNT_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_info_request_by_owner_account_id__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyTeamInfoResponse
{
  ProtobufCMessage base;
  size_t n_results;
  CMsgDOTAFantasyTeamInfo **results;
};
#define CMSG_DOTAFANTASY_TEAM_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_info_response__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAFantasyTeamInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_fantasy_team_index;
  uint32_t fantasy_team_index;
  char *team_name;
  protobuf_c_boolean has_team_logo;
  uint64_t team_logo;
  protobuf_c_boolean has_wins;
  uint32_t wins;
  protobuf_c_boolean has_losses;
  uint32_t losses;
  size_t n_current_roster;
  uint32_t *current_roster;
};
#define CMSG_DOTAFANTASY_TEAM_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_info__descriptor) \
    , 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgDOTAFantasyTeamScoreRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_fantasy_team_index;
  uint32_t fantasy_team_index;
  protobuf_c_boolean has_filter_match_id;
  uint64_t filter_match_id;
  protobuf_c_boolean has_filter_start_time;
  uint32_t filter_start_time;
  protobuf_c_boolean has_filter_end_time;
  uint32_t filter_end_time;
  protobuf_c_boolean has_include_bench;
  protobuf_c_boolean include_bench;
};
#define CMSG_DOTAFANTASY_TEAM_SCORE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_score_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_score;
  float score;
};
#define CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__CMSG_PLAYER_SCORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_score_response__cmsg_player_score__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamScoreResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamScoreResponse__EResult result;
  protobuf_c_boolean has_fantasy_team_score;
  float fantasy_team_score;
  size_t n_fantasy_player_score;
  CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore **fantasy_player_score;
};
#define CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_score_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_SCORE_RESPONSE__ERESULT__SUCCESS, 0,0, 0,NULL }


struct  _CMsgDOTAFantasyTeamStandingsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_count;
  uint32_t count;
  protobuf_c_boolean has_filter_start_time;
  uint32_t filter_start_time;
  protobuf_c_boolean has_filter_end_time;
  uint32_t filter_end_time;
  protobuf_c_boolean has_filter_match_id;
  uint64_t filter_match_id;
  protobuf_c_boolean has_filter_last_match;
  protobuf_c_boolean filter_last_match;
  protobuf_c_boolean has_filter_in_hall;
  protobuf_c_boolean filter_in_hall;
};
#define CMSG_DOTAFANTASY_TEAM_STANDINGS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_standings_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_fantasy_team_index;
  uint32_t fantasy_team_index;
  protobuf_c_boolean has_fantasy_team_logo;
  uint64_t fantasy_team_logo;
  char *owner_name;
  char *fantasy_team_name;
  protobuf_c_boolean has_score;
  float score;
  protobuf_c_boolean has_score_against;
  float score_against;
  protobuf_c_boolean has_wins;
  uint32_t wins;
  protobuf_c_boolean has_losses;
  uint32_t losses;
  protobuf_c_boolean has_streak;
  int32_t streak;
};
#define CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__CMSG_TEAM_SCORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_standings_response__cmsg_team_score__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamStandingsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamStandingsResponse__EResult result;
  size_t n_team_scores;
  CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore **team_scores;
};
#define CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_standings_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_STANDINGS_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgDOTAFantasyPlayerScoreRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  protobuf_c_boolean has_filter_start_time;
  uint32_t filter_start_time;
  protobuf_c_boolean has_filter_end_time;
  uint32_t filter_end_time;
  protobuf_c_boolean has_filter_match_id;
  uint64_t filter_match_id;
  protobuf_c_boolean has_filter_last_match;
  protobuf_c_boolean filter_last_match;
};
#define CMSG_DOTAFANTASY_PLAYER_SCORE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_score_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerScoreResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyPlayerScoreResponse__EResult result;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  char *player_name;
  protobuf_c_boolean has_score;
  float score;
};
#define CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_score_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_PLAYER_SCORE_RESPONSE__ERESULT__SUCCESS, 0,0, 0,0, NULL, 0,0 }


struct  _CMsgDOTAFantasyPlayerStandingsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_count;
  uint32_t count;
  protobuf_c_boolean has_role;
  uint32_t role;
  protobuf_c_boolean has_filter_start_time;
  uint32_t filter_start_time;
  protobuf_c_boolean has_filter_end_time;
  uint32_t filter_end_time;
  protobuf_c_boolean has_filter_match_id;
  uint64_t filter_match_id;
  protobuf_c_boolean has_filter_last_match;
  protobuf_c_boolean filter_last_match;
};
#define CMSG_DOTAFANTASY_PLAYER_STANDINGS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_standings_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  char *player_name;
  protobuf_c_boolean has_score;
  float score;
};
#define CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__CMSG_PLAYER_SCORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_standings_response__cmsg_player_score__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CMsgDOTAFantasyPlayerStandingsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyPlayerStandingsResponse__EResult result;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_role;
  uint32_t role;
  size_t n_player_scores;
  CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore **player_scores;
};
#define CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_standings_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_PLAYER_STANDINGS_RESPONSE__ERESULT__SUCCESS, 0,0, 0,0, 0,NULL }


struct  _CMsgDOTAFantasyPlayerInfoRequest
{
  ProtobufCMessage base;
};
#define CMSG_DOTAFANTASY_PLAYER_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_info_request__descriptor) \
     }


struct  _CMsgDOTAFantasyPlayerInfoResponse
{
  ProtobufCMessage base;
  CMsgGCPlayerInfo *msg;
};
#define CMSG_DOTAFANTASY_PLAYER_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_info_response__descriptor) \
    , NULL }


struct  _CMsgDOTAFantasyLeagueCreateRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_season_id;
  uint32_t season_id;
  char *fantasy_league_name;
  char *password;
  char *team_name;
  protobuf_c_boolean has_logo;
  uint64_t logo;
  protobuf_c_boolean has_ticket_item_id;
  uint64_t ticket_item_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_CREATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_create_request__descriptor) \
    , 0,0, NULL, NULL, NULL, 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueCreateResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueCreateResponse__EResult result;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_create_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_CREATE_RESPONSE__ERESULT__SUCCESS, 0,0 }


struct  _CMsgDOTAFantasyTeamCreateRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  char *password;
  char *team_name;
  protobuf_c_boolean has_logo;
  uint64_t logo;
  protobuf_c_boolean has_ticket_item_id;
  uint64_t ticket_item_id;
};
#define CMSG_DOTAFANTASY_TEAM_CREATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_create_request__descriptor) \
    , 0,0, NULL, NULL, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamCreateResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamCreateResponse__EResult result;
  protobuf_c_boolean has_fantasy_team_index;
  uint32_t fantasy_team_index;
};
#define CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_create_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_CREATE_RESPONSE__ERESULT__SUCCESS, 0,0 }


struct  _CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_invited;
  protobuf_c_boolean invited;
};
#define CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_REQUEST__INVITE_CHANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_edit_invites_request__invite_change__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueEditInvitesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  char *password;
  size_t n_invite_change;
  CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange **invite_change;
};
#define CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_edit_invites_request__descriptor) \
    , 0,0, NULL, 0,NULL }


struct  _CMsgDOTAFantasyLeagueEditInvitesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueEditInvitesResponse__EResult result;
};
#define CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_edit_invites_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_EDIT_INVITES_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyLeagueDraftStatusRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_DRAFT_STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_draft_status_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyLeagueDraftStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  size_t n_draft_order;
  uint32_t *draft_order;
  protobuf_c_boolean has_current_pick;
  uint32_t current_pick;
  protobuf_c_boolean has_time_remaining;
  uint32_t time_remaining;
  protobuf_c_boolean has_pending_resume;
  protobuf_c_boolean pending_resume;
  protobuf_c_boolean has_completed;
  protobuf_c_boolean completed;
  size_t n_available_players;
  uint32_t *available_players;
};
#define CMSG_DOTAFANTASY_LEAGUE_DRAFT_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_draft_status__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgDOTAFantasyLeagueDraftPlayerRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
};
#define CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_draft_player_request__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeagueDraftPlayerResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeagueDraftPlayerResponse__EResult result;
};
#define CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_league_draft_player_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAGUE_DRAFT_PLAYER_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyTeamRosterSwapRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_slot_1;
  uint32_t slot_1;
  protobuf_c_boolean has_slot_2;
  uint32_t slot_2;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_swap_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamRosterSwapResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamRosterSwapResponse__EResult result;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_swap_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_ROSTER_SWAP_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyTeamRosterAddDropRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
  protobuf_c_boolean has_add_account_id;
  uint32_t add_account_id;
  protobuf_c_boolean has_drop_account_id;
  uint32_t drop_account_id;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_add_drop_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamRosterAddDropResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamRosterAddDropResponse__EResult result;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_add_drop_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_ROSTER_ADD_DROP_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyTeamTradesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_TEAM_TRADES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_trades_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyTeamTradesResponse__Trade
{
  ProtobufCMessage base;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_owner_account_id_1;
  uint32_t owner_account_id_1;
  protobuf_c_boolean has_owner_account_id_2;
  uint32_t owner_account_id_2;
  protobuf_c_boolean has_player_account_id_1;
  uint32_t player_account_id_1;
  protobuf_c_boolean has_player_account_id_2;
  uint32_t player_account_id_2;
  protobuf_c_boolean has_status;
  uint32_t status;
};
#define CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__TRADE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_trades_response__trade__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamTradesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamTradesResponse__EResult result;
  size_t n_trades;
  CMsgDOTAFantasyTeamTradesResponse__Trade **trades;
};
#define CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_trades_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_TRADES_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgDOTAFantasyTeamTradeCancelRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index_1;
  uint32_t team_index_1;
  protobuf_c_boolean has_owner_account_id_2;
  uint32_t owner_account_id_2;
  protobuf_c_boolean has_team_index_2;
  uint32_t team_index_2;
};
#define CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_trade_cancel_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamTradeCancelResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamTradeCancelResponse__EResult result;
};
#define CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_trade_cancel_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_TRADE_CANCEL_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyTeamRosterRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyTeamRosterResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyTeamRosterResponse__EResult result;
  size_t n_player_account_ids;
  uint32_t *player_account_ids;
  size_t n_player_locked;
  protobuf_c_boolean *player_locked;
};
#define CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_team_roster_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_TEAM_ROSTER_RESPONSE__ERESULT__SUCCESS, 0,NULL, 0,NULL }


struct  _CMsgDOTAFantasyPlayerHisoricalStatsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_hisorical_stats_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator
{
  ProtobufCMessage base;
  protobuf_c_boolean has_matches;
  uint32_t matches;
  protobuf_c_boolean has_levels;
  float levels;
  protobuf_c_boolean has_kills;
  float kills;
  protobuf_c_boolean has_deaths;
  float deaths;
  protobuf_c_boolean has_assists;
  float assists;
  protobuf_c_boolean has_last_hits;
  float last_hits;
  protobuf_c_boolean has_denies;
  float denies;
  protobuf_c_boolean has_gpm;
  float gpm;
  protobuf_c_boolean has_xppm;
  float xppm;
  protobuf_c_boolean has_stuns;
  float stuns;
  protobuf_c_boolean has_healing;
  float healing;
  protobuf_c_boolean has_tower_kills;
  float tower_kills;
  protobuf_c_boolean has_roshan_kills;
  float roshan_kills;
  protobuf_c_boolean has_score;
  float score;
};
#define CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__PLAYER_SCORE_ACCUMULATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_hisorical_stats_response__player_score_accumulator__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_weeks;
  uint32_t weeks;
  CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator *stats_premium;
  CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator *stats_professional;
};
#define CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__PLAYER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_hisorical_stats_response__player_stats__descriptor) \
    , 0,0, 0,0, NULL, NULL }


struct  _CMsgDOTAFantasyPlayerHisoricalStatsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyPlayerHisoricalStatsResponse__EResult result;
  size_t n_stats;
  CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats **stats;
};
#define CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_hisorical_stats_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_PLAYER_HISORICAL_STATS_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgDOTAFantasyMessageAdd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  char *message;
};
#define CMSG_DOTAFANTASY_MESSAGE_ADD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_message_add__descriptor) \
    , 0,0, NULL }


struct  _CMsgDOTAFantasyMessagesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_start_message;
  uint32_t start_message;
  protobuf_c_boolean has_end_message;
  uint32_t end_message;
};
#define CMSG_DOTAFANTASY_MESSAGES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_messages_request__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyMessagesResponse__Message
{
  ProtobufCMessage base;
  protobuf_c_boolean has_message_id;
  uint32_t message_id;
  char *message;
  protobuf_c_boolean has_author_account_id;
  uint32_t author_account_id;
  protobuf_c_boolean has_time;
  uint32_t time;
};
#define CMSG_DOTAFANTASY_MESSAGES_RESPONSE__MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_messages_response__message__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgDOTAFantasyMessagesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyMessagesResponse__EResult result;
  size_t n_messages;
  CMsgDOTAFantasyMessagesResponse__Message **messages;
  protobuf_c_boolean has_num_total_messages;
  uint32_t num_total_messages;
};
#define CMSG_DOTAFANTASY_MESSAGES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_messages_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_MESSAGES_RESPONSE__ERESULT__SUCCESS, 0,NULL, 0,0 }


struct  _CMsgDOTAFantasyRemoveOwner
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_owner_account_id;
  uint32_t owner_account_id;
  protobuf_c_boolean has_team_index;
  uint32_t team_index;
};
#define CMSG_DOTAFANTASY_REMOVE_OWNER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_remove_owner__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyRemoveOwnerResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyRemoveOwnerResponse__EResult result;
};
#define CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_remove_owner_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_REMOVE_OWNER_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyScheduledMatchesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
};
#define CMSG_DOTAFANTASY_SCHEDULED_MATCHES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_scheduled_matches_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays
{
  ProtobufCMessage base;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  size_t n_team_ids;
  uint32_t *team_ids;
  size_t n_league_ids;
  uint32_t *league_ids;
};
#define CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__SCHEDULED_MATCH_DAYS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_scheduled_matches_response__scheduled_match_days__descriptor) \
    , 0,0, 0,NULL, 0,NULL }


struct  _CMsgDOTAFantasyScheduledMatchesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyScheduledMatchesResponse__EResult result;
  size_t n_scheduled_match_days;
  CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays **scheduled_match_days;
};
#define CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_scheduled_matches_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_SCHEDULED_MATCHES_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgDOTAFantasyLeaveLeagueRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_fantasy_team_index;
  uint32_t fantasy_team_index;
};
#define CMSG_DOTAFANTASY_LEAVE_LEAGUE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_leave_league_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAFantasyLeaveLeagueResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyLeaveLeagueResponse__EResult result;
};
#define CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_leave_league_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_LEAVE_LEAGUE_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgDOTAFantasyPlayerScoreDetailsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fantasy_league_id;
  uint32_t fantasy_league_id;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_end_time;
  uint32_t end_time;
};
#define CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_score_details_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_series_num;
  uint32_t series_num;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
  protobuf_c_boolean has_league_tier;
  uint32_t league_tier;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_opposing_team_id;
  uint32_t opposing_team_id;
  protobuf_c_boolean has_opposing_team_logo;
  uint64_t opposing_team_logo;
  char *opposing_team_name;
  CMsgFantasyLeagueScoring *stats;
  protobuf_c_boolean has_owned_by;
  uint32_t owned_by;
  protobuf_c_boolean has_benched;
  protobuf_c_boolean benched;
};
#define CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__PLAYER_MATCH_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_score_details_response__player_match_data__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerScoreDetailsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFantasyPlayerScoreDetailsResponse__EResult result;
  size_t n_data;
  CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData **data;
};
#define CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_score_details_response__descriptor) \
    , 0,CMSG_DOTAFANTASY_PLAYER_SCORE_DETAILS_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgDOTAPassportVoteTeamGuess
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_winner_id;
  uint32_t winner_id;
  protobuf_c_boolean has_runnerup_id;
  uint32_t runnerup_id;
};
#define CMSG_DOTAPASSPORT_VOTE_TEAM_GUESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapassport_vote_team_guess__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAPassportVoteGenericSelection
{
  ProtobufCMessage base;
  protobuf_c_boolean has_selection_index;
  DOTA2013PassportSelectionIndices selection_index;
  protobuf_c_boolean has_selection;
  uint32_t selection;
};
#define CMSG_DOTAPASSPORT_VOTE_GENERIC_SELECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapassport_vote_generic_selection__descriptor) \
    , 0,DOTA_2013_PASSPORT_SELECTION_INDICES__PP13_SEL_ALLSTAR_PLAYER_0, 0,0 }


struct  _CMsgDOTAPassportStampedPlayer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_stamp_level;
  uint32_t stamp_level;
};
#define CMSG_DOTAPASSPORT_STAMPED_PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapassport_stamped_player__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAPassportPlayerCardChallenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
};
#define CMSG_DOTAPASSPORT_PLAYER_CARD_CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapassport_player_card_challenge__descriptor) \
    , 0,0 }


struct  _CMsgDOTAPassportVote
{
  ProtobufCMessage base;
  size_t n_team_votes;
  CMsgDOTAPassportVoteTeamGuess **team_votes;
  size_t n_generic_selections;
  CMsgDOTAPassportVoteGenericSelection **generic_selections;
  size_t n_stamped_players;
  CMsgDOTAPassportStampedPlayer **stamped_players;
  size_t n_player_card_challenges;
  CMsgDOTAPassportPlayerCardChallenge **player_card_challenges;
};
#define CMSG_DOTAPASSPORT_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapassport_vote__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _CMsgDOTAFantasyPlayerMatchStats__Match
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gpm;
  float gpm;
  protobuf_c_boolean has_xppm;
  float xppm;
  protobuf_c_boolean has_stuns;
  float stuns;
  protobuf_c_boolean has_healing;
  float healing;
  protobuf_c_boolean has_tower_kills;
  uint32_t tower_kills;
  protobuf_c_boolean has_roshan_kills;
  uint32_t roshan_kills;
};
#define CMSG_DOTAFANTASY_PLAYER_MATCH_STATS__MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_match_stats__match__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyPlayerMatchStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  size_t n_matches;
  CMsgDOTAFantasyPlayerMatchStats__Match **matches;
};
#define CMSG_DOTAFANTASY_PLAYER_MATCH_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_match_stats__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCGetPlayerCardRosterRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};
#define CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_player_card_roster_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCGetPlayerCardRosterResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCGetPlayerCardRosterResponse__Result result;
  size_t n_player_card_item_id;
  uint64_t *player_card_item_id;
};
#define CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_player_card_roster_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCGET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__SUCCESS, 0,NULL }


struct  _CMsgClientToGCSetPlayerCardRosterRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_slot;
  uint32_t slot;
  protobuf_c_boolean has_player_card_item_id;
  uint64_t player_card_item_id;
};
#define CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_player_card_roster_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCSetPlayerCardRosterResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCSetPlayerCardRosterResponse__Result result;
};
#define CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_player_card_roster_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCSET_PLAYER_CARD_ROSTER_RESPONSE__RESULT__SUCCESS }


/* CMsgGCPlayerInfo__PlayerInfo methods */
void   cmsg_gcplayer_info__player_info__init
                     (CMsgGCPlayerInfo__PlayerInfo         *message);
/* CMsgGCPlayerInfo__RegionLeaderboard methods */
void   cmsg_gcplayer_info__region_leaderboard__init
                     (CMsgGCPlayerInfo__RegionLeaderboard         *message);
/* CMsgGCPlayerInfo methods */
void   cmsg_gcplayer_info__init
                     (CMsgGCPlayerInfo         *message);
size_t cmsg_gcplayer_info__get_packed_size
                     (const CMsgGCPlayerInfo   *message);
size_t cmsg_gcplayer_info__pack
                     (const CMsgGCPlayerInfo   *message,
                      uint8_t             *out);
size_t cmsg_gcplayer_info__pack_to_buffer
                     (const CMsgGCPlayerInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCPlayerInfo *
       cmsg_gcplayer_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcplayer_info__free_unpacked
                     (CMsgGCPlayerInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACreateFantasyLeagueRequest methods */
void   cmsg_dotacreate_fantasy_league_request__init
                     (CMsgDOTACreateFantasyLeagueRequest         *message);
size_t cmsg_dotacreate_fantasy_league_request__get_packed_size
                     (const CMsgDOTACreateFantasyLeagueRequest   *message);
size_t cmsg_dotacreate_fantasy_league_request__pack
                     (const CMsgDOTACreateFantasyLeagueRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotacreate_fantasy_league_request__pack_to_buffer
                     (const CMsgDOTACreateFantasyLeagueRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACreateFantasyLeagueRequest *
       cmsg_dotacreate_fantasy_league_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacreate_fantasy_league_request__free_unpacked
                     (CMsgDOTACreateFantasyLeagueRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACreateFantasyLeagueResponse methods */
void   cmsg_dotacreate_fantasy_league_response__init
                     (CMsgDOTACreateFantasyLeagueResponse         *message);
size_t cmsg_dotacreate_fantasy_league_response__get_packed_size
                     (const CMsgDOTACreateFantasyLeagueResponse   *message);
size_t cmsg_dotacreate_fantasy_league_response__pack
                     (const CMsgDOTACreateFantasyLeagueResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotacreate_fantasy_league_response__pack_to_buffer
                     (const CMsgDOTACreateFantasyLeagueResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACreateFantasyLeagueResponse *
       cmsg_dotacreate_fantasy_league_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacreate_fantasy_league_response__free_unpacked
                     (CMsgDOTACreateFantasyLeagueResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgFantasyLeagueScoring methods */
void   cmsg_fantasy_league_scoring__init
                     (CMsgFantasyLeagueScoring         *message);
size_t cmsg_fantasy_league_scoring__get_packed_size
                     (const CMsgFantasyLeagueScoring   *message);
size_t cmsg_fantasy_league_scoring__pack
                     (const CMsgFantasyLeagueScoring   *message,
                      uint8_t             *out);
size_t cmsg_fantasy_league_scoring__pack_to_buffer
                     (const CMsgFantasyLeagueScoring   *message,
                      ProtobufCBuffer     *buffer);
CMsgFantasyLeagueScoring *
       cmsg_fantasy_league_scoring__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_fantasy_league_scoring__free_unpacked
                     (CMsgFantasyLeagueScoring *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueInfo__OwnerInfo methods */
void   cmsg_dotafantasy_league_info__owner_info__init
                     (CMsgDOTAFantasyLeagueInfo__OwnerInfo         *message);
/* CMsgDOTAFantasyLeagueInfo methods */
void   cmsg_dotafantasy_league_info__init
                     (CMsgDOTAFantasyLeagueInfo         *message);
size_t cmsg_dotafantasy_league_info__get_packed_size
                     (const CMsgDOTAFantasyLeagueInfo   *message);
size_t cmsg_dotafantasy_league_info__pack
                     (const CMsgDOTAFantasyLeagueInfo   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_info__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueInfo *
       cmsg_dotafantasy_league_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_info__free_unpacked
                     (CMsgDOTAFantasyLeagueInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueEditInfoRequest methods */
void   cmsg_dotafantasy_league_edit_info_request__init
                     (CMsgDOTAFantasyLeagueEditInfoRequest         *message);
size_t cmsg_dotafantasy_league_edit_info_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueEditInfoRequest   *message);
size_t cmsg_dotafantasy_league_edit_info_request__pack
                     (const CMsgDOTAFantasyLeagueEditInfoRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_edit_info_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueEditInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueEditInfoRequest *
       cmsg_dotafantasy_league_edit_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_edit_info_request__free_unpacked
                     (CMsgDOTAFantasyLeagueEditInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueEditInfoResponse methods */
void   cmsg_dotafantasy_league_edit_info_response__init
                     (CMsgDOTAFantasyLeagueEditInfoResponse         *message);
size_t cmsg_dotafantasy_league_edit_info_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueEditInfoResponse   *message);
size_t cmsg_dotafantasy_league_edit_info_response__pack
                     (const CMsgDOTAFantasyLeagueEditInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_edit_info_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueEditInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueEditInfoResponse *
       cmsg_dotafantasy_league_edit_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_edit_info_response__free_unpacked
                     (CMsgDOTAFantasyLeagueEditInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueFindRequest methods */
void   cmsg_dotafantasy_league_find_request__init
                     (CMsgDOTAFantasyLeagueFindRequest         *message);
size_t cmsg_dotafantasy_league_find_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueFindRequest   *message);
size_t cmsg_dotafantasy_league_find_request__pack
                     (const CMsgDOTAFantasyLeagueFindRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_find_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueFindRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueFindRequest *
       cmsg_dotafantasy_league_find_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_find_request__free_unpacked
                     (CMsgDOTAFantasyLeagueFindRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueFindResponse methods */
void   cmsg_dotafantasy_league_find_response__init
                     (CMsgDOTAFantasyLeagueFindResponse         *message);
size_t cmsg_dotafantasy_league_find_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueFindResponse   *message);
size_t cmsg_dotafantasy_league_find_response__pack
                     (const CMsgDOTAFantasyLeagueFindResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_find_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueFindResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueFindResponse *
       cmsg_dotafantasy_league_find_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_find_response__free_unpacked
                     (CMsgDOTAFantasyLeagueFindResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueInfoRequest methods */
void   cmsg_dotafantasy_league_info_request__init
                     (CMsgDOTAFantasyLeagueInfoRequest         *message);
size_t cmsg_dotafantasy_league_info_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueInfoRequest   *message);
size_t cmsg_dotafantasy_league_info_request__pack
                     (const CMsgDOTAFantasyLeagueInfoRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_info_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueInfoRequest *
       cmsg_dotafantasy_league_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_info_request__free_unpacked
                     (CMsgDOTAFantasyLeagueInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueInfoResponse methods */
void   cmsg_dotafantasy_league_info_response__init
                     (CMsgDOTAFantasyLeagueInfoResponse         *message);
size_t cmsg_dotafantasy_league_info_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueInfoResponse   *message);
size_t cmsg_dotafantasy_league_info_response__pack
                     (const CMsgDOTAFantasyLeagueInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_info_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueInfoResponse *
       cmsg_dotafantasy_league_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_info_response__free_unpacked
                     (CMsgDOTAFantasyLeagueInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueMatchupsRequest methods */
void   cmsg_dotafantasy_league_matchups_request__init
                     (CMsgDOTAFantasyLeagueMatchupsRequest         *message);
size_t cmsg_dotafantasy_league_matchups_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueMatchupsRequest   *message);
size_t cmsg_dotafantasy_league_matchups_request__pack
                     (const CMsgDOTAFantasyLeagueMatchupsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_matchups_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueMatchupsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueMatchupsRequest *
       cmsg_dotafantasy_league_matchups_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_matchups_request__free_unpacked
                     (CMsgDOTAFantasyLeagueMatchupsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueMatchupsResponse__Matchup methods */
void   cmsg_dotafantasy_league_matchups_response__matchup__init
                     (CMsgDOTAFantasyLeagueMatchupsResponse__Matchup         *message);
/* CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups methods */
void   cmsg_dotafantasy_league_matchups_response__weekly_matchups__init
                     (CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups         *message);
/* CMsgDOTAFantasyLeagueMatchupsResponse methods */
void   cmsg_dotafantasy_league_matchups_response__init
                     (CMsgDOTAFantasyLeagueMatchupsResponse         *message);
size_t cmsg_dotafantasy_league_matchups_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueMatchupsResponse   *message);
size_t cmsg_dotafantasy_league_matchups_response__pack
                     (const CMsgDOTAFantasyLeagueMatchupsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_matchups_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueMatchupsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueMatchupsResponse *
       cmsg_dotafantasy_league_matchups_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_matchups_response__free_unpacked
                     (CMsgDOTAFantasyLeagueMatchupsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAEditFantasyTeamRequest methods */
void   cmsg_dotaedit_fantasy_team_request__init
                     (CMsgDOTAEditFantasyTeamRequest         *message);
size_t cmsg_dotaedit_fantasy_team_request__get_packed_size
                     (const CMsgDOTAEditFantasyTeamRequest   *message);
size_t cmsg_dotaedit_fantasy_team_request__pack
                     (const CMsgDOTAEditFantasyTeamRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotaedit_fantasy_team_request__pack_to_buffer
                     (const CMsgDOTAEditFantasyTeamRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAEditFantasyTeamRequest *
       cmsg_dotaedit_fantasy_team_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaedit_fantasy_team_request__free_unpacked
                     (CMsgDOTAEditFantasyTeamRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAEditFantasyTeamResponse methods */
void   cmsg_dotaedit_fantasy_team_response__init
                     (CMsgDOTAEditFantasyTeamResponse         *message);
size_t cmsg_dotaedit_fantasy_team_response__get_packed_size
                     (const CMsgDOTAEditFantasyTeamResponse   *message);
size_t cmsg_dotaedit_fantasy_team_response__pack
                     (const CMsgDOTAEditFantasyTeamResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaedit_fantasy_team_response__pack_to_buffer
                     (const CMsgDOTAEditFantasyTeamResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAEditFantasyTeamResponse *
       cmsg_dotaedit_fantasy_team_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaedit_fantasy_team_response__free_unpacked
                     (CMsgDOTAEditFantasyTeamResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID methods */
void   cmsg_dotafantasy_team_info_request_by_fantasy_league_id__init
                     (CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID         *message);
size_t cmsg_dotafantasy_team_info_request_by_fantasy_league_id__get_packed_size
                     (const CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID   *message);
size_t cmsg_dotafantasy_team_info_request_by_fantasy_league_id__pack
                     (const CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_info_request_by_fantasy_league_id__pack_to_buffer
                     (const CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID *
       cmsg_dotafantasy_team_info_request_by_fantasy_league_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_info_request_by_fantasy_league_id__free_unpacked
                     (CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID methods */
void   cmsg_dotafantasy_team_info_request_by_owner_account_id__init
                     (CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID         *message);
size_t cmsg_dotafantasy_team_info_request_by_owner_account_id__get_packed_size
                     (const CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID   *message);
size_t cmsg_dotafantasy_team_info_request_by_owner_account_id__pack
                     (const CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_info_request_by_owner_account_id__pack_to_buffer
                     (const CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID *
       cmsg_dotafantasy_team_info_request_by_owner_account_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_info_request_by_owner_account_id__free_unpacked
                     (CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamInfoResponse methods */
void   cmsg_dotafantasy_team_info_response__init
                     (CMsgDOTAFantasyTeamInfoResponse         *message);
size_t cmsg_dotafantasy_team_info_response__get_packed_size
                     (const CMsgDOTAFantasyTeamInfoResponse   *message);
size_t cmsg_dotafantasy_team_info_response__pack
                     (const CMsgDOTAFantasyTeamInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_info_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamInfoResponse *
       cmsg_dotafantasy_team_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_info_response__free_unpacked
                     (CMsgDOTAFantasyTeamInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamInfo methods */
void   cmsg_dotafantasy_team_info__init
                     (CMsgDOTAFantasyTeamInfo         *message);
size_t cmsg_dotafantasy_team_info__get_packed_size
                     (const CMsgDOTAFantasyTeamInfo   *message);
size_t cmsg_dotafantasy_team_info__pack
                     (const CMsgDOTAFantasyTeamInfo   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_info__pack_to_buffer
                     (const CMsgDOTAFantasyTeamInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamInfo *
       cmsg_dotafantasy_team_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_info__free_unpacked
                     (CMsgDOTAFantasyTeamInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamScoreRequest methods */
void   cmsg_dotafantasy_team_score_request__init
                     (CMsgDOTAFantasyTeamScoreRequest         *message);
size_t cmsg_dotafantasy_team_score_request__get_packed_size
                     (const CMsgDOTAFantasyTeamScoreRequest   *message);
size_t cmsg_dotafantasy_team_score_request__pack
                     (const CMsgDOTAFantasyTeamScoreRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_score_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamScoreRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamScoreRequest *
       cmsg_dotafantasy_team_score_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_score_request__free_unpacked
                     (CMsgDOTAFantasyTeamScoreRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore methods */
void   cmsg_dotafantasy_team_score_response__cmsg_player_score__init
                     (CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore         *message);
/* CMsgDOTAFantasyTeamScoreResponse methods */
void   cmsg_dotafantasy_team_score_response__init
                     (CMsgDOTAFantasyTeamScoreResponse         *message);
size_t cmsg_dotafantasy_team_score_response__get_packed_size
                     (const CMsgDOTAFantasyTeamScoreResponse   *message);
size_t cmsg_dotafantasy_team_score_response__pack
                     (const CMsgDOTAFantasyTeamScoreResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_score_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamScoreResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamScoreResponse *
       cmsg_dotafantasy_team_score_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_score_response__free_unpacked
                     (CMsgDOTAFantasyTeamScoreResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamStandingsRequest methods */
void   cmsg_dotafantasy_team_standings_request__init
                     (CMsgDOTAFantasyTeamStandingsRequest         *message);
size_t cmsg_dotafantasy_team_standings_request__get_packed_size
                     (const CMsgDOTAFantasyTeamStandingsRequest   *message);
size_t cmsg_dotafantasy_team_standings_request__pack
                     (const CMsgDOTAFantasyTeamStandingsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_standings_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamStandingsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamStandingsRequest *
       cmsg_dotafantasy_team_standings_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_standings_request__free_unpacked
                     (CMsgDOTAFantasyTeamStandingsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore methods */
void   cmsg_dotafantasy_team_standings_response__cmsg_team_score__init
                     (CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore         *message);
/* CMsgDOTAFantasyTeamStandingsResponse methods */
void   cmsg_dotafantasy_team_standings_response__init
                     (CMsgDOTAFantasyTeamStandingsResponse         *message);
size_t cmsg_dotafantasy_team_standings_response__get_packed_size
                     (const CMsgDOTAFantasyTeamStandingsResponse   *message);
size_t cmsg_dotafantasy_team_standings_response__pack
                     (const CMsgDOTAFantasyTeamStandingsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_standings_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamStandingsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamStandingsResponse *
       cmsg_dotafantasy_team_standings_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_standings_response__free_unpacked
                     (CMsgDOTAFantasyTeamStandingsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerScoreRequest methods */
void   cmsg_dotafantasy_player_score_request__init
                     (CMsgDOTAFantasyPlayerScoreRequest         *message);
size_t cmsg_dotafantasy_player_score_request__get_packed_size
                     (const CMsgDOTAFantasyPlayerScoreRequest   *message);
size_t cmsg_dotafantasy_player_score_request__pack
                     (const CMsgDOTAFantasyPlayerScoreRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_score_request__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerScoreRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerScoreRequest *
       cmsg_dotafantasy_player_score_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_score_request__free_unpacked
                     (CMsgDOTAFantasyPlayerScoreRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerScoreResponse methods */
void   cmsg_dotafantasy_player_score_response__init
                     (CMsgDOTAFantasyPlayerScoreResponse         *message);
size_t cmsg_dotafantasy_player_score_response__get_packed_size
                     (const CMsgDOTAFantasyPlayerScoreResponse   *message);
size_t cmsg_dotafantasy_player_score_response__pack
                     (const CMsgDOTAFantasyPlayerScoreResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_score_response__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerScoreResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerScoreResponse *
       cmsg_dotafantasy_player_score_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_score_response__free_unpacked
                     (CMsgDOTAFantasyPlayerScoreResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerStandingsRequest methods */
void   cmsg_dotafantasy_player_standings_request__init
                     (CMsgDOTAFantasyPlayerStandingsRequest         *message);
size_t cmsg_dotafantasy_player_standings_request__get_packed_size
                     (const CMsgDOTAFantasyPlayerStandingsRequest   *message);
size_t cmsg_dotafantasy_player_standings_request__pack
                     (const CMsgDOTAFantasyPlayerStandingsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_standings_request__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerStandingsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerStandingsRequest *
       cmsg_dotafantasy_player_standings_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_standings_request__free_unpacked
                     (CMsgDOTAFantasyPlayerStandingsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore methods */
void   cmsg_dotafantasy_player_standings_response__cmsg_player_score__init
                     (CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore         *message);
/* CMsgDOTAFantasyPlayerStandingsResponse methods */
void   cmsg_dotafantasy_player_standings_response__init
                     (CMsgDOTAFantasyPlayerStandingsResponse         *message);
size_t cmsg_dotafantasy_player_standings_response__get_packed_size
                     (const CMsgDOTAFantasyPlayerStandingsResponse   *message);
size_t cmsg_dotafantasy_player_standings_response__pack
                     (const CMsgDOTAFantasyPlayerStandingsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_standings_response__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerStandingsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerStandingsResponse *
       cmsg_dotafantasy_player_standings_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_standings_response__free_unpacked
                     (CMsgDOTAFantasyPlayerStandingsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerInfoRequest methods */
void   cmsg_dotafantasy_player_info_request__init
                     (CMsgDOTAFantasyPlayerInfoRequest         *message);
size_t cmsg_dotafantasy_player_info_request__get_packed_size
                     (const CMsgDOTAFantasyPlayerInfoRequest   *message);
size_t cmsg_dotafantasy_player_info_request__pack
                     (const CMsgDOTAFantasyPlayerInfoRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_info_request__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerInfoRequest *
       cmsg_dotafantasy_player_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_info_request__free_unpacked
                     (CMsgDOTAFantasyPlayerInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerInfoResponse methods */
void   cmsg_dotafantasy_player_info_response__init
                     (CMsgDOTAFantasyPlayerInfoResponse         *message);
size_t cmsg_dotafantasy_player_info_response__get_packed_size
                     (const CMsgDOTAFantasyPlayerInfoResponse   *message);
size_t cmsg_dotafantasy_player_info_response__pack
                     (const CMsgDOTAFantasyPlayerInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_info_response__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerInfoResponse *
       cmsg_dotafantasy_player_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_info_response__free_unpacked
                     (CMsgDOTAFantasyPlayerInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueCreateRequest methods */
void   cmsg_dotafantasy_league_create_request__init
                     (CMsgDOTAFantasyLeagueCreateRequest         *message);
size_t cmsg_dotafantasy_league_create_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueCreateRequest   *message);
size_t cmsg_dotafantasy_league_create_request__pack
                     (const CMsgDOTAFantasyLeagueCreateRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_create_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueCreateRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueCreateRequest *
       cmsg_dotafantasy_league_create_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_create_request__free_unpacked
                     (CMsgDOTAFantasyLeagueCreateRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueCreateResponse methods */
void   cmsg_dotafantasy_league_create_response__init
                     (CMsgDOTAFantasyLeagueCreateResponse         *message);
size_t cmsg_dotafantasy_league_create_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueCreateResponse   *message);
size_t cmsg_dotafantasy_league_create_response__pack
                     (const CMsgDOTAFantasyLeagueCreateResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_create_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueCreateResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueCreateResponse *
       cmsg_dotafantasy_league_create_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_create_response__free_unpacked
                     (CMsgDOTAFantasyLeagueCreateResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamCreateRequest methods */
void   cmsg_dotafantasy_team_create_request__init
                     (CMsgDOTAFantasyTeamCreateRequest         *message);
size_t cmsg_dotafantasy_team_create_request__get_packed_size
                     (const CMsgDOTAFantasyTeamCreateRequest   *message);
size_t cmsg_dotafantasy_team_create_request__pack
                     (const CMsgDOTAFantasyTeamCreateRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_create_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamCreateRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamCreateRequest *
       cmsg_dotafantasy_team_create_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_create_request__free_unpacked
                     (CMsgDOTAFantasyTeamCreateRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamCreateResponse methods */
void   cmsg_dotafantasy_team_create_response__init
                     (CMsgDOTAFantasyTeamCreateResponse         *message);
size_t cmsg_dotafantasy_team_create_response__get_packed_size
                     (const CMsgDOTAFantasyTeamCreateResponse   *message);
size_t cmsg_dotafantasy_team_create_response__pack
                     (const CMsgDOTAFantasyTeamCreateResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_create_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamCreateResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamCreateResponse *
       cmsg_dotafantasy_team_create_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_create_response__free_unpacked
                     (CMsgDOTAFantasyTeamCreateResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange methods */
void   cmsg_dotafantasy_league_edit_invites_request__invite_change__init
                     (CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange         *message);
/* CMsgDOTAFantasyLeagueEditInvitesRequest methods */
void   cmsg_dotafantasy_league_edit_invites_request__init
                     (CMsgDOTAFantasyLeagueEditInvitesRequest         *message);
size_t cmsg_dotafantasy_league_edit_invites_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueEditInvitesRequest   *message);
size_t cmsg_dotafantasy_league_edit_invites_request__pack
                     (const CMsgDOTAFantasyLeagueEditInvitesRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_edit_invites_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueEditInvitesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueEditInvitesRequest *
       cmsg_dotafantasy_league_edit_invites_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_edit_invites_request__free_unpacked
                     (CMsgDOTAFantasyLeagueEditInvitesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueEditInvitesResponse methods */
void   cmsg_dotafantasy_league_edit_invites_response__init
                     (CMsgDOTAFantasyLeagueEditInvitesResponse         *message);
size_t cmsg_dotafantasy_league_edit_invites_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueEditInvitesResponse   *message);
size_t cmsg_dotafantasy_league_edit_invites_response__pack
                     (const CMsgDOTAFantasyLeagueEditInvitesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_edit_invites_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueEditInvitesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueEditInvitesResponse *
       cmsg_dotafantasy_league_edit_invites_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_edit_invites_response__free_unpacked
                     (CMsgDOTAFantasyLeagueEditInvitesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueDraftStatusRequest methods */
void   cmsg_dotafantasy_league_draft_status_request__init
                     (CMsgDOTAFantasyLeagueDraftStatusRequest         *message);
size_t cmsg_dotafantasy_league_draft_status_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueDraftStatusRequest   *message);
size_t cmsg_dotafantasy_league_draft_status_request__pack
                     (const CMsgDOTAFantasyLeagueDraftStatusRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_draft_status_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueDraftStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueDraftStatusRequest *
       cmsg_dotafantasy_league_draft_status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_draft_status_request__free_unpacked
                     (CMsgDOTAFantasyLeagueDraftStatusRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueDraftStatus methods */
void   cmsg_dotafantasy_league_draft_status__init
                     (CMsgDOTAFantasyLeagueDraftStatus         *message);
size_t cmsg_dotafantasy_league_draft_status__get_packed_size
                     (const CMsgDOTAFantasyLeagueDraftStatus   *message);
size_t cmsg_dotafantasy_league_draft_status__pack
                     (const CMsgDOTAFantasyLeagueDraftStatus   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_draft_status__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueDraftStatus   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueDraftStatus *
       cmsg_dotafantasy_league_draft_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_draft_status__free_unpacked
                     (CMsgDOTAFantasyLeagueDraftStatus *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueDraftPlayerRequest methods */
void   cmsg_dotafantasy_league_draft_player_request__init
                     (CMsgDOTAFantasyLeagueDraftPlayerRequest         *message);
size_t cmsg_dotafantasy_league_draft_player_request__get_packed_size
                     (const CMsgDOTAFantasyLeagueDraftPlayerRequest   *message);
size_t cmsg_dotafantasy_league_draft_player_request__pack
                     (const CMsgDOTAFantasyLeagueDraftPlayerRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_draft_player_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueDraftPlayerRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueDraftPlayerRequest *
       cmsg_dotafantasy_league_draft_player_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_draft_player_request__free_unpacked
                     (CMsgDOTAFantasyLeagueDraftPlayerRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeagueDraftPlayerResponse methods */
void   cmsg_dotafantasy_league_draft_player_response__init
                     (CMsgDOTAFantasyLeagueDraftPlayerResponse         *message);
size_t cmsg_dotafantasy_league_draft_player_response__get_packed_size
                     (const CMsgDOTAFantasyLeagueDraftPlayerResponse   *message);
size_t cmsg_dotafantasy_league_draft_player_response__pack
                     (const CMsgDOTAFantasyLeagueDraftPlayerResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_league_draft_player_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeagueDraftPlayerResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeagueDraftPlayerResponse *
       cmsg_dotafantasy_league_draft_player_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_league_draft_player_response__free_unpacked
                     (CMsgDOTAFantasyLeagueDraftPlayerResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterSwapRequest methods */
void   cmsg_dotafantasy_team_roster_swap_request__init
                     (CMsgDOTAFantasyTeamRosterSwapRequest         *message);
size_t cmsg_dotafantasy_team_roster_swap_request__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterSwapRequest   *message);
size_t cmsg_dotafantasy_team_roster_swap_request__pack
                     (const CMsgDOTAFantasyTeamRosterSwapRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_swap_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterSwapRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterSwapRequest *
       cmsg_dotafantasy_team_roster_swap_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_swap_request__free_unpacked
                     (CMsgDOTAFantasyTeamRosterSwapRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterSwapResponse methods */
void   cmsg_dotafantasy_team_roster_swap_response__init
                     (CMsgDOTAFantasyTeamRosterSwapResponse         *message);
size_t cmsg_dotafantasy_team_roster_swap_response__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterSwapResponse   *message);
size_t cmsg_dotafantasy_team_roster_swap_response__pack
                     (const CMsgDOTAFantasyTeamRosterSwapResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_swap_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterSwapResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterSwapResponse *
       cmsg_dotafantasy_team_roster_swap_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_swap_response__free_unpacked
                     (CMsgDOTAFantasyTeamRosterSwapResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterAddDropRequest methods */
void   cmsg_dotafantasy_team_roster_add_drop_request__init
                     (CMsgDOTAFantasyTeamRosterAddDropRequest         *message);
size_t cmsg_dotafantasy_team_roster_add_drop_request__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterAddDropRequest   *message);
size_t cmsg_dotafantasy_team_roster_add_drop_request__pack
                     (const CMsgDOTAFantasyTeamRosterAddDropRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_add_drop_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterAddDropRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterAddDropRequest *
       cmsg_dotafantasy_team_roster_add_drop_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_add_drop_request__free_unpacked
                     (CMsgDOTAFantasyTeamRosterAddDropRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterAddDropResponse methods */
void   cmsg_dotafantasy_team_roster_add_drop_response__init
                     (CMsgDOTAFantasyTeamRosterAddDropResponse         *message);
size_t cmsg_dotafantasy_team_roster_add_drop_response__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterAddDropResponse   *message);
size_t cmsg_dotafantasy_team_roster_add_drop_response__pack
                     (const CMsgDOTAFantasyTeamRosterAddDropResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_add_drop_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterAddDropResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterAddDropResponse *
       cmsg_dotafantasy_team_roster_add_drop_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_add_drop_response__free_unpacked
                     (CMsgDOTAFantasyTeamRosterAddDropResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamTradesRequest methods */
void   cmsg_dotafantasy_team_trades_request__init
                     (CMsgDOTAFantasyTeamTradesRequest         *message);
size_t cmsg_dotafantasy_team_trades_request__get_packed_size
                     (const CMsgDOTAFantasyTeamTradesRequest   *message);
size_t cmsg_dotafantasy_team_trades_request__pack
                     (const CMsgDOTAFantasyTeamTradesRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_trades_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamTradesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamTradesRequest *
       cmsg_dotafantasy_team_trades_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_trades_request__free_unpacked
                     (CMsgDOTAFantasyTeamTradesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamTradesResponse__Trade methods */
void   cmsg_dotafantasy_team_trades_response__trade__init
                     (CMsgDOTAFantasyTeamTradesResponse__Trade         *message);
/* CMsgDOTAFantasyTeamTradesResponse methods */
void   cmsg_dotafantasy_team_trades_response__init
                     (CMsgDOTAFantasyTeamTradesResponse         *message);
size_t cmsg_dotafantasy_team_trades_response__get_packed_size
                     (const CMsgDOTAFantasyTeamTradesResponse   *message);
size_t cmsg_dotafantasy_team_trades_response__pack
                     (const CMsgDOTAFantasyTeamTradesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_trades_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamTradesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamTradesResponse *
       cmsg_dotafantasy_team_trades_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_trades_response__free_unpacked
                     (CMsgDOTAFantasyTeamTradesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamTradeCancelRequest methods */
void   cmsg_dotafantasy_team_trade_cancel_request__init
                     (CMsgDOTAFantasyTeamTradeCancelRequest         *message);
size_t cmsg_dotafantasy_team_trade_cancel_request__get_packed_size
                     (const CMsgDOTAFantasyTeamTradeCancelRequest   *message);
size_t cmsg_dotafantasy_team_trade_cancel_request__pack
                     (const CMsgDOTAFantasyTeamTradeCancelRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_trade_cancel_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamTradeCancelRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamTradeCancelRequest *
       cmsg_dotafantasy_team_trade_cancel_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_trade_cancel_request__free_unpacked
                     (CMsgDOTAFantasyTeamTradeCancelRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamTradeCancelResponse methods */
void   cmsg_dotafantasy_team_trade_cancel_response__init
                     (CMsgDOTAFantasyTeamTradeCancelResponse         *message);
size_t cmsg_dotafantasy_team_trade_cancel_response__get_packed_size
                     (const CMsgDOTAFantasyTeamTradeCancelResponse   *message);
size_t cmsg_dotafantasy_team_trade_cancel_response__pack
                     (const CMsgDOTAFantasyTeamTradeCancelResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_trade_cancel_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamTradeCancelResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamTradeCancelResponse *
       cmsg_dotafantasy_team_trade_cancel_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_trade_cancel_response__free_unpacked
                     (CMsgDOTAFantasyTeamTradeCancelResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterRequest methods */
void   cmsg_dotafantasy_team_roster_request__init
                     (CMsgDOTAFantasyTeamRosterRequest         *message);
size_t cmsg_dotafantasy_team_roster_request__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterRequest   *message);
size_t cmsg_dotafantasy_team_roster_request__pack
                     (const CMsgDOTAFantasyTeamRosterRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_request__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterRequest *
       cmsg_dotafantasy_team_roster_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_request__free_unpacked
                     (CMsgDOTAFantasyTeamRosterRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyTeamRosterResponse methods */
void   cmsg_dotafantasy_team_roster_response__init
                     (CMsgDOTAFantasyTeamRosterResponse         *message);
size_t cmsg_dotafantasy_team_roster_response__get_packed_size
                     (const CMsgDOTAFantasyTeamRosterResponse   *message);
size_t cmsg_dotafantasy_team_roster_response__pack
                     (const CMsgDOTAFantasyTeamRosterResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_team_roster_response__pack_to_buffer
                     (const CMsgDOTAFantasyTeamRosterResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyTeamRosterResponse *
       cmsg_dotafantasy_team_roster_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_team_roster_response__free_unpacked
                     (CMsgDOTAFantasyTeamRosterResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerHisoricalStatsRequest methods */
void   cmsg_dotafantasy_player_hisorical_stats_request__init
                     (CMsgDOTAFantasyPlayerHisoricalStatsRequest         *message);
size_t cmsg_dotafantasy_player_hisorical_stats_request__get_packed_size
                     (const CMsgDOTAFantasyPlayerHisoricalStatsRequest   *message);
size_t cmsg_dotafantasy_player_hisorical_stats_request__pack
                     (const CMsgDOTAFantasyPlayerHisoricalStatsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_hisorical_stats_request__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerHisoricalStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerHisoricalStatsRequest *
       cmsg_dotafantasy_player_hisorical_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_hisorical_stats_request__free_unpacked
                     (CMsgDOTAFantasyPlayerHisoricalStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator methods */
void   cmsg_dotafantasy_player_hisorical_stats_response__player_score_accumulator__init
                     (CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator         *message);
/* CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats methods */
void   cmsg_dotafantasy_player_hisorical_stats_response__player_stats__init
                     (CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats         *message);
/* CMsgDOTAFantasyPlayerHisoricalStatsResponse methods */
void   cmsg_dotafantasy_player_hisorical_stats_response__init
                     (CMsgDOTAFantasyPlayerHisoricalStatsResponse         *message);
size_t cmsg_dotafantasy_player_hisorical_stats_response__get_packed_size
                     (const CMsgDOTAFantasyPlayerHisoricalStatsResponse   *message);
size_t cmsg_dotafantasy_player_hisorical_stats_response__pack
                     (const CMsgDOTAFantasyPlayerHisoricalStatsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_hisorical_stats_response__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerHisoricalStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerHisoricalStatsResponse *
       cmsg_dotafantasy_player_hisorical_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_hisorical_stats_response__free_unpacked
                     (CMsgDOTAFantasyPlayerHisoricalStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyMessageAdd methods */
void   cmsg_dotafantasy_message_add__init
                     (CMsgDOTAFantasyMessageAdd         *message);
size_t cmsg_dotafantasy_message_add__get_packed_size
                     (const CMsgDOTAFantasyMessageAdd   *message);
size_t cmsg_dotafantasy_message_add__pack
                     (const CMsgDOTAFantasyMessageAdd   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_message_add__pack_to_buffer
                     (const CMsgDOTAFantasyMessageAdd   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyMessageAdd *
       cmsg_dotafantasy_message_add__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_message_add__free_unpacked
                     (CMsgDOTAFantasyMessageAdd *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyMessagesRequest methods */
void   cmsg_dotafantasy_messages_request__init
                     (CMsgDOTAFantasyMessagesRequest         *message);
size_t cmsg_dotafantasy_messages_request__get_packed_size
                     (const CMsgDOTAFantasyMessagesRequest   *message);
size_t cmsg_dotafantasy_messages_request__pack
                     (const CMsgDOTAFantasyMessagesRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_messages_request__pack_to_buffer
                     (const CMsgDOTAFantasyMessagesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyMessagesRequest *
       cmsg_dotafantasy_messages_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_messages_request__free_unpacked
                     (CMsgDOTAFantasyMessagesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyMessagesResponse__Message methods */
void   cmsg_dotafantasy_messages_response__message__init
                     (CMsgDOTAFantasyMessagesResponse__Message         *message);
/* CMsgDOTAFantasyMessagesResponse methods */
void   cmsg_dotafantasy_messages_response__init
                     (CMsgDOTAFantasyMessagesResponse         *message);
size_t cmsg_dotafantasy_messages_response__get_packed_size
                     (const CMsgDOTAFantasyMessagesResponse   *message);
size_t cmsg_dotafantasy_messages_response__pack
                     (const CMsgDOTAFantasyMessagesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_messages_response__pack_to_buffer
                     (const CMsgDOTAFantasyMessagesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyMessagesResponse *
       cmsg_dotafantasy_messages_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_messages_response__free_unpacked
                     (CMsgDOTAFantasyMessagesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyRemoveOwner methods */
void   cmsg_dotafantasy_remove_owner__init
                     (CMsgDOTAFantasyRemoveOwner         *message);
size_t cmsg_dotafantasy_remove_owner__get_packed_size
                     (const CMsgDOTAFantasyRemoveOwner   *message);
size_t cmsg_dotafantasy_remove_owner__pack
                     (const CMsgDOTAFantasyRemoveOwner   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_remove_owner__pack_to_buffer
                     (const CMsgDOTAFantasyRemoveOwner   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyRemoveOwner *
       cmsg_dotafantasy_remove_owner__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_remove_owner__free_unpacked
                     (CMsgDOTAFantasyRemoveOwner *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyRemoveOwnerResponse methods */
void   cmsg_dotafantasy_remove_owner_response__init
                     (CMsgDOTAFantasyRemoveOwnerResponse         *message);
size_t cmsg_dotafantasy_remove_owner_response__get_packed_size
                     (const CMsgDOTAFantasyRemoveOwnerResponse   *message);
size_t cmsg_dotafantasy_remove_owner_response__pack
                     (const CMsgDOTAFantasyRemoveOwnerResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_remove_owner_response__pack_to_buffer
                     (const CMsgDOTAFantasyRemoveOwnerResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyRemoveOwnerResponse *
       cmsg_dotafantasy_remove_owner_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_remove_owner_response__free_unpacked
                     (CMsgDOTAFantasyRemoveOwnerResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyScheduledMatchesRequest methods */
void   cmsg_dotafantasy_scheduled_matches_request__init
                     (CMsgDOTAFantasyScheduledMatchesRequest         *message);
size_t cmsg_dotafantasy_scheduled_matches_request__get_packed_size
                     (const CMsgDOTAFantasyScheduledMatchesRequest   *message);
size_t cmsg_dotafantasy_scheduled_matches_request__pack
                     (const CMsgDOTAFantasyScheduledMatchesRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_scheduled_matches_request__pack_to_buffer
                     (const CMsgDOTAFantasyScheduledMatchesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyScheduledMatchesRequest *
       cmsg_dotafantasy_scheduled_matches_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_scheduled_matches_request__free_unpacked
                     (CMsgDOTAFantasyScheduledMatchesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays methods */
void   cmsg_dotafantasy_scheduled_matches_response__scheduled_match_days__init
                     (CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays         *message);
/* CMsgDOTAFantasyScheduledMatchesResponse methods */
void   cmsg_dotafantasy_scheduled_matches_response__init
                     (CMsgDOTAFantasyScheduledMatchesResponse         *message);
size_t cmsg_dotafantasy_scheduled_matches_response__get_packed_size
                     (const CMsgDOTAFantasyScheduledMatchesResponse   *message);
size_t cmsg_dotafantasy_scheduled_matches_response__pack
                     (const CMsgDOTAFantasyScheduledMatchesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_scheduled_matches_response__pack_to_buffer
                     (const CMsgDOTAFantasyScheduledMatchesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyScheduledMatchesResponse *
       cmsg_dotafantasy_scheduled_matches_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_scheduled_matches_response__free_unpacked
                     (CMsgDOTAFantasyScheduledMatchesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeaveLeagueRequest methods */
void   cmsg_dotafantasy_leave_league_request__init
                     (CMsgDOTAFantasyLeaveLeagueRequest         *message);
size_t cmsg_dotafantasy_leave_league_request__get_packed_size
                     (const CMsgDOTAFantasyLeaveLeagueRequest   *message);
size_t cmsg_dotafantasy_leave_league_request__pack
                     (const CMsgDOTAFantasyLeaveLeagueRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_leave_league_request__pack_to_buffer
                     (const CMsgDOTAFantasyLeaveLeagueRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeaveLeagueRequest *
       cmsg_dotafantasy_leave_league_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_leave_league_request__free_unpacked
                     (CMsgDOTAFantasyLeaveLeagueRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLeaveLeagueResponse methods */
void   cmsg_dotafantasy_leave_league_response__init
                     (CMsgDOTAFantasyLeaveLeagueResponse         *message);
size_t cmsg_dotafantasy_leave_league_response__get_packed_size
                     (const CMsgDOTAFantasyLeaveLeagueResponse   *message);
size_t cmsg_dotafantasy_leave_league_response__pack
                     (const CMsgDOTAFantasyLeaveLeagueResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_leave_league_response__pack_to_buffer
                     (const CMsgDOTAFantasyLeaveLeagueResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLeaveLeagueResponse *
       cmsg_dotafantasy_leave_league_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_leave_league_response__free_unpacked
                     (CMsgDOTAFantasyLeaveLeagueResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerScoreDetailsRequest methods */
void   cmsg_dotafantasy_player_score_details_request__init
                     (CMsgDOTAFantasyPlayerScoreDetailsRequest         *message);
size_t cmsg_dotafantasy_player_score_details_request__get_packed_size
                     (const CMsgDOTAFantasyPlayerScoreDetailsRequest   *message);
size_t cmsg_dotafantasy_player_score_details_request__pack
                     (const CMsgDOTAFantasyPlayerScoreDetailsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_score_details_request__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerScoreDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerScoreDetailsRequest *
       cmsg_dotafantasy_player_score_details_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_score_details_request__free_unpacked
                     (CMsgDOTAFantasyPlayerScoreDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData methods */
void   cmsg_dotafantasy_player_score_details_response__player_match_data__init
                     (CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData         *message);
/* CMsgDOTAFantasyPlayerScoreDetailsResponse methods */
void   cmsg_dotafantasy_player_score_details_response__init
                     (CMsgDOTAFantasyPlayerScoreDetailsResponse         *message);
size_t cmsg_dotafantasy_player_score_details_response__get_packed_size
                     (const CMsgDOTAFantasyPlayerScoreDetailsResponse   *message);
size_t cmsg_dotafantasy_player_score_details_response__pack
                     (const CMsgDOTAFantasyPlayerScoreDetailsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_score_details_response__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerScoreDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerScoreDetailsResponse *
       cmsg_dotafantasy_player_score_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_score_details_response__free_unpacked
                     (CMsgDOTAFantasyPlayerScoreDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPassportVoteTeamGuess methods */
void   cmsg_dotapassport_vote_team_guess__init
                     (CMsgDOTAPassportVoteTeamGuess         *message);
size_t cmsg_dotapassport_vote_team_guess__get_packed_size
                     (const CMsgDOTAPassportVoteTeamGuess   *message);
size_t cmsg_dotapassport_vote_team_guess__pack
                     (const CMsgDOTAPassportVoteTeamGuess   *message,
                      uint8_t             *out);
size_t cmsg_dotapassport_vote_team_guess__pack_to_buffer
                     (const CMsgDOTAPassportVoteTeamGuess   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPassportVoteTeamGuess *
       cmsg_dotapassport_vote_team_guess__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapassport_vote_team_guess__free_unpacked
                     (CMsgDOTAPassportVoteTeamGuess *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPassportVoteGenericSelection methods */
void   cmsg_dotapassport_vote_generic_selection__init
                     (CMsgDOTAPassportVoteGenericSelection         *message);
size_t cmsg_dotapassport_vote_generic_selection__get_packed_size
                     (const CMsgDOTAPassportVoteGenericSelection   *message);
size_t cmsg_dotapassport_vote_generic_selection__pack
                     (const CMsgDOTAPassportVoteGenericSelection   *message,
                      uint8_t             *out);
size_t cmsg_dotapassport_vote_generic_selection__pack_to_buffer
                     (const CMsgDOTAPassportVoteGenericSelection   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPassportVoteGenericSelection *
       cmsg_dotapassport_vote_generic_selection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapassport_vote_generic_selection__free_unpacked
                     (CMsgDOTAPassportVoteGenericSelection *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPassportStampedPlayer methods */
void   cmsg_dotapassport_stamped_player__init
                     (CMsgDOTAPassportStampedPlayer         *message);
size_t cmsg_dotapassport_stamped_player__get_packed_size
                     (const CMsgDOTAPassportStampedPlayer   *message);
size_t cmsg_dotapassport_stamped_player__pack
                     (const CMsgDOTAPassportStampedPlayer   *message,
                      uint8_t             *out);
size_t cmsg_dotapassport_stamped_player__pack_to_buffer
                     (const CMsgDOTAPassportStampedPlayer   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPassportStampedPlayer *
       cmsg_dotapassport_stamped_player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapassport_stamped_player__free_unpacked
                     (CMsgDOTAPassportStampedPlayer *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPassportPlayerCardChallenge methods */
void   cmsg_dotapassport_player_card_challenge__init
                     (CMsgDOTAPassportPlayerCardChallenge         *message);
size_t cmsg_dotapassport_player_card_challenge__get_packed_size
                     (const CMsgDOTAPassportPlayerCardChallenge   *message);
size_t cmsg_dotapassport_player_card_challenge__pack
                     (const CMsgDOTAPassportPlayerCardChallenge   *message,
                      uint8_t             *out);
size_t cmsg_dotapassport_player_card_challenge__pack_to_buffer
                     (const CMsgDOTAPassportPlayerCardChallenge   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPassportPlayerCardChallenge *
       cmsg_dotapassport_player_card_challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapassport_player_card_challenge__free_unpacked
                     (CMsgDOTAPassportPlayerCardChallenge *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPassportVote methods */
void   cmsg_dotapassport_vote__init
                     (CMsgDOTAPassportVote         *message);
size_t cmsg_dotapassport_vote__get_packed_size
                     (const CMsgDOTAPassportVote   *message);
size_t cmsg_dotapassport_vote__pack
                     (const CMsgDOTAPassportVote   *message,
                      uint8_t             *out);
size_t cmsg_dotapassport_vote__pack_to_buffer
                     (const CMsgDOTAPassportVote   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPassportVote *
       cmsg_dotapassport_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapassport_vote__free_unpacked
                     (CMsgDOTAPassportVote *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerMatchStats__Match methods */
void   cmsg_dotafantasy_player_match_stats__match__init
                     (CMsgDOTAFantasyPlayerMatchStats__Match         *message);
/* CMsgDOTAFantasyPlayerMatchStats methods */
void   cmsg_dotafantasy_player_match_stats__init
                     (CMsgDOTAFantasyPlayerMatchStats         *message);
size_t cmsg_dotafantasy_player_match_stats__get_packed_size
                     (const CMsgDOTAFantasyPlayerMatchStats   *message);
size_t cmsg_dotafantasy_player_match_stats__pack
                     (const CMsgDOTAFantasyPlayerMatchStats   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_match_stats__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerMatchStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerMatchStats *
       cmsg_dotafantasy_player_match_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_match_stats__free_unpacked
                     (CMsgDOTAFantasyPlayerMatchStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetPlayerCardRosterRequest methods */
void   cmsg_client_to_gcget_player_card_roster_request__init
                     (CMsgClientToGCGetPlayerCardRosterRequest         *message);
size_t cmsg_client_to_gcget_player_card_roster_request__get_packed_size
                     (const CMsgClientToGCGetPlayerCardRosterRequest   *message);
size_t cmsg_client_to_gcget_player_card_roster_request__pack
                     (const CMsgClientToGCGetPlayerCardRosterRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_player_card_roster_request__pack_to_buffer
                     (const CMsgClientToGCGetPlayerCardRosterRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetPlayerCardRosterRequest *
       cmsg_client_to_gcget_player_card_roster_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_player_card_roster_request__free_unpacked
                     (CMsgClientToGCGetPlayerCardRosterRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetPlayerCardRosterResponse methods */
void   cmsg_client_to_gcget_player_card_roster_response__init
                     (CMsgClientToGCGetPlayerCardRosterResponse         *message);
size_t cmsg_client_to_gcget_player_card_roster_response__get_packed_size
                     (const CMsgClientToGCGetPlayerCardRosterResponse   *message);
size_t cmsg_client_to_gcget_player_card_roster_response__pack
                     (const CMsgClientToGCGetPlayerCardRosterResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_player_card_roster_response__pack_to_buffer
                     (const CMsgClientToGCGetPlayerCardRosterResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetPlayerCardRosterResponse *
       cmsg_client_to_gcget_player_card_roster_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_player_card_roster_response__free_unpacked
                     (CMsgClientToGCGetPlayerCardRosterResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSetPlayerCardRosterRequest methods */
void   cmsg_client_to_gcset_player_card_roster_request__init
                     (CMsgClientToGCSetPlayerCardRosterRequest         *message);
size_t cmsg_client_to_gcset_player_card_roster_request__get_packed_size
                     (const CMsgClientToGCSetPlayerCardRosterRequest   *message);
size_t cmsg_client_to_gcset_player_card_roster_request__pack
                     (const CMsgClientToGCSetPlayerCardRosterRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcset_player_card_roster_request__pack_to_buffer
                     (const CMsgClientToGCSetPlayerCardRosterRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSetPlayerCardRosterRequest *
       cmsg_client_to_gcset_player_card_roster_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcset_player_card_roster_request__free_unpacked
                     (CMsgClientToGCSetPlayerCardRosterRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSetPlayerCardRosterResponse methods */
void   cmsg_client_to_gcset_player_card_roster_response__init
                     (CMsgClientToGCSetPlayerCardRosterResponse         *message);
size_t cmsg_client_to_gcset_player_card_roster_response__get_packed_size
                     (const CMsgClientToGCSetPlayerCardRosterResponse   *message);
size_t cmsg_client_to_gcset_player_card_roster_response__pack
                     (const CMsgClientToGCSetPlayerCardRosterResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcset_player_card_roster_response__pack_to_buffer
                     (const CMsgClientToGCSetPlayerCardRosterResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSetPlayerCardRosterResponse *
       cmsg_client_to_gcset_player_card_roster_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcset_player_card_roster_response__free_unpacked
                     (CMsgClientToGCSetPlayerCardRosterResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgGCPlayerInfo__PlayerInfo_Closure)
                 (const CMsgGCPlayerInfo__PlayerInfo *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfo__RegionLeaderboard_Closure)
                 (const CMsgGCPlayerInfo__RegionLeaderboard *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfo_Closure)
                 (const CMsgGCPlayerInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTACreateFantasyLeagueRequest_Closure)
                 (const CMsgDOTACreateFantasyLeagueRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTACreateFantasyLeagueResponse_Closure)
                 (const CMsgDOTACreateFantasyLeagueResponse *message,
                  void *closure_data);
typedef void (*CMsgFantasyLeagueScoring_Closure)
                 (const CMsgFantasyLeagueScoring *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueInfo__OwnerInfo_Closure)
                 (const CMsgDOTAFantasyLeagueInfo__OwnerInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueInfo_Closure)
                 (const CMsgDOTAFantasyLeagueInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueEditInfoRequest_Closure)
                 (const CMsgDOTAFantasyLeagueEditInfoRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueEditInfoResponse_Closure)
                 (const CMsgDOTAFantasyLeagueEditInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueFindRequest_Closure)
                 (const CMsgDOTAFantasyLeagueFindRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueFindResponse_Closure)
                 (const CMsgDOTAFantasyLeagueFindResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueInfoRequest_Closure)
                 (const CMsgDOTAFantasyLeagueInfoRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueInfoResponse_Closure)
                 (const CMsgDOTAFantasyLeagueInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueMatchupsRequest_Closure)
                 (const CMsgDOTAFantasyLeagueMatchupsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueMatchupsResponse__Matchup_Closure)
                 (const CMsgDOTAFantasyLeagueMatchupsResponse__Matchup *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups_Closure)
                 (const CMsgDOTAFantasyLeagueMatchupsResponse__WeeklyMatchups *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueMatchupsResponse_Closure)
                 (const CMsgDOTAFantasyLeagueMatchupsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAEditFantasyTeamRequest_Closure)
                 (const CMsgDOTAEditFantasyTeamRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAEditFantasyTeamResponse_Closure)
                 (const CMsgDOTAEditFantasyTeamResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_Closure)
                 (const CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_Closure)
                 (const CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamInfoResponse_Closure)
                 (const CMsgDOTAFantasyTeamInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamInfo_Closure)
                 (const CMsgDOTAFantasyTeamInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamScoreRequest_Closure)
                 (const CMsgDOTAFantasyTeamScoreRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore_Closure)
                 (const CMsgDOTAFantasyTeamScoreResponse__CMsgPlayerScore *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamScoreResponse_Closure)
                 (const CMsgDOTAFantasyTeamScoreResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamStandingsRequest_Closure)
                 (const CMsgDOTAFantasyTeamStandingsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore_Closure)
                 (const CMsgDOTAFantasyTeamStandingsResponse__CMsgTeamScore *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamStandingsResponse_Closure)
                 (const CMsgDOTAFantasyTeamStandingsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerScoreRequest_Closure)
                 (const CMsgDOTAFantasyPlayerScoreRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerScoreResponse_Closure)
                 (const CMsgDOTAFantasyPlayerScoreResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerStandingsRequest_Closure)
                 (const CMsgDOTAFantasyPlayerStandingsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore_Closure)
                 (const CMsgDOTAFantasyPlayerStandingsResponse__CMsgPlayerScore *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerStandingsResponse_Closure)
                 (const CMsgDOTAFantasyPlayerStandingsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerInfoRequest_Closure)
                 (const CMsgDOTAFantasyPlayerInfoRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerInfoResponse_Closure)
                 (const CMsgDOTAFantasyPlayerInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueCreateRequest_Closure)
                 (const CMsgDOTAFantasyLeagueCreateRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueCreateResponse_Closure)
                 (const CMsgDOTAFantasyLeagueCreateResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamCreateRequest_Closure)
                 (const CMsgDOTAFantasyTeamCreateRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamCreateResponse_Closure)
                 (const CMsgDOTAFantasyTeamCreateResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange_Closure)
                 (const CMsgDOTAFantasyLeagueEditInvitesRequest__InviteChange *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueEditInvitesRequest_Closure)
                 (const CMsgDOTAFantasyLeagueEditInvitesRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueEditInvitesResponse_Closure)
                 (const CMsgDOTAFantasyLeagueEditInvitesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueDraftStatusRequest_Closure)
                 (const CMsgDOTAFantasyLeagueDraftStatusRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueDraftStatus_Closure)
                 (const CMsgDOTAFantasyLeagueDraftStatus *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueDraftPlayerRequest_Closure)
                 (const CMsgDOTAFantasyLeagueDraftPlayerRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeagueDraftPlayerResponse_Closure)
                 (const CMsgDOTAFantasyLeagueDraftPlayerResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterSwapRequest_Closure)
                 (const CMsgDOTAFantasyTeamRosterSwapRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterSwapResponse_Closure)
                 (const CMsgDOTAFantasyTeamRosterSwapResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterAddDropRequest_Closure)
                 (const CMsgDOTAFantasyTeamRosterAddDropRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterAddDropResponse_Closure)
                 (const CMsgDOTAFantasyTeamRosterAddDropResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamTradesRequest_Closure)
                 (const CMsgDOTAFantasyTeamTradesRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamTradesResponse__Trade_Closure)
                 (const CMsgDOTAFantasyTeamTradesResponse__Trade *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamTradesResponse_Closure)
                 (const CMsgDOTAFantasyTeamTradesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamTradeCancelRequest_Closure)
                 (const CMsgDOTAFantasyTeamTradeCancelRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamTradeCancelResponse_Closure)
                 (const CMsgDOTAFantasyTeamTradeCancelResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterRequest_Closure)
                 (const CMsgDOTAFantasyTeamRosterRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyTeamRosterResponse_Closure)
                 (const CMsgDOTAFantasyTeamRosterResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerHisoricalStatsRequest_Closure)
                 (const CMsgDOTAFantasyPlayerHisoricalStatsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator_Closure)
                 (const CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerScoreAccumulator *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats_Closure)
                 (const CMsgDOTAFantasyPlayerHisoricalStatsResponse__PlayerStats *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_Closure)
                 (const CMsgDOTAFantasyPlayerHisoricalStatsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyMessageAdd_Closure)
                 (const CMsgDOTAFantasyMessageAdd *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyMessagesRequest_Closure)
                 (const CMsgDOTAFantasyMessagesRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyMessagesResponse__Message_Closure)
                 (const CMsgDOTAFantasyMessagesResponse__Message *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyMessagesResponse_Closure)
                 (const CMsgDOTAFantasyMessagesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyRemoveOwner_Closure)
                 (const CMsgDOTAFantasyRemoveOwner *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyRemoveOwnerResponse_Closure)
                 (const CMsgDOTAFantasyRemoveOwnerResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyScheduledMatchesRequest_Closure)
                 (const CMsgDOTAFantasyScheduledMatchesRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays_Closure)
                 (const CMsgDOTAFantasyScheduledMatchesResponse__ScheduledMatchDays *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyScheduledMatchesResponse_Closure)
                 (const CMsgDOTAFantasyScheduledMatchesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeaveLeagueRequest_Closure)
                 (const CMsgDOTAFantasyLeaveLeagueRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLeaveLeagueResponse_Closure)
                 (const CMsgDOTAFantasyLeaveLeagueResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerScoreDetailsRequest_Closure)
                 (const CMsgDOTAFantasyPlayerScoreDetailsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData_Closure)
                 (const CMsgDOTAFantasyPlayerScoreDetailsResponse__PlayerMatchData *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerScoreDetailsResponse_Closure)
                 (const CMsgDOTAFantasyPlayerScoreDetailsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPassportVoteTeamGuess_Closure)
                 (const CMsgDOTAPassportVoteTeamGuess *message,
                  void *closure_data);
typedef void (*CMsgDOTAPassportVoteGenericSelection_Closure)
                 (const CMsgDOTAPassportVoteGenericSelection *message,
                  void *closure_data);
typedef void (*CMsgDOTAPassportStampedPlayer_Closure)
                 (const CMsgDOTAPassportStampedPlayer *message,
                  void *closure_data);
typedef void (*CMsgDOTAPassportPlayerCardChallenge_Closure)
                 (const CMsgDOTAPassportPlayerCardChallenge *message,
                  void *closure_data);
typedef void (*CMsgDOTAPassportVote_Closure)
                 (const CMsgDOTAPassportVote *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerMatchStats__Match_Closure)
                 (const CMsgDOTAFantasyPlayerMatchStats__Match *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerMatchStats_Closure)
                 (const CMsgDOTAFantasyPlayerMatchStats *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetPlayerCardRosterRequest_Closure)
                 (const CMsgClientToGCGetPlayerCardRosterRequest *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetPlayerCardRosterResponse_Closure)
                 (const CMsgClientToGCGetPlayerCardRosterResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetPlayerCardRosterRequest_Closure)
                 (const CMsgClientToGCSetPlayerCardRosterRequest *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetPlayerCardRosterResponse_Closure)
                 (const CMsgClientToGCSetPlayerCardRosterResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dota_2013_passport_selection_indices__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info__player_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info__region_leaderboard__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacreate_fantasy_league_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacreate_fantasy_league_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotacreate_fantasy_league_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_fantasy_league_scoring__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_info__owner_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_edit_info_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_edit_info_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_edit_info_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_find_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_find_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_find_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_info_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_info_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_info_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_matchups_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_matchups_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_matchups_response__matchup__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_matchups_response__weekly_matchups__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_matchups_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaedit_fantasy_team_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaedit_fantasy_team_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotaedit_fantasy_team_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_info_request_by_fantasy_league_id__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_info_request_by_owner_account_id__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_info_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_score_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_score_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_score_response__cmsg_player_score__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_score_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_standings_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_standings_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_standings_response__cmsg_team_score__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_standings_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_score_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_score_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_player_score_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_standings_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_standings_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_standings_response__cmsg_player_score__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_player_standings_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_info_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_info_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_create_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_create_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_create_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_create_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_create_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_create_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_edit_invites_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_edit_invites_request__invite_change__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_edit_invites_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_edit_invites_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_draft_status_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_draft_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_draft_player_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_league_draft_player_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_league_draft_player_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_swap_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_swap_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_roster_swap_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_add_drop_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_add_drop_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_roster_add_drop_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_trades_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_trades_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_trades_response__trade__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_trades_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_trade_cancel_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_trade_cancel_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_trade_cancel_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_team_roster_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_team_roster_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_hisorical_stats_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_hisorical_stats_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_hisorical_stats_response__player_score_accumulator__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_hisorical_stats_response__player_stats__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_player_hisorical_stats_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_message_add__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_messages_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_messages_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_messages_response__message__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_messages_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_remove_owner__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_remove_owner_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_remove_owner_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_scheduled_matches_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_scheduled_matches_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_scheduled_matches_response__scheduled_match_days__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_scheduled_matches_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_leave_league_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_leave_league_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_leave_league_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_score_details_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_score_details_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_score_details_response__player_match_data__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafantasy_player_score_details_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapassport_vote_team_guess__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapassport_vote_generic_selection__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapassport_stamped_player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapassport_player_card_challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapassport_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_match_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_match_stats__match__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_player_card_roster_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_player_card_roster_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcget_player_card_roster_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_player_card_roster_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_player_card_roster_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcset_player_card_roster_response__result__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fgcmessages_5fclient_5ffantasy_2eproto__INCLUDED */
