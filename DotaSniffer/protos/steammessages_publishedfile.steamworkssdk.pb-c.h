/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_publishedfile.steamworkssdk.proto */

#ifndef PROTOBUF_C_steammessages_5fpublishedfile_2esteamworkssdk_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fpublishedfile_2esteamworkssdk_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_unified_base.steamworkssdk.pb-c.h"

typedef struct _CPublishedFileSubscribeRequest CPublishedFileSubscribeRequest;
typedef struct _CPublishedFileSubscribeResponse CPublishedFileSubscribeResponse;
typedef struct _CPublishedFileUnsubscribeRequest CPublishedFileUnsubscribeRequest;
typedef struct _CPublishedFileUnsubscribeResponse CPublishedFileUnsubscribeResponse;
typedef struct _CPublishedFilePublishRequest CPublishedFilePublishRequest;
typedef struct _CPublishedFilePublishResponse CPublishedFilePublishResponse;
typedef struct _CPublishedFileGetDetailsRequest CPublishedFileGetDetailsRequest;
typedef struct _PublishedFileDetails PublishedFileDetails;
typedef struct _PublishedFileDetails__Tag PublishedFileDetails__Tag;
typedef struct _PublishedFileDetails__Preview PublishedFileDetails__Preview;
typedef struct _PublishedFileDetails__Child PublishedFileDetails__Child;
typedef struct _PublishedFileDetails__KVTag PublishedFileDetails__KVTag;
typedef struct _PublishedFileDetails__VoteData PublishedFileDetails__VoteData;
typedef struct _CPublishedFileGetDetailsResponse CPublishedFileGetDetailsResponse;
typedef struct _CPublishedFileGetUserFilesRequest CPublishedFileGetUserFilesRequest;
typedef struct _CPublishedFileGetUserFilesResponse CPublishedFileGetUserFilesResponse;
typedef struct _CPublishedFileGetUserFilesResponse__App CPublishedFileGetUserFilesResponse__App;
typedef struct _CPublishedFileUpdateRequest CPublishedFileUpdateRequest;
typedef struct _CPublishedFileUpdateResponse CPublishedFileUpdateResponse;
typedef struct _CPublishedFileRefreshVotingQueueRequest CPublishedFileRefreshVotingQueueRequest;
typedef struct _CPublishedFileRefreshVotingQueueResponse CPublishedFileRefreshVotingQueueResponse;


/* --- enums --- */


/* --- messages --- */

struct  _CPublishedFileSubscribeRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  protobuf_c_boolean has_list_type;
  uint32_t list_type;
  protobuf_c_boolean has_appid;
  int32_t appid;
  protobuf_c_boolean has_notify_client;
  protobuf_c_boolean notify_client;
};
#define CPUBLISHED_FILE__SUBSCRIBE__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__subscribe__request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CPublishedFileSubscribeResponse
{
  ProtobufCMessage base;
};
#define CPUBLISHED_FILE__SUBSCRIBE__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__subscribe__response__descriptor) \
     }


struct  _CPublishedFileUnsubscribeRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  protobuf_c_boolean has_list_type;
  uint32_t list_type;
  protobuf_c_boolean has_appid;
  int32_t appid;
  protobuf_c_boolean has_notify_client;
  protobuf_c_boolean notify_client;
};
#define CPUBLISHED_FILE__UNSUBSCRIBE__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__unsubscribe__request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CPublishedFileUnsubscribeResponse
{
  ProtobufCMessage base;
};
#define CPUBLISHED_FILE__UNSUBSCRIBE__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__unsubscribe__response__descriptor) \
     }


struct  _CPublishedFilePublishRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_consumer_appid;
  uint32_t consumer_appid;
  char *cloudfilename;
  char *preview_cloudfilename;
  char *title;
  char *file_description;
  protobuf_c_boolean has_file_type;
  uint32_t file_type;
  char *consumer_shortcut_name;
  char *youtube_username;
  char *youtube_videoid;
  protobuf_c_boolean has_visibility;
  uint32_t visibility;
  char *redirect_uri;
  size_t n_tags;
  char **tags;
  char *collection_type;
  char *game_type;
  char *url;
};
#define CPUBLISHED_FILE__PUBLISH__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__publish__request__descriptor) \
    , 0,0, 0,0, NULL, NULL, NULL, NULL, 0,0, NULL, NULL, NULL, 0,0, NULL, 0,NULL, NULL, NULL, NULL }


struct  _CPublishedFilePublishResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  char *redirect_uri;
};
#define CPUBLISHED_FILE__PUBLISH__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__publish__response__descriptor) \
    , 0,0, NULL }


struct  _CPublishedFileGetDetailsRequest
{
  ProtobufCMessage base;
  size_t n_publishedfileids;
  uint64_t *publishedfileids;
  protobuf_c_boolean has_includetags;
  protobuf_c_boolean includetags;
  protobuf_c_boolean has_includeadditionalpreviews;
  protobuf_c_boolean includeadditionalpreviews;
  protobuf_c_boolean has_includechildren;
  protobuf_c_boolean includechildren;
  protobuf_c_boolean has_includekvtags;
  protobuf_c_boolean includekvtags;
  protobuf_c_boolean has_includevotes;
  protobuf_c_boolean includevotes;
  protobuf_c_boolean has_short_description;
  protobuf_c_boolean short_description;
};
#define CPUBLISHED_FILE__GET_DETAILS__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__get_details__request__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _PublishedFileDetails__Tag
{
  ProtobufCMessage base;
  char *tag;
  protobuf_c_boolean has_adminonly;
  protobuf_c_boolean adminonly;
};
#define PUBLISHED_FILE_DETAILS__TAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__tag__descriptor) \
    , NULL, 0,0 }


struct  _PublishedFileDetails__Preview
{
  ProtobufCMessage base;
  protobuf_c_boolean has_previewid;
  uint64_t previewid;
  protobuf_c_boolean has_sortorder;
  uint32_t sortorder;
  char *url;
  protobuf_c_boolean has_size;
  uint32_t size;
  char *filename;
  char *youtubevideoid;
};
#define PUBLISHED_FILE_DETAILS__PREVIEW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__preview__descriptor) \
    , 0,0, 0,0, NULL, 0,0, NULL, NULL }


struct  _PublishedFileDetails__Child
{
  ProtobufCMessage base;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  protobuf_c_boolean has_sortorder;
  uint32_t sortorder;
  protobuf_c_boolean has_file_type;
  uint32_t file_type;
};
#define PUBLISHED_FILE_DETAILS__CHILD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__child__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _PublishedFileDetails__KVTag
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define PUBLISHED_FILE_DETAILS__KVTAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__kvtag__descriptor) \
    , NULL, NULL }


struct  _PublishedFileDetails__VoteData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_score;
  float score;
  protobuf_c_boolean has_votes_up;
  uint32_t votes_up;
  protobuf_c_boolean has_votes_down;
  uint32_t votes_down;
};
#define PUBLISHED_FILE_DETAILS__VOTE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__vote_data__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _PublishedFileDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  protobuf_c_boolean has_creator;
  uint64_t creator;
  protobuf_c_boolean has_creator_appid;
  uint32_t creator_appid;
  protobuf_c_boolean has_consumer_appid;
  uint32_t consumer_appid;
  protobuf_c_boolean has_consumer_shortcutid;
  uint32_t consumer_shortcutid;
  char *filename;
  protobuf_c_boolean has_file_size;
  uint64_t file_size;
  protobuf_c_boolean has_preview_file_size;
  uint64_t preview_file_size;
  char *file_url;
  char *preview_url;
  char *youtubevideoid;
  char *url;
  protobuf_c_boolean has_hcontent_file;
  uint64_t hcontent_file;
  protobuf_c_boolean has_hcontent_preview;
  uint64_t hcontent_preview;
  char *title;
  char *file_description;
  char *short_description;
  protobuf_c_boolean has_time_created;
  uint32_t time_created;
  protobuf_c_boolean has_time_updated;
  uint32_t time_updated;
  protobuf_c_boolean has_visibility;
  uint32_t visibility;
  protobuf_c_boolean has_flags;
  uint32_t flags;
  protobuf_c_boolean has_workshop_file;
  protobuf_c_boolean workshop_file;
  protobuf_c_boolean has_workshop_accepted;
  protobuf_c_boolean workshop_accepted;
  protobuf_c_boolean has_show_subscribe_all;
  protobuf_c_boolean show_subscribe_all;
  protobuf_c_boolean has_num_comments_developer;
  int32_t num_comments_developer;
  protobuf_c_boolean has_num_comments_public;
  int32_t num_comments_public;
  protobuf_c_boolean has_banned;
  protobuf_c_boolean banned;
  char *ban_reason;
  protobuf_c_boolean has_banner;
  uint64_t banner;
  protobuf_c_boolean has_can_be_deleted;
  protobuf_c_boolean can_be_deleted;
  protobuf_c_boolean has_incompatible;
  protobuf_c_boolean incompatible;
  char *app_name;
  protobuf_c_boolean has_file_type;
  uint32_t file_type;
  protobuf_c_boolean has_can_subscribe;
  protobuf_c_boolean can_subscribe;
  protobuf_c_boolean has_subscriptions;
  uint32_t subscriptions;
  protobuf_c_boolean has_favorited;
  uint32_t favorited;
  protobuf_c_boolean has_followers;
  uint32_t followers;
  protobuf_c_boolean has_lifetime_subscriptions;
  uint32_t lifetime_subscriptions;
  protobuf_c_boolean has_lifetime_favorited;
  uint32_t lifetime_favorited;
  protobuf_c_boolean has_lifetime_followers;
  uint32_t lifetime_followers;
  protobuf_c_boolean has_views;
  uint32_t views;
  protobuf_c_boolean has_image_width;
  uint32_t image_width;
  protobuf_c_boolean has_image_height;
  uint32_t image_height;
  char *image_url;
  protobuf_c_boolean has_spoiler_tag;
  protobuf_c_boolean spoiler_tag;
  protobuf_c_boolean has_shortcutid;
  uint32_t shortcutid;
  char *shortcutname;
  protobuf_c_boolean has_num_children;
  uint32_t num_children;
  protobuf_c_boolean has_num_reports;
  uint32_t num_reports;
  size_t n_previews;
  PublishedFileDetails__Preview **previews;
  size_t n_tags;
  PublishedFileDetails__Tag **tags;
  size_t n_children;
  PublishedFileDetails__Child **children;
  size_t n_kvtags;
  PublishedFileDetails__KVTag **kvtags;
  PublishedFileDetails__VoteData *vote_data;
  protobuf_c_boolean has_time_subscribed;
  uint32_t time_subscribed;
};
#define PUBLISHED_FILE_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&published_file_details__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, NULL, NULL, NULL, NULL, 0,0, 0,0, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, NULL, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, 0,0 }


struct  _CPublishedFileGetDetailsResponse
{
  ProtobufCMessage base;
  size_t n_publishedfiledetails;
  PublishedFileDetails **publishedfiledetails;
};
#define CPUBLISHED_FILE__GET_DETAILS__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__get_details__response__descriptor) \
    , 0,NULL }


struct  _CPublishedFileGetUserFilesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_page;
  uint32_t page;
  protobuf_c_boolean has_numperpage;
  uint32_t numperpage;
  char *sortmethod;
  protobuf_c_boolean has_totalonly;
  protobuf_c_boolean totalonly;
  protobuf_c_boolean has_privacy;
  uint32_t privacy;
  protobuf_c_boolean has_ids_only;
  protobuf_c_boolean ids_only;
  size_t n_requiredtags;
  char **requiredtags;
  size_t n_excludedtags;
  char **excludedtags;
};
extern char cpublished_file__get_user_files__request__sortmethod__default_value[];
#define CPUBLISHED_FILE__GET_USER_FILES__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__get_user_files__request__descriptor) \
    , 0,0, 0,1u, 0,1u, cpublished_file__get_user_files__request__sortmethod__default_value, 0,0, 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CPublishedFileGetUserFilesResponse__App
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  char *name;
  protobuf_c_boolean has_shortcutid;
  uint32_t shortcutid;
  protobuf_c_boolean has_private_;
  protobuf_c_boolean private_;
};
#define CPUBLISHED_FILE__GET_USER_FILES__RESPONSE__APP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__get_user_files__response__app__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CPublishedFileGetUserFilesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_total;
  uint32_t total;
  protobuf_c_boolean has_startindex;
  uint32_t startindex;
  size_t n_publishedfiledetails;
  PublishedFileDetails **publishedfiledetails;
  size_t n_apps;
  CPublishedFileGetUserFilesResponse__App **apps;
};
#define CPUBLISHED_FILE__GET_USER_FILES__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__get_user_files__response__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CPublishedFileUpdateRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_publishedfileid;
  uint64_t publishedfileid;
  char *title;
  char *file_description;
  protobuf_c_boolean has_visibility;
  uint32_t visibility;
  size_t n_tags;
  char **tags;
  char *filename;
  char *preview_filename;
};
#define CPUBLISHED_FILE__UPDATE__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__update__request__descriptor) \
    , 0,0, 0,0, NULL, NULL, 0,0, 0,NULL, NULL, NULL }


struct  _CPublishedFileUpdateResponse
{
  ProtobufCMessage base;
};
#define CPUBLISHED_FILE__UPDATE__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__update__response__descriptor) \
     }


struct  _CPublishedFileRefreshVotingQueueRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_matching_file_type;
  uint32_t matching_file_type;
  size_t n_tags;
  char **tags;
  protobuf_c_boolean has_match_all_tags;
  protobuf_c_boolean match_all_tags;
  size_t n_excluded_tags;
  char **excluded_tags;
  protobuf_c_boolean has_desired_queue_size;
  uint32_t desired_queue_size;
};
#define CPUBLISHED_FILE__REFRESH_VOTING_QUEUE__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__refresh_voting_queue__request__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,1, 0,NULL, 0,0 }


struct  _CPublishedFileRefreshVotingQueueResponse
{
  ProtobufCMessage base;
};
#define CPUBLISHED_FILE__REFRESH_VOTING_QUEUE__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cpublished_file__refresh_voting_queue__response__descriptor) \
     }


/* CPublishedFileSubscribeRequest methods */
void   cpublished_file__subscribe__request__init
                     (CPublishedFileSubscribeRequest         *message);
size_t cpublished_file__subscribe__request__get_packed_size
                     (const CPublishedFileSubscribeRequest   *message);
size_t cpublished_file__subscribe__request__pack
                     (const CPublishedFileSubscribeRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__subscribe__request__pack_to_buffer
                     (const CPublishedFileSubscribeRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileSubscribeRequest *
       cpublished_file__subscribe__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__subscribe__request__free_unpacked
                     (CPublishedFileSubscribeRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileSubscribeResponse methods */
void   cpublished_file__subscribe__response__init
                     (CPublishedFileSubscribeResponse         *message);
size_t cpublished_file__subscribe__response__get_packed_size
                     (const CPublishedFileSubscribeResponse   *message);
size_t cpublished_file__subscribe__response__pack
                     (const CPublishedFileSubscribeResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__subscribe__response__pack_to_buffer
                     (const CPublishedFileSubscribeResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileSubscribeResponse *
       cpublished_file__subscribe__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__subscribe__response__free_unpacked
                     (CPublishedFileSubscribeResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileUnsubscribeRequest methods */
void   cpublished_file__unsubscribe__request__init
                     (CPublishedFileUnsubscribeRequest         *message);
size_t cpublished_file__unsubscribe__request__get_packed_size
                     (const CPublishedFileUnsubscribeRequest   *message);
size_t cpublished_file__unsubscribe__request__pack
                     (const CPublishedFileUnsubscribeRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__unsubscribe__request__pack_to_buffer
                     (const CPublishedFileUnsubscribeRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileUnsubscribeRequest *
       cpublished_file__unsubscribe__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__unsubscribe__request__free_unpacked
                     (CPublishedFileUnsubscribeRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileUnsubscribeResponse methods */
void   cpublished_file__unsubscribe__response__init
                     (CPublishedFileUnsubscribeResponse         *message);
size_t cpublished_file__unsubscribe__response__get_packed_size
                     (const CPublishedFileUnsubscribeResponse   *message);
size_t cpublished_file__unsubscribe__response__pack
                     (const CPublishedFileUnsubscribeResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__unsubscribe__response__pack_to_buffer
                     (const CPublishedFileUnsubscribeResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileUnsubscribeResponse *
       cpublished_file__unsubscribe__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__unsubscribe__response__free_unpacked
                     (CPublishedFileUnsubscribeResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFilePublishRequest methods */
void   cpublished_file__publish__request__init
                     (CPublishedFilePublishRequest         *message);
size_t cpublished_file__publish__request__get_packed_size
                     (const CPublishedFilePublishRequest   *message);
size_t cpublished_file__publish__request__pack
                     (const CPublishedFilePublishRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__publish__request__pack_to_buffer
                     (const CPublishedFilePublishRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFilePublishRequest *
       cpublished_file__publish__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__publish__request__free_unpacked
                     (CPublishedFilePublishRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFilePublishResponse methods */
void   cpublished_file__publish__response__init
                     (CPublishedFilePublishResponse         *message);
size_t cpublished_file__publish__response__get_packed_size
                     (const CPublishedFilePublishResponse   *message);
size_t cpublished_file__publish__response__pack
                     (const CPublishedFilePublishResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__publish__response__pack_to_buffer
                     (const CPublishedFilePublishResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFilePublishResponse *
       cpublished_file__publish__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__publish__response__free_unpacked
                     (CPublishedFilePublishResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileGetDetailsRequest methods */
void   cpublished_file__get_details__request__init
                     (CPublishedFileGetDetailsRequest         *message);
size_t cpublished_file__get_details__request__get_packed_size
                     (const CPublishedFileGetDetailsRequest   *message);
size_t cpublished_file__get_details__request__pack
                     (const CPublishedFileGetDetailsRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__get_details__request__pack_to_buffer
                     (const CPublishedFileGetDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileGetDetailsRequest *
       cpublished_file__get_details__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__get_details__request__free_unpacked
                     (CPublishedFileGetDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* PublishedFileDetails__Tag methods */
void   published_file_details__tag__init
                     (PublishedFileDetails__Tag         *message);
/* PublishedFileDetails__Preview methods */
void   published_file_details__preview__init
                     (PublishedFileDetails__Preview         *message);
/* PublishedFileDetails__Child methods */
void   published_file_details__child__init
                     (PublishedFileDetails__Child         *message);
/* PublishedFileDetails__KVTag methods */
void   published_file_details__kvtag__init
                     (PublishedFileDetails__KVTag         *message);
/* PublishedFileDetails__VoteData methods */
void   published_file_details__vote_data__init
                     (PublishedFileDetails__VoteData         *message);
/* PublishedFileDetails methods */
void   published_file_details__init
                     (PublishedFileDetails         *message);
size_t published_file_details__get_packed_size
                     (const PublishedFileDetails   *message);
size_t published_file_details__pack
                     (const PublishedFileDetails   *message,
                      uint8_t             *out);
size_t published_file_details__pack_to_buffer
                     (const PublishedFileDetails   *message,
                      ProtobufCBuffer     *buffer);
PublishedFileDetails *
       published_file_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   published_file_details__free_unpacked
                     (PublishedFileDetails *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileGetDetailsResponse methods */
void   cpublished_file__get_details__response__init
                     (CPublishedFileGetDetailsResponse         *message);
size_t cpublished_file__get_details__response__get_packed_size
                     (const CPublishedFileGetDetailsResponse   *message);
size_t cpublished_file__get_details__response__pack
                     (const CPublishedFileGetDetailsResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__get_details__response__pack_to_buffer
                     (const CPublishedFileGetDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileGetDetailsResponse *
       cpublished_file__get_details__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__get_details__response__free_unpacked
                     (CPublishedFileGetDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileGetUserFilesRequest methods */
void   cpublished_file__get_user_files__request__init
                     (CPublishedFileGetUserFilesRequest         *message);
size_t cpublished_file__get_user_files__request__get_packed_size
                     (const CPublishedFileGetUserFilesRequest   *message);
size_t cpublished_file__get_user_files__request__pack
                     (const CPublishedFileGetUserFilesRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__get_user_files__request__pack_to_buffer
                     (const CPublishedFileGetUserFilesRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileGetUserFilesRequest *
       cpublished_file__get_user_files__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__get_user_files__request__free_unpacked
                     (CPublishedFileGetUserFilesRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileGetUserFilesResponse__App methods */
void   cpublished_file__get_user_files__response__app__init
                     (CPublishedFileGetUserFilesResponse__App         *message);
/* CPublishedFileGetUserFilesResponse methods */
void   cpublished_file__get_user_files__response__init
                     (CPublishedFileGetUserFilesResponse         *message);
size_t cpublished_file__get_user_files__response__get_packed_size
                     (const CPublishedFileGetUserFilesResponse   *message);
size_t cpublished_file__get_user_files__response__pack
                     (const CPublishedFileGetUserFilesResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__get_user_files__response__pack_to_buffer
                     (const CPublishedFileGetUserFilesResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileGetUserFilesResponse *
       cpublished_file__get_user_files__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__get_user_files__response__free_unpacked
                     (CPublishedFileGetUserFilesResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileUpdateRequest methods */
void   cpublished_file__update__request__init
                     (CPublishedFileUpdateRequest         *message);
size_t cpublished_file__update__request__get_packed_size
                     (const CPublishedFileUpdateRequest   *message);
size_t cpublished_file__update__request__pack
                     (const CPublishedFileUpdateRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__update__request__pack_to_buffer
                     (const CPublishedFileUpdateRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileUpdateRequest *
       cpublished_file__update__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__update__request__free_unpacked
                     (CPublishedFileUpdateRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileUpdateResponse methods */
void   cpublished_file__update__response__init
                     (CPublishedFileUpdateResponse         *message);
size_t cpublished_file__update__response__get_packed_size
                     (const CPublishedFileUpdateResponse   *message);
size_t cpublished_file__update__response__pack
                     (const CPublishedFileUpdateResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__update__response__pack_to_buffer
                     (const CPublishedFileUpdateResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileUpdateResponse *
       cpublished_file__update__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__update__response__free_unpacked
                     (CPublishedFileUpdateResponse *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileRefreshVotingQueueRequest methods */
void   cpublished_file__refresh_voting_queue__request__init
                     (CPublishedFileRefreshVotingQueueRequest         *message);
size_t cpublished_file__refresh_voting_queue__request__get_packed_size
                     (const CPublishedFileRefreshVotingQueueRequest   *message);
size_t cpublished_file__refresh_voting_queue__request__pack
                     (const CPublishedFileRefreshVotingQueueRequest   *message,
                      uint8_t             *out);
size_t cpublished_file__refresh_voting_queue__request__pack_to_buffer
                     (const CPublishedFileRefreshVotingQueueRequest   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileRefreshVotingQueueRequest *
       cpublished_file__refresh_voting_queue__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__refresh_voting_queue__request__free_unpacked
                     (CPublishedFileRefreshVotingQueueRequest *message,
                      ProtobufCAllocator *allocator);
/* CPublishedFileRefreshVotingQueueResponse methods */
void   cpublished_file__refresh_voting_queue__response__init
                     (CPublishedFileRefreshVotingQueueResponse         *message);
size_t cpublished_file__refresh_voting_queue__response__get_packed_size
                     (const CPublishedFileRefreshVotingQueueResponse   *message);
size_t cpublished_file__refresh_voting_queue__response__pack
                     (const CPublishedFileRefreshVotingQueueResponse   *message,
                      uint8_t             *out);
size_t cpublished_file__refresh_voting_queue__response__pack_to_buffer
                     (const CPublishedFileRefreshVotingQueueResponse   *message,
                      ProtobufCBuffer     *buffer);
CPublishedFileRefreshVotingQueueResponse *
       cpublished_file__refresh_voting_queue__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cpublished_file__refresh_voting_queue__response__free_unpacked
                     (CPublishedFileRefreshVotingQueueResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CPublishedFileSubscribeRequest_Closure)
                 (const CPublishedFileSubscribeRequest *message,
                  void *closure_data);
typedef void (*CPublishedFileSubscribeResponse_Closure)
                 (const CPublishedFileSubscribeResponse *message,
                  void *closure_data);
typedef void (*CPublishedFileUnsubscribeRequest_Closure)
                 (const CPublishedFileUnsubscribeRequest *message,
                  void *closure_data);
typedef void (*CPublishedFileUnsubscribeResponse_Closure)
                 (const CPublishedFileUnsubscribeResponse *message,
                  void *closure_data);
typedef void (*CPublishedFilePublishRequest_Closure)
                 (const CPublishedFilePublishRequest *message,
                  void *closure_data);
typedef void (*CPublishedFilePublishResponse_Closure)
                 (const CPublishedFilePublishResponse *message,
                  void *closure_data);
typedef void (*CPublishedFileGetDetailsRequest_Closure)
                 (const CPublishedFileGetDetailsRequest *message,
                  void *closure_data);
typedef void (*PublishedFileDetails__Tag_Closure)
                 (const PublishedFileDetails__Tag *message,
                  void *closure_data);
typedef void (*PublishedFileDetails__Preview_Closure)
                 (const PublishedFileDetails__Preview *message,
                  void *closure_data);
typedef void (*PublishedFileDetails__Child_Closure)
                 (const PublishedFileDetails__Child *message,
                  void *closure_data);
typedef void (*PublishedFileDetails__KVTag_Closure)
                 (const PublishedFileDetails__KVTag *message,
                  void *closure_data);
typedef void (*PublishedFileDetails__VoteData_Closure)
                 (const PublishedFileDetails__VoteData *message,
                  void *closure_data);
typedef void (*PublishedFileDetails_Closure)
                 (const PublishedFileDetails *message,
                  void *closure_data);
typedef void (*CPublishedFileGetDetailsResponse_Closure)
                 (const CPublishedFileGetDetailsResponse *message,
                  void *closure_data);
typedef void (*CPublishedFileGetUserFilesRequest_Closure)
                 (const CPublishedFileGetUserFilesRequest *message,
                  void *closure_data);
typedef void (*CPublishedFileGetUserFilesResponse__App_Closure)
                 (const CPublishedFileGetUserFilesResponse__App *message,
                  void *closure_data);
typedef void (*CPublishedFileGetUserFilesResponse_Closure)
                 (const CPublishedFileGetUserFilesResponse *message,
                  void *closure_data);
typedef void (*CPublishedFileUpdateRequest_Closure)
                 (const CPublishedFileUpdateRequest *message,
                  void *closure_data);
typedef void (*CPublishedFileUpdateResponse_Closure)
                 (const CPublishedFileUpdateResponse *message,
                  void *closure_data);
typedef void (*CPublishedFileRefreshVotingQueueRequest_Closure)
                 (const CPublishedFileRefreshVotingQueueRequest *message,
                  void *closure_data);
typedef void (*CPublishedFileRefreshVotingQueueResponse_Closure)
                 (const CPublishedFileRefreshVotingQueueResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _PublishedFile_Service PublishedFile_Service;
struct _PublishedFile_Service
{
  ProtobufCService base;
  void (*subscribe)(PublishedFile_Service *service,
                    const CPublishedFileSubscribeRequest *input,
                    CPublishedFileSubscribeResponse_Closure closure,
                    void *closure_data);
  void (*unsubscribe)(PublishedFile_Service *service,
                      const CPublishedFileUnsubscribeRequest *input,
                      CPublishedFileUnsubscribeResponse_Closure closure,
                      void *closure_data);
  void (*publish)(PublishedFile_Service *service,
                  const CPublishedFilePublishRequest *input,
                  CPublishedFilePublishResponse_Closure closure,
                  void *closure_data);
  void (*get_details)(PublishedFile_Service *service,
                      const CPublishedFileGetDetailsRequest *input,
                      CPublishedFileGetDetailsResponse_Closure closure,
                      void *closure_data);
  void (*get_user_files)(PublishedFile_Service *service,
                         const CPublishedFileGetUserFilesRequest *input,
                         CPublishedFileGetUserFilesResponse_Closure closure,
                         void *closure_data);
  void (*update)(PublishedFile_Service *service,
                 const CPublishedFileUpdateRequest *input,
                 CPublishedFileUpdateResponse_Closure closure,
                 void *closure_data);
  void (*refresh_voting_queue)(PublishedFile_Service *service,
                               const CPublishedFileRefreshVotingQueueRequest *input,
                               CPublishedFileRefreshVotingQueueResponse_Closure closure,
                               void *closure_data);
};
typedef void (*PublishedFile_ServiceDestroy)(PublishedFile_Service *);
void published_file__init (PublishedFile_Service *service,
                           PublishedFile_ServiceDestroy destroy);
#define PUBLISHED_FILE__BASE_INIT \
    { &published_file__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PUBLISHED_FILE__INIT(function_prefix__) \
    { PUBLISHED_FILE__BASE_INIT,\
      function_prefix__ ## subscribe,\
      function_prefix__ ## unsubscribe,\
      function_prefix__ ## publish,\
      function_prefix__ ## get_details,\
      function_prefix__ ## get_user_files,\
      function_prefix__ ## update,\
      function_prefix__ ## refresh_voting_queue  }
void published_file__subscribe(ProtobufCService *service,
                               const CPublishedFileSubscribeRequest *input,
                               CPublishedFileSubscribeResponse_Closure closure,
                               void *closure_data);
void published_file__unsubscribe(ProtobufCService *service,
                                 const CPublishedFileUnsubscribeRequest *input,
                                 CPublishedFileUnsubscribeResponse_Closure closure,
                                 void *closure_data);
void published_file__publish(ProtobufCService *service,
                             const CPublishedFilePublishRequest *input,
                             CPublishedFilePublishResponse_Closure closure,
                             void *closure_data);
void published_file__get_details(ProtobufCService *service,
                                 const CPublishedFileGetDetailsRequest *input,
                                 CPublishedFileGetDetailsResponse_Closure closure,
                                 void *closure_data);
void published_file__get_user_files(ProtobufCService *service,
                                    const CPublishedFileGetUserFilesRequest *input,
                                    CPublishedFileGetUserFilesResponse_Closure closure,
                                    void *closure_data);
void published_file__update(ProtobufCService *service,
                            const CPublishedFileUpdateRequest *input,
                            CPublishedFileUpdateResponse_Closure closure,
                            void *closure_data);
void published_file__refresh_voting_queue(ProtobufCService *service,
                                          const CPublishedFileRefreshVotingQueueRequest *input,
                                          CPublishedFileRefreshVotingQueueResponse_Closure closure,
                                          void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cpublished_file__subscribe__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__subscribe__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__unsubscribe__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__unsubscribe__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__publish__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__publish__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__get_details__request__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__tag__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__preview__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__child__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__kvtag__descriptor;
extern const ProtobufCMessageDescriptor published_file_details__vote_data__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__get_details__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__get_user_files__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__get_user_files__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__get_user_files__response__app__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__update__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__update__response__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__refresh_voting_queue__request__descriptor;
extern const ProtobufCMessageDescriptor cpublished_file__refresh_voting_queue__response__descriptor;
extern const ProtobufCServiceDescriptor published_file__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fpublishedfile_2esteamworkssdk_2eproto__INCLUDED */
