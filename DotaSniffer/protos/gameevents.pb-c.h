/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gameevents.proto */

#ifndef PROTOBUF_C_gameevents_2eproto__INCLUDED
#define PROTOBUF_C_gameevents_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "networkbasetypes.pb-c.h"

typedef struct _CMsgVDebugGameSessionIDEvent CMsgVDebugGameSessionIDEvent;
typedef struct _CMsgPlaceDecalEvent CMsgPlaceDecalEvent;
typedef struct _CMsgClearWorldDecalsEvent CMsgClearWorldDecalsEvent;
typedef struct _CMsgClearEntityDecalsEvent CMsgClearEntityDecalsEvent;
typedef struct _CMsgClearDecalsForSkeletonInstanceEvent CMsgClearDecalsForSkeletonInstanceEvent;
typedef struct _CMsgSource1LegacyGameEventList CMsgSource1LegacyGameEventList;
typedef struct _CMsgSource1LegacyGameEventList__KeyT CMsgSource1LegacyGameEventList__KeyT;
typedef struct _CMsgSource1LegacyGameEventList__DescriptorT CMsgSource1LegacyGameEventList__DescriptorT;
typedef struct _CMsgSource1LegacyListenEvents CMsgSource1LegacyListenEvents;
typedef struct _CMsgSource1LegacyGameEvent CMsgSource1LegacyGameEvent;
typedef struct _CMsgSource1LegacyGameEvent__KeyT CMsgSource1LegacyGameEvent__KeyT;
typedef struct _CMsgSosStartSoundEvent CMsgSosStartSoundEvent;
typedef struct _CMsgSosStopSoundEvent CMsgSosStopSoundEvent;
typedef struct _CMsgSosStopSoundEventHash CMsgSosStopSoundEventHash;
typedef struct _CMsgSosSetSoundEventParams CMsgSosSetSoundEventParams;
typedef struct _CMsgSosSetLibraryStackFields CMsgSosSetLibraryStackFields;


/* --- enums --- */

typedef enum _EBaseGameEvents {
  EBASE_GAME_EVENTS__GE_VDebugGameSessionIDEvent = 200,
  EBASE_GAME_EVENTS__GE_PlaceDecalEvent = 201,
  EBASE_GAME_EVENTS__GE_ClearWorldDecalsEvent = 202,
  EBASE_GAME_EVENTS__GE_ClearEntityDecalsEvent = 203,
  EBASE_GAME_EVENTS__GE_ClearDecalsForSkeletonInstanceEvent = 204,
  EBASE_GAME_EVENTS__GE_Source1LegacyGameEventList = 205,
  EBASE_GAME_EVENTS__GE_Source1LegacyListenEvents = 206,
  EBASE_GAME_EVENTS__GE_Source1LegacyGameEvent = 207,
  EBASE_GAME_EVENTS__GE_SosStartSoundEvent = 208,
  EBASE_GAME_EVENTS__GE_SosStopSoundEvent = 209,
  EBASE_GAME_EVENTS__GE_SosSetSoundEventParams = 210,
  EBASE_GAME_EVENTS__GE_SosSetLibraryStackFields = 211,
  EBASE_GAME_EVENTS__GE_SosStopSoundEventHash = 212
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EBASE_GAME_EVENTS)
} EBaseGameEvents;

/* --- messages --- */

struct  _CMsgVDebugGameSessionIDEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_clientid;
  int32_t clientid;
  char *gamesessionid;
};
#define CMSG_VDEBUG_GAME_SESSION_IDEVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_vdebug_game_session_idevent__descriptor) \
    , 0,0, NULL }


struct  _CMsgPlaceDecalEvent
{
  ProtobufCMessage base;
  CMsgVector *position;
  CMsgVector *normal;
  CMsgVector *saxis;
  protobuf_c_boolean has_decalmaterialindex;
  uint32_t decalmaterialindex;
  protobuf_c_boolean has_flags;
  uint32_t flags;
  protobuf_c_boolean has_color;
  uint32_t color;
  protobuf_c_boolean has_width;
  float width;
  protobuf_c_boolean has_height;
  float height;
  protobuf_c_boolean has_depth;
  float depth;
  protobuf_c_boolean has_entityhandleindex;
  uint32_t entityhandleindex;
  protobuf_c_boolean has_skeletoninstancehash;
  uint32_t skeletoninstancehash;
  protobuf_c_boolean has_boneindex;
  int32_t boneindex;
  protobuf_c_boolean has_translucenthit;
  protobuf_c_boolean translucenthit;
};
#define CMSG_PLACE_DECAL_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_place_decal_event__descriptor) \
    , NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClearWorldDecalsEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_flagstoclear;
  uint32_t flagstoclear;
};
#define CMSG_CLEAR_WORLD_DECALS_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_clear_world_decals_event__descriptor) \
    , 0,0 }


struct  _CMsgClearEntityDecalsEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_flagstoclear;
  uint32_t flagstoclear;
};
#define CMSG_CLEAR_ENTITY_DECALS_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_clear_entity_decals_event__descriptor) \
    , 0,0 }


struct  _CMsgClearDecalsForSkeletonInstanceEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_flagstoclear;
  uint32_t flagstoclear;
  protobuf_c_boolean has_entityhandleindex;
  uint32_t entityhandleindex;
  protobuf_c_boolean has_skeletoninstancehash;
  uint32_t skeletoninstancehash;
};
#define CMSG_CLEAR_DECALS_FOR_SKELETON_INSTANCE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_clear_decals_for_skeleton_instance_event__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgSource1LegacyGameEventList__KeyT
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  int32_t type;
  char *name;
};
#define CMSG_SOURCE1_LEGACY_GAME_EVENT_LIST__KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_game_event_list__key_t__descriptor) \
    , 0,0, NULL }


struct  _CMsgSource1LegacyGameEventList__DescriptorT
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eventid;
  int32_t eventid;
  char *name;
  size_t n_keys;
  CMsgSource1LegacyGameEventList__KeyT **keys;
};
#define CMSG_SOURCE1_LEGACY_GAME_EVENT_LIST__DESCRIPTOR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_game_event_list__descriptor_t__descriptor) \
    , 0,0, NULL, 0,NULL }


struct  _CMsgSource1LegacyGameEventList
{
  ProtobufCMessage base;
  size_t n_descriptors;
  CMsgSource1LegacyGameEventList__DescriptorT **descriptors;
};
#define CMSG_SOURCE1_LEGACY_GAME_EVENT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_game_event_list__descriptor) \
    , 0,NULL }


struct  _CMsgSource1LegacyListenEvents
{
  ProtobufCMessage base;
  protobuf_c_boolean has_playerslot;
  int32_t playerslot;
  size_t n_eventarraybits;
  uint32_t *eventarraybits;
};
#define CMSG_SOURCE1_LEGACY_LISTEN_EVENTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_listen_events__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgSource1LegacyGameEvent__KeyT
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  int32_t type;
  char *val_string;
  protobuf_c_boolean has_val_float;
  float val_float;
  protobuf_c_boolean has_val_long;
  int32_t val_long;
  protobuf_c_boolean has_val_short;
  int32_t val_short;
  protobuf_c_boolean has_val_byte;
  int32_t val_byte;
  protobuf_c_boolean has_val_bool;
  protobuf_c_boolean val_bool;
  protobuf_c_boolean has_val_uint64;
  uint64_t val_uint64;
};
#define CMSG_SOURCE1_LEGACY_GAME_EVENT__KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_game_event__key_t__descriptor) \
    , 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSource1LegacyGameEvent
{
  ProtobufCMessage base;
  char *event_name;
  protobuf_c_boolean has_eventid;
  int32_t eventid;
  size_t n_keys;
  CMsgSource1LegacyGameEvent__KeyT **keys;
};
#define CMSG_SOURCE1_LEGACY_GAME_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_source1_legacy_game_event__descriptor) \
    , NULL, 0,0, 0,NULL }


struct  _CMsgSosStartSoundEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_soundevent_guid;
  int32_t soundevent_guid;
  protobuf_c_boolean has_soundevent_hash;
  uint32_t soundevent_hash;
  protobuf_c_boolean has_source_entity_index;
  int32_t source_entity_index;
  protobuf_c_boolean has_seed;
  int32_t seed;
  protobuf_c_boolean has_packed_params;
  ProtobufCBinaryData packed_params;
  protobuf_c_boolean has_start_time;
  float start_time;
};
#define CMSG_SOS_START_SOUND_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sos_start_sound_event__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,{0,NULL}, 0,0 }


struct  _CMsgSosStopSoundEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_soundevent_guid;
  int32_t soundevent_guid;
};
#define CMSG_SOS_STOP_SOUND_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sos_stop_sound_event__descriptor) \
    , 0,0 }


struct  _CMsgSosStopSoundEventHash
{
  ProtobufCMessage base;
  protobuf_c_boolean has_soundevent_hash;
  uint32_t soundevent_hash;
  protobuf_c_boolean has_source_entity_index;
  int32_t source_entity_index;
};
#define CMSG_SOS_STOP_SOUND_EVENT_HASH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sos_stop_sound_event_hash__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSosSetSoundEventParams
{
  ProtobufCMessage base;
  protobuf_c_boolean has_soundevent_guid;
  int32_t soundevent_guid;
  protobuf_c_boolean has_packed_params;
  ProtobufCBinaryData packed_params;
};
#define CMSG_SOS_SET_SOUND_EVENT_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sos_set_sound_event_params__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgSosSetLibraryStackFields
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stack_hash;
  uint32_t stack_hash;
  protobuf_c_boolean has_packed_fields;
  ProtobufCBinaryData packed_fields;
};
#define CMSG_SOS_SET_LIBRARY_STACK_FIELDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sos_set_library_stack_fields__descriptor) \
    , 0,0, 0,{0,NULL} }


/* CMsgVDebugGameSessionIDEvent methods */
void   cmsg_vdebug_game_session_idevent__init
                     (CMsgVDebugGameSessionIDEvent         *message);
size_t cmsg_vdebug_game_session_idevent__get_packed_size
                     (const CMsgVDebugGameSessionIDEvent   *message);
size_t cmsg_vdebug_game_session_idevent__pack
                     (const CMsgVDebugGameSessionIDEvent   *message,
                      uint8_t             *out);
size_t cmsg_vdebug_game_session_idevent__pack_to_buffer
                     (const CMsgVDebugGameSessionIDEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgVDebugGameSessionIDEvent *
       cmsg_vdebug_game_session_idevent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_vdebug_game_session_idevent__free_unpacked
                     (CMsgVDebugGameSessionIDEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgPlaceDecalEvent methods */
void   cmsg_place_decal_event__init
                     (CMsgPlaceDecalEvent         *message);
size_t cmsg_place_decal_event__get_packed_size
                     (const CMsgPlaceDecalEvent   *message);
size_t cmsg_place_decal_event__pack
                     (const CMsgPlaceDecalEvent   *message,
                      uint8_t             *out);
size_t cmsg_place_decal_event__pack_to_buffer
                     (const CMsgPlaceDecalEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgPlaceDecalEvent *
       cmsg_place_decal_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_place_decal_event__free_unpacked
                     (CMsgPlaceDecalEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgClearWorldDecalsEvent methods */
void   cmsg_clear_world_decals_event__init
                     (CMsgClearWorldDecalsEvent         *message);
size_t cmsg_clear_world_decals_event__get_packed_size
                     (const CMsgClearWorldDecalsEvent   *message);
size_t cmsg_clear_world_decals_event__pack
                     (const CMsgClearWorldDecalsEvent   *message,
                      uint8_t             *out);
size_t cmsg_clear_world_decals_event__pack_to_buffer
                     (const CMsgClearWorldDecalsEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgClearWorldDecalsEvent *
       cmsg_clear_world_decals_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_clear_world_decals_event__free_unpacked
                     (CMsgClearWorldDecalsEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgClearEntityDecalsEvent methods */
void   cmsg_clear_entity_decals_event__init
                     (CMsgClearEntityDecalsEvent         *message);
size_t cmsg_clear_entity_decals_event__get_packed_size
                     (const CMsgClearEntityDecalsEvent   *message);
size_t cmsg_clear_entity_decals_event__pack
                     (const CMsgClearEntityDecalsEvent   *message,
                      uint8_t             *out);
size_t cmsg_clear_entity_decals_event__pack_to_buffer
                     (const CMsgClearEntityDecalsEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgClearEntityDecalsEvent *
       cmsg_clear_entity_decals_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_clear_entity_decals_event__free_unpacked
                     (CMsgClearEntityDecalsEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgClearDecalsForSkeletonInstanceEvent methods */
void   cmsg_clear_decals_for_skeleton_instance_event__init
                     (CMsgClearDecalsForSkeletonInstanceEvent         *message);
size_t cmsg_clear_decals_for_skeleton_instance_event__get_packed_size
                     (const CMsgClearDecalsForSkeletonInstanceEvent   *message);
size_t cmsg_clear_decals_for_skeleton_instance_event__pack
                     (const CMsgClearDecalsForSkeletonInstanceEvent   *message,
                      uint8_t             *out);
size_t cmsg_clear_decals_for_skeleton_instance_event__pack_to_buffer
                     (const CMsgClearDecalsForSkeletonInstanceEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgClearDecalsForSkeletonInstanceEvent *
       cmsg_clear_decals_for_skeleton_instance_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_clear_decals_for_skeleton_instance_event__free_unpacked
                     (CMsgClearDecalsForSkeletonInstanceEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgSource1LegacyGameEventList__KeyT methods */
void   cmsg_source1_legacy_game_event_list__key_t__init
                     (CMsgSource1LegacyGameEventList__KeyT         *message);
/* CMsgSource1LegacyGameEventList__DescriptorT methods */
void   cmsg_source1_legacy_game_event_list__descriptor_t__init
                     (CMsgSource1LegacyGameEventList__DescriptorT         *message);
/* CMsgSource1LegacyGameEventList methods */
void   cmsg_source1_legacy_game_event_list__init
                     (CMsgSource1LegacyGameEventList         *message);
size_t cmsg_source1_legacy_game_event_list__get_packed_size
                     (const CMsgSource1LegacyGameEventList   *message);
size_t cmsg_source1_legacy_game_event_list__pack
                     (const CMsgSource1LegacyGameEventList   *message,
                      uint8_t             *out);
size_t cmsg_source1_legacy_game_event_list__pack_to_buffer
                     (const CMsgSource1LegacyGameEventList   *message,
                      ProtobufCBuffer     *buffer);
CMsgSource1LegacyGameEventList *
       cmsg_source1_legacy_game_event_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_source1_legacy_game_event_list__free_unpacked
                     (CMsgSource1LegacyGameEventList *message,
                      ProtobufCAllocator *allocator);
/* CMsgSource1LegacyListenEvents methods */
void   cmsg_source1_legacy_listen_events__init
                     (CMsgSource1LegacyListenEvents         *message);
size_t cmsg_source1_legacy_listen_events__get_packed_size
                     (const CMsgSource1LegacyListenEvents   *message);
size_t cmsg_source1_legacy_listen_events__pack
                     (const CMsgSource1LegacyListenEvents   *message,
                      uint8_t             *out);
size_t cmsg_source1_legacy_listen_events__pack_to_buffer
                     (const CMsgSource1LegacyListenEvents   *message,
                      ProtobufCBuffer     *buffer);
CMsgSource1LegacyListenEvents *
       cmsg_source1_legacy_listen_events__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_source1_legacy_listen_events__free_unpacked
                     (CMsgSource1LegacyListenEvents *message,
                      ProtobufCAllocator *allocator);
/* CMsgSource1LegacyGameEvent__KeyT methods */
void   cmsg_source1_legacy_game_event__key_t__init
                     (CMsgSource1LegacyGameEvent__KeyT         *message);
/* CMsgSource1LegacyGameEvent methods */
void   cmsg_source1_legacy_game_event__init
                     (CMsgSource1LegacyGameEvent         *message);
size_t cmsg_source1_legacy_game_event__get_packed_size
                     (const CMsgSource1LegacyGameEvent   *message);
size_t cmsg_source1_legacy_game_event__pack
                     (const CMsgSource1LegacyGameEvent   *message,
                      uint8_t             *out);
size_t cmsg_source1_legacy_game_event__pack_to_buffer
                     (const CMsgSource1LegacyGameEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgSource1LegacyGameEvent *
       cmsg_source1_legacy_game_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_source1_legacy_game_event__free_unpacked
                     (CMsgSource1LegacyGameEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgSosStartSoundEvent methods */
void   cmsg_sos_start_sound_event__init
                     (CMsgSosStartSoundEvent         *message);
size_t cmsg_sos_start_sound_event__get_packed_size
                     (const CMsgSosStartSoundEvent   *message);
size_t cmsg_sos_start_sound_event__pack
                     (const CMsgSosStartSoundEvent   *message,
                      uint8_t             *out);
size_t cmsg_sos_start_sound_event__pack_to_buffer
                     (const CMsgSosStartSoundEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgSosStartSoundEvent *
       cmsg_sos_start_sound_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sos_start_sound_event__free_unpacked
                     (CMsgSosStartSoundEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgSosStopSoundEvent methods */
void   cmsg_sos_stop_sound_event__init
                     (CMsgSosStopSoundEvent         *message);
size_t cmsg_sos_stop_sound_event__get_packed_size
                     (const CMsgSosStopSoundEvent   *message);
size_t cmsg_sos_stop_sound_event__pack
                     (const CMsgSosStopSoundEvent   *message,
                      uint8_t             *out);
size_t cmsg_sos_stop_sound_event__pack_to_buffer
                     (const CMsgSosStopSoundEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgSosStopSoundEvent *
       cmsg_sos_stop_sound_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sos_stop_sound_event__free_unpacked
                     (CMsgSosStopSoundEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgSosStopSoundEventHash methods */
void   cmsg_sos_stop_sound_event_hash__init
                     (CMsgSosStopSoundEventHash         *message);
size_t cmsg_sos_stop_sound_event_hash__get_packed_size
                     (const CMsgSosStopSoundEventHash   *message);
size_t cmsg_sos_stop_sound_event_hash__pack
                     (const CMsgSosStopSoundEventHash   *message,
                      uint8_t             *out);
size_t cmsg_sos_stop_sound_event_hash__pack_to_buffer
                     (const CMsgSosStopSoundEventHash   *message,
                      ProtobufCBuffer     *buffer);
CMsgSosStopSoundEventHash *
       cmsg_sos_stop_sound_event_hash__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sos_stop_sound_event_hash__free_unpacked
                     (CMsgSosStopSoundEventHash *message,
                      ProtobufCAllocator *allocator);
/* CMsgSosSetSoundEventParams methods */
void   cmsg_sos_set_sound_event_params__init
                     (CMsgSosSetSoundEventParams         *message);
size_t cmsg_sos_set_sound_event_params__get_packed_size
                     (const CMsgSosSetSoundEventParams   *message);
size_t cmsg_sos_set_sound_event_params__pack
                     (const CMsgSosSetSoundEventParams   *message,
                      uint8_t             *out);
size_t cmsg_sos_set_sound_event_params__pack_to_buffer
                     (const CMsgSosSetSoundEventParams   *message,
                      ProtobufCBuffer     *buffer);
CMsgSosSetSoundEventParams *
       cmsg_sos_set_sound_event_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sos_set_sound_event_params__free_unpacked
                     (CMsgSosSetSoundEventParams *message,
                      ProtobufCAllocator *allocator);
/* CMsgSosSetLibraryStackFields methods */
void   cmsg_sos_set_library_stack_fields__init
                     (CMsgSosSetLibraryStackFields         *message);
size_t cmsg_sos_set_library_stack_fields__get_packed_size
                     (const CMsgSosSetLibraryStackFields   *message);
size_t cmsg_sos_set_library_stack_fields__pack
                     (const CMsgSosSetLibraryStackFields   *message,
                      uint8_t             *out);
size_t cmsg_sos_set_library_stack_fields__pack_to_buffer
                     (const CMsgSosSetLibraryStackFields   *message,
                      ProtobufCBuffer     *buffer);
CMsgSosSetLibraryStackFields *
       cmsg_sos_set_library_stack_fields__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sos_set_library_stack_fields__free_unpacked
                     (CMsgSosSetLibraryStackFields *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgVDebugGameSessionIDEvent_Closure)
                 (const CMsgVDebugGameSessionIDEvent *message,
                  void *closure_data);
typedef void (*CMsgPlaceDecalEvent_Closure)
                 (const CMsgPlaceDecalEvent *message,
                  void *closure_data);
typedef void (*CMsgClearWorldDecalsEvent_Closure)
                 (const CMsgClearWorldDecalsEvent *message,
                  void *closure_data);
typedef void (*CMsgClearEntityDecalsEvent_Closure)
                 (const CMsgClearEntityDecalsEvent *message,
                  void *closure_data);
typedef void (*CMsgClearDecalsForSkeletonInstanceEvent_Closure)
                 (const CMsgClearDecalsForSkeletonInstanceEvent *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyGameEventList__KeyT_Closure)
                 (const CMsgSource1LegacyGameEventList__KeyT *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyGameEventList__DescriptorT_Closure)
                 (const CMsgSource1LegacyGameEventList__DescriptorT *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyGameEventList_Closure)
                 (const CMsgSource1LegacyGameEventList *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyListenEvents_Closure)
                 (const CMsgSource1LegacyListenEvents *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyGameEvent__KeyT_Closure)
                 (const CMsgSource1LegacyGameEvent__KeyT *message,
                  void *closure_data);
typedef void (*CMsgSource1LegacyGameEvent_Closure)
                 (const CMsgSource1LegacyGameEvent *message,
                  void *closure_data);
typedef void (*CMsgSosStartSoundEvent_Closure)
                 (const CMsgSosStartSoundEvent *message,
                  void *closure_data);
typedef void (*CMsgSosStopSoundEvent_Closure)
                 (const CMsgSosStopSoundEvent *message,
                  void *closure_data);
typedef void (*CMsgSosStopSoundEventHash_Closure)
                 (const CMsgSosStopSoundEventHash *message,
                  void *closure_data);
typedef void (*CMsgSosSetSoundEventParams_Closure)
                 (const CMsgSosSetSoundEventParams *message,
                  void *closure_data);
typedef void (*CMsgSosSetLibraryStackFields_Closure)
                 (const CMsgSosSetLibraryStackFields *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ebase_game_events__descriptor;
extern const ProtobufCMessageDescriptor cmsg_vdebug_game_session_idevent__descriptor;
extern const ProtobufCMessageDescriptor cmsg_place_decal_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_clear_world_decals_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_clear_entity_decals_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_clear_decals_for_skeleton_instance_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_game_event_list__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_game_event_list__key_t__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_game_event_list__descriptor_t__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_listen_events__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_game_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_source1_legacy_game_event__key_t__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sos_start_sound_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sos_stop_sound_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sos_stop_sound_event_hash__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sos_set_sound_event_params__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sos_set_library_stack_fields__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gameevents_2eproto__INCLUDED */
