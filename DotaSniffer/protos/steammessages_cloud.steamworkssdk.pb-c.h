/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steammessages_cloud.steamworkssdk.proto */

#ifndef PROTOBUF_C_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED
#define PROTOBUF_C_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages_unified_base.steamworkssdk.pb-c.h"

typedef struct _CCloudGetUploadServerInfoRequest CCloudGetUploadServerInfoRequest;
typedef struct _CCloudGetUploadServerInfoResponse CCloudGetUploadServerInfoResponse;
typedef struct _CCloudGetFileDetailsRequest CCloudGetFileDetailsRequest;
typedef struct _CCloudUserFile CCloudUserFile;
typedef struct _CCloudGetFileDetailsResponse CCloudGetFileDetailsResponse;
typedef struct _CCloudEnumerateUserFilesRequest CCloudEnumerateUserFilesRequest;
typedef struct _CCloudEnumerateUserFilesResponse CCloudEnumerateUserFilesResponse;
typedef struct _CCloudDeleteRequest CCloudDeleteRequest;
typedef struct _CCloudDeleteResponse CCloudDeleteResponse;


/* --- enums --- */


/* --- messages --- */

struct  _CCloudGetUploadServerInfoRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
};
#define CCLOUD__GET_UPLOAD_SERVER_INFO__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__get_upload_server_info__request__descriptor) \
    , 0,0 }


struct  _CCloudGetUploadServerInfoResponse
{
  ProtobufCMessage base;
  char *server_url;
};
#define CCLOUD__GET_UPLOAD_SERVER_INFO__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__get_upload_server_info__response__descriptor) \
    , NULL }


struct  _CCloudGetFileDetailsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ugcid;
  uint64_t ugcid;
  protobuf_c_boolean has_appid;
  uint32_t appid;
};
#define CCLOUD__GET_FILE_DETAILS__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__get_file_details__request__descriptor) \
    , 0,0, 0,0 }


struct  _CCloudUserFile
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_ugcid;
  uint64_t ugcid;
  char *filename;
  protobuf_c_boolean has_timestamp;
  uint64_t timestamp;
  protobuf_c_boolean has_file_size;
  uint32_t file_size;
  char *url;
  protobuf_c_boolean has_steamid_creator;
  uint64_t steamid_creator;
};
#define CCLOUD__USER_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__user_file__descriptor) \
    , 0,0, 0,0, NULL, 0,0, 0,0, NULL, 0,0 }


struct  _CCloudGetFileDetailsResponse
{
  ProtobufCMessage base;
  CCloudUserFile *details;
};
#define CCLOUD__GET_FILE_DETAILS__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__get_file_details__response__descriptor) \
    , NULL }


struct  _CCloudEnumerateUserFilesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_appid;
  uint32_t appid;
  protobuf_c_boolean has_extended_details;
  protobuf_c_boolean extended_details;
  protobuf_c_boolean has_count;
  uint32_t count;
  protobuf_c_boolean has_start_index;
  uint32_t start_index;
};
#define CCLOUD__ENUMERATE_USER_FILES__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__enumerate_user_files__request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CCloudEnumerateUserFilesResponse
{
  ProtobufCMessage base;
  size_t n_files;
  CCloudUserFile **files;
  protobuf_c_boolean has_total_files;
  uint32_t total_files;
};
#define CCLOUD__ENUMERATE_USER_FILES__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__enumerate_user_files__response__descriptor) \
    , 0,NULL, 0,0 }


struct  _CCloudDeleteRequest
{
  ProtobufCMessage base;
  char *filename;
  protobuf_c_boolean has_appid;
  uint32_t appid;
};
#define CCLOUD__DELETE__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__delete__request__descriptor) \
    , NULL, 0,0 }


struct  _CCloudDeleteResponse
{
  ProtobufCMessage base;
};
#define CCLOUD__DELETE__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ccloud__delete__response__descriptor) \
     }


/* CCloudGetUploadServerInfoRequest methods */
void   ccloud__get_upload_server_info__request__init
                     (CCloudGetUploadServerInfoRequest         *message);
size_t ccloud__get_upload_server_info__request__get_packed_size
                     (const CCloudGetUploadServerInfoRequest   *message);
size_t ccloud__get_upload_server_info__request__pack
                     (const CCloudGetUploadServerInfoRequest   *message,
                      uint8_t             *out);
size_t ccloud__get_upload_server_info__request__pack_to_buffer
                     (const CCloudGetUploadServerInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudGetUploadServerInfoRequest *
       ccloud__get_upload_server_info__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__get_upload_server_info__request__free_unpacked
                     (CCloudGetUploadServerInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CCloudGetUploadServerInfoResponse methods */
void   ccloud__get_upload_server_info__response__init
                     (CCloudGetUploadServerInfoResponse         *message);
size_t ccloud__get_upload_server_info__response__get_packed_size
                     (const CCloudGetUploadServerInfoResponse   *message);
size_t ccloud__get_upload_server_info__response__pack
                     (const CCloudGetUploadServerInfoResponse   *message,
                      uint8_t             *out);
size_t ccloud__get_upload_server_info__response__pack_to_buffer
                     (const CCloudGetUploadServerInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudGetUploadServerInfoResponse *
       ccloud__get_upload_server_info__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__get_upload_server_info__response__free_unpacked
                     (CCloudGetUploadServerInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CCloudGetFileDetailsRequest methods */
void   ccloud__get_file_details__request__init
                     (CCloudGetFileDetailsRequest         *message);
size_t ccloud__get_file_details__request__get_packed_size
                     (const CCloudGetFileDetailsRequest   *message);
size_t ccloud__get_file_details__request__pack
                     (const CCloudGetFileDetailsRequest   *message,
                      uint8_t             *out);
size_t ccloud__get_file_details__request__pack_to_buffer
                     (const CCloudGetFileDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudGetFileDetailsRequest *
       ccloud__get_file_details__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__get_file_details__request__free_unpacked
                     (CCloudGetFileDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* CCloudUserFile methods */
void   ccloud__user_file__init
                     (CCloudUserFile         *message);
size_t ccloud__user_file__get_packed_size
                     (const CCloudUserFile   *message);
size_t ccloud__user_file__pack
                     (const CCloudUserFile   *message,
                      uint8_t             *out);
size_t ccloud__user_file__pack_to_buffer
                     (const CCloudUserFile   *message,
                      ProtobufCBuffer     *buffer);
CCloudUserFile *
       ccloud__user_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__user_file__free_unpacked
                     (CCloudUserFile *message,
                      ProtobufCAllocator *allocator);
/* CCloudGetFileDetailsResponse methods */
void   ccloud__get_file_details__response__init
                     (CCloudGetFileDetailsResponse         *message);
size_t ccloud__get_file_details__response__get_packed_size
                     (const CCloudGetFileDetailsResponse   *message);
size_t ccloud__get_file_details__response__pack
                     (const CCloudGetFileDetailsResponse   *message,
                      uint8_t             *out);
size_t ccloud__get_file_details__response__pack_to_buffer
                     (const CCloudGetFileDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudGetFileDetailsResponse *
       ccloud__get_file_details__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__get_file_details__response__free_unpacked
                     (CCloudGetFileDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CCloudEnumerateUserFilesRequest methods */
void   ccloud__enumerate_user_files__request__init
                     (CCloudEnumerateUserFilesRequest         *message);
size_t ccloud__enumerate_user_files__request__get_packed_size
                     (const CCloudEnumerateUserFilesRequest   *message);
size_t ccloud__enumerate_user_files__request__pack
                     (const CCloudEnumerateUserFilesRequest   *message,
                      uint8_t             *out);
size_t ccloud__enumerate_user_files__request__pack_to_buffer
                     (const CCloudEnumerateUserFilesRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudEnumerateUserFilesRequest *
       ccloud__enumerate_user_files__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__enumerate_user_files__request__free_unpacked
                     (CCloudEnumerateUserFilesRequest *message,
                      ProtobufCAllocator *allocator);
/* CCloudEnumerateUserFilesResponse methods */
void   ccloud__enumerate_user_files__response__init
                     (CCloudEnumerateUserFilesResponse         *message);
size_t ccloud__enumerate_user_files__response__get_packed_size
                     (const CCloudEnumerateUserFilesResponse   *message);
size_t ccloud__enumerate_user_files__response__pack
                     (const CCloudEnumerateUserFilesResponse   *message,
                      uint8_t             *out);
size_t ccloud__enumerate_user_files__response__pack_to_buffer
                     (const CCloudEnumerateUserFilesResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudEnumerateUserFilesResponse *
       ccloud__enumerate_user_files__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__enumerate_user_files__response__free_unpacked
                     (CCloudEnumerateUserFilesResponse *message,
                      ProtobufCAllocator *allocator);
/* CCloudDeleteRequest methods */
void   ccloud__delete__request__init
                     (CCloudDeleteRequest         *message);
size_t ccloud__delete__request__get_packed_size
                     (const CCloudDeleteRequest   *message);
size_t ccloud__delete__request__pack
                     (const CCloudDeleteRequest   *message,
                      uint8_t             *out);
size_t ccloud__delete__request__pack_to_buffer
                     (const CCloudDeleteRequest   *message,
                      ProtobufCBuffer     *buffer);
CCloudDeleteRequest *
       ccloud__delete__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__delete__request__free_unpacked
                     (CCloudDeleteRequest *message,
                      ProtobufCAllocator *allocator);
/* CCloudDeleteResponse methods */
void   ccloud__delete__response__init
                     (CCloudDeleteResponse         *message);
size_t ccloud__delete__response__get_packed_size
                     (const CCloudDeleteResponse   *message);
size_t ccloud__delete__response__pack
                     (const CCloudDeleteResponse   *message,
                      uint8_t             *out);
size_t ccloud__delete__response__pack_to_buffer
                     (const CCloudDeleteResponse   *message,
                      ProtobufCBuffer     *buffer);
CCloudDeleteResponse *
       ccloud__delete__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ccloud__delete__response__free_unpacked
                     (CCloudDeleteResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CCloudGetUploadServerInfoRequest_Closure)
                 (const CCloudGetUploadServerInfoRequest *message,
                  void *closure_data);
typedef void (*CCloudGetUploadServerInfoResponse_Closure)
                 (const CCloudGetUploadServerInfoResponse *message,
                  void *closure_data);
typedef void (*CCloudGetFileDetailsRequest_Closure)
                 (const CCloudGetFileDetailsRequest *message,
                  void *closure_data);
typedef void (*CCloudUserFile_Closure)
                 (const CCloudUserFile *message,
                  void *closure_data);
typedef void (*CCloudGetFileDetailsResponse_Closure)
                 (const CCloudGetFileDetailsResponse *message,
                  void *closure_data);
typedef void (*CCloudEnumerateUserFilesRequest_Closure)
                 (const CCloudEnumerateUserFilesRequest *message,
                  void *closure_data);
typedef void (*CCloudEnumerateUserFilesResponse_Closure)
                 (const CCloudEnumerateUserFilesResponse *message,
                  void *closure_data);
typedef void (*CCloudDeleteRequest_Closure)
                 (const CCloudDeleteRequest *message,
                  void *closure_data);
typedef void (*CCloudDeleteResponse_Closure)
                 (const CCloudDeleteResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Cloud_Service Cloud_Service;
struct _Cloud_Service
{
  ProtobufCService base;
  void (*get_upload_server_info)(Cloud_Service *service,
                                 const CCloudGetUploadServerInfoRequest *input,
                                 CCloudGetUploadServerInfoResponse_Closure closure,
                                 void *closure_data);
  void (*get_file_details)(Cloud_Service *service,
                           const CCloudGetFileDetailsRequest *input,
                           CCloudGetFileDetailsResponse_Closure closure,
                           void *closure_data);
  void (*enumerate_user_files)(Cloud_Service *service,
                               const CCloudEnumerateUserFilesRequest *input,
                               CCloudEnumerateUserFilesResponse_Closure closure,
                               void *closure_data);
  void (*delete)(Cloud_Service *service,
                 const CCloudDeleteRequest *input,
                 CCloudDeleteResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Cloud_ServiceDestroy)(Cloud_Service *);
void cloud__init (Cloud_Service *service,
                  Cloud_ServiceDestroy destroy);
#define CLOUD__BASE_INIT \
    { &cloud__descriptor, protobuf_c_service_invoke_internal, NULL }
#define CLOUD__INIT(function_prefix__) \
    { CLOUD__BASE_INIT,\
      function_prefix__ ## get_upload_server_info,\
      function_prefix__ ## get_file_details,\
      function_prefix__ ## enumerate_user_files,\
      function_prefix__ ## delete  }
void cloud__get_upload_server_info(ProtobufCService *service,
                                   const CCloudGetUploadServerInfoRequest *input,
                                   CCloudGetUploadServerInfoResponse_Closure closure,
                                   void *closure_data);
void cloud__get_file_details(ProtobufCService *service,
                             const CCloudGetFileDetailsRequest *input,
                             CCloudGetFileDetailsResponse_Closure closure,
                             void *closure_data);
void cloud__enumerate_user_files(ProtobufCService *service,
                                 const CCloudEnumerateUserFilesRequest *input,
                                 CCloudEnumerateUserFilesResponse_Closure closure,
                                 void *closure_data);
void cloud__delete(ProtobufCService *service,
                   const CCloudDeleteRequest *input,
                   CCloudDeleteResponse_Closure closure,
                   void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ccloud__get_upload_server_info__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud__get_upload_server_info__response__descriptor;
extern const ProtobufCMessageDescriptor ccloud__get_file_details__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud__user_file__descriptor;
extern const ProtobufCMessageDescriptor ccloud__get_file_details__response__descriptor;
extern const ProtobufCMessageDescriptor ccloud__enumerate_user_files__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud__enumerate_user_files__response__descriptor;
extern const ProtobufCMessageDescriptor ccloud__delete__request__descriptor;
extern const ProtobufCMessageDescriptor ccloud__delete__response__descriptor;
extern const ProtobufCServiceDescriptor cloud__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steammessages_5fcloud_2esteamworkssdk_2eproto__INCLUDED */
