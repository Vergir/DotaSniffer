/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: demo.proto */

#ifndef PROTOBUF_C_demo_2eproto__INCLUDED
#define PROTOBUF_C_demo_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _CDemoFileHeader CDemoFileHeader;
typedef struct _CGameInfo CGameInfo;
typedef struct _CGameInfo__CDotaGameInfo CGameInfo__CDotaGameInfo;
typedef struct _CGameInfo__CDotaGameInfo__CPlayerInfo CGameInfo__CDotaGameInfo__CPlayerInfo;
typedef struct _CGameInfo__CDotaGameInfo__CHeroSelectEvent CGameInfo__CDotaGameInfo__CHeroSelectEvent;
typedef struct _CDemoFileInfo CDemoFileInfo;
typedef struct _CDemoPacket CDemoPacket;
typedef struct _CDemoFullPacket CDemoFullPacket;
typedef struct _CDemoSaveGame CDemoSaveGame;
typedef struct _CDemoSyncTick CDemoSyncTick;
typedef struct _CDemoConsoleCmd CDemoConsoleCmd;
typedef struct _CDemoSendTables CDemoSendTables;
typedef struct _CDemoClassInfo CDemoClassInfo;
typedef struct _CDemoClassInfo__ClassT CDemoClassInfo__ClassT;
typedef struct _CDemoCustomData CDemoCustomData;
typedef struct _CDemoCustomDataCallbacks CDemoCustomDataCallbacks;
typedef struct _CDemoStringTables CDemoStringTables;
typedef struct _CDemoStringTables__ItemsT CDemoStringTables__ItemsT;
typedef struct _CDemoStringTables__TableT CDemoStringTables__TableT;
typedef struct _CDemoStop CDemoStop;
typedef struct _CDemoUserCmd CDemoUserCmd;
typedef struct _CDemoSpawnGroups CDemoSpawnGroups;


/* --- enums --- */

typedef enum _EDemoCommands {
  EDEMO_COMMANDS__DEM_Error = -1,
  EDEMO_COMMANDS__DEM_Stop = 0,
  EDEMO_COMMANDS__DEM_FileHeader = 1,
  EDEMO_COMMANDS__DEM_FileInfo = 2,
  EDEMO_COMMANDS__DEM_SyncTick = 3,
  EDEMO_COMMANDS__DEM_SendTables = 4,
  EDEMO_COMMANDS__DEM_ClassInfo = 5,
  EDEMO_COMMANDS__DEM_StringTables = 6,
  EDEMO_COMMANDS__DEM_Packet = 7,
  EDEMO_COMMANDS__DEM_SignonPacket = 8,
  EDEMO_COMMANDS__DEM_ConsoleCmd = 9,
  EDEMO_COMMANDS__DEM_CustomData = 10,
  EDEMO_COMMANDS__DEM_CustomDataCallbacks = 11,
  EDEMO_COMMANDS__DEM_UserCmd = 12,
  EDEMO_COMMANDS__DEM_FullPacket = 13,
  EDEMO_COMMANDS__DEM_SaveGame = 14,
  EDEMO_COMMANDS__DEM_SpawnGroups = 15,
  EDEMO_COMMANDS__DEM_Max = 16,
  EDEMO_COMMANDS__DEM_IsCompressed = 64
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDEMO_COMMANDS)
} EDemoCommands;

/* --- messages --- */

struct  _CDemoFileHeader
{
  ProtobufCMessage base;
  char *demo_file_stamp;
  protobuf_c_boolean has_network_protocol;
  int32_t network_protocol;
  char *server_name;
  char *client_name;
  char *map_name;
  char *game_directory;
  protobuf_c_boolean has_fullpackets_version;
  int32_t fullpackets_version;
  protobuf_c_boolean has_allow_clientside_entities;
  protobuf_c_boolean allow_clientside_entities;
  protobuf_c_boolean has_allow_clientside_particles;
  protobuf_c_boolean allow_clientside_particles;
  char *addons;
};
#define CDEMO_FILE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_file_header__descriptor) \
    , NULL, 0,0, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, NULL }


struct  _CGameInfo__CDotaGameInfo__CPlayerInfo
{
  ProtobufCMessage base;
  char *hero_name;
  char *player_name;
  protobuf_c_boolean has_is_fake_client;
  protobuf_c_boolean is_fake_client;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_game_team;
  int32_t game_team;
};
#define CGAME_INFO__CDOTA_GAME_INFO__CPLAYER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgame_info__cdota_game_info__cplayer_info__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0 }


struct  _CGameInfo__CDotaGameInfo__CHeroSelectEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_is_pick;
  protobuf_c_boolean is_pick;
  protobuf_c_boolean has_team;
  uint32_t team;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CGAME_INFO__CDOTA_GAME_INFO__CHERO_SELECT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgame_info__cdota_game_info__chero_select_event__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CGameInfo__CDotaGameInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_game_mode;
  int32_t game_mode;
  protobuf_c_boolean has_game_winner;
  int32_t game_winner;
  size_t n_player_info;
  CGameInfo__CDotaGameInfo__CPlayerInfo **player_info;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  size_t n_picks_bans;
  CGameInfo__CDotaGameInfo__CHeroSelectEvent **picks_bans;
  protobuf_c_boolean has_radiant_team_id;
  uint32_t radiant_team_id;
  protobuf_c_boolean has_dire_team_id;
  uint32_t dire_team_id;
  char *radiant_team_tag;
  char *dire_team_tag;
  protobuf_c_boolean has_end_time;
  uint32_t end_time;
};
#define CGAME_INFO__CDOTA_GAME_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgame_info__cdota_game_info__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL, 0,0, 0,0, NULL, NULL, 0,0 }


struct  _CGameInfo
{
  ProtobufCMessage base;
  CGameInfo__CDotaGameInfo *dota;
};
#define CGAME_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cgame_info__descriptor) \
    , NULL }


struct  _CDemoFileInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_playback_time;
  float playback_time;
  protobuf_c_boolean has_playback_ticks;
  int32_t playback_ticks;
  protobuf_c_boolean has_playback_frames;
  int32_t playback_frames;
  CGameInfo *game_info;
};
#define CDEMO_FILE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_file_info__descriptor) \
    , 0,0, 0,0, 0,0, NULL }


struct  _CDemoPacket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_sequence_in;
  int32_t sequence_in;
  protobuf_c_boolean has_sequence_out_ack;
  int32_t sequence_out_ack;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDEMO_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_packet__descriptor) \
    , 0,0, 0,0, 0,{0,NULL} }


struct  _CDemoFullPacket
{
  ProtobufCMessage base;
  CDemoStringTables *string_table;
  CDemoPacket *packet;
};
#define CDEMO_FULL_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_full_packet__descriptor) \
    , NULL, NULL }


struct  _CDemoSaveGame
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_signature;
  uint64_t signature;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define CDEMO_SAVE_GAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_save_game__descriptor) \
    , 0,{0,NULL}, 0,0, 0,0, 0,0 }


struct  _CDemoSyncTick
{
  ProtobufCMessage base;
};
#define CDEMO_SYNC_TICK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_sync_tick__descriptor) \
     }


struct  _CDemoConsoleCmd
{
  ProtobufCMessage base;
  char *cmdstring;
};
#define CDEMO_CONSOLE_CMD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_console_cmd__descriptor) \
    , NULL }


struct  _CDemoSendTables
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDEMO_SEND_TABLES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_send_tables__descriptor) \
    , 0,{0,NULL} }


struct  _CDemoClassInfo__ClassT
{
  ProtobufCMessage base;
  protobuf_c_boolean has_class_id;
  int32_t class_id;
  char *network_name;
  char *table_name;
};
#define CDEMO_CLASS_INFO__CLASS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_class_info__class_t__descriptor) \
    , 0,0, NULL, NULL }


struct  _CDemoClassInfo
{
  ProtobufCMessage base;
  size_t n_classes;
  CDemoClassInfo__ClassT **classes;
};
#define CDEMO_CLASS_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_class_info__descriptor) \
    , 0,NULL }


struct  _CDemoCustomData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_callback_index;
  int32_t callback_index;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDEMO_CUSTOM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_custom_data__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CDemoCustomDataCallbacks
{
  ProtobufCMessage base;
  size_t n_save_id;
  char **save_id;
};
#define CDEMO_CUSTOM_DATA_CALLBACKS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_custom_data_callbacks__descriptor) \
    , 0,NULL }


struct  _CDemoStringTables__ItemsT
{
  ProtobufCMessage base;
  char *str;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDEMO_STRING_TABLES__ITEMS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_string_tables__items_t__descriptor) \
    , NULL, 0,{0,NULL} }


struct  _CDemoStringTables__TableT
{
  ProtobufCMessage base;
  char *table_name;
  size_t n_items;
  CDemoStringTables__ItemsT **items;
  size_t n_items_clientside;
  CDemoStringTables__ItemsT **items_clientside;
  protobuf_c_boolean has_table_flags;
  int32_t table_flags;
};
#define CDEMO_STRING_TABLES__TABLE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_string_tables__table_t__descriptor) \
    , NULL, 0,NULL, 0,NULL, 0,0 }


struct  _CDemoStringTables
{
  ProtobufCMessage base;
  size_t n_tables;
  CDemoStringTables__TableT **tables;
};
#define CDEMO_STRING_TABLES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_string_tables__descriptor) \
    , 0,NULL }


struct  _CDemoStop
{
  ProtobufCMessage base;
};
#define CDEMO_STOP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_stop__descriptor) \
     }


struct  _CDemoUserCmd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_cmd_number;
  int32_t cmd_number;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDEMO_USER_CMD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_user_cmd__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CDemoSpawnGroups
{
  ProtobufCMessage base;
  size_t n_msgs;
  ProtobufCBinaryData *msgs;
};
#define CDEMO_SPAWN_GROUPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdemo_spawn_groups__descriptor) \
    , 0,NULL }


/* CDemoFileHeader methods */
void   cdemo_file_header__init
                     (CDemoFileHeader         *message);
size_t cdemo_file_header__get_packed_size
                     (const CDemoFileHeader   *message);
size_t cdemo_file_header__pack
                     (const CDemoFileHeader   *message,
                      uint8_t             *out);
size_t cdemo_file_header__pack_to_buffer
                     (const CDemoFileHeader   *message,
                      ProtobufCBuffer     *buffer);
CDemoFileHeader *
       cdemo_file_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_file_header__free_unpacked
                     (CDemoFileHeader *message,
                      ProtobufCAllocator *allocator);
/* CGameInfo__CDotaGameInfo__CPlayerInfo methods */
void   cgame_info__cdota_game_info__cplayer_info__init
                     (CGameInfo__CDotaGameInfo__CPlayerInfo         *message);
/* CGameInfo__CDotaGameInfo__CHeroSelectEvent methods */
void   cgame_info__cdota_game_info__chero_select_event__init
                     (CGameInfo__CDotaGameInfo__CHeroSelectEvent         *message);
/* CGameInfo__CDotaGameInfo methods */
void   cgame_info__cdota_game_info__init
                     (CGameInfo__CDotaGameInfo         *message);
/* CGameInfo methods */
void   cgame_info__init
                     (CGameInfo         *message);
size_t cgame_info__get_packed_size
                     (const CGameInfo   *message);
size_t cgame_info__pack
                     (const CGameInfo   *message,
                      uint8_t             *out);
size_t cgame_info__pack_to_buffer
                     (const CGameInfo   *message,
                      ProtobufCBuffer     *buffer);
CGameInfo *
       cgame_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cgame_info__free_unpacked
                     (CGameInfo *message,
                      ProtobufCAllocator *allocator);
/* CDemoFileInfo methods */
void   cdemo_file_info__init
                     (CDemoFileInfo         *message);
size_t cdemo_file_info__get_packed_size
                     (const CDemoFileInfo   *message);
size_t cdemo_file_info__pack
                     (const CDemoFileInfo   *message,
                      uint8_t             *out);
size_t cdemo_file_info__pack_to_buffer
                     (const CDemoFileInfo   *message,
                      ProtobufCBuffer     *buffer);
CDemoFileInfo *
       cdemo_file_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_file_info__free_unpacked
                     (CDemoFileInfo *message,
                      ProtobufCAllocator *allocator);
/* CDemoPacket methods */
void   cdemo_packet__init
                     (CDemoPacket         *message);
size_t cdemo_packet__get_packed_size
                     (const CDemoPacket   *message);
size_t cdemo_packet__pack
                     (const CDemoPacket   *message,
                      uint8_t             *out);
size_t cdemo_packet__pack_to_buffer
                     (const CDemoPacket   *message,
                      ProtobufCBuffer     *buffer);
CDemoPacket *
       cdemo_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_packet__free_unpacked
                     (CDemoPacket *message,
                      ProtobufCAllocator *allocator);
/* CDemoFullPacket methods */
void   cdemo_full_packet__init
                     (CDemoFullPacket         *message);
size_t cdemo_full_packet__get_packed_size
                     (const CDemoFullPacket   *message);
size_t cdemo_full_packet__pack
                     (const CDemoFullPacket   *message,
                      uint8_t             *out);
size_t cdemo_full_packet__pack_to_buffer
                     (const CDemoFullPacket   *message,
                      ProtobufCBuffer     *buffer);
CDemoFullPacket *
       cdemo_full_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_full_packet__free_unpacked
                     (CDemoFullPacket *message,
                      ProtobufCAllocator *allocator);
/* CDemoSaveGame methods */
void   cdemo_save_game__init
                     (CDemoSaveGame         *message);
size_t cdemo_save_game__get_packed_size
                     (const CDemoSaveGame   *message);
size_t cdemo_save_game__pack
                     (const CDemoSaveGame   *message,
                      uint8_t             *out);
size_t cdemo_save_game__pack_to_buffer
                     (const CDemoSaveGame   *message,
                      ProtobufCBuffer     *buffer);
CDemoSaveGame *
       cdemo_save_game__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_save_game__free_unpacked
                     (CDemoSaveGame *message,
                      ProtobufCAllocator *allocator);
/* CDemoSyncTick methods */
void   cdemo_sync_tick__init
                     (CDemoSyncTick         *message);
size_t cdemo_sync_tick__get_packed_size
                     (const CDemoSyncTick   *message);
size_t cdemo_sync_tick__pack
                     (const CDemoSyncTick   *message,
                      uint8_t             *out);
size_t cdemo_sync_tick__pack_to_buffer
                     (const CDemoSyncTick   *message,
                      ProtobufCBuffer     *buffer);
CDemoSyncTick *
       cdemo_sync_tick__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_sync_tick__free_unpacked
                     (CDemoSyncTick *message,
                      ProtobufCAllocator *allocator);
/* CDemoConsoleCmd methods */
void   cdemo_console_cmd__init
                     (CDemoConsoleCmd         *message);
size_t cdemo_console_cmd__get_packed_size
                     (const CDemoConsoleCmd   *message);
size_t cdemo_console_cmd__pack
                     (const CDemoConsoleCmd   *message,
                      uint8_t             *out);
size_t cdemo_console_cmd__pack_to_buffer
                     (const CDemoConsoleCmd   *message,
                      ProtobufCBuffer     *buffer);
CDemoConsoleCmd *
       cdemo_console_cmd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_console_cmd__free_unpacked
                     (CDemoConsoleCmd *message,
                      ProtobufCAllocator *allocator);
/* CDemoSendTables methods */
void   cdemo_send_tables__init
                     (CDemoSendTables         *message);
size_t cdemo_send_tables__get_packed_size
                     (const CDemoSendTables   *message);
size_t cdemo_send_tables__pack
                     (const CDemoSendTables   *message,
                      uint8_t             *out);
size_t cdemo_send_tables__pack_to_buffer
                     (const CDemoSendTables   *message,
                      ProtobufCBuffer     *buffer);
CDemoSendTables *
       cdemo_send_tables__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_send_tables__free_unpacked
                     (CDemoSendTables *message,
                      ProtobufCAllocator *allocator);
/* CDemoClassInfo__ClassT methods */
void   cdemo_class_info__class_t__init
                     (CDemoClassInfo__ClassT         *message);
/* CDemoClassInfo methods */
void   cdemo_class_info__init
                     (CDemoClassInfo         *message);
size_t cdemo_class_info__get_packed_size
                     (const CDemoClassInfo   *message);
size_t cdemo_class_info__pack
                     (const CDemoClassInfo   *message,
                      uint8_t             *out);
size_t cdemo_class_info__pack_to_buffer
                     (const CDemoClassInfo   *message,
                      ProtobufCBuffer     *buffer);
CDemoClassInfo *
       cdemo_class_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_class_info__free_unpacked
                     (CDemoClassInfo *message,
                      ProtobufCAllocator *allocator);
/* CDemoCustomData methods */
void   cdemo_custom_data__init
                     (CDemoCustomData         *message);
size_t cdemo_custom_data__get_packed_size
                     (const CDemoCustomData   *message);
size_t cdemo_custom_data__pack
                     (const CDemoCustomData   *message,
                      uint8_t             *out);
size_t cdemo_custom_data__pack_to_buffer
                     (const CDemoCustomData   *message,
                      ProtobufCBuffer     *buffer);
CDemoCustomData *
       cdemo_custom_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_custom_data__free_unpacked
                     (CDemoCustomData *message,
                      ProtobufCAllocator *allocator);
/* CDemoCustomDataCallbacks methods */
void   cdemo_custom_data_callbacks__init
                     (CDemoCustomDataCallbacks         *message);
size_t cdemo_custom_data_callbacks__get_packed_size
                     (const CDemoCustomDataCallbacks   *message);
size_t cdemo_custom_data_callbacks__pack
                     (const CDemoCustomDataCallbacks   *message,
                      uint8_t             *out);
size_t cdemo_custom_data_callbacks__pack_to_buffer
                     (const CDemoCustomDataCallbacks   *message,
                      ProtobufCBuffer     *buffer);
CDemoCustomDataCallbacks *
       cdemo_custom_data_callbacks__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_custom_data_callbacks__free_unpacked
                     (CDemoCustomDataCallbacks *message,
                      ProtobufCAllocator *allocator);
/* CDemoStringTables__ItemsT methods */
void   cdemo_string_tables__items_t__init
                     (CDemoStringTables__ItemsT         *message);
/* CDemoStringTables__TableT methods */
void   cdemo_string_tables__table_t__init
                     (CDemoStringTables__TableT         *message);
/* CDemoStringTables methods */
void   cdemo_string_tables__init
                     (CDemoStringTables         *message);
size_t cdemo_string_tables__get_packed_size
                     (const CDemoStringTables   *message);
size_t cdemo_string_tables__pack
                     (const CDemoStringTables   *message,
                      uint8_t             *out);
size_t cdemo_string_tables__pack_to_buffer
                     (const CDemoStringTables   *message,
                      ProtobufCBuffer     *buffer);
CDemoStringTables *
       cdemo_string_tables__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_string_tables__free_unpacked
                     (CDemoStringTables *message,
                      ProtobufCAllocator *allocator);
/* CDemoStop methods */
void   cdemo_stop__init
                     (CDemoStop         *message);
size_t cdemo_stop__get_packed_size
                     (const CDemoStop   *message);
size_t cdemo_stop__pack
                     (const CDemoStop   *message,
                      uint8_t             *out);
size_t cdemo_stop__pack_to_buffer
                     (const CDemoStop   *message,
                      ProtobufCBuffer     *buffer);
CDemoStop *
       cdemo_stop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_stop__free_unpacked
                     (CDemoStop *message,
                      ProtobufCAllocator *allocator);
/* CDemoUserCmd methods */
void   cdemo_user_cmd__init
                     (CDemoUserCmd         *message);
size_t cdemo_user_cmd__get_packed_size
                     (const CDemoUserCmd   *message);
size_t cdemo_user_cmd__pack
                     (const CDemoUserCmd   *message,
                      uint8_t             *out);
size_t cdemo_user_cmd__pack_to_buffer
                     (const CDemoUserCmd   *message,
                      ProtobufCBuffer     *buffer);
CDemoUserCmd *
       cdemo_user_cmd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_user_cmd__free_unpacked
                     (CDemoUserCmd *message,
                      ProtobufCAllocator *allocator);
/* CDemoSpawnGroups methods */
void   cdemo_spawn_groups__init
                     (CDemoSpawnGroups         *message);
size_t cdemo_spawn_groups__get_packed_size
                     (const CDemoSpawnGroups   *message);
size_t cdemo_spawn_groups__pack
                     (const CDemoSpawnGroups   *message,
                      uint8_t             *out);
size_t cdemo_spawn_groups__pack_to_buffer
                     (const CDemoSpawnGroups   *message,
                      ProtobufCBuffer     *buffer);
CDemoSpawnGroups *
       cdemo_spawn_groups__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdemo_spawn_groups__free_unpacked
                     (CDemoSpawnGroups *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDemoFileHeader_Closure)
                 (const CDemoFileHeader *message,
                  void *closure_data);
typedef void (*CGameInfo__CDotaGameInfo__CPlayerInfo_Closure)
                 (const CGameInfo__CDotaGameInfo__CPlayerInfo *message,
                  void *closure_data);
typedef void (*CGameInfo__CDotaGameInfo__CHeroSelectEvent_Closure)
                 (const CGameInfo__CDotaGameInfo__CHeroSelectEvent *message,
                  void *closure_data);
typedef void (*CGameInfo__CDotaGameInfo_Closure)
                 (const CGameInfo__CDotaGameInfo *message,
                  void *closure_data);
typedef void (*CGameInfo_Closure)
                 (const CGameInfo *message,
                  void *closure_data);
typedef void (*CDemoFileInfo_Closure)
                 (const CDemoFileInfo *message,
                  void *closure_data);
typedef void (*CDemoPacket_Closure)
                 (const CDemoPacket *message,
                  void *closure_data);
typedef void (*CDemoFullPacket_Closure)
                 (const CDemoFullPacket *message,
                  void *closure_data);
typedef void (*CDemoSaveGame_Closure)
                 (const CDemoSaveGame *message,
                  void *closure_data);
typedef void (*CDemoSyncTick_Closure)
                 (const CDemoSyncTick *message,
                  void *closure_data);
typedef void (*CDemoConsoleCmd_Closure)
                 (const CDemoConsoleCmd *message,
                  void *closure_data);
typedef void (*CDemoSendTables_Closure)
                 (const CDemoSendTables *message,
                  void *closure_data);
typedef void (*CDemoClassInfo__ClassT_Closure)
                 (const CDemoClassInfo__ClassT *message,
                  void *closure_data);
typedef void (*CDemoClassInfo_Closure)
                 (const CDemoClassInfo *message,
                  void *closure_data);
typedef void (*CDemoCustomData_Closure)
                 (const CDemoCustomData *message,
                  void *closure_data);
typedef void (*CDemoCustomDataCallbacks_Closure)
                 (const CDemoCustomDataCallbacks *message,
                  void *closure_data);
typedef void (*CDemoStringTables__ItemsT_Closure)
                 (const CDemoStringTables__ItemsT *message,
                  void *closure_data);
typedef void (*CDemoStringTables__TableT_Closure)
                 (const CDemoStringTables__TableT *message,
                  void *closure_data);
typedef void (*CDemoStringTables_Closure)
                 (const CDemoStringTables *message,
                  void *closure_data);
typedef void (*CDemoStop_Closure)
                 (const CDemoStop *message,
                  void *closure_data);
typedef void (*CDemoUserCmd_Closure)
                 (const CDemoUserCmd *message,
                  void *closure_data);
typedef void (*CDemoSpawnGroups_Closure)
                 (const CDemoSpawnGroups *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    edemo_commands__descriptor;
extern const ProtobufCMessageDescriptor cdemo_file_header__descriptor;
extern const ProtobufCMessageDescriptor cgame_info__descriptor;
extern const ProtobufCMessageDescriptor cgame_info__cdota_game_info__descriptor;
extern const ProtobufCMessageDescriptor cgame_info__cdota_game_info__cplayer_info__descriptor;
extern const ProtobufCMessageDescriptor cgame_info__cdota_game_info__chero_select_event__descriptor;
extern const ProtobufCMessageDescriptor cdemo_file_info__descriptor;
extern const ProtobufCMessageDescriptor cdemo_packet__descriptor;
extern const ProtobufCMessageDescriptor cdemo_full_packet__descriptor;
extern const ProtobufCMessageDescriptor cdemo_save_game__descriptor;
extern const ProtobufCMessageDescriptor cdemo_sync_tick__descriptor;
extern const ProtobufCMessageDescriptor cdemo_console_cmd__descriptor;
extern const ProtobufCMessageDescriptor cdemo_send_tables__descriptor;
extern const ProtobufCMessageDescriptor cdemo_class_info__descriptor;
extern const ProtobufCMessageDescriptor cdemo_class_info__class_t__descriptor;
extern const ProtobufCMessageDescriptor cdemo_custom_data__descriptor;
extern const ProtobufCMessageDescriptor cdemo_custom_data_callbacks__descriptor;
extern const ProtobufCMessageDescriptor cdemo_string_tables__descriptor;
extern const ProtobufCMessageDescriptor cdemo_string_tables__items_t__descriptor;
extern const ProtobufCMessageDescriptor cdemo_string_tables__table_t__descriptor;
extern const ProtobufCMessageDescriptor cdemo_stop__descriptor;
extern const ProtobufCMessageDescriptor cdemo_user_cmd__descriptor;
extern const ProtobufCMessageDescriptor cdemo_spawn_groups__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_demo_2eproto__INCLUDED */
