/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_gcmessages_server.proto */

#ifndef PROTOBUF_C_dota_5fgcmessages_5fserver_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fgcmessages_5fserver_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages.pb-c.h"
#include "dota_shared_enums.pb-c.h"
#include "dota_gcmessages_common.pb-c.h"
#include "econ_gcmessages.pb-c.h"
#include "network_connection.pb-c.h"
#include "dota_gcmessages_common_match_management.pb-c.h"

typedef struct _CMsgPoorNetworkConditions CMsgPoorNetworkConditions;
typedef struct _CMsgPoorNetworkConditions__Player CMsgPoorNetworkConditions__Player;
typedef struct _CMsgGameserverCrash CMsgGameserverCrash;
typedef struct _CMsgConnectedPlayers CMsgConnectedPlayers;
typedef struct _CMsgConnectedPlayers__Player CMsgConnectedPlayers__Player;
typedef struct _CMsgGameServerInfo CMsgGameServerInfo;
typedef struct _CMsgLeaverDetected CMsgLeaverDetected;
typedef struct _CMsgLeaverDetectedResponse CMsgLeaverDetectedResponse;
typedef struct _CMsgDOTAFantasyPlayerStats CMsgDOTAFantasyPlayerStats;
typedef struct _CMsgDOTAFantasyFinalPlayerStats CMsgDOTAFantasyFinalPlayerStats;
typedef struct _CMsgDOTAFantasyLivePlayerStats CMsgDOTAFantasyLivePlayerStats;
typedef struct _CMsgDOTAFantasyMatch CMsgDOTAFantasyMatch;
typedef struct _CMsgServerToGCRealtimeStats CMsgServerToGCRealtimeStats;
typedef struct _CMsgGCToServerRealtimeStatsStartStop CMsgGCToServerRealtimeStatsStartStop;
typedef struct _CMsgGameMatchSignOut CMsgGameMatchSignOut;
typedef struct _CMsgGameMatchSignOut__CTeam CMsgGameMatchSignOut__CTeam;
typedef struct _CMsgGameMatchSignOut__CTeam__CPlayer CMsgGameMatchSignOut__CTeam__CPlayer;
typedef struct _CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData;
typedef struct _CMsgGameMatchSignOut__CAdditionalSignoutMsg CMsgGameMatchSignOut__CAdditionalSignoutMsg;
typedef struct _CMsgGameMatchSignOut__CSocialFeedMatchEvent CMsgGameMatchSignOut__CSocialFeedMatchEvent;
typedef struct _CMsgGameMatchSignOut__CCustomGameData CMsgGameMatchSignOut__CCustomGameData;
typedef struct _CMsgSignOutDraftInfo CMsgSignOutDraftInfo;
typedef struct _CMsgSignOutBotInfo CMsgSignOutBotInfo;
typedef struct _CMsgSignOutBotInfo__CMsgBotSlotDifficulty CMsgSignOutBotInfo__CMsgBotSlotDifficulty;
typedef struct _CMsgSignOutPlayerStats CMsgSignOutPlayerStats;
typedef struct _CMsgSignOutCommunicationSummary CMsgSignOutCommunicationSummary;
typedef struct _CMsgSignOutCommunicationSummary__PlayerCommunication CMsgSignOutCommunicationSummary__PlayerCommunication;
typedef struct _CMsgGameMatchSignoutResponse CMsgGameMatchSignoutResponse;
typedef struct _CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg;
typedef struct _CMsgGameMatchSignoutResponse__PlayerMetadata CMsgGameMatchSignoutResponse__PlayerMetadata;
typedef struct _CMsgTimedRewardContainer CMsgTimedRewardContainer;
typedef struct _CMsgGameMatchSignOutPermissionRequest CMsgGameMatchSignOutPermissionRequest;
typedef struct _CMsgGameMatchSignOutPermissionResponse CMsgGameMatchSignOutPermissionResponse;
typedef struct _CMsgDOTALiveScoreboardUpdate CMsgDOTALiveScoreboardUpdate;
typedef struct _CMsgDOTALiveScoreboardUpdate__Team CMsgDOTALiveScoreboardUpdate__Team;
typedef struct _CMsgDOTALiveScoreboardUpdate__Team__Player CMsgDOTALiveScoreboardUpdate__Team__Player;
typedef struct _CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility;
typedef struct _CMsgDOTARequestPlayerResources CMsgDOTARequestPlayerResources;
typedef struct _CMsgDOTARequestPlayerResourcesResponse CMsgDOTARequestPlayerResourcesResponse;
typedef struct _CMsgDOTARequestBatchPlayerResources CMsgDOTARequestBatchPlayerResources;
typedef struct _CMsgDOTARequestBatchPlayerResourcesResponse CMsgDOTARequestBatchPlayerResourcesResponse;
typedef struct _CMsgDOTARequestBatchPlayerResourcesResponse__Result CMsgDOTARequestBatchPlayerResourcesResponse__Result;
typedef struct _CMsgDOTAPlayerFailedToConnect CMsgDOTAPlayerFailedToConnect;
typedef struct _CMsgGCToRelayConnect CMsgGCToRelayConnect;
typedef struct _CMsgGCGCToLANServerRelayConnect CMsgGCGCToLANServerRelayConnect;
typedef struct _CMsgGCToRelayConnectResponse CMsgGCToRelayConnectResponse;
typedef struct _CMsgGCBanStatusRequest CMsgGCBanStatusRequest;
typedef struct _CMsgGCBanStatusResponse CMsgGCBanStatusResponse;
typedef struct _CMsgTournamentItemEvent CMsgTournamentItemEvent;
typedef struct _CMsgTournamentItemEventResponse CMsgTournamentItemEventResponse;
typedef struct _CMsgTeamFanfare CMsgTeamFanfare;
typedef struct _CMsgResponseTeamFanfare CMsgResponseTeamFanfare;
typedef struct _CMsgGameServerUploadSaveGame CMsgGameServerUploadSaveGame;
typedef struct _CMsgGameServerSaveGameResult CMsgGameServerSaveGameResult;
typedef struct _CMsgGameServerGetLoadGame CMsgGameServerGetLoadGame;
typedef struct _CMsgGameServerGetLoadGameResult CMsgGameServerGetLoadGameResult;
typedef struct _CMsgDOTAGenerateDiretidePrizeList CMsgDOTAGenerateDiretidePrizeList;
typedef struct _CMsgDOTAGenerateDiretidePrizeListResponse CMsgDOTAGenerateDiretidePrizeListResponse;
typedef struct _CMsgDOTARewardDiretidePrizes CMsgDOTARewardDiretidePrizes;
typedef struct _CMsgDOTADiretidePrizesRewardedResponse CMsgDOTADiretidePrizesRewardedResponse;
typedef struct _CMsgDOTAAwardEventPoints CMsgDOTAAwardEventPoints;
typedef struct _CMsgDOTAAwardEventPoints__AwardPoints CMsgDOTAAwardEventPoints__AwardPoints;
typedef struct _CMsgServerToGCSignoutAwardAdditionalDrops CMsgServerToGCSignoutAwardAdditionalDrops;
typedef struct _CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops;
typedef struct _CMsgDOTAFrostivusTimeElapsed CMsgDOTAFrostivusTimeElapsed;
typedef struct _CMsgDOTAFrostivusTimeElapsed__User CMsgDOTAFrostivusTimeElapsed__User;
typedef struct _CMsgGCToServerPingRequest CMsgGCToServerPingRequest;
typedef struct _CMsgGCToServerPingResponse CMsgGCToServerPingResponse;
typedef struct _CMsgGCToServerConsoleCommand CMsgGCToServerConsoleCommand;
typedef struct _CMsgServerGetEventPoints CMsgServerGetEventPoints;
typedef struct _CMsgServerGetEventPointsResponse CMsgServerGetEventPointsResponse;
typedef struct _CMsgServerGetEventPointsResponse__Points CMsgServerGetEventPointsResponse__Points;
typedef struct _CMsgServerGrantSurveyPermission CMsgServerGrantSurveyPermission;
typedef struct _CMsgServerGrantSurveyPermission__Survey CMsgServerGrantSurveyPermission__Survey;
typedef struct _CMsgServerGrantSurveyPermissionResponse CMsgServerGrantSurveyPermissionResponse;
typedef struct _CMsgServerToGCMatchConnectionStats CMsgServerToGCMatchConnectionStats;
typedef struct _CMsgServerToGCMatchConnectionStats__Player CMsgServerToGCMatchConnectionStats__Player;
typedef struct _CMsgServerGCUpdateSpectatorCount CMsgServerGCUpdateSpectatorCount;
typedef struct _CSerializedCombatLog CSerializedCombatLog;
typedef struct _CSerializedCombatLog__Dictionary CSerializedCombatLog__Dictionary;
typedef struct _CSerializedCombatLog__Dictionary__DictString CSerializedCombatLog__Dictionary__DictString;
typedef struct _CMsgServerToGCGetAdditionalEquips CMsgServerToGCGetAdditionalEquips;
typedef struct _CMsgServerToGCGetAdditionalEquipsResponse CMsgServerToGCGetAdditionalEquipsResponse;
typedef struct _CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips;
typedef struct _CMsgServerToGCGetProfileCard CMsgServerToGCGetProfileCard;
typedef struct _CMsgServerToGCGetProfileCardResponse CMsgServerToGCGetProfileCardResponse;
typedef struct _CMsgServerToGCVictoryPredictions CMsgServerToGCVictoryPredictions;
typedef struct _CMsgServerToGCVictoryPredictions__Record CMsgServerToGCVictoryPredictions__Record;
typedef struct _CMsgSuspiciousActivity CMsgSuspiciousActivity;
typedef struct _CMsgServerToGCRequestStatus CMsgServerToGCRequestStatus;
typedef struct _CMsgServerToGCRequestStatusResponse CMsgServerToGCRequestStatusResponse;
typedef struct _CMsgSignOutAssassinMiniGameInfo CMsgSignOutAssassinMiniGameInfo;
typedef struct _CMsgServerToGCGetIngameEventData CMsgServerToGCGetIngameEventData;
typedef struct _CMsgGCToServerIngameEventDataOraclePA CMsgGCToServerIngameEventDataOraclePA;
typedef struct _CMsgServerToGCKillSummaries CMsgServerToGCKillSummaries;
typedef struct _CMsgServerToGCKillSummaries__KillSummary CMsgServerToGCKillSummaries__KillSummary;
typedef struct _CMsgGCToServerPredictionResult CMsgGCToServerPredictionResult;
typedef struct _CMsgGCToServerPredictionResult__Prediction CMsgGCToServerPredictionResult__Prediction;
typedef struct _CMsgServerToGCLockCharmTrading CMsgServerToGCLockCharmTrading;
typedef struct _CMsgSignOutUpdatePlayerChallenge CMsgSignOutUpdatePlayerChallenge;
typedef struct _CMsgSignOutUpdatePlayerChallenge__Challenge CMsgSignOutUpdatePlayerChallenge__Challenge;
typedef struct _CMsgServerToGCRerollPlayerChallenge CMsgServerToGCRerollPlayerChallenge;
typedef struct _CMsgServerToGCHoldEventPoints CMsgServerToGCHoldEventPoints;
typedef struct _CMsgServerToGCHoldEventPoints__HoldRequest CMsgServerToGCHoldEventPoints__HoldRequest;
typedef struct _CMsgSignOutReleaseEventPointHolds CMsgSignOutReleaseEventPointHolds;
typedef struct _CMsgGCToServerUpdateBroadcastCheers CMsgGCToServerUpdateBroadcastCheers;
typedef struct _CMsgSignOutWagerStats CMsgSignOutWagerStats;
typedef struct _CMsgSignOutWagerStats__Player CMsgSignOutWagerStats__Player;
typedef struct _CMsgSignOutXPCoins CMsgSignOutXPCoins;
typedef struct _CMsgSignOutXPCoins__Player CMsgSignOutXPCoins__Player;
typedef struct _CMsgSignOutCommunityGoalProgress CMsgSignOutCommunityGoalProgress;
typedef struct _CMsgSignOutCommunityGoalProgress__EventGoalIncrement CMsgSignOutCommunityGoalProgress__EventGoalIncrement;
typedef struct _CMsgServerToGCPostMatchTip CMsgServerToGCPostMatchTip;
typedef struct _CMsgServerToGCPostMatchTipResponse CMsgServerToGCPostMatchTipResponse;
typedef struct _CMsgServerToGCStartCompendiumInGamePredictions CMsgServerToGCStartCompendiumInGamePredictions;
typedef struct _CMsgServerToGCStartCompendiumInGamePredictionsResponse CMsgServerToGCStartCompendiumInGamePredictionsResponse;
typedef struct _CMsgServerToGCCloseCompendiumInGamePredictionVoting CMsgServerToGCCloseCompendiumInGamePredictionVoting;
typedef struct _CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse;
typedef struct _CMsgServerToGCEndCompendiumInGamePredictions CMsgServerToGCEndCompendiumInGamePredictions;
typedef struct _CMsgServerToGCEndCompendiumInGamePredictionsResponse CMsgServerToGCEndCompendiumInGamePredictionsResponse;
typedef struct _CMsgServerToGCCompendiumInGamePredictionResults CMsgServerToGCCompendiumInGamePredictionResults;
typedef struct _CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult;
typedef struct _CMsgServerToGCCompendiumInGamePredictionResultsResponse CMsgServerToGCCompendiumInGamePredictionResultsResponse;


/* --- enums --- */

typedef enum _CMsgConnectedPlayers__SendReason {
  CMSG_CONNECTED_PLAYERS__SEND_REASON__INVALID = 0,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__HEARTBEAT = 1,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__GAME_STATE = 2,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__FIRST_BLOOD = 3,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__PLAYER_CONNECTED = 4,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__PLAYER_HERO = 5,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__PLAYER_DISCONNECTED_CONSEQUENCES = 6,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__PLAYER_DISCONNECTED_NOCONSEQUENCES = 7,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__GAMESTATE_TIMEOUT = 10,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__MASS_DISCONNECT = 11,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__KILLS = 13,
  CMSG_CONNECTED_PLAYERS__SEND_REASON__BUILDING_STATE = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CONNECTED_PLAYERS__SEND_REASON)
} CMsgConnectedPlayers__SendReason;
typedef enum _CMsgGameServerInfo__ServerType {
  CMSG_GAME_SERVER_INFO__SERVER_TYPE__UNSPECIFIED = 0,
  CMSG_GAME_SERVER_INFO__SERVER_TYPE__GAME = 1,
  CMSG_GAME_SERVER_INFO__SERVER_TYPE__PROXY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GAME_SERVER_INFO__SERVER_TYPE)
} CMsgGameServerInfo__ServerType;
typedef enum _CMsgGameServerInfo__CustomGames {
  CMSG_GAME_SERVER_INFO__CUSTOM_GAMES__BOTH = 0,
  CMSG_GAME_SERVER_INFO__CUSTOM_GAMES__NONE = 1,
  CMSG_GAME_SERVER_INFO__CUSTOM_GAMES__ONLY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GAME_SERVER_INFO__CUSTOM_GAMES)
} CMsgGameServerInfo__CustomGames;
typedef enum _CMsgDOTALiveScoreboardUpdate__Team__Player__DOTAUltimateState {
  CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE__k_EDOTAUltimateStateNotLearned = 0,
  CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE__k_EDOTAUltimateStateCooldown = 1,
  CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE__k_EDOTAUltimateStateNeedsMana = 2,
  CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE__k_EDOTAUltimateStateReady = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE)
} CMsgDOTALiveScoreboardUpdate__Team__Player__DOTAUltimateState;
typedef enum _CMsgGameServerSaveGameResult__Result {
  CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT__SaveSuccessful = 0,
  CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT__SessionNotFound = 1,
  CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT__DatabaseError = 2,
  CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT__TooBig = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT)
} CMsgGameServerSaveGameResult__Result;
typedef enum _CMsgGCToServerPredictionResult__Prediction__EResult {
  CMSG_GCTO_SERVER_PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_ItemGranted = 1,
  CMSG_GCTO_SERVER_PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_Destroyed = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCTO_SERVER_PREDICTION_RESULT__PREDICTION__ERESULT)
} CMsgGCToServerPredictionResult__Prediction__EResult;
typedef enum _CMsgServerToGCPostMatchTipResponse__Result {
  CMSG_SERVER_TO_GCPOST_MATCH_TIP_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_SERVER_TO_GCPOST_MATCH_TIP_RESPONSE__RESULT__FAILURE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_SERVER_TO_GCPOST_MATCH_TIP_RESPONSE__RESULT)
} CMsgServerToGCPostMatchTipResponse__Result;
typedef enum _EPoorNetworkConditionsType {
  EPOOR_NETWORK_CONDITIONS_TYPE__k_EPoorNetworkConditions_None = 0,
  EPOOR_NETWORK_CONDITIONS_TYPE__k_EPoorNetworkConditions_Unknown = 1,
  EPOOR_NETWORK_CONDITIONS_TYPE__k_EPoorNetworkConditions_MassDisconnect = 2,
  EPOOR_NETWORK_CONDITIONS_TYPE__k_EPoorNetworkConditions_ExcessBadQosIntervals = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPOOR_NETWORK_CONDITIONS_TYPE)
} EPoorNetworkConditionsType;
typedef enum _EAbilityAbuseType {
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_None = 0,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Io_Relocate = 1,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Chen_Test_Of_Faith = 2,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Bane_Nightmare = 3,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Bloodseeker_Bloodrage = 4,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Outworld_Astral_Imprisonment = 5,
  EABILITY_ABUSE_TYPE__k_EAbilityAbuseType_Shadow_Demon_Disruption = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EABILITY_ABUSE_TYPE)
} EAbilityAbuseType;
typedef enum _EIntentionalFeedingType {
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_None = 0,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_ExcessiveDeaths = 1,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_MultipleCourierPurchases = 2,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_MultipleCourierDeaths = 4,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_LowActivity = 8,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_LowDamage = 16,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_HighUnspentGold = 32,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_SoldTooMuchItemValue = 64,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_TooManyDroppedItems = 128,
  EINTENTIONAL_FEEDING_TYPE__k_EIntentionalFeedingType_ExcessiveTowerDamage = 256
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EINTENTIONAL_FEEDING_TYPE)
} EIntentionalFeedingType;
typedef enum _ESuspiciousActivity {
  ESUSPICIOUS_ACTIVITY__k_ESuspiciousActivity_VAC_MultipleInstances = 1,
  ESUSPICIOUS_ACTIVITY__k_ESuspiciousActivity_IntentionalFeeding = 100,
  ESUSPICIOUS_ACTIVITY__k_ESuspiciousActivity_SuspectedBotFarming = 101
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESUSPICIOUS_ACTIVITY)
} ESuspiciousActivity;
typedef enum _ESuspiciousBuildType {
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_None = 0,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_NoGoldSpent = 1,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_NoItems = 2,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_NoSignificantItems = 3,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_TooManyBoots = 4,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_Bot1 = 101,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_Bot2 = 102,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_Bot3 = 103,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_Bot4 = 104,
  ESUSPICIOUS_BUILD_TYPE__k_ESuspiciousBuildType_Bot5 = 105
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESUSPICIOUS_BUILD_TYPE)
} ESuspiciousBuildType;

/* --- messages --- */

struct  _CMsgPoorNetworkConditions__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_disconnect_reason;
  ENetworkDisconnectionReason disconnect_reason;
  protobuf_c_boolean has_num_bad_intervals;
  uint32_t num_bad_intervals;
  protobuf_c_boolean has_peak_loss_pct;
  uint32_t peak_loss_pct;
};
#define CMSG_POOR_NETWORK_CONDITIONS__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_poor_network_conditions__player__descriptor) \
    , 0,0, 0,ENETWORK_DISCONNECTION_REASON__NETWORK_DISCONNECT_INVALID, 0,0, 0,0 }


struct  _CMsgPoorNetworkConditions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_detection_type;
  EPoorNetworkConditionsType detection_type;
  size_t n_players;
  CMsgPoorNetworkConditions__Player **players;
};
#define CMSG_POOR_NETWORK_CONDITIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_poor_network_conditions__descriptor) \
    , 0,EPOOR_NETWORK_CONDITIONS_TYPE__k_EPoorNetworkConditions_None, 0,NULL }


struct  _CMsgGameserverCrash
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_game_state;
  DOTAGameState game_state;
  protobuf_c_boolean has_sentinel_save_time;
  uint32_t sentinel_save_time;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  protobuf_c_boolean has_tournament_id;
  uint32_t tournament_id;
  protobuf_c_boolean has_server_steam_id;
  uint64_t server_steam_id;
  protobuf_c_boolean has_server_public_ip_addr;
  uint32_t server_public_ip_addr;
  protobuf_c_boolean has_server_port;
  uint32_t server_port;
  protobuf_c_boolean has_server_cluster;
  uint32_t server_cluster;
  protobuf_c_boolean has_pid;
  uint32_t pid;
  protobuf_c_boolean has_engine;
  uint32_t engine;
};
#define CMSG_GAMESERVER_CRASH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gameserver_crash__descriptor) \
    , 0,0, 0,0, 0,DOTA__GAME_STATE__DOTA_GAMERULES_STATE_INIT, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgConnectedPlayers__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  CMsgLeaverState *leaver_state;
  protobuf_c_boolean has_disconnect_reason;
  ENetworkDisconnectionReason disconnect_reason;
};
#define CMSG_CONNECTED_PLAYERS__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_connected_players__player__descriptor) \
    , 0,0, 0,0, NULL, 0,ENETWORK_DISCONNECTION_REASON__NETWORK_DISCONNECT_INVALID }


struct  _CMsgConnectedPlayers
{
  ProtobufCMessage base;
  size_t n_connected_players;
  CMsgConnectedPlayers__Player **connected_players;
  size_t n_disconnected_players;
  CMsgConnectedPlayers__Player **disconnected_players;
  protobuf_c_boolean has_game_state;
  DOTAGameState game_state;
  protobuf_c_boolean has_first_blood_happened;
  protobuf_c_boolean first_blood_happened;
  protobuf_c_boolean has_legacy_mass_disconnect;
  protobuf_c_boolean legacy_mass_disconnect;
  CMsgPoorNetworkConditions *poor_network_conditions;
  protobuf_c_boolean has_send_reason;
  CMsgConnectedPlayers__SendReason send_reason;
  protobuf_c_boolean has_radiant_kills;
  uint32_t radiant_kills;
  protobuf_c_boolean has_dire_kills;
  uint32_t dire_kills;
  protobuf_c_boolean has_radiant_lead;
  int32_t radiant_lead;
  protobuf_c_boolean has_building_state;
  uint32_t building_state;
};
#define CMSG_CONNECTED_PLAYERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_connected_players__descriptor) \
    , 0,NULL, 0,NULL, 0,DOTA__GAME_STATE__DOTA_GAMERULES_STATE_INIT, 0,0, 0,0, NULL, 0,CMSG_CONNECTED_PLAYERS__SEND_REASON__INVALID, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGameServerInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_server_public_ip_addr;
  uint32_t server_public_ip_addr;
  protobuf_c_boolean has_server_private_ip_addr;
  uint32_t server_private_ip_addr;
  protobuf_c_boolean has_server_port;
  uint32_t server_port;
  protobuf_c_boolean has_server_tv_port;
  uint32_t server_tv_port;
  protobuf_c_boolean has_assigned_server_tv_port;
  uint32_t assigned_server_tv_port;
  protobuf_c_boolean has_server_steamdatagram_port;
  uint32_t server_steamdatagram_port;
  char *server_key;
  protobuf_c_boolean has_server_hibernation;
  protobuf_c_boolean server_hibernation;
  protobuf_c_boolean has_server_type;
  CMsgGameServerInfo__ServerType server_type;
  protobuf_c_boolean has_server_region;
  uint32_t server_region;
  protobuf_c_boolean has_server_loadavg;
  float server_loadavg;
  protobuf_c_boolean has_server_tv_broadcast_time;
  float server_tv_broadcast_time;
  protobuf_c_boolean has_server_game_time;
  float server_game_time;
  protobuf_c_boolean has_server_relay_connected_steam_id;
  uint64_t server_relay_connected_steam_id;
  protobuf_c_boolean has_relay_slots_max;
  uint32_t relay_slots_max;
  protobuf_c_boolean has_relays_connected;
  int32_t relays_connected;
  protobuf_c_boolean has_relay_clients_connected;
  int32_t relay_clients_connected;
  protobuf_c_boolean has_relayed_game_server_steam_id;
  uint64_t relayed_game_server_steam_id;
  protobuf_c_boolean has_parent_relay_count;
  uint32_t parent_relay_count;
  protobuf_c_boolean has_tv_secret_code;
  uint64_t tv_secret_code;
  protobuf_c_boolean has_server_version;
  uint32_t server_version;
  protobuf_c_boolean has_server_cluster;
  uint32_t server_cluster;
  protobuf_c_boolean has_allow_custom_games;
  CMsgGameServerInfo__CustomGames allow_custom_games;
};
#define CMSG_GAME_SERVER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_server_info__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,CMSG_GAME_SERVER_INFO__SERVER_TYPE__UNSPECIFIED, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,CMSG_GAME_SERVER_INFO__CUSTOM_GAMES__BOTH }


struct  _CMsgLeaverDetected
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_leaver_status;
  DOTALeaverStatusT leaver_status;
  CMsgLeaverState *leaver_state;
  protobuf_c_boolean has_server_cluster;
  uint32_t server_cluster;
  protobuf_c_boolean has_disconnect_reason;
  ENetworkDisconnectionReason disconnect_reason;
  CMsgPoorNetworkConditions *poor_network_conditions;
};
#define CMSG_LEAVER_DETECTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_leaver_detected__descriptor) \
    , 0,0, 0,DOTALEAVER_STATUS_T__DOTA_LEAVER_NONE, NULL, 0,0, 0,ENETWORK_DISCONNECTION_REASON__NETWORK_DISCONNECT_INVALID, NULL }


struct  _CMsgLeaverDetectedResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_LEAVER_DETECTED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_leaver_detected_response__descriptor) \
    , 0,0 }


struct  _CMsgDOTAFantasyPlayerStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_account_id;
  uint32_t player_account_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_match_completed;
  protobuf_c_boolean match_completed;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gpm;
  float gpm;
  protobuf_c_boolean has_xppm;
  float xppm;
  protobuf_c_boolean has_stuns;
  float stuns;
  protobuf_c_boolean has_healing;
  float healing;
  protobuf_c_boolean has_tower_kills;
  uint32_t tower_kills;
  protobuf_c_boolean has_roshan_kills;
  uint32_t roshan_kills;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_delay;
  uint32_t delay;
};
#define CMSG_DOTAFANTASY_PLAYER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_player_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFantasyFinalPlayerStats
{
  ProtobufCMessage base;
  CMsgDOTAFantasyPlayerStats *stats;
};
#define CMSG_DOTAFANTASY_FINAL_PLAYER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_final_player_stats__descriptor) \
    , NULL }


struct  _CMsgDOTAFantasyLivePlayerStats
{
  ProtobufCMessage base;
  CMsgDOTAFantasyPlayerStats *stats;
};
#define CMSG_DOTAFANTASY_LIVE_PLAYER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_live_player_stats__descriptor) \
    , NULL }


struct  _CMsgDOTAFantasyMatch
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
  protobuf_c_boolean has_team_1;
  uint32_t team_1;
  protobuf_c_boolean has_team_2;
  uint32_t team_2;
};
#define CMSG_DOTAFANTASY_MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafantasy_match__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCRealtimeStats
{
  ProtobufCMessage base;
  CMsgDOTARealtimeGameStatsTerse *delayed;
  CMsgDOTARealtimeGameStats *current;
};
#define CMSG_SERVER_TO_GCREALTIME_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcrealtime_stats__descriptor) \
    , NULL, NULL }


struct  _CMsgGCToServerRealtimeStatsStartStop
{
  ProtobufCMessage base;
  protobuf_c_boolean has_delayed;
  protobuf_c_boolean delayed;
  protobuf_c_boolean has_current;
  protobuf_c_boolean current;
};
#define CMSG_GCTO_SERVER_REALTIME_STATS_START_STOP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_realtime_stats_start_stop__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dota_team;
  uint32_t dota_team;
  protobuf_c_boolean has_winner;
  protobuf_c_boolean winner;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CTEAM__CPLAYER__CCUSTOM_GAME_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__cteam__cplayer__ccustom_game_data__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGameMatchSignOut__CTeam__CPlayer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  size_t n_items;
  uint32_t *items;
  protobuf_c_boolean has_gold;
  uint32_t gold;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_leaver_status;
  uint32_t leaver_status;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gold_per_min;
  uint32_t gold_per_min;
  protobuf_c_boolean has_xp_per_minute;
  uint32_t xp_per_minute;
  protobuf_c_boolean has_gold_spent;
  uint32_t gold_spent;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_hero_damage;
  uint32_t hero_damage;
  protobuf_c_boolean has_tower_damage;
  uint32_t tower_damage;
  protobuf_c_boolean has_hero_healing;
  uint32_t hero_healing;
  protobuf_c_boolean has_time_last_seen;
  uint32_t time_last_seen;
  protobuf_c_boolean has_support_ability_value;
  uint32_t support_ability_value;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_scaled_kills;
  float scaled_kills;
  protobuf_c_boolean has_scaled_deaths;
  float scaled_deaths;
  protobuf_c_boolean has_scaled_assists;
  float scaled_assists;
  protobuf_c_boolean has_claimed_farm_gold;
  uint32_t claimed_farm_gold;
  protobuf_c_boolean has_support_gold;
  uint32_t support_gold;
  protobuf_c_boolean has_claimed_denies;
  uint32_t claimed_denies;
  protobuf_c_boolean has_claimed_misses;
  uint32_t claimed_misses;
  protobuf_c_boolean has_misses;
  uint32_t misses;
  size_t n_ability_upgrades;
  CMatchPlayerAbilityUpgrade **ability_upgrades;
  size_t n_additional_units_inventory;
  CMatchAdditionalUnitInventory **additional_units_inventory;
  protobuf_c_boolean has_net_worth;
  uint32_t net_worth;
  CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData *custom_game_data;
  protobuf_c_boolean has_match_player_flags;
  uint32_t match_player_flags;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CTEAM__CPLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__cteam__cplayer__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,0, NULL, 0,0 }


struct  _CMsgGameMatchSignOut__CTeam
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgGameMatchSignOut__CTeam__CPlayer **players;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CTEAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__cteam__descriptor) \
    , 0,NULL }


struct  _CMsgGameMatchSignOut__CAdditionalSignoutMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint32_t id;
  protobuf_c_boolean has_contents;
  ProtobufCBinaryData contents;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CADDITIONAL_SIGNOUT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__cadditional_signout_msg__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgGameMatchSignOut__CSocialFeedMatchEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_event_type;
  uint32_t event_type;
  protobuf_c_boolean has_game_time;
  int32_t game_time;
  protobuf_c_boolean has_replay_time;
  uint32_t replay_time;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CSOCIAL_FEED_MATCH_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__csocial_feed_match_event__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGameMatchSignOut__CCustomGameData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_publish_timestamp;
  uint32_t publish_timestamp;
};
#define CMSG_GAME_MATCH_SIGN_OUT__CCUSTOM_GAME_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__ccustom_game_data__descriptor) \
    , 0,0 }


struct  _CMsgGameMatchSignOut
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_duration;
  uint32_t duration;
  protobuf_c_boolean has_good_guys_win;
  protobuf_c_boolean good_guys_win;
  protobuf_c_boolean has_date;
  uint32_t date;
  size_t n_num_players;
  uint32_t *num_players;
  size_t n_teams;
  CMsgGameMatchSignOut__CTeam **teams;
  size_t n_tower_status;
  uint32_t *tower_status;
  size_t n_barracks_status;
  uint32_t *barracks_status;
  protobuf_c_boolean has_cluster;
  uint32_t cluster;
  char *server_addr;
  protobuf_c_boolean has_first_blood_time;
  uint32_t first_blood_time;
  protobuf_c_boolean has_game_balance;
  float game_balance;
  protobuf_c_boolean has_event_score;
  uint32_t event_score;
  size_t n_picks_bans;
  CMatchHeroSelectEvent **picks_bans;
  size_t n_fantasy_stats;
  CMsgDOTAFantasyPlayerStats **fantasy_stats;
  size_t n_player_strange_count_adjustments;
  CMsgEconPlayerStrangeCountAdjustment **player_strange_count_adjustments;
  protobuf_c_boolean has_automatic_surrender;
  protobuf_c_boolean automatic_surrender;
  protobuf_c_boolean has_server_version;
  uint32_t server_version;
  protobuf_c_boolean has_legacy_mass_disconnect;
  protobuf_c_boolean legacy_mass_disconnect;
  CMsgPoorNetworkConditions *poor_network_conditions;
  size_t n_additional_msgs;
  CMsgGameMatchSignOut__CAdditionalSignoutMsg **additional_msgs;
  size_t n_social_feed_events;
  CMsgGameMatchSignOut__CSocialFeedMatchEvent **social_feed_events;
  protobuf_c_boolean has_average_networth_delta;
  int32_t average_networth_delta;
  protobuf_c_boolean has_networth_delta_min10;
  int32_t networth_delta_min10;
  protobuf_c_boolean has_networth_delta_min20;
  int32_t networth_delta_min20;
  protobuf_c_boolean has_maximum_losing_networth_lead;
  int32_t maximum_losing_networth_lead;
  protobuf_c_boolean has_average_experience_delta;
  int32_t average_experience_delta;
  protobuf_c_boolean has_experience_delta_min10;
  int32_t experience_delta_min10;
  protobuf_c_boolean has_experience_delta_min20;
  int32_t experience_delta_min20;
  protobuf_c_boolean has_bonus_gold_winner_min10;
  int32_t bonus_gold_winner_min10;
  protobuf_c_boolean has_bonus_gold_winner_min20;
  int32_t bonus_gold_winner_min20;
  protobuf_c_boolean has_bonus_gold_winner_total;
  uint32_t bonus_gold_winner_total;
  protobuf_c_boolean has_bonus_gold_loser_min10;
  int32_t bonus_gold_loser_min10;
  protobuf_c_boolean has_bonus_gold_loser_min20;
  int32_t bonus_gold_loser_min20;
  protobuf_c_boolean has_bonus_gold_loser_total;
  uint32_t bonus_gold_loser_total;
  CMsgGameMatchSignOut__CCustomGameData *custom_game_data;
  protobuf_c_boolean has_match_flags;
  uint32_t match_flags;
  size_t n_team_scores;
  uint32_t *team_scores;
  protobuf_c_boolean has_pre_game_duration;
  uint32_t pre_game_duration;
};
#define CMSG_GAME_MATCH_SIGN_OUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,0, NULL, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, NULL, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,NULL, 0,0 }


struct  _CMsgSignOutDraftInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_radiant_captain_account_id;
  uint32_t radiant_captain_account_id;
  protobuf_c_boolean has_dire_captain_account_id;
  uint32_t dire_captain_account_id;
  size_t n_picks_bans;
  CMatchHeroSelectEvent **picks_bans;
};
#define CMSG_SIGN_OUT_DRAFT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_draft_info__descriptor) \
    , 0,0, 0,0, 0,NULL }


struct  _CMsgSignOutBotInfo__CMsgBotSlotDifficulty
{
  ProtobufCMessage base;
  protobuf_c_boolean has_slot;
  uint32_t slot;
  protobuf_c_boolean has_bot_difficulty;
  DOTABotDifficulty bot_difficulty;
};
#define CMSG_SIGN_OUT_BOT_INFO__CMSG_BOT_SLOT_DIFFICULTY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_bot_info__cmsg_bot_slot_difficulty__descriptor) \
    , 0,0, 0,DOTABOT_DIFFICULTY__BOT_DIFFICULTY_PASSIVE }


struct  _CMsgSignOutBotInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_allow_cheats;
  protobuf_c_boolean allow_cheats;
  protobuf_c_boolean has_bot_difficulty;
  DOTABotDifficulty bot_difficulty;
  protobuf_c_boolean has_created_lobby;
  protobuf_c_boolean created_lobby;
  size_t n_bot_slot_difficulties;
  CMsgSignOutBotInfo__CMsgBotSlotDifficulty **bot_slot_difficulties;
};
#define CMSG_SIGN_OUT_BOT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_bot_info__descriptor) \
    , 0,0, 0,DOTABOT_DIFFICULTY__BOT_DIFFICULTY_PASSIVE, 0,0, 0,NULL }


struct  _CMsgSignOutPlayerStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  int32_t account_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_rank;
  uint32_t rank;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_rampages;
  uint32_t rampages;
  protobuf_c_boolean has_triple_kills;
  uint32_t triple_kills;
  protobuf_c_boolean has_first_blood_claimed;
  uint32_t first_blood_claimed;
  protobuf_c_boolean has_first_blood_given;
  uint32_t first_blood_given;
  protobuf_c_boolean has_couriers_killed;
  uint32_t couriers_killed;
  protobuf_c_boolean has_aegises_snatched;
  uint32_t aegises_snatched;
  protobuf_c_boolean has_cheeses_eaten;
  uint32_t cheeses_eaten;
  protobuf_c_boolean has_creeps_stacked;
  uint32_t creeps_stacked;
  protobuf_c_boolean has_fight_score;
  float fight_score;
  protobuf_c_boolean has_farm_score;
  float farm_score;
  protobuf_c_boolean has_support_score;
  float support_score;
  protobuf_c_boolean has_push_score;
  float push_score;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gpm;
  float gpm;
  protobuf_c_boolean has_xppm;
  float xppm;
};
#define CMSG_SIGN_OUT_PLAYER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_player_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutCommunicationSummary__PlayerCommunication
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_pings;
  uint32_t pings;
  protobuf_c_boolean has_max_pings_per_interval;
  uint32_t max_pings_per_interval;
  protobuf_c_boolean has_teammate_pings;
  uint32_t teammate_pings;
  protobuf_c_boolean has_max_teammate_pings_per_interval;
  uint32_t max_teammate_pings_per_interval;
  protobuf_c_boolean has_team_chat_messages;
  uint32_t team_chat_messages;
  protobuf_c_boolean has_all_chat_messages;
  uint32_t all_chat_messages;
  protobuf_c_boolean has_chat_wheel_messages;
  uint32_t chat_wheel_messages;
  protobuf_c_boolean has_pauses;
  uint32_t pauses;
  protobuf_c_boolean has_unpauses;
  uint32_t unpauses;
  protobuf_c_boolean has_lines_drawn;
  uint32_t lines_drawn;
  protobuf_c_boolean has_voice_chat_seconds;
  uint32_t voice_chat_seconds;
  protobuf_c_boolean has_chat_mutes;
  uint32_t chat_mutes;
  protobuf_c_boolean has_voice_mutes;
  uint32_t voice_mutes;
};
#define CMSG_SIGN_OUT_COMMUNICATION_SUMMARY__PLAYER_COMMUNICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_communication_summary__player_communication__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutCommunicationSummary
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgSignOutCommunicationSummary__PlayerCommunication **players;
};
#define CMSG_SIGN_OUT_COMMUNICATION_SUMMARY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_communication_summary__descriptor) \
    , 0,NULL }


struct  _CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint32_t id;
  protobuf_c_boolean has_contents;
  ProtobufCBinaryData contents;
};
#define CMSG_GAME_MATCH_SIGNOUT_RESPONSE__CADDITIONAL_SIGNOUT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_signout_response__cadditional_signout_msg__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgGameMatchSignoutResponse__PlayerMetadata
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_avg_kills_x16;
  uint32_t avg_kills_x16;
  protobuf_c_boolean has_avg_deaths_x16;
  uint32_t avg_deaths_x16;
  protobuf_c_boolean has_avg_assists_x16;
  uint32_t avg_assists_x16;
  protobuf_c_boolean has_avg_gpm_x16;
  uint32_t avg_gpm_x16;
  protobuf_c_boolean has_avg_xpm_x16;
  uint32_t avg_xpm_x16;
  protobuf_c_boolean has_best_kills_x16;
  uint32_t best_kills_x16;
  protobuf_c_boolean has_best_assists_x16;
  uint32_t best_assists_x16;
  protobuf_c_boolean has_best_gpm_x16;
  uint32_t best_gpm_x16;
  protobuf_c_boolean has_best_xpm_x16;
  uint32_t best_xpm_x16;
  protobuf_c_boolean has_win_streak;
  uint32_t win_streak;
  protobuf_c_boolean has_best_win_streak;
  uint32_t best_win_streak;
};
#define CMSG_GAME_MATCH_SIGNOUT_RESPONSE__PLAYER_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_signout_response__player_metadata__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGameMatchSignoutResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_replay_salt;
  uint32_t replay_salt;
  size_t n_timed_reward_details;
  CLobbyTimedRewardDetails **timed_reward_details;
  size_t n_xp_reward_details;
  CDOTALobbyMember **xp_reward_details;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  size_t n_additional_msgs;
  CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg **additional_msgs;
  protobuf_c_boolean has_metadata_private_key;
  uint32_t metadata_private_key;
  CMsgDOTAMatch *match_details;
  size_t n_players_metadata;
  CMsgGameMatchSignoutResponse__PlayerMetadata **players_metadata;
};
#define CMSG_GAME_MATCH_SIGNOUT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_signout_response__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL, 0,0, 0,NULL, 0,0, NULL, 0,NULL }


struct  _CMsgTimedRewardContainer
{
  ProtobufCMessage base;
  size_t n_timed_reward_details;
  CLobbyTimedRewardDetails **timed_reward_details;
};
#define CMSG_TIMED_REWARD_CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_timed_reward_container__descriptor) \
    , 0,NULL }


struct  _CMsgGameMatchSignOutPermissionRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_server_version;
  uint32_t server_version;
  protobuf_c_boolean has_local_attempt;
  uint32_t local_attempt;
  protobuf_c_boolean has_total_attempt;
  uint32_t total_attempt;
  protobuf_c_boolean has_seconds_waited;
  uint32_t seconds_waited;
};
#define CMSG_GAME_MATCH_SIGN_OUT_PERMISSION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out_permission_request__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGameMatchSignOutPermissionResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_permission_granted;
  protobuf_c_boolean permission_granted;
  protobuf_c_boolean has_abandon_signout;
  protobuf_c_boolean abandon_signout;
  protobuf_c_boolean has_retry_delay_seconds;
  uint32_t retry_delay_seconds;
};
#define CMSG_GAME_MATCH_SIGN_OUT_PERMISSION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_match_sign_out_permission_response__descriptor) \
    , 0,0, 0,0, 0,0u }


struct  _CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ability_id;
  uint32_t ability_id;
  protobuf_c_boolean has_ability_level;
  uint32_t ability_level;
};
#define CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__HERO_ABILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalive_scoreboard_update__team__player__hero_ability__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTALiveScoreboardUpdate__Team__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_slot;
  uint32_t player_slot;
  char *player_name;
  char *hero_name;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gold;
  uint32_t gold;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_gold_per_min;
  float gold_per_min;
  protobuf_c_boolean has_xp_per_min;
  float xp_per_min;
  protobuf_c_boolean has_ultimate_state;
  CMsgDOTALiveScoreboardUpdate__Team__Player__DOTAUltimateState ultimate_state;
  protobuf_c_boolean has_ultimate_cooldown;
  float ultimate_cooldown;
  protobuf_c_boolean has_item0;
  uint32_t item0;
  protobuf_c_boolean has_item1;
  uint32_t item1;
  protobuf_c_boolean has_item2;
  uint32_t item2;
  protobuf_c_boolean has_item3;
  uint32_t item3;
  protobuf_c_boolean has_item4;
  uint32_t item4;
  protobuf_c_boolean has_item5;
  uint32_t item5;
  protobuf_c_boolean has_respawn_timer;
  uint32_t respawn_timer;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_position_x;
  float position_x;
  protobuf_c_boolean has_position_y;
  float position_y;
  protobuf_c_boolean has_net_worth;
  uint32_t net_worth;
  size_t n_abilities;
  CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility **abilities;
};
#define CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalive_scoreboard_update__team__player__descriptor) \
    , 0,0, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__PLAYER__DOTAULTIMATE_STATE__k_EDOTAUltimateStateNotLearned, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgDOTALiveScoreboardUpdate__Team
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgDOTALiveScoreboardUpdate__Team__Player **players;
  protobuf_c_boolean has_score;
  uint32_t score;
  protobuf_c_boolean has_tower_state;
  uint32_t tower_state;
  protobuf_c_boolean has_barracks_state;
  uint32_t barracks_state;
  size_t n_hero_picks;
  uint32_t *hero_picks;
  size_t n_hero_bans;
  uint32_t *hero_bans;
};
#define CMSG_DOTALIVE_SCOREBOARD_UPDATE__TEAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalive_scoreboard_update__team__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CMsgDOTALiveScoreboardUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tournament_id;
  uint32_t tournament_id;
  protobuf_c_boolean has_tournament_game_id;
  uint32_t tournament_game_id;
  protobuf_c_boolean has_duration;
  float duration;
  protobuf_c_boolean has_hltv_delay;
  int32_t hltv_delay;
  CMsgDOTALiveScoreboardUpdate__Team *team_good;
  CMsgDOTALiveScoreboardUpdate__Team *team_bad;
  protobuf_c_boolean has_roshan_respawn_timer;
  uint32_t roshan_respawn_timer;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_DOTALIVE_SCOREBOARD_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalive_scoreboard_update__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgDOTARequestPlayerResources
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
};
#define CMSG_DOTAREQUEST_PLAYER_RESOURCES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_player_resources__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTARequestPlayerResourcesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_rank;
  uint32_t rank;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_prevent_text_chat;
  protobuf_c_boolean prevent_text_chat;
  protobuf_c_boolean has_prevent_voice_chat;
  protobuf_c_boolean prevent_voice_chat;
  protobuf_c_boolean has_low_priority;
  protobuf_c_boolean low_priority;
};
#define CMSG_DOTAREQUEST_PLAYER_RESOURCES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_player_resources_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTARequestBatchPlayerResources
{
  ProtobufCMessage base;
  size_t n_account_ids;
  uint32_t *account_ids;
  size_t n_rank_types;
  uint32_t *rank_types;
};
#define CMSG_DOTAREQUEST_BATCH_PLAYER_RESOURCES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_batch_player_resources__descriptor) \
    , 0,NULL, 0,NULL }


struct  _CMsgDOTARequestBatchPlayerResourcesResponse__Result
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_prevent_text_chat;
  protobuf_c_boolean prevent_text_chat;
  protobuf_c_boolean has_prevent_voice_chat;
  protobuf_c_boolean prevent_voice_chat;
  protobuf_c_boolean has_rank;
  uint32_t rank;
  protobuf_c_boolean has_rank_calibrated;
  protobuf_c_boolean rank_calibrated;
  protobuf_c_boolean has_low_priority;
  protobuf_c_boolean low_priority;
};
#define CMSG_DOTAREQUEST_BATCH_PLAYER_RESOURCES_RESPONSE__RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_batch_player_resources_response__result__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTARequestBatchPlayerResourcesResponse
{
  ProtobufCMessage base;
  size_t n_results;
  CMsgDOTARequestBatchPlayerResourcesResponse__Result **results;
};
#define CMSG_DOTAREQUEST_BATCH_PLAYER_RESOURCES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_batch_player_resources_response__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAPlayerFailedToConnect
{
  ProtobufCMessage base;
  size_t n_failed_loaders;
  uint64_t *failed_loaders;
  size_t n_abandoned_loaders;
  uint64_t *abandoned_loaders;
};
#define CMSG_DOTAPLAYER_FAILED_TO_CONNECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaplayer_failed_to_connect__descriptor) \
    , 0,NULL, 0,NULL }


struct  _CMsgGCToRelayConnect
{
  ProtobufCMessage base;
  protobuf_c_boolean has_source_tv_public_addr;
  uint32_t source_tv_public_addr;
  protobuf_c_boolean has_source_tv_private_addr;
  uint32_t source_tv_private_addr;
  protobuf_c_boolean has_source_tv_port;
  uint32_t source_tv_port;
  protobuf_c_boolean has_game_server_steam_id;
  uint64_t game_server_steam_id;
  protobuf_c_boolean has_parent_count;
  uint32_t parent_count;
  protobuf_c_boolean has_tv_unique_secret_code;
  uint64_t tv_unique_secret_code;
  protobuf_c_boolean has_source_tv_steamid;
  uint64_t source_tv_steamid;
};
#define CMSG_GCTO_RELAY_CONNECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_relay_connect__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCGCToLANServerRelayConnect
{
  ProtobufCMessage base;
  protobuf_c_boolean has_relay_steamid;
  uint64_t relay_steamid;
};
#define CMSG_GCGCTO_LANSERVER_RELAY_CONNECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcgcto_lanserver_relay_connect__descriptor) \
    , 0,0 }


struct  _CMsgGCToRelayConnectResponse
{
  ProtobufCMessage base;
};
#define CMSG_GCTO_RELAY_CONNECT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_relay_connect_response__descriptor) \
     }


struct  _CMsgGCBanStatusRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_GCBAN_STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcban_status_request__descriptor) \
    , 0,0 }


struct  _CMsgGCBanStatusResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  protobuf_c_boolean has_low_priority;
  protobuf_c_boolean low_priority;
  protobuf_c_boolean has_text_chat_banned;
  protobuf_c_boolean text_chat_banned;
  protobuf_c_boolean has_voice_chat_banned;
  protobuf_c_boolean voice_chat_banned;
};
#define CMSG_GCBAN_STATUS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcban_status_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgTournamentItemEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_killer_account_id;
  uint32_t killer_account_id;
  protobuf_c_boolean has_victim_account_id;
  uint32_t victim_account_id;
  protobuf_c_boolean has_event_type;
  DOTATournamentEvents event_type;
  protobuf_c_boolean has_tv_delay;
  int32_t tv_delay;
  protobuf_c_boolean has_dota_time;
  int32_t dota_time;
  protobuf_c_boolean has_replay_time;
  float replay_time;
  char *loot_list;
  protobuf_c_boolean has_event_team;
  uint32_t event_team;
  protobuf_c_boolean has_multi_kill_count;
  uint32_t multi_kill_count;
  protobuf_c_boolean has_winner_score;
  uint32_t winner_score;
  protobuf_c_boolean has_loser_score;
  uint32_t loser_score;
  size_t n_hero_statues;
  CProtoItemHeroStatue **hero_statues;
};
#define CMSG_TOURNAMENT_ITEM_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_tournament_item_event__descriptor) \
    , 0,0, 0,0, 0,DOTA__TOURNAMENT_EVENTS__TE_FIRST_BLOOD, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgTournamentItemEventResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_type;
  DOTATournamentEvents event_type;
  protobuf_c_boolean has_viewers_granted;
  uint32_t viewers_granted;
};
#define CMSG_TOURNAMENT_ITEM_EVENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_tournament_item_event_response__descriptor) \
    , 0,DOTA__TOURNAMENT_EVENTS__TE_FIRST_BLOOD, 0,0 }


struct  _CMsgTeamFanfare
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_TEAM_FANFARE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_team_fanfare__descriptor) \
    , 0,0 }


struct  _CMsgResponseTeamFanfare
{
  ProtobufCMessage base;
  protobuf_c_boolean has_fanfare_goodguys;
  uint32_t fanfare_goodguys;
  protobuf_c_boolean has_fanfare_badguys;
  uint32_t fanfare_badguys;
};
#define CMSG_RESPONSE_TEAM_FANFARE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_response_team_fanfare__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGameServerUploadSaveGame
{
  ProtobufCMessage base;
  protobuf_c_boolean has_game_time;
  uint32_t game_time;
  protobuf_c_boolean has_save_game_data;
  ProtobufCBinaryData save_game_data;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  size_t n_player_steam_ids;
  uint64_t *player_steam_ids;
};
#define CMSG_GAME_SERVER_UPLOAD_SAVE_GAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_server_upload_save_game__descriptor) \
    , 0,0, 0,{0,NULL}, 0,0, 0,NULL }


struct  _CMsgGameServerSaveGameResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgGameServerSaveGameResult__Result result;
};
#define CMSG_GAME_SERVER_SAVE_GAME_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_server_save_game_result__descriptor) \
    , 0,CMSG_GAME_SERVER_SAVE_GAME_RESULT__RESULT__SaveSuccessful }


struct  _CMsgGameServerGetLoadGame
{
  ProtobufCMessage base;
  protobuf_c_boolean has_save_id;
  uint32_t save_id;
};
#define CMSG_GAME_SERVER_GET_LOAD_GAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_server_get_load_game__descriptor) \
    , 0,0 }


struct  _CMsgGameServerGetLoadGameResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_save_game_data;
  ProtobufCBinaryData save_game_data;
};
#define CMSG_GAME_SERVER_GET_LOAD_GAME_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_game_server_get_load_game_result__descriptor) \
    , 0,{0,NULL} }


struct  _CMsgDOTAGenerateDiretidePrizeList
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prize_list;
  uint32_t prize_list;
  protobuf_c_boolean has_highest_roshan_level;
  uint32_t highest_roshan_level;
};
#define CMSG_DOTAGENERATE_DIRETIDE_PRIZE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotagenerate_diretide_prize_list__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAGenerateDiretidePrizeListResponse
{
  ProtobufCMessage base;
  size_t n_item_defs;
  uint32_t *item_defs;
  size_t n_steam_ids;
  uint64_t *steam_ids;
  protobuf_c_boolean has_prize_list;
  uint32_t prize_list;
};
#define CMSG_DOTAGENERATE_DIRETIDE_PRIZE_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotagenerate_diretide_prize_list_response__descriptor) \
    , 0,NULL, 0,NULL, 0,0 }


struct  _CMsgDOTARewardDiretidePrizes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_team;
  uint32_t team;
  protobuf_c_boolean has_prize_list;
  uint32_t prize_list;
};
#define CMSG_DOTAREWARD_DIRETIDE_PRIZES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareward_diretide_prizes__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTADiretidePrizesRewardedResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prize_list;
  uint32_t prize_list;
};
#define CMSG_DOTADIRETIDE_PRIZES_REWARDED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotadiretide_prizes_rewarded_response__descriptor) \
    , 0,0 }


struct  _CMsgDOTAAwardEventPoints__AwardPoints
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_points;
  int32_t points;
  protobuf_c_boolean has_premium_points;
  int32_t premium_points;
  protobuf_c_boolean has_trade_ban_time;
  uint32_t trade_ban_time;
};
#define CMSG_DOTAAWARD_EVENT_POINTS__AWARD_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaaward_event_points__award_points__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAAwardEventPoints
{
  ProtobufCMessage base;
  size_t n_award_points;
  CMsgDOTAAwardEventPoints__AwardPoints **award_points;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_audit_action;
  uint32_t audit_action;
};
#define CMSG_DOTAAWARD_EVENT_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaaward_event_points__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops
{
  ProtobufCMessage base;
  char *loot_list;
  size_t n_player_account_ids;
  uint32_t *player_account_ids;
  protobuf_c_boolean has_no_trade;
  protobuf_c_boolean no_trade;
  protobuf_c_boolean has_randomize_reward;
  protobuf_c_boolean randomize_reward;
};
#define CMSG_SERVER_TO_GCSIGNOUT_AWARD_ADDITIONAL_DROPS__ADDITIONAL_DROPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcsignout_award_additional_drops__additional_drops__descriptor) \
    , NULL, 0,NULL, 0,0, 0,0 }


struct  _CMsgServerToGCSignoutAwardAdditionalDrops
{
  ProtobufCMessage base;
  size_t n_drops;
  CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops **drops;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_SERVER_TO_GCSIGNOUT_AWARD_ADDITIONAL_DROPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcsignout_award_additional_drops__descriptor) \
    , 0,NULL, 0,0 }


struct  _CMsgDOTAFrostivusTimeElapsed__User
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_time_elapsed_s;
  uint32_t time_elapsed_s;
};
#define CMSG_DOTAFROSTIVUS_TIME_ELAPSED__USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafrostivus_time_elapsed__user__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAFrostivusTimeElapsed
{
  ProtobufCMessage base;
  protobuf_c_boolean has_seconds;
  uint32_t seconds;
  size_t n_users;
  CMsgDOTAFrostivusTimeElapsed__User **users;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_DOTAFROSTIVUS_TIME_ELAPSED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafrostivus_time_elapsed__descriptor) \
    , 0,0, 0,NULL, 0,0 }


struct  _CMsgGCToServerPingRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_request_id;
  uint64_t request_id;
  protobuf_c_boolean has_request_time;
  uint64_t request_time;
};
#define CMSG_GCTO_SERVER_PING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_ping_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToServerPingResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_request_id;
  uint64_t request_id;
  protobuf_c_boolean has_request_time;
  uint64_t request_time;
  protobuf_c_boolean has_cluster;
  uint32_t cluster;
};
#define CMSG_GCTO_SERVER_PING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_ping_response__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgGCToServerConsoleCommand
{
  ProtobufCMessage base;
  char *console_command;
};
#define CMSG_GCTO_SERVER_CONSOLE_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_console_command__descriptor) \
    , NULL }


struct  _CMsgServerGetEventPoints
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  size_t n_account_id;
  uint32_t *account_id;
};
#define CMSG_SERVER_GET_EVENT_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_get_event_points__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgServerGetEventPointsResponse__Points
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_points_total;
  uint32_t points_total;
  protobuf_c_boolean has_owned;
  protobuf_c_boolean owned;
};
#define CMSG_SERVER_GET_EVENT_POINTS_RESPONSE__POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_get_event_points_response__points__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgServerGetEventPointsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  size_t n_points;
  CMsgServerGetEventPointsResponse__Points **points;
};
#define CMSG_SERVER_GET_EVENT_POINTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_get_event_points_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgServerGrantSurveyPermission__Survey
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_question_id;
  uint32_t question_id;
  protobuf_c_boolean has_expire_time;
  uint32_t expire_time;
  protobuf_c_boolean has_survey_key;
  uint64_t survey_key;
  protobuf_c_boolean has_extra_data;
  uint64_t extra_data;
  protobuf_c_boolean has_extra_data_32;
  uint64_t extra_data_32;
};
#define CMSG_SERVER_GRANT_SURVEY_PERMISSION__SURVEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_grant_survey_permission__survey__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerGrantSurveyPermission
{
  ProtobufCMessage base;
  size_t n_surveys;
  CMsgServerGrantSurveyPermission__Survey **surveys;
};
#define CMSG_SERVER_GRANT_SURVEY_PERMISSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_grant_survey_permission__descriptor) \
    , 0,NULL }


struct  _CMsgServerGrantSurveyPermissionResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_SERVER_GRANT_SURVEY_PERMISSION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_grant_survey_permission_response__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCMatchConnectionStats__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_ip;
  uint32_t ip;
  protobuf_c_boolean has_avg_ping_ms;
  uint32_t avg_ping_ms;
  protobuf_c_boolean has_packet_loss;
  float packet_loss;
  protobuf_c_boolean has_ping_deviation;
  float ping_deviation;
  protobuf_c_boolean has_full_resends;
  uint32_t full_resends;
};
#define CMSG_SERVER_TO_GCMATCH_CONNECTION_STATS__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcmatch_connection_stats__player__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCMatchConnectionStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_region_id;
  uint32_t region_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  size_t n_players;
  CMsgServerToGCMatchConnectionStats__Player **players;
  protobuf_c_boolean has_cluster_id;
  uint32_t cluster_id;
};
#define CMSG_SERVER_TO_GCMATCH_CONNECTION_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcmatch_connection_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, 0,0 }


struct  _CMsgServerGCUpdateSpectatorCount
{
  ProtobufCMessage base;
  protobuf_c_boolean has_spectator_count;
  uint32_t spectator_count;
};
#define CMSG_SERVER_GCUPDATE_SPECTATOR_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_gcupdate_spectator_count__descriptor) \
    , 0,0 }


struct  _CSerializedCombatLog__Dictionary__DictString
{
  ProtobufCMessage base;
  uint32_t id;
  char *value;
};
#define CSERIALIZED_COMBAT_LOG__DICTIONARY__DICT_STRING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cserialized_combat_log__dictionary__dict_string__descriptor) \
    , 0, NULL }


struct  _CSerializedCombatLog__Dictionary
{
  ProtobufCMessage base;
  size_t n_strings;
  CSerializedCombatLog__Dictionary__DictString **strings;
};
#define CSERIALIZED_COMBAT_LOG__DICTIONARY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cserialized_combat_log__dictionary__descriptor) \
    , 0,NULL }


struct  _CSerializedCombatLog
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint32_t version;
  CSerializedCombatLog__Dictionary *dictionary;
  size_t n_entries;
  CMsgDOTACombatLogEntry **entries;
};
#define CSERIALIZED_COMBAT_LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cserialized_combat_log__descriptor) \
    , 0,0, NULL, 0,NULL }


struct  _CMsgServerToGCGetAdditionalEquips
{
  ProtobufCMessage base;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_SERVER_TO_GCGET_ADDITIONAL_EQUIPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_additional_equips__descriptor) \
    , 0,NULL }


struct  _CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_equips;
  CAdditionalEquipSlot **equips;
};
#define CMSG_SERVER_TO_GCGET_ADDITIONAL_EQUIPS_RESPONSE__CUSER_EQUIPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_additional_equips_response__cuser_equips__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgServerToGCGetAdditionalEquipsResponse
{
  ProtobufCMessage base;
  size_t n_equips;
  CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips **equips;
};
#define CMSG_SERVER_TO_GCGET_ADDITIONAL_EQUIPS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_additional_equips_response__descriptor) \
    , 0,NULL }


struct  _CMsgServerToGCGetProfileCard
{
  ProtobufCMessage base;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_SERVER_TO_GCGET_PROFILE_CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_profile_card__descriptor) \
    , 0,NULL }


struct  _CMsgServerToGCGetProfileCardResponse
{
  ProtobufCMessage base;
  size_t n_cards;
  CMsgDOTAProfileCard **cards;
};
#define CMSG_SERVER_TO_GCGET_PROFILE_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_profile_card_response__descriptor) \
    , 0,NULL }


struct  _CMsgServerToGCVictoryPredictions__Record
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  size_t n_item_ids;
  uint64_t *item_ids;
};
#define CMSG_SERVER_TO_GCVICTORY_PREDICTIONS__RECORD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcvictory_predictions__record__descriptor) \
    , 0,0, 0,0, 0,NULL }


struct  _CMsgServerToGCVictoryPredictions
{
  ProtobufCMessage base;
  size_t n_records;
  CMsgServerToGCVictoryPredictions__Record **records;
};
#define CMSG_SERVER_TO_GCVICTORY_PREDICTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcvictory_predictions__descriptor) \
    , 0,NULL }


struct  _CMsgSuspiciousActivity
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_activity;
  ESuspiciousActivity activity;
  protobuf_c_boolean has_intdata1;
  int32_t intdata1;
  protobuf_c_boolean has_intdata2;
  int32_t intdata2;
  protobuf_c_boolean has_time;
  uint32_t time;
};
#define CMSG_SUSPICIOUS_ACTIVITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_suspicious_activity__descriptor) \
    , 0,0, 0,ESUSPICIOUS_ACTIVITY__k_ESuspiciousActivity_VAC_MultipleInstances, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCRequestStatus
{
  ProtobufCMessage base;
};
#define CMSG_SERVER_TO_GCREQUEST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcrequest_status__descriptor) \
     }


struct  _CMsgServerToGCRequestStatusResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_response;
  uint32_t response;
};
#define CMSG_SERVER_TO_GCREQUEST_STATUS__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcrequest_status__response__descriptor) \
    , 0,0 }


struct  _CMsgSignOutAssassinMiniGameInfo
{
  ProtobufCMessage base;
  size_t n_winning_players;
  uint64_t *winning_players;
  size_t n_losing_players;
  uint64_t *losing_players;
  size_t n_arcana_owners;
  uint64_t *arcana_owners;
  protobuf_c_boolean has_assassin_won;
  protobuf_c_boolean assassin_won;
  protobuf_c_boolean has_target_hero_id;
  uint32_t target_hero_id;
  protobuf_c_boolean has_contract_completed;
  protobuf_c_boolean contract_completed;
  protobuf_c_boolean has_contract_complete_time;
  float contract_complete_time;
  protobuf_c_boolean has_pa_is_radiant;
  protobuf_c_boolean pa_is_radiant;
};
#define CMSG_SIGN_OUT_ASSASSIN_MINI_GAME_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_assassin_mini_game_info__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCGetIngameEventData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event;
  EEvent event;
};
#define CMSG_SERVER_TO_GCGET_INGAME_EVENT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcget_ingame_event_data__descriptor) \
    , 0,EEVENT__EVENT_ID_NONE }


struct  _CMsgGCToServerIngameEventDataOraclePA
{
  ProtobufCMessage base;
  size_t n_target_hero_ids;
  uint32_t *target_hero_ids;
};
#define CMSG_GCTO_SERVER_INGAME_EVENT_DATA_ORACLE_PA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_ingame_event_data_oracle_pa__descriptor) \
    , 0,NULL }


struct  _CMsgServerToGCKillSummaries__KillSummary
{
  ProtobufCMessage base;
  protobuf_c_boolean has_killer_hero_id;
  uint32_t killer_hero_id;
  protobuf_c_boolean has_victim_hero_id;
  uint32_t victim_hero_id;
  protobuf_c_boolean has_kill_count;
  uint32_t kill_count;
};
#define CMSG_SERVER_TO_GCKILL_SUMMARIES__KILL_SUMMARY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gckill_summaries__kill_summary__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCKillSummaries
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ingameevent_id;
  uint32_t ingameevent_id;
  size_t n_summaries;
  CMsgServerToGCKillSummaries__KillSummary **summaries;
};
#define CMSG_SERVER_TO_GCKILL_SUMMARIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gckill_summaries__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCToServerPredictionResult__Prediction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
  protobuf_c_boolean has_num_correct;
  uint32_t num_correct;
  protobuf_c_boolean has_num_fails;
  uint32_t num_fails;
  protobuf_c_boolean has_result;
  CMsgGCToServerPredictionResult__Prediction__EResult result;
  size_t n_granted_item_defs;
  uint32_t *granted_item_defs;
};
#define CMSG_GCTO_SERVER_PREDICTION_RESULT__PREDICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_prediction_result__prediction__descriptor) \
    , 0,0, 0,0, 0,0, 0,CMSG_GCTO_SERVER_PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_ItemGranted, 0,NULL }


struct  _CMsgGCToServerPredictionResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_correct;
  protobuf_c_boolean correct;
  size_t n_predictions;
  CMsgGCToServerPredictionResult__Prediction **predictions;
};
#define CMSG_GCTO_SERVER_PREDICTION_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_prediction_result__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgServerToGCLockCharmTrading
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
};
#define CMSG_SERVER_TO_GCLOCK_CHARM_TRADING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gclock_charm_trading__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSignOutUpdatePlayerChallenge__Challenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_sequence_id;
  uint32_t sequence_id;
  protobuf_c_boolean has_progress;
  uint32_t progress;
  protobuf_c_boolean has_challenge_rank;
  uint32_t challenge_rank;
};
#define CMSG_SIGN_OUT_UPDATE_PLAYER_CHALLENGE__CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_update_player_challenge__challenge__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutUpdatePlayerChallenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_completed;
  CMsgSignOutUpdatePlayerChallenge__Challenge **completed;
  size_t n_rerolled;
  CMsgSignOutUpdatePlayerChallenge__Challenge **rerolled;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMSG_SIGN_OUT_UPDATE_PLAYER_CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_update_player_challenge__descriptor) \
    , 0,0, 0,NULL, 0,NULL, 0,0, 0,0 }


struct  _CMsgServerToGCRerollPlayerChallenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  CMsgClientToGCRerollPlayerChallenge *reroll_msg;
};
#define CMSG_SERVER_TO_GCREROLL_PLAYER_CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcreroll_player_challenge__descriptor) \
    , 0,0, NULL }


struct  _CMsgServerToGCHoldEventPoints__HoldRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_points_held;
  uint32_t points_held;
  protobuf_c_boolean has_premium_held;
  uint32_t premium_held;
};
#define CMSG_SERVER_TO_GCHOLD_EVENT_POINTS__HOLD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gchold_event_points__hold_request__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCHoldEventPoints
{
  ProtobufCMessage base;
  size_t n_holds;
  CMsgServerToGCHoldEventPoints__HoldRequest **holds;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_hold_key;
  uint64_t hold_key;
  protobuf_c_boolean has_hold_until;
  uint32_t hold_until;
};
#define CMSG_SERVER_TO_GCHOLD_EVENT_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gchold_event_points__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutReleaseEventPointHolds
{
  ProtobufCMessage base;
  size_t n_account_ids;
  uint32_t *account_ids;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_hold_key;
  uint64_t hold_key;
};
#define CMSG_SIGN_OUT_RELEASE_EVENT_POINT_HOLDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_release_event_point_holds__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _CMsgGCToServerUpdateBroadcastCheers
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time_stamp;
  uint32_t time_stamp;
  protobuf_c_boolean has_team_1_cheers;
  uint32_t team_1_cheers;
  protobuf_c_boolean has_team_2_cheers;
  uint32_t team_2_cheers;
};
#define CMSG_GCTO_SERVER_UPDATE_BROADCAST_CHEERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_update_broadcast_cheers__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgSignOutWagerStats__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_winnings;
  uint32_t winnings;
  protobuf_c_boolean has_max_wager;
  uint32_t max_wager;
  protobuf_c_boolean has_wager;
  uint32_t wager;
};
#define CMSG_SIGN_OUT_WAGER_STATS__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_wager_stats__player__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutWagerStats
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgSignOutWagerStats__Player **players;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_SIGN_OUT_WAGER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_wager_stats__descriptor) \
    , 0,NULL, 0,0 }


struct  _CMsgSignOutXPCoins__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_xp_gained;
  uint32_t xp_gained;
  protobuf_c_boolean has_coins_spent;
  uint32_t coins_spent;
};
#define CMSG_SIGN_OUT_XPCOINS__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_xpcoins__player__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgSignOutXPCoins
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgSignOutXPCoins__Player **players;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};
#define CMSG_SIGN_OUT_XPCOINS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_xpcoins__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0 }


struct  _CMsgSignOutCommunityGoalProgress__EventGoalIncrement
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_goal_id;
  uint32_t event_goal_id;
  protobuf_c_boolean has_increment_amount;
  uint32_t increment_amount;
};
#define CMSG_SIGN_OUT_COMMUNITY_GOAL_PROGRESS__EVENT_GOAL_INCREMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_community_goal_progress__event_goal_increment__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSignOutCommunityGoalProgress
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  size_t n_event_increments;
  CMsgSignOutCommunityGoalProgress__EventGoalIncrement **event_increments;
};
#define CMSG_SIGN_OUT_COMMUNITY_GOAL_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_sign_out_community_goal_progress__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgServerToGCPostMatchTip
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_tipper_account_id;
  uint32_t tipper_account_id;
  protobuf_c_boolean has_recipient_account_id;
  uint32_t recipient_account_id;
  protobuf_c_boolean has_tip_amount;
  uint32_t tip_amount;
};
#define CMSG_SERVER_TO_GCPOST_MATCH_TIP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcpost_match_tip__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCPostMatchTipResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_tipper_account_id;
  uint32_t tipper_account_id;
  protobuf_c_boolean has_recipient_account_id;
  uint32_t recipient_account_id;
  protobuf_c_boolean has_result;
  CMsgServerToGCPostMatchTipResponse__Result result;
};
#define CMSG_SERVER_TO_GCPOST_MATCH_TIP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcpost_match_tip_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,CMSG_SERVER_TO_GCPOST_MATCH_TIP_RESPONSE__RESULT__SUCCESS }


struct  _CMsgServerToGCStartCompendiumInGamePredictions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_hltv_delay;
  float hltv_delay;
  size_t n_prediction_ids;
  uint32_t *prediction_ids;
};
#define CMSG_SERVER_TO_GCSTART_COMPENDIUM_IN_GAME_PREDICTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcstart_compendium_in_game_predictions__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgServerToGCStartCompendiumInGamePredictionsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_SERVER_TO_GCSTART_COMPENDIUM_IN_GAME_PREDICTIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcstart_compendium_in_game_predictions_response__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCCloseCompendiumInGamePredictionVoting
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_SERVER_TO_GCCLOSE_COMPENDIUM_IN_GAME_PREDICTION_VOTING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcclose_compendium_in_game_prediction_voting__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_SERVER_TO_GCCLOSE_COMPENDIUM_IN_GAME_PREDICTION_VOTING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCEndCompendiumInGamePredictions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_SERVER_TO_GCEND_COMPENDIUM_IN_GAME_PREDICTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcend_compendium_in_game_predictions__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCEndCompendiumInGamePredictionsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_SERVER_TO_GCEND_COMPENDIUM_IN_GAME_PREDICTIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcend_compendium_in_game_predictions_response__descriptor) \
    , 0,0 }


struct  _CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prediction_id;
  uint32_t prediction_id;
  protobuf_c_boolean has_prediction_value;
  uint32_t prediction_value;
  protobuf_c_boolean has_prediction_value_is_mask;
  protobuf_c_boolean prediction_value_is_mask;
};
#define CMSG_SERVER_TO_GCCOMPENDIUM_IN_GAME_PREDICTION_RESULTS__PREDICTION_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gccompendium_in_game_prediction_results__prediction_result__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgServerToGCCompendiumInGamePredictionResults
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  size_t n_results;
  CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult **results;
};
#define CMSG_SERVER_TO_GCCOMPENDIUM_IN_GAME_PREDICTION_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gccompendium_in_game_prediction_results__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgServerToGCCompendiumInGamePredictionResultsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_SERVER_TO_GCCOMPENDIUM_IN_GAME_PREDICTION_RESULTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gccompendium_in_game_prediction_results_response__descriptor) \
    , 0,0 }


/* CMsgPoorNetworkConditions__Player methods */
void   cmsg_poor_network_conditions__player__init
                     (CMsgPoorNetworkConditions__Player         *message);
/* CMsgPoorNetworkConditions methods */
void   cmsg_poor_network_conditions__init
                     (CMsgPoorNetworkConditions         *message);
size_t cmsg_poor_network_conditions__get_packed_size
                     (const CMsgPoorNetworkConditions   *message);
size_t cmsg_poor_network_conditions__pack
                     (const CMsgPoorNetworkConditions   *message,
                      uint8_t             *out);
size_t cmsg_poor_network_conditions__pack_to_buffer
                     (const CMsgPoorNetworkConditions   *message,
                      ProtobufCBuffer     *buffer);
CMsgPoorNetworkConditions *
       cmsg_poor_network_conditions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_poor_network_conditions__free_unpacked
                     (CMsgPoorNetworkConditions *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameserverCrash methods */
void   cmsg_gameserver_crash__init
                     (CMsgGameserverCrash         *message);
size_t cmsg_gameserver_crash__get_packed_size
                     (const CMsgGameserverCrash   *message);
size_t cmsg_gameserver_crash__pack
                     (const CMsgGameserverCrash   *message,
                      uint8_t             *out);
size_t cmsg_gameserver_crash__pack_to_buffer
                     (const CMsgGameserverCrash   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameserverCrash *
       cmsg_gameserver_crash__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gameserver_crash__free_unpacked
                     (CMsgGameserverCrash *message,
                      ProtobufCAllocator *allocator);
/* CMsgConnectedPlayers__Player methods */
void   cmsg_connected_players__player__init
                     (CMsgConnectedPlayers__Player         *message);
/* CMsgConnectedPlayers methods */
void   cmsg_connected_players__init
                     (CMsgConnectedPlayers         *message);
size_t cmsg_connected_players__get_packed_size
                     (const CMsgConnectedPlayers   *message);
size_t cmsg_connected_players__pack
                     (const CMsgConnectedPlayers   *message,
                      uint8_t             *out);
size_t cmsg_connected_players__pack_to_buffer
                     (const CMsgConnectedPlayers   *message,
                      ProtobufCBuffer     *buffer);
CMsgConnectedPlayers *
       cmsg_connected_players__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_connected_players__free_unpacked
                     (CMsgConnectedPlayers *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameServerInfo methods */
void   cmsg_game_server_info__init
                     (CMsgGameServerInfo         *message);
size_t cmsg_game_server_info__get_packed_size
                     (const CMsgGameServerInfo   *message);
size_t cmsg_game_server_info__pack
                     (const CMsgGameServerInfo   *message,
                      uint8_t             *out);
size_t cmsg_game_server_info__pack_to_buffer
                     (const CMsgGameServerInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameServerInfo *
       cmsg_game_server_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_server_info__free_unpacked
                     (CMsgGameServerInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeaverDetected methods */
void   cmsg_leaver_detected__init
                     (CMsgLeaverDetected         *message);
size_t cmsg_leaver_detected__get_packed_size
                     (const CMsgLeaverDetected   *message);
size_t cmsg_leaver_detected__pack
                     (const CMsgLeaverDetected   *message,
                      uint8_t             *out);
size_t cmsg_leaver_detected__pack_to_buffer
                     (const CMsgLeaverDetected   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeaverDetected *
       cmsg_leaver_detected__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_leaver_detected__free_unpacked
                     (CMsgLeaverDetected *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeaverDetectedResponse methods */
void   cmsg_leaver_detected_response__init
                     (CMsgLeaverDetectedResponse         *message);
size_t cmsg_leaver_detected_response__get_packed_size
                     (const CMsgLeaverDetectedResponse   *message);
size_t cmsg_leaver_detected_response__pack
                     (const CMsgLeaverDetectedResponse   *message,
                      uint8_t             *out);
size_t cmsg_leaver_detected_response__pack_to_buffer
                     (const CMsgLeaverDetectedResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeaverDetectedResponse *
       cmsg_leaver_detected_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_leaver_detected_response__free_unpacked
                     (CMsgLeaverDetectedResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyPlayerStats methods */
void   cmsg_dotafantasy_player_stats__init
                     (CMsgDOTAFantasyPlayerStats         *message);
size_t cmsg_dotafantasy_player_stats__get_packed_size
                     (const CMsgDOTAFantasyPlayerStats   *message);
size_t cmsg_dotafantasy_player_stats__pack
                     (const CMsgDOTAFantasyPlayerStats   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_player_stats__pack_to_buffer
                     (const CMsgDOTAFantasyPlayerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyPlayerStats *
       cmsg_dotafantasy_player_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_player_stats__free_unpacked
                     (CMsgDOTAFantasyPlayerStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyFinalPlayerStats methods */
void   cmsg_dotafantasy_final_player_stats__init
                     (CMsgDOTAFantasyFinalPlayerStats         *message);
size_t cmsg_dotafantasy_final_player_stats__get_packed_size
                     (const CMsgDOTAFantasyFinalPlayerStats   *message);
size_t cmsg_dotafantasy_final_player_stats__pack
                     (const CMsgDOTAFantasyFinalPlayerStats   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_final_player_stats__pack_to_buffer
                     (const CMsgDOTAFantasyFinalPlayerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyFinalPlayerStats *
       cmsg_dotafantasy_final_player_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_final_player_stats__free_unpacked
                     (CMsgDOTAFantasyFinalPlayerStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyLivePlayerStats methods */
void   cmsg_dotafantasy_live_player_stats__init
                     (CMsgDOTAFantasyLivePlayerStats         *message);
size_t cmsg_dotafantasy_live_player_stats__get_packed_size
                     (const CMsgDOTAFantasyLivePlayerStats   *message);
size_t cmsg_dotafantasy_live_player_stats__pack
                     (const CMsgDOTAFantasyLivePlayerStats   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_live_player_stats__pack_to_buffer
                     (const CMsgDOTAFantasyLivePlayerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyLivePlayerStats *
       cmsg_dotafantasy_live_player_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_live_player_stats__free_unpacked
                     (CMsgDOTAFantasyLivePlayerStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFantasyMatch methods */
void   cmsg_dotafantasy_match__init
                     (CMsgDOTAFantasyMatch         *message);
size_t cmsg_dotafantasy_match__get_packed_size
                     (const CMsgDOTAFantasyMatch   *message);
size_t cmsg_dotafantasy_match__pack
                     (const CMsgDOTAFantasyMatch   *message,
                      uint8_t             *out);
size_t cmsg_dotafantasy_match__pack_to_buffer
                     (const CMsgDOTAFantasyMatch   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFantasyMatch *
       cmsg_dotafantasy_match__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafantasy_match__free_unpacked
                     (CMsgDOTAFantasyMatch *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCRealtimeStats methods */
void   cmsg_server_to_gcrealtime_stats__init
                     (CMsgServerToGCRealtimeStats         *message);
size_t cmsg_server_to_gcrealtime_stats__get_packed_size
                     (const CMsgServerToGCRealtimeStats   *message);
size_t cmsg_server_to_gcrealtime_stats__pack
                     (const CMsgServerToGCRealtimeStats   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcrealtime_stats__pack_to_buffer
                     (const CMsgServerToGCRealtimeStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCRealtimeStats *
       cmsg_server_to_gcrealtime_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcrealtime_stats__free_unpacked
                     (CMsgServerToGCRealtimeStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerRealtimeStatsStartStop methods */
void   cmsg_gcto_server_realtime_stats_start_stop__init
                     (CMsgGCToServerRealtimeStatsStartStop         *message);
size_t cmsg_gcto_server_realtime_stats_start_stop__get_packed_size
                     (const CMsgGCToServerRealtimeStatsStartStop   *message);
size_t cmsg_gcto_server_realtime_stats_start_stop__pack
                     (const CMsgGCToServerRealtimeStatsStartStop   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_realtime_stats_start_stop__pack_to_buffer
                     (const CMsgGCToServerRealtimeStatsStartStop   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerRealtimeStatsStartStop *
       cmsg_gcto_server_realtime_stats_start_stop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_realtime_stats_start_stop__free_unpacked
                     (CMsgGCToServerRealtimeStatsStartStop *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData methods */
void   cmsg_game_match_sign_out__cteam__cplayer__ccustom_game_data__init
                     (CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData         *message);
/* CMsgGameMatchSignOut__CTeam__CPlayer methods */
void   cmsg_game_match_sign_out__cteam__cplayer__init
                     (CMsgGameMatchSignOut__CTeam__CPlayer         *message);
/* CMsgGameMatchSignOut__CTeam methods */
void   cmsg_game_match_sign_out__cteam__init
                     (CMsgGameMatchSignOut__CTeam         *message);
/* CMsgGameMatchSignOut__CAdditionalSignoutMsg methods */
void   cmsg_game_match_sign_out__cadditional_signout_msg__init
                     (CMsgGameMatchSignOut__CAdditionalSignoutMsg         *message);
/* CMsgGameMatchSignOut__CSocialFeedMatchEvent methods */
void   cmsg_game_match_sign_out__csocial_feed_match_event__init
                     (CMsgGameMatchSignOut__CSocialFeedMatchEvent         *message);
/* CMsgGameMatchSignOut__CCustomGameData methods */
void   cmsg_game_match_sign_out__ccustom_game_data__init
                     (CMsgGameMatchSignOut__CCustomGameData         *message);
/* CMsgGameMatchSignOut methods */
void   cmsg_game_match_sign_out__init
                     (CMsgGameMatchSignOut         *message);
size_t cmsg_game_match_sign_out__get_packed_size
                     (const CMsgGameMatchSignOut   *message);
size_t cmsg_game_match_sign_out__pack
                     (const CMsgGameMatchSignOut   *message,
                      uint8_t             *out);
size_t cmsg_game_match_sign_out__pack_to_buffer
                     (const CMsgGameMatchSignOut   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameMatchSignOut *
       cmsg_game_match_sign_out__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_match_sign_out__free_unpacked
                     (CMsgGameMatchSignOut *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutDraftInfo methods */
void   cmsg_sign_out_draft_info__init
                     (CMsgSignOutDraftInfo         *message);
size_t cmsg_sign_out_draft_info__get_packed_size
                     (const CMsgSignOutDraftInfo   *message);
size_t cmsg_sign_out_draft_info__pack
                     (const CMsgSignOutDraftInfo   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_draft_info__pack_to_buffer
                     (const CMsgSignOutDraftInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutDraftInfo *
       cmsg_sign_out_draft_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_draft_info__free_unpacked
                     (CMsgSignOutDraftInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutBotInfo__CMsgBotSlotDifficulty methods */
void   cmsg_sign_out_bot_info__cmsg_bot_slot_difficulty__init
                     (CMsgSignOutBotInfo__CMsgBotSlotDifficulty         *message);
/* CMsgSignOutBotInfo methods */
void   cmsg_sign_out_bot_info__init
                     (CMsgSignOutBotInfo         *message);
size_t cmsg_sign_out_bot_info__get_packed_size
                     (const CMsgSignOutBotInfo   *message);
size_t cmsg_sign_out_bot_info__pack
                     (const CMsgSignOutBotInfo   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_bot_info__pack_to_buffer
                     (const CMsgSignOutBotInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutBotInfo *
       cmsg_sign_out_bot_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_bot_info__free_unpacked
                     (CMsgSignOutBotInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutPlayerStats methods */
void   cmsg_sign_out_player_stats__init
                     (CMsgSignOutPlayerStats         *message);
size_t cmsg_sign_out_player_stats__get_packed_size
                     (const CMsgSignOutPlayerStats   *message);
size_t cmsg_sign_out_player_stats__pack
                     (const CMsgSignOutPlayerStats   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_player_stats__pack_to_buffer
                     (const CMsgSignOutPlayerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutPlayerStats *
       cmsg_sign_out_player_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_player_stats__free_unpacked
                     (CMsgSignOutPlayerStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutCommunicationSummary__PlayerCommunication methods */
void   cmsg_sign_out_communication_summary__player_communication__init
                     (CMsgSignOutCommunicationSummary__PlayerCommunication         *message);
/* CMsgSignOutCommunicationSummary methods */
void   cmsg_sign_out_communication_summary__init
                     (CMsgSignOutCommunicationSummary         *message);
size_t cmsg_sign_out_communication_summary__get_packed_size
                     (const CMsgSignOutCommunicationSummary   *message);
size_t cmsg_sign_out_communication_summary__pack
                     (const CMsgSignOutCommunicationSummary   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_communication_summary__pack_to_buffer
                     (const CMsgSignOutCommunicationSummary   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutCommunicationSummary *
       cmsg_sign_out_communication_summary__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_communication_summary__free_unpacked
                     (CMsgSignOutCommunicationSummary *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg methods */
void   cmsg_game_match_signout_response__cadditional_signout_msg__init
                     (CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg         *message);
/* CMsgGameMatchSignoutResponse__PlayerMetadata methods */
void   cmsg_game_match_signout_response__player_metadata__init
                     (CMsgGameMatchSignoutResponse__PlayerMetadata         *message);
/* CMsgGameMatchSignoutResponse methods */
void   cmsg_game_match_signout_response__init
                     (CMsgGameMatchSignoutResponse         *message);
size_t cmsg_game_match_signout_response__get_packed_size
                     (const CMsgGameMatchSignoutResponse   *message);
size_t cmsg_game_match_signout_response__pack
                     (const CMsgGameMatchSignoutResponse   *message,
                      uint8_t             *out);
size_t cmsg_game_match_signout_response__pack_to_buffer
                     (const CMsgGameMatchSignoutResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameMatchSignoutResponse *
       cmsg_game_match_signout_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_match_signout_response__free_unpacked
                     (CMsgGameMatchSignoutResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgTimedRewardContainer methods */
void   cmsg_timed_reward_container__init
                     (CMsgTimedRewardContainer         *message);
size_t cmsg_timed_reward_container__get_packed_size
                     (const CMsgTimedRewardContainer   *message);
size_t cmsg_timed_reward_container__pack
                     (const CMsgTimedRewardContainer   *message,
                      uint8_t             *out);
size_t cmsg_timed_reward_container__pack_to_buffer
                     (const CMsgTimedRewardContainer   *message,
                      ProtobufCBuffer     *buffer);
CMsgTimedRewardContainer *
       cmsg_timed_reward_container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_timed_reward_container__free_unpacked
                     (CMsgTimedRewardContainer *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameMatchSignOutPermissionRequest methods */
void   cmsg_game_match_sign_out_permission_request__init
                     (CMsgGameMatchSignOutPermissionRequest         *message);
size_t cmsg_game_match_sign_out_permission_request__get_packed_size
                     (const CMsgGameMatchSignOutPermissionRequest   *message);
size_t cmsg_game_match_sign_out_permission_request__pack
                     (const CMsgGameMatchSignOutPermissionRequest   *message,
                      uint8_t             *out);
size_t cmsg_game_match_sign_out_permission_request__pack_to_buffer
                     (const CMsgGameMatchSignOutPermissionRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameMatchSignOutPermissionRequest *
       cmsg_game_match_sign_out_permission_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_match_sign_out_permission_request__free_unpacked
                     (CMsgGameMatchSignOutPermissionRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameMatchSignOutPermissionResponse methods */
void   cmsg_game_match_sign_out_permission_response__init
                     (CMsgGameMatchSignOutPermissionResponse         *message);
size_t cmsg_game_match_sign_out_permission_response__get_packed_size
                     (const CMsgGameMatchSignOutPermissionResponse   *message);
size_t cmsg_game_match_sign_out_permission_response__pack
                     (const CMsgGameMatchSignOutPermissionResponse   *message,
                      uint8_t             *out);
size_t cmsg_game_match_sign_out_permission_response__pack_to_buffer
                     (const CMsgGameMatchSignOutPermissionResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameMatchSignOutPermissionResponse *
       cmsg_game_match_sign_out_permission_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_match_sign_out_permission_response__free_unpacked
                     (CMsgGameMatchSignOutPermissionResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility methods */
void   cmsg_dotalive_scoreboard_update__team__player__hero_ability__init
                     (CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility         *message);
/* CMsgDOTALiveScoreboardUpdate__Team__Player methods */
void   cmsg_dotalive_scoreboard_update__team__player__init
                     (CMsgDOTALiveScoreboardUpdate__Team__Player         *message);
/* CMsgDOTALiveScoreboardUpdate__Team methods */
void   cmsg_dotalive_scoreboard_update__team__init
                     (CMsgDOTALiveScoreboardUpdate__Team         *message);
/* CMsgDOTALiveScoreboardUpdate methods */
void   cmsg_dotalive_scoreboard_update__init
                     (CMsgDOTALiveScoreboardUpdate         *message);
size_t cmsg_dotalive_scoreboard_update__get_packed_size
                     (const CMsgDOTALiveScoreboardUpdate   *message);
size_t cmsg_dotalive_scoreboard_update__pack
                     (const CMsgDOTALiveScoreboardUpdate   *message,
                      uint8_t             *out);
size_t cmsg_dotalive_scoreboard_update__pack_to_buffer
                     (const CMsgDOTALiveScoreboardUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALiveScoreboardUpdate *
       cmsg_dotalive_scoreboard_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalive_scoreboard_update__free_unpacked
                     (CMsgDOTALiveScoreboardUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestPlayerResources methods */
void   cmsg_dotarequest_player_resources__init
                     (CMsgDOTARequestPlayerResources         *message);
size_t cmsg_dotarequest_player_resources__get_packed_size
                     (const CMsgDOTARequestPlayerResources   *message);
size_t cmsg_dotarequest_player_resources__pack
                     (const CMsgDOTARequestPlayerResources   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_player_resources__pack_to_buffer
                     (const CMsgDOTARequestPlayerResources   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestPlayerResources *
       cmsg_dotarequest_player_resources__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_player_resources__free_unpacked
                     (CMsgDOTARequestPlayerResources *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestPlayerResourcesResponse methods */
void   cmsg_dotarequest_player_resources_response__init
                     (CMsgDOTARequestPlayerResourcesResponse         *message);
size_t cmsg_dotarequest_player_resources_response__get_packed_size
                     (const CMsgDOTARequestPlayerResourcesResponse   *message);
size_t cmsg_dotarequest_player_resources_response__pack
                     (const CMsgDOTARequestPlayerResourcesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_player_resources_response__pack_to_buffer
                     (const CMsgDOTARequestPlayerResourcesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestPlayerResourcesResponse *
       cmsg_dotarequest_player_resources_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_player_resources_response__free_unpacked
                     (CMsgDOTARequestPlayerResourcesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestBatchPlayerResources methods */
void   cmsg_dotarequest_batch_player_resources__init
                     (CMsgDOTARequestBatchPlayerResources         *message);
size_t cmsg_dotarequest_batch_player_resources__get_packed_size
                     (const CMsgDOTARequestBatchPlayerResources   *message);
size_t cmsg_dotarequest_batch_player_resources__pack
                     (const CMsgDOTARequestBatchPlayerResources   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_batch_player_resources__pack_to_buffer
                     (const CMsgDOTARequestBatchPlayerResources   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestBatchPlayerResources *
       cmsg_dotarequest_batch_player_resources__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_batch_player_resources__free_unpacked
                     (CMsgDOTARequestBatchPlayerResources *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestBatchPlayerResourcesResponse__Result methods */
void   cmsg_dotarequest_batch_player_resources_response__result__init
                     (CMsgDOTARequestBatchPlayerResourcesResponse__Result         *message);
/* CMsgDOTARequestBatchPlayerResourcesResponse methods */
void   cmsg_dotarequest_batch_player_resources_response__init
                     (CMsgDOTARequestBatchPlayerResourcesResponse         *message);
size_t cmsg_dotarequest_batch_player_resources_response__get_packed_size
                     (const CMsgDOTARequestBatchPlayerResourcesResponse   *message);
size_t cmsg_dotarequest_batch_player_resources_response__pack
                     (const CMsgDOTARequestBatchPlayerResourcesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_batch_player_resources_response__pack_to_buffer
                     (const CMsgDOTARequestBatchPlayerResourcesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestBatchPlayerResourcesResponse *
       cmsg_dotarequest_batch_player_resources_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_batch_player_resources_response__free_unpacked
                     (CMsgDOTARequestBatchPlayerResourcesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPlayerFailedToConnect methods */
void   cmsg_dotaplayer_failed_to_connect__init
                     (CMsgDOTAPlayerFailedToConnect         *message);
size_t cmsg_dotaplayer_failed_to_connect__get_packed_size
                     (const CMsgDOTAPlayerFailedToConnect   *message);
size_t cmsg_dotaplayer_failed_to_connect__pack
                     (const CMsgDOTAPlayerFailedToConnect   *message,
                      uint8_t             *out);
size_t cmsg_dotaplayer_failed_to_connect__pack_to_buffer
                     (const CMsgDOTAPlayerFailedToConnect   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPlayerFailedToConnect *
       cmsg_dotaplayer_failed_to_connect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaplayer_failed_to_connect__free_unpacked
                     (CMsgDOTAPlayerFailedToConnect *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToRelayConnect methods */
void   cmsg_gcto_relay_connect__init
                     (CMsgGCToRelayConnect         *message);
size_t cmsg_gcto_relay_connect__get_packed_size
                     (const CMsgGCToRelayConnect   *message);
size_t cmsg_gcto_relay_connect__pack
                     (const CMsgGCToRelayConnect   *message,
                      uint8_t             *out);
size_t cmsg_gcto_relay_connect__pack_to_buffer
                     (const CMsgGCToRelayConnect   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToRelayConnect *
       cmsg_gcto_relay_connect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_relay_connect__free_unpacked
                     (CMsgGCToRelayConnect *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCGCToLANServerRelayConnect methods */
void   cmsg_gcgcto_lanserver_relay_connect__init
                     (CMsgGCGCToLANServerRelayConnect         *message);
size_t cmsg_gcgcto_lanserver_relay_connect__get_packed_size
                     (const CMsgGCGCToLANServerRelayConnect   *message);
size_t cmsg_gcgcto_lanserver_relay_connect__pack
                     (const CMsgGCGCToLANServerRelayConnect   *message,
                      uint8_t             *out);
size_t cmsg_gcgcto_lanserver_relay_connect__pack_to_buffer
                     (const CMsgGCGCToLANServerRelayConnect   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCGCToLANServerRelayConnect *
       cmsg_gcgcto_lanserver_relay_connect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcgcto_lanserver_relay_connect__free_unpacked
                     (CMsgGCGCToLANServerRelayConnect *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToRelayConnectResponse methods */
void   cmsg_gcto_relay_connect_response__init
                     (CMsgGCToRelayConnectResponse         *message);
size_t cmsg_gcto_relay_connect_response__get_packed_size
                     (const CMsgGCToRelayConnectResponse   *message);
size_t cmsg_gcto_relay_connect_response__pack
                     (const CMsgGCToRelayConnectResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_relay_connect_response__pack_to_buffer
                     (const CMsgGCToRelayConnectResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToRelayConnectResponse *
       cmsg_gcto_relay_connect_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_relay_connect_response__free_unpacked
                     (CMsgGCToRelayConnectResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCBanStatusRequest methods */
void   cmsg_gcban_status_request__init
                     (CMsgGCBanStatusRequest         *message);
size_t cmsg_gcban_status_request__get_packed_size
                     (const CMsgGCBanStatusRequest   *message);
size_t cmsg_gcban_status_request__pack
                     (const CMsgGCBanStatusRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcban_status_request__pack_to_buffer
                     (const CMsgGCBanStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCBanStatusRequest *
       cmsg_gcban_status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcban_status_request__free_unpacked
                     (CMsgGCBanStatusRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCBanStatusResponse methods */
void   cmsg_gcban_status_response__init
                     (CMsgGCBanStatusResponse         *message);
size_t cmsg_gcban_status_response__get_packed_size
                     (const CMsgGCBanStatusResponse   *message);
size_t cmsg_gcban_status_response__pack
                     (const CMsgGCBanStatusResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcban_status_response__pack_to_buffer
                     (const CMsgGCBanStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCBanStatusResponse *
       cmsg_gcban_status_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcban_status_response__free_unpacked
                     (CMsgGCBanStatusResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgTournamentItemEvent methods */
void   cmsg_tournament_item_event__init
                     (CMsgTournamentItemEvent         *message);
size_t cmsg_tournament_item_event__get_packed_size
                     (const CMsgTournamentItemEvent   *message);
size_t cmsg_tournament_item_event__pack
                     (const CMsgTournamentItemEvent   *message,
                      uint8_t             *out);
size_t cmsg_tournament_item_event__pack_to_buffer
                     (const CMsgTournamentItemEvent   *message,
                      ProtobufCBuffer     *buffer);
CMsgTournamentItemEvent *
       cmsg_tournament_item_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_tournament_item_event__free_unpacked
                     (CMsgTournamentItemEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgTournamentItemEventResponse methods */
void   cmsg_tournament_item_event_response__init
                     (CMsgTournamentItemEventResponse         *message);
size_t cmsg_tournament_item_event_response__get_packed_size
                     (const CMsgTournamentItemEventResponse   *message);
size_t cmsg_tournament_item_event_response__pack
                     (const CMsgTournamentItemEventResponse   *message,
                      uint8_t             *out);
size_t cmsg_tournament_item_event_response__pack_to_buffer
                     (const CMsgTournamentItemEventResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgTournamentItemEventResponse *
       cmsg_tournament_item_event_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_tournament_item_event_response__free_unpacked
                     (CMsgTournamentItemEventResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgTeamFanfare methods */
void   cmsg_team_fanfare__init
                     (CMsgTeamFanfare         *message);
size_t cmsg_team_fanfare__get_packed_size
                     (const CMsgTeamFanfare   *message);
size_t cmsg_team_fanfare__pack
                     (const CMsgTeamFanfare   *message,
                      uint8_t             *out);
size_t cmsg_team_fanfare__pack_to_buffer
                     (const CMsgTeamFanfare   *message,
                      ProtobufCBuffer     *buffer);
CMsgTeamFanfare *
       cmsg_team_fanfare__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_team_fanfare__free_unpacked
                     (CMsgTeamFanfare *message,
                      ProtobufCAllocator *allocator);
/* CMsgResponseTeamFanfare methods */
void   cmsg_response_team_fanfare__init
                     (CMsgResponseTeamFanfare         *message);
size_t cmsg_response_team_fanfare__get_packed_size
                     (const CMsgResponseTeamFanfare   *message);
size_t cmsg_response_team_fanfare__pack
                     (const CMsgResponseTeamFanfare   *message,
                      uint8_t             *out);
size_t cmsg_response_team_fanfare__pack_to_buffer
                     (const CMsgResponseTeamFanfare   *message,
                      ProtobufCBuffer     *buffer);
CMsgResponseTeamFanfare *
       cmsg_response_team_fanfare__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_response_team_fanfare__free_unpacked
                     (CMsgResponseTeamFanfare *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameServerUploadSaveGame methods */
void   cmsg_game_server_upload_save_game__init
                     (CMsgGameServerUploadSaveGame         *message);
size_t cmsg_game_server_upload_save_game__get_packed_size
                     (const CMsgGameServerUploadSaveGame   *message);
size_t cmsg_game_server_upload_save_game__pack
                     (const CMsgGameServerUploadSaveGame   *message,
                      uint8_t             *out);
size_t cmsg_game_server_upload_save_game__pack_to_buffer
                     (const CMsgGameServerUploadSaveGame   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameServerUploadSaveGame *
       cmsg_game_server_upload_save_game__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_server_upload_save_game__free_unpacked
                     (CMsgGameServerUploadSaveGame *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameServerSaveGameResult methods */
void   cmsg_game_server_save_game_result__init
                     (CMsgGameServerSaveGameResult         *message);
size_t cmsg_game_server_save_game_result__get_packed_size
                     (const CMsgGameServerSaveGameResult   *message);
size_t cmsg_game_server_save_game_result__pack
                     (const CMsgGameServerSaveGameResult   *message,
                      uint8_t             *out);
size_t cmsg_game_server_save_game_result__pack_to_buffer
                     (const CMsgGameServerSaveGameResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameServerSaveGameResult *
       cmsg_game_server_save_game_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_server_save_game_result__free_unpacked
                     (CMsgGameServerSaveGameResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameServerGetLoadGame methods */
void   cmsg_game_server_get_load_game__init
                     (CMsgGameServerGetLoadGame         *message);
size_t cmsg_game_server_get_load_game__get_packed_size
                     (const CMsgGameServerGetLoadGame   *message);
size_t cmsg_game_server_get_load_game__pack
                     (const CMsgGameServerGetLoadGame   *message,
                      uint8_t             *out);
size_t cmsg_game_server_get_load_game__pack_to_buffer
                     (const CMsgGameServerGetLoadGame   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameServerGetLoadGame *
       cmsg_game_server_get_load_game__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_server_get_load_game__free_unpacked
                     (CMsgGameServerGetLoadGame *message,
                      ProtobufCAllocator *allocator);
/* CMsgGameServerGetLoadGameResult methods */
void   cmsg_game_server_get_load_game_result__init
                     (CMsgGameServerGetLoadGameResult         *message);
size_t cmsg_game_server_get_load_game_result__get_packed_size
                     (const CMsgGameServerGetLoadGameResult   *message);
size_t cmsg_game_server_get_load_game_result__pack
                     (const CMsgGameServerGetLoadGameResult   *message,
                      uint8_t             *out);
size_t cmsg_game_server_get_load_game_result__pack_to_buffer
                     (const CMsgGameServerGetLoadGameResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgGameServerGetLoadGameResult *
       cmsg_game_server_get_load_game_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_game_server_get_load_game_result__free_unpacked
                     (CMsgGameServerGetLoadGameResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGenerateDiretidePrizeList methods */
void   cmsg_dotagenerate_diretide_prize_list__init
                     (CMsgDOTAGenerateDiretidePrizeList         *message);
size_t cmsg_dotagenerate_diretide_prize_list__get_packed_size
                     (const CMsgDOTAGenerateDiretidePrizeList   *message);
size_t cmsg_dotagenerate_diretide_prize_list__pack
                     (const CMsgDOTAGenerateDiretidePrizeList   *message,
                      uint8_t             *out);
size_t cmsg_dotagenerate_diretide_prize_list__pack_to_buffer
                     (const CMsgDOTAGenerateDiretidePrizeList   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGenerateDiretidePrizeList *
       cmsg_dotagenerate_diretide_prize_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotagenerate_diretide_prize_list__free_unpacked
                     (CMsgDOTAGenerateDiretidePrizeList *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGenerateDiretidePrizeListResponse methods */
void   cmsg_dotagenerate_diretide_prize_list_response__init
                     (CMsgDOTAGenerateDiretidePrizeListResponse         *message);
size_t cmsg_dotagenerate_diretide_prize_list_response__get_packed_size
                     (const CMsgDOTAGenerateDiretidePrizeListResponse   *message);
size_t cmsg_dotagenerate_diretide_prize_list_response__pack
                     (const CMsgDOTAGenerateDiretidePrizeListResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotagenerate_diretide_prize_list_response__pack_to_buffer
                     (const CMsgDOTAGenerateDiretidePrizeListResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGenerateDiretidePrizeListResponse *
       cmsg_dotagenerate_diretide_prize_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotagenerate_diretide_prize_list_response__free_unpacked
                     (CMsgDOTAGenerateDiretidePrizeListResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARewardDiretidePrizes methods */
void   cmsg_dotareward_diretide_prizes__init
                     (CMsgDOTARewardDiretidePrizes         *message);
size_t cmsg_dotareward_diretide_prizes__get_packed_size
                     (const CMsgDOTARewardDiretidePrizes   *message);
size_t cmsg_dotareward_diretide_prizes__pack
                     (const CMsgDOTARewardDiretidePrizes   *message,
                      uint8_t             *out);
size_t cmsg_dotareward_diretide_prizes__pack_to_buffer
                     (const CMsgDOTARewardDiretidePrizes   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARewardDiretidePrizes *
       cmsg_dotareward_diretide_prizes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareward_diretide_prizes__free_unpacked
                     (CMsgDOTARewardDiretidePrizes *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTADiretidePrizesRewardedResponse methods */
void   cmsg_dotadiretide_prizes_rewarded_response__init
                     (CMsgDOTADiretidePrizesRewardedResponse         *message);
size_t cmsg_dotadiretide_prizes_rewarded_response__get_packed_size
                     (const CMsgDOTADiretidePrizesRewardedResponse   *message);
size_t cmsg_dotadiretide_prizes_rewarded_response__pack
                     (const CMsgDOTADiretidePrizesRewardedResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotadiretide_prizes_rewarded_response__pack_to_buffer
                     (const CMsgDOTADiretidePrizesRewardedResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTADiretidePrizesRewardedResponse *
       cmsg_dotadiretide_prizes_rewarded_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotadiretide_prizes_rewarded_response__free_unpacked
                     (CMsgDOTADiretidePrizesRewardedResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAAwardEventPoints__AwardPoints methods */
void   cmsg_dotaaward_event_points__award_points__init
                     (CMsgDOTAAwardEventPoints__AwardPoints         *message);
/* CMsgDOTAAwardEventPoints methods */
void   cmsg_dotaaward_event_points__init
                     (CMsgDOTAAwardEventPoints         *message);
size_t cmsg_dotaaward_event_points__get_packed_size
                     (const CMsgDOTAAwardEventPoints   *message);
size_t cmsg_dotaaward_event_points__pack
                     (const CMsgDOTAAwardEventPoints   *message,
                      uint8_t             *out);
size_t cmsg_dotaaward_event_points__pack_to_buffer
                     (const CMsgDOTAAwardEventPoints   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAAwardEventPoints *
       cmsg_dotaaward_event_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaaward_event_points__free_unpacked
                     (CMsgDOTAAwardEventPoints *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops methods */
void   cmsg_server_to_gcsignout_award_additional_drops__additional_drops__init
                     (CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops         *message);
/* CMsgServerToGCSignoutAwardAdditionalDrops methods */
void   cmsg_server_to_gcsignout_award_additional_drops__init
                     (CMsgServerToGCSignoutAwardAdditionalDrops         *message);
size_t cmsg_server_to_gcsignout_award_additional_drops__get_packed_size
                     (const CMsgServerToGCSignoutAwardAdditionalDrops   *message);
size_t cmsg_server_to_gcsignout_award_additional_drops__pack
                     (const CMsgServerToGCSignoutAwardAdditionalDrops   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcsignout_award_additional_drops__pack_to_buffer
                     (const CMsgServerToGCSignoutAwardAdditionalDrops   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCSignoutAwardAdditionalDrops *
       cmsg_server_to_gcsignout_award_additional_drops__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcsignout_award_additional_drops__free_unpacked
                     (CMsgServerToGCSignoutAwardAdditionalDrops *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFrostivusTimeElapsed__User methods */
void   cmsg_dotafrostivus_time_elapsed__user__init
                     (CMsgDOTAFrostivusTimeElapsed__User         *message);
/* CMsgDOTAFrostivusTimeElapsed methods */
void   cmsg_dotafrostivus_time_elapsed__init
                     (CMsgDOTAFrostivusTimeElapsed         *message);
size_t cmsg_dotafrostivus_time_elapsed__get_packed_size
                     (const CMsgDOTAFrostivusTimeElapsed   *message);
size_t cmsg_dotafrostivus_time_elapsed__pack
                     (const CMsgDOTAFrostivusTimeElapsed   *message,
                      uint8_t             *out);
size_t cmsg_dotafrostivus_time_elapsed__pack_to_buffer
                     (const CMsgDOTAFrostivusTimeElapsed   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFrostivusTimeElapsed *
       cmsg_dotafrostivus_time_elapsed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafrostivus_time_elapsed__free_unpacked
                     (CMsgDOTAFrostivusTimeElapsed *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerPingRequest methods */
void   cmsg_gcto_server_ping_request__init
                     (CMsgGCToServerPingRequest         *message);
size_t cmsg_gcto_server_ping_request__get_packed_size
                     (const CMsgGCToServerPingRequest   *message);
size_t cmsg_gcto_server_ping_request__pack
                     (const CMsgGCToServerPingRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_ping_request__pack_to_buffer
                     (const CMsgGCToServerPingRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerPingRequest *
       cmsg_gcto_server_ping_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_ping_request__free_unpacked
                     (CMsgGCToServerPingRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerPingResponse methods */
void   cmsg_gcto_server_ping_response__init
                     (CMsgGCToServerPingResponse         *message);
size_t cmsg_gcto_server_ping_response__get_packed_size
                     (const CMsgGCToServerPingResponse   *message);
size_t cmsg_gcto_server_ping_response__pack
                     (const CMsgGCToServerPingResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_ping_response__pack_to_buffer
                     (const CMsgGCToServerPingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerPingResponse *
       cmsg_gcto_server_ping_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_ping_response__free_unpacked
                     (CMsgGCToServerPingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerConsoleCommand methods */
void   cmsg_gcto_server_console_command__init
                     (CMsgGCToServerConsoleCommand         *message);
size_t cmsg_gcto_server_console_command__get_packed_size
                     (const CMsgGCToServerConsoleCommand   *message);
size_t cmsg_gcto_server_console_command__pack
                     (const CMsgGCToServerConsoleCommand   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_console_command__pack_to_buffer
                     (const CMsgGCToServerConsoleCommand   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerConsoleCommand *
       cmsg_gcto_server_console_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_console_command__free_unpacked
                     (CMsgGCToServerConsoleCommand *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerGetEventPoints methods */
void   cmsg_server_get_event_points__init
                     (CMsgServerGetEventPoints         *message);
size_t cmsg_server_get_event_points__get_packed_size
                     (const CMsgServerGetEventPoints   *message);
size_t cmsg_server_get_event_points__pack
                     (const CMsgServerGetEventPoints   *message,
                      uint8_t             *out);
size_t cmsg_server_get_event_points__pack_to_buffer
                     (const CMsgServerGetEventPoints   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerGetEventPoints *
       cmsg_server_get_event_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_get_event_points__free_unpacked
                     (CMsgServerGetEventPoints *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerGetEventPointsResponse__Points methods */
void   cmsg_server_get_event_points_response__points__init
                     (CMsgServerGetEventPointsResponse__Points         *message);
/* CMsgServerGetEventPointsResponse methods */
void   cmsg_server_get_event_points_response__init
                     (CMsgServerGetEventPointsResponse         *message);
size_t cmsg_server_get_event_points_response__get_packed_size
                     (const CMsgServerGetEventPointsResponse   *message);
size_t cmsg_server_get_event_points_response__pack
                     (const CMsgServerGetEventPointsResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_get_event_points_response__pack_to_buffer
                     (const CMsgServerGetEventPointsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerGetEventPointsResponse *
       cmsg_server_get_event_points_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_get_event_points_response__free_unpacked
                     (CMsgServerGetEventPointsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerGrantSurveyPermission__Survey methods */
void   cmsg_server_grant_survey_permission__survey__init
                     (CMsgServerGrantSurveyPermission__Survey         *message);
/* CMsgServerGrantSurveyPermission methods */
void   cmsg_server_grant_survey_permission__init
                     (CMsgServerGrantSurveyPermission         *message);
size_t cmsg_server_grant_survey_permission__get_packed_size
                     (const CMsgServerGrantSurveyPermission   *message);
size_t cmsg_server_grant_survey_permission__pack
                     (const CMsgServerGrantSurveyPermission   *message,
                      uint8_t             *out);
size_t cmsg_server_grant_survey_permission__pack_to_buffer
                     (const CMsgServerGrantSurveyPermission   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerGrantSurveyPermission *
       cmsg_server_grant_survey_permission__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_grant_survey_permission__free_unpacked
                     (CMsgServerGrantSurveyPermission *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerGrantSurveyPermissionResponse methods */
void   cmsg_server_grant_survey_permission_response__init
                     (CMsgServerGrantSurveyPermissionResponse         *message);
size_t cmsg_server_grant_survey_permission_response__get_packed_size
                     (const CMsgServerGrantSurveyPermissionResponse   *message);
size_t cmsg_server_grant_survey_permission_response__pack
                     (const CMsgServerGrantSurveyPermissionResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_grant_survey_permission_response__pack_to_buffer
                     (const CMsgServerGrantSurveyPermissionResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerGrantSurveyPermissionResponse *
       cmsg_server_grant_survey_permission_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_grant_survey_permission_response__free_unpacked
                     (CMsgServerGrantSurveyPermissionResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCMatchConnectionStats__Player methods */
void   cmsg_server_to_gcmatch_connection_stats__player__init
                     (CMsgServerToGCMatchConnectionStats__Player         *message);
/* CMsgServerToGCMatchConnectionStats methods */
void   cmsg_server_to_gcmatch_connection_stats__init
                     (CMsgServerToGCMatchConnectionStats         *message);
size_t cmsg_server_to_gcmatch_connection_stats__get_packed_size
                     (const CMsgServerToGCMatchConnectionStats   *message);
size_t cmsg_server_to_gcmatch_connection_stats__pack
                     (const CMsgServerToGCMatchConnectionStats   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcmatch_connection_stats__pack_to_buffer
                     (const CMsgServerToGCMatchConnectionStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCMatchConnectionStats *
       cmsg_server_to_gcmatch_connection_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcmatch_connection_stats__free_unpacked
                     (CMsgServerToGCMatchConnectionStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerGCUpdateSpectatorCount methods */
void   cmsg_server_gcupdate_spectator_count__init
                     (CMsgServerGCUpdateSpectatorCount         *message);
size_t cmsg_server_gcupdate_spectator_count__get_packed_size
                     (const CMsgServerGCUpdateSpectatorCount   *message);
size_t cmsg_server_gcupdate_spectator_count__pack
                     (const CMsgServerGCUpdateSpectatorCount   *message,
                      uint8_t             *out);
size_t cmsg_server_gcupdate_spectator_count__pack_to_buffer
                     (const CMsgServerGCUpdateSpectatorCount   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerGCUpdateSpectatorCount *
       cmsg_server_gcupdate_spectator_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_gcupdate_spectator_count__free_unpacked
                     (CMsgServerGCUpdateSpectatorCount *message,
                      ProtobufCAllocator *allocator);
/* CSerializedCombatLog__Dictionary__DictString methods */
void   cserialized_combat_log__dictionary__dict_string__init
                     (CSerializedCombatLog__Dictionary__DictString         *message);
/* CSerializedCombatLog__Dictionary methods */
void   cserialized_combat_log__dictionary__init
                     (CSerializedCombatLog__Dictionary         *message);
/* CSerializedCombatLog methods */
void   cserialized_combat_log__init
                     (CSerializedCombatLog         *message);
size_t cserialized_combat_log__get_packed_size
                     (const CSerializedCombatLog   *message);
size_t cserialized_combat_log__pack
                     (const CSerializedCombatLog   *message,
                      uint8_t             *out);
size_t cserialized_combat_log__pack_to_buffer
                     (const CSerializedCombatLog   *message,
                      ProtobufCBuffer     *buffer);
CSerializedCombatLog *
       cserialized_combat_log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cserialized_combat_log__free_unpacked
                     (CSerializedCombatLog *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCGetAdditionalEquips methods */
void   cmsg_server_to_gcget_additional_equips__init
                     (CMsgServerToGCGetAdditionalEquips         *message);
size_t cmsg_server_to_gcget_additional_equips__get_packed_size
                     (const CMsgServerToGCGetAdditionalEquips   *message);
size_t cmsg_server_to_gcget_additional_equips__pack
                     (const CMsgServerToGCGetAdditionalEquips   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcget_additional_equips__pack_to_buffer
                     (const CMsgServerToGCGetAdditionalEquips   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCGetAdditionalEquips *
       cmsg_server_to_gcget_additional_equips__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcget_additional_equips__free_unpacked
                     (CMsgServerToGCGetAdditionalEquips *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips methods */
void   cmsg_server_to_gcget_additional_equips_response__cuser_equips__init
                     (CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips         *message);
/* CMsgServerToGCGetAdditionalEquipsResponse methods */
void   cmsg_server_to_gcget_additional_equips_response__init
                     (CMsgServerToGCGetAdditionalEquipsResponse         *message);
size_t cmsg_server_to_gcget_additional_equips_response__get_packed_size
                     (const CMsgServerToGCGetAdditionalEquipsResponse   *message);
size_t cmsg_server_to_gcget_additional_equips_response__pack
                     (const CMsgServerToGCGetAdditionalEquipsResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcget_additional_equips_response__pack_to_buffer
                     (const CMsgServerToGCGetAdditionalEquipsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCGetAdditionalEquipsResponse *
       cmsg_server_to_gcget_additional_equips_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcget_additional_equips_response__free_unpacked
                     (CMsgServerToGCGetAdditionalEquipsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCGetProfileCard methods */
void   cmsg_server_to_gcget_profile_card__init
                     (CMsgServerToGCGetProfileCard         *message);
size_t cmsg_server_to_gcget_profile_card__get_packed_size
                     (const CMsgServerToGCGetProfileCard   *message);
size_t cmsg_server_to_gcget_profile_card__pack
                     (const CMsgServerToGCGetProfileCard   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcget_profile_card__pack_to_buffer
                     (const CMsgServerToGCGetProfileCard   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCGetProfileCard *
       cmsg_server_to_gcget_profile_card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcget_profile_card__free_unpacked
                     (CMsgServerToGCGetProfileCard *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCGetProfileCardResponse methods */
void   cmsg_server_to_gcget_profile_card_response__init
                     (CMsgServerToGCGetProfileCardResponse         *message);
size_t cmsg_server_to_gcget_profile_card_response__get_packed_size
                     (const CMsgServerToGCGetProfileCardResponse   *message);
size_t cmsg_server_to_gcget_profile_card_response__pack
                     (const CMsgServerToGCGetProfileCardResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcget_profile_card_response__pack_to_buffer
                     (const CMsgServerToGCGetProfileCardResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCGetProfileCardResponse *
       cmsg_server_to_gcget_profile_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcget_profile_card_response__free_unpacked
                     (CMsgServerToGCGetProfileCardResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCVictoryPredictions__Record methods */
void   cmsg_server_to_gcvictory_predictions__record__init
                     (CMsgServerToGCVictoryPredictions__Record         *message);
/* CMsgServerToGCVictoryPredictions methods */
void   cmsg_server_to_gcvictory_predictions__init
                     (CMsgServerToGCVictoryPredictions         *message);
size_t cmsg_server_to_gcvictory_predictions__get_packed_size
                     (const CMsgServerToGCVictoryPredictions   *message);
size_t cmsg_server_to_gcvictory_predictions__pack
                     (const CMsgServerToGCVictoryPredictions   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcvictory_predictions__pack_to_buffer
                     (const CMsgServerToGCVictoryPredictions   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCVictoryPredictions *
       cmsg_server_to_gcvictory_predictions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcvictory_predictions__free_unpacked
                     (CMsgServerToGCVictoryPredictions *message,
                      ProtobufCAllocator *allocator);
/* CMsgSuspiciousActivity methods */
void   cmsg_suspicious_activity__init
                     (CMsgSuspiciousActivity         *message);
size_t cmsg_suspicious_activity__get_packed_size
                     (const CMsgSuspiciousActivity   *message);
size_t cmsg_suspicious_activity__pack
                     (const CMsgSuspiciousActivity   *message,
                      uint8_t             *out);
size_t cmsg_suspicious_activity__pack_to_buffer
                     (const CMsgSuspiciousActivity   *message,
                      ProtobufCBuffer     *buffer);
CMsgSuspiciousActivity *
       cmsg_suspicious_activity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_suspicious_activity__free_unpacked
                     (CMsgSuspiciousActivity *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCRequestStatus methods */
void   cmsg_server_to_gcrequest_status__init
                     (CMsgServerToGCRequestStatus         *message);
size_t cmsg_server_to_gcrequest_status__get_packed_size
                     (const CMsgServerToGCRequestStatus   *message);
size_t cmsg_server_to_gcrequest_status__pack
                     (const CMsgServerToGCRequestStatus   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcrequest_status__pack_to_buffer
                     (const CMsgServerToGCRequestStatus   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCRequestStatus *
       cmsg_server_to_gcrequest_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcrequest_status__free_unpacked
                     (CMsgServerToGCRequestStatus *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCRequestStatusResponse methods */
void   cmsg_server_to_gcrequest_status__response__init
                     (CMsgServerToGCRequestStatusResponse         *message);
size_t cmsg_server_to_gcrequest_status__response__get_packed_size
                     (const CMsgServerToGCRequestStatusResponse   *message);
size_t cmsg_server_to_gcrequest_status__response__pack
                     (const CMsgServerToGCRequestStatusResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcrequest_status__response__pack_to_buffer
                     (const CMsgServerToGCRequestStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCRequestStatusResponse *
       cmsg_server_to_gcrequest_status__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcrequest_status__response__free_unpacked
                     (CMsgServerToGCRequestStatusResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutAssassinMiniGameInfo methods */
void   cmsg_sign_out_assassin_mini_game_info__init
                     (CMsgSignOutAssassinMiniGameInfo         *message);
size_t cmsg_sign_out_assassin_mini_game_info__get_packed_size
                     (const CMsgSignOutAssassinMiniGameInfo   *message);
size_t cmsg_sign_out_assassin_mini_game_info__pack
                     (const CMsgSignOutAssassinMiniGameInfo   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_assassin_mini_game_info__pack_to_buffer
                     (const CMsgSignOutAssassinMiniGameInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutAssassinMiniGameInfo *
       cmsg_sign_out_assassin_mini_game_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_assassin_mini_game_info__free_unpacked
                     (CMsgSignOutAssassinMiniGameInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCGetIngameEventData methods */
void   cmsg_server_to_gcget_ingame_event_data__init
                     (CMsgServerToGCGetIngameEventData         *message);
size_t cmsg_server_to_gcget_ingame_event_data__get_packed_size
                     (const CMsgServerToGCGetIngameEventData   *message);
size_t cmsg_server_to_gcget_ingame_event_data__pack
                     (const CMsgServerToGCGetIngameEventData   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcget_ingame_event_data__pack_to_buffer
                     (const CMsgServerToGCGetIngameEventData   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCGetIngameEventData *
       cmsg_server_to_gcget_ingame_event_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcget_ingame_event_data__free_unpacked
                     (CMsgServerToGCGetIngameEventData *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerIngameEventDataOraclePA methods */
void   cmsg_gcto_server_ingame_event_data_oracle_pa__init
                     (CMsgGCToServerIngameEventDataOraclePA         *message);
size_t cmsg_gcto_server_ingame_event_data_oracle_pa__get_packed_size
                     (const CMsgGCToServerIngameEventDataOraclePA   *message);
size_t cmsg_gcto_server_ingame_event_data_oracle_pa__pack
                     (const CMsgGCToServerIngameEventDataOraclePA   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_ingame_event_data_oracle_pa__pack_to_buffer
                     (const CMsgGCToServerIngameEventDataOraclePA   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerIngameEventDataOraclePA *
       cmsg_gcto_server_ingame_event_data_oracle_pa__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_ingame_event_data_oracle_pa__free_unpacked
                     (CMsgGCToServerIngameEventDataOraclePA *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCKillSummaries__KillSummary methods */
void   cmsg_server_to_gckill_summaries__kill_summary__init
                     (CMsgServerToGCKillSummaries__KillSummary         *message);
/* CMsgServerToGCKillSummaries methods */
void   cmsg_server_to_gckill_summaries__init
                     (CMsgServerToGCKillSummaries         *message);
size_t cmsg_server_to_gckill_summaries__get_packed_size
                     (const CMsgServerToGCKillSummaries   *message);
size_t cmsg_server_to_gckill_summaries__pack
                     (const CMsgServerToGCKillSummaries   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gckill_summaries__pack_to_buffer
                     (const CMsgServerToGCKillSummaries   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCKillSummaries *
       cmsg_server_to_gckill_summaries__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gckill_summaries__free_unpacked
                     (CMsgServerToGCKillSummaries *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerPredictionResult__Prediction methods */
void   cmsg_gcto_server_prediction_result__prediction__init
                     (CMsgGCToServerPredictionResult__Prediction         *message);
/* CMsgGCToServerPredictionResult methods */
void   cmsg_gcto_server_prediction_result__init
                     (CMsgGCToServerPredictionResult         *message);
size_t cmsg_gcto_server_prediction_result__get_packed_size
                     (const CMsgGCToServerPredictionResult   *message);
size_t cmsg_gcto_server_prediction_result__pack
                     (const CMsgGCToServerPredictionResult   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_prediction_result__pack_to_buffer
                     (const CMsgGCToServerPredictionResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerPredictionResult *
       cmsg_gcto_server_prediction_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_prediction_result__free_unpacked
                     (CMsgGCToServerPredictionResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCLockCharmTrading methods */
void   cmsg_server_to_gclock_charm_trading__init
                     (CMsgServerToGCLockCharmTrading         *message);
size_t cmsg_server_to_gclock_charm_trading__get_packed_size
                     (const CMsgServerToGCLockCharmTrading   *message);
size_t cmsg_server_to_gclock_charm_trading__pack
                     (const CMsgServerToGCLockCharmTrading   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gclock_charm_trading__pack_to_buffer
                     (const CMsgServerToGCLockCharmTrading   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCLockCharmTrading *
       cmsg_server_to_gclock_charm_trading__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gclock_charm_trading__free_unpacked
                     (CMsgServerToGCLockCharmTrading *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutUpdatePlayerChallenge__Challenge methods */
void   cmsg_sign_out_update_player_challenge__challenge__init
                     (CMsgSignOutUpdatePlayerChallenge__Challenge         *message);
/* CMsgSignOutUpdatePlayerChallenge methods */
void   cmsg_sign_out_update_player_challenge__init
                     (CMsgSignOutUpdatePlayerChallenge         *message);
size_t cmsg_sign_out_update_player_challenge__get_packed_size
                     (const CMsgSignOutUpdatePlayerChallenge   *message);
size_t cmsg_sign_out_update_player_challenge__pack
                     (const CMsgSignOutUpdatePlayerChallenge   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_update_player_challenge__pack_to_buffer
                     (const CMsgSignOutUpdatePlayerChallenge   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutUpdatePlayerChallenge *
       cmsg_sign_out_update_player_challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_update_player_challenge__free_unpacked
                     (CMsgSignOutUpdatePlayerChallenge *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCRerollPlayerChallenge methods */
void   cmsg_server_to_gcreroll_player_challenge__init
                     (CMsgServerToGCRerollPlayerChallenge         *message);
size_t cmsg_server_to_gcreroll_player_challenge__get_packed_size
                     (const CMsgServerToGCRerollPlayerChallenge   *message);
size_t cmsg_server_to_gcreroll_player_challenge__pack
                     (const CMsgServerToGCRerollPlayerChallenge   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcreroll_player_challenge__pack_to_buffer
                     (const CMsgServerToGCRerollPlayerChallenge   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCRerollPlayerChallenge *
       cmsg_server_to_gcreroll_player_challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcreroll_player_challenge__free_unpacked
                     (CMsgServerToGCRerollPlayerChallenge *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCHoldEventPoints__HoldRequest methods */
void   cmsg_server_to_gchold_event_points__hold_request__init
                     (CMsgServerToGCHoldEventPoints__HoldRequest         *message);
/* CMsgServerToGCHoldEventPoints methods */
void   cmsg_server_to_gchold_event_points__init
                     (CMsgServerToGCHoldEventPoints         *message);
size_t cmsg_server_to_gchold_event_points__get_packed_size
                     (const CMsgServerToGCHoldEventPoints   *message);
size_t cmsg_server_to_gchold_event_points__pack
                     (const CMsgServerToGCHoldEventPoints   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gchold_event_points__pack_to_buffer
                     (const CMsgServerToGCHoldEventPoints   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCHoldEventPoints *
       cmsg_server_to_gchold_event_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gchold_event_points__free_unpacked
                     (CMsgServerToGCHoldEventPoints *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutReleaseEventPointHolds methods */
void   cmsg_sign_out_release_event_point_holds__init
                     (CMsgSignOutReleaseEventPointHolds         *message);
size_t cmsg_sign_out_release_event_point_holds__get_packed_size
                     (const CMsgSignOutReleaseEventPointHolds   *message);
size_t cmsg_sign_out_release_event_point_holds__pack
                     (const CMsgSignOutReleaseEventPointHolds   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_release_event_point_holds__pack_to_buffer
                     (const CMsgSignOutReleaseEventPointHolds   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutReleaseEventPointHolds *
       cmsg_sign_out_release_event_point_holds__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_release_event_point_holds__free_unpacked
                     (CMsgSignOutReleaseEventPointHolds *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerUpdateBroadcastCheers methods */
void   cmsg_gcto_server_update_broadcast_cheers__init
                     (CMsgGCToServerUpdateBroadcastCheers         *message);
size_t cmsg_gcto_server_update_broadcast_cheers__get_packed_size
                     (const CMsgGCToServerUpdateBroadcastCheers   *message);
size_t cmsg_gcto_server_update_broadcast_cheers__pack
                     (const CMsgGCToServerUpdateBroadcastCheers   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_update_broadcast_cheers__pack_to_buffer
                     (const CMsgGCToServerUpdateBroadcastCheers   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerUpdateBroadcastCheers *
       cmsg_gcto_server_update_broadcast_cheers__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_update_broadcast_cheers__free_unpacked
                     (CMsgGCToServerUpdateBroadcastCheers *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutWagerStats__Player methods */
void   cmsg_sign_out_wager_stats__player__init
                     (CMsgSignOutWagerStats__Player         *message);
/* CMsgSignOutWagerStats methods */
void   cmsg_sign_out_wager_stats__init
                     (CMsgSignOutWagerStats         *message);
size_t cmsg_sign_out_wager_stats__get_packed_size
                     (const CMsgSignOutWagerStats   *message);
size_t cmsg_sign_out_wager_stats__pack
                     (const CMsgSignOutWagerStats   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_wager_stats__pack_to_buffer
                     (const CMsgSignOutWagerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutWagerStats *
       cmsg_sign_out_wager_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_wager_stats__free_unpacked
                     (CMsgSignOutWagerStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutXPCoins__Player methods */
void   cmsg_sign_out_xpcoins__player__init
                     (CMsgSignOutXPCoins__Player         *message);
/* CMsgSignOutXPCoins methods */
void   cmsg_sign_out_xpcoins__init
                     (CMsgSignOutXPCoins         *message);
size_t cmsg_sign_out_xpcoins__get_packed_size
                     (const CMsgSignOutXPCoins   *message);
size_t cmsg_sign_out_xpcoins__pack
                     (const CMsgSignOutXPCoins   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_xpcoins__pack_to_buffer
                     (const CMsgSignOutXPCoins   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutXPCoins *
       cmsg_sign_out_xpcoins__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_xpcoins__free_unpacked
                     (CMsgSignOutXPCoins *message,
                      ProtobufCAllocator *allocator);
/* CMsgSignOutCommunityGoalProgress__EventGoalIncrement methods */
void   cmsg_sign_out_community_goal_progress__event_goal_increment__init
                     (CMsgSignOutCommunityGoalProgress__EventGoalIncrement         *message);
/* CMsgSignOutCommunityGoalProgress methods */
void   cmsg_sign_out_community_goal_progress__init
                     (CMsgSignOutCommunityGoalProgress         *message);
size_t cmsg_sign_out_community_goal_progress__get_packed_size
                     (const CMsgSignOutCommunityGoalProgress   *message);
size_t cmsg_sign_out_community_goal_progress__pack
                     (const CMsgSignOutCommunityGoalProgress   *message,
                      uint8_t             *out);
size_t cmsg_sign_out_community_goal_progress__pack_to_buffer
                     (const CMsgSignOutCommunityGoalProgress   *message,
                      ProtobufCBuffer     *buffer);
CMsgSignOutCommunityGoalProgress *
       cmsg_sign_out_community_goal_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_sign_out_community_goal_progress__free_unpacked
                     (CMsgSignOutCommunityGoalProgress *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCPostMatchTip methods */
void   cmsg_server_to_gcpost_match_tip__init
                     (CMsgServerToGCPostMatchTip         *message);
size_t cmsg_server_to_gcpost_match_tip__get_packed_size
                     (const CMsgServerToGCPostMatchTip   *message);
size_t cmsg_server_to_gcpost_match_tip__pack
                     (const CMsgServerToGCPostMatchTip   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcpost_match_tip__pack_to_buffer
                     (const CMsgServerToGCPostMatchTip   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCPostMatchTip *
       cmsg_server_to_gcpost_match_tip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcpost_match_tip__free_unpacked
                     (CMsgServerToGCPostMatchTip *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCPostMatchTipResponse methods */
void   cmsg_server_to_gcpost_match_tip_response__init
                     (CMsgServerToGCPostMatchTipResponse         *message);
size_t cmsg_server_to_gcpost_match_tip_response__get_packed_size
                     (const CMsgServerToGCPostMatchTipResponse   *message);
size_t cmsg_server_to_gcpost_match_tip_response__pack
                     (const CMsgServerToGCPostMatchTipResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcpost_match_tip_response__pack_to_buffer
                     (const CMsgServerToGCPostMatchTipResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCPostMatchTipResponse *
       cmsg_server_to_gcpost_match_tip_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcpost_match_tip_response__free_unpacked
                     (CMsgServerToGCPostMatchTipResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCStartCompendiumInGamePredictions methods */
void   cmsg_server_to_gcstart_compendium_in_game_predictions__init
                     (CMsgServerToGCStartCompendiumInGamePredictions         *message);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions__get_packed_size
                     (const CMsgServerToGCStartCompendiumInGamePredictions   *message);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions__pack
                     (const CMsgServerToGCStartCompendiumInGamePredictions   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions__pack_to_buffer
                     (const CMsgServerToGCStartCompendiumInGamePredictions   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCStartCompendiumInGamePredictions *
       cmsg_server_to_gcstart_compendium_in_game_predictions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcstart_compendium_in_game_predictions__free_unpacked
                     (CMsgServerToGCStartCompendiumInGamePredictions *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCStartCompendiumInGamePredictionsResponse methods */
void   cmsg_server_to_gcstart_compendium_in_game_predictions_response__init
                     (CMsgServerToGCStartCompendiumInGamePredictionsResponse         *message);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions_response__get_packed_size
                     (const CMsgServerToGCStartCompendiumInGamePredictionsResponse   *message);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions_response__pack
                     (const CMsgServerToGCStartCompendiumInGamePredictionsResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcstart_compendium_in_game_predictions_response__pack_to_buffer
                     (const CMsgServerToGCStartCompendiumInGamePredictionsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCStartCompendiumInGamePredictionsResponse *
       cmsg_server_to_gcstart_compendium_in_game_predictions_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcstart_compendium_in_game_predictions_response__free_unpacked
                     (CMsgServerToGCStartCompendiumInGamePredictionsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCCloseCompendiumInGamePredictionVoting methods */
void   cmsg_server_to_gcclose_compendium_in_game_prediction_voting__init
                     (CMsgServerToGCCloseCompendiumInGamePredictionVoting         *message);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting__get_packed_size
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVoting   *message);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting__pack
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVoting   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting__pack_to_buffer
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVoting   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCCloseCompendiumInGamePredictionVoting *
       cmsg_server_to_gcclose_compendium_in_game_prediction_voting__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcclose_compendium_in_game_prediction_voting__free_unpacked
                     (CMsgServerToGCCloseCompendiumInGamePredictionVoting *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse methods */
void   cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__init
                     (CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse         *message);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__get_packed_size
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse   *message);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__pack
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__pack_to_buffer
                     (const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse *
       cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__free_unpacked
                     (CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCEndCompendiumInGamePredictions methods */
void   cmsg_server_to_gcend_compendium_in_game_predictions__init
                     (CMsgServerToGCEndCompendiumInGamePredictions         *message);
size_t cmsg_server_to_gcend_compendium_in_game_predictions__get_packed_size
                     (const CMsgServerToGCEndCompendiumInGamePredictions   *message);
size_t cmsg_server_to_gcend_compendium_in_game_predictions__pack
                     (const CMsgServerToGCEndCompendiumInGamePredictions   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcend_compendium_in_game_predictions__pack_to_buffer
                     (const CMsgServerToGCEndCompendiumInGamePredictions   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCEndCompendiumInGamePredictions *
       cmsg_server_to_gcend_compendium_in_game_predictions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcend_compendium_in_game_predictions__free_unpacked
                     (CMsgServerToGCEndCompendiumInGamePredictions *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCEndCompendiumInGamePredictionsResponse methods */
void   cmsg_server_to_gcend_compendium_in_game_predictions_response__init
                     (CMsgServerToGCEndCompendiumInGamePredictionsResponse         *message);
size_t cmsg_server_to_gcend_compendium_in_game_predictions_response__get_packed_size
                     (const CMsgServerToGCEndCompendiumInGamePredictionsResponse   *message);
size_t cmsg_server_to_gcend_compendium_in_game_predictions_response__pack
                     (const CMsgServerToGCEndCompendiumInGamePredictionsResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcend_compendium_in_game_predictions_response__pack_to_buffer
                     (const CMsgServerToGCEndCompendiumInGamePredictionsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCEndCompendiumInGamePredictionsResponse *
       cmsg_server_to_gcend_compendium_in_game_predictions_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcend_compendium_in_game_predictions_response__free_unpacked
                     (CMsgServerToGCEndCompendiumInGamePredictionsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult methods */
void   cmsg_server_to_gccompendium_in_game_prediction_results__prediction_result__init
                     (CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult         *message);
/* CMsgServerToGCCompendiumInGamePredictionResults methods */
void   cmsg_server_to_gccompendium_in_game_prediction_results__init
                     (CMsgServerToGCCompendiumInGamePredictionResults         *message);
size_t cmsg_server_to_gccompendium_in_game_prediction_results__get_packed_size
                     (const CMsgServerToGCCompendiumInGamePredictionResults   *message);
size_t cmsg_server_to_gccompendium_in_game_prediction_results__pack
                     (const CMsgServerToGCCompendiumInGamePredictionResults   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gccompendium_in_game_prediction_results__pack_to_buffer
                     (const CMsgServerToGCCompendiumInGamePredictionResults   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCCompendiumInGamePredictionResults *
       cmsg_server_to_gccompendium_in_game_prediction_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gccompendium_in_game_prediction_results__free_unpacked
                     (CMsgServerToGCCompendiumInGamePredictionResults *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCCompendiumInGamePredictionResultsResponse methods */
void   cmsg_server_to_gccompendium_in_game_prediction_results_response__init
                     (CMsgServerToGCCompendiumInGamePredictionResultsResponse         *message);
size_t cmsg_server_to_gccompendium_in_game_prediction_results_response__get_packed_size
                     (const CMsgServerToGCCompendiumInGamePredictionResultsResponse   *message);
size_t cmsg_server_to_gccompendium_in_game_prediction_results_response__pack
                     (const CMsgServerToGCCompendiumInGamePredictionResultsResponse   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gccompendium_in_game_prediction_results_response__pack_to_buffer
                     (const CMsgServerToGCCompendiumInGamePredictionResultsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCCompendiumInGamePredictionResultsResponse *
       cmsg_server_to_gccompendium_in_game_prediction_results_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gccompendium_in_game_prediction_results_response__free_unpacked
                     (CMsgServerToGCCompendiumInGamePredictionResultsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgPoorNetworkConditions__Player_Closure)
                 (const CMsgPoorNetworkConditions__Player *message,
                  void *closure_data);
typedef void (*CMsgPoorNetworkConditions_Closure)
                 (const CMsgPoorNetworkConditions *message,
                  void *closure_data);
typedef void (*CMsgGameserverCrash_Closure)
                 (const CMsgGameserverCrash *message,
                  void *closure_data);
typedef void (*CMsgConnectedPlayers__Player_Closure)
                 (const CMsgConnectedPlayers__Player *message,
                  void *closure_data);
typedef void (*CMsgConnectedPlayers_Closure)
                 (const CMsgConnectedPlayers *message,
                  void *closure_data);
typedef void (*CMsgGameServerInfo_Closure)
                 (const CMsgGameServerInfo *message,
                  void *closure_data);
typedef void (*CMsgLeaverDetected_Closure)
                 (const CMsgLeaverDetected *message,
                  void *closure_data);
typedef void (*CMsgLeaverDetectedResponse_Closure)
                 (const CMsgLeaverDetectedResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyPlayerStats_Closure)
                 (const CMsgDOTAFantasyPlayerStats *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyFinalPlayerStats_Closure)
                 (const CMsgDOTAFantasyFinalPlayerStats *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyLivePlayerStats_Closure)
                 (const CMsgDOTAFantasyLivePlayerStats *message,
                  void *closure_data);
typedef void (*CMsgDOTAFantasyMatch_Closure)
                 (const CMsgDOTAFantasyMatch *message,
                  void *closure_data);
typedef void (*CMsgServerToGCRealtimeStats_Closure)
                 (const CMsgServerToGCRealtimeStats *message,
                  void *closure_data);
typedef void (*CMsgGCToServerRealtimeStatsStartStop_Closure)
                 (const CMsgGCToServerRealtimeStatsStartStop *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData_Closure)
                 (const CMsgGameMatchSignOut__CTeam__CPlayer__CCustomGameData *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CTeam__CPlayer_Closure)
                 (const CMsgGameMatchSignOut__CTeam__CPlayer *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CTeam_Closure)
                 (const CMsgGameMatchSignOut__CTeam *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CAdditionalSignoutMsg_Closure)
                 (const CMsgGameMatchSignOut__CAdditionalSignoutMsg *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CSocialFeedMatchEvent_Closure)
                 (const CMsgGameMatchSignOut__CSocialFeedMatchEvent *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut__CCustomGameData_Closure)
                 (const CMsgGameMatchSignOut__CCustomGameData *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOut_Closure)
                 (const CMsgGameMatchSignOut *message,
                  void *closure_data);
typedef void (*CMsgSignOutDraftInfo_Closure)
                 (const CMsgSignOutDraftInfo *message,
                  void *closure_data);
typedef void (*CMsgSignOutBotInfo__CMsgBotSlotDifficulty_Closure)
                 (const CMsgSignOutBotInfo__CMsgBotSlotDifficulty *message,
                  void *closure_data);
typedef void (*CMsgSignOutBotInfo_Closure)
                 (const CMsgSignOutBotInfo *message,
                  void *closure_data);
typedef void (*CMsgSignOutPlayerStats_Closure)
                 (const CMsgSignOutPlayerStats *message,
                  void *closure_data);
typedef void (*CMsgSignOutCommunicationSummary__PlayerCommunication_Closure)
                 (const CMsgSignOutCommunicationSummary__PlayerCommunication *message,
                  void *closure_data);
typedef void (*CMsgSignOutCommunicationSummary_Closure)
                 (const CMsgSignOutCommunicationSummary *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg_Closure)
                 (const CMsgGameMatchSignoutResponse__CAdditionalSignoutMsg *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignoutResponse__PlayerMetadata_Closure)
                 (const CMsgGameMatchSignoutResponse__PlayerMetadata *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignoutResponse_Closure)
                 (const CMsgGameMatchSignoutResponse *message,
                  void *closure_data);
typedef void (*CMsgTimedRewardContainer_Closure)
                 (const CMsgTimedRewardContainer *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOutPermissionRequest_Closure)
                 (const CMsgGameMatchSignOutPermissionRequest *message,
                  void *closure_data);
typedef void (*CMsgGameMatchSignOutPermissionResponse_Closure)
                 (const CMsgGameMatchSignOutPermissionResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility_Closure)
                 (const CMsgDOTALiveScoreboardUpdate__Team__Player__HeroAbility *message,
                  void *closure_data);
typedef void (*CMsgDOTALiveScoreboardUpdate__Team__Player_Closure)
                 (const CMsgDOTALiveScoreboardUpdate__Team__Player *message,
                  void *closure_data);
typedef void (*CMsgDOTALiveScoreboardUpdate__Team_Closure)
                 (const CMsgDOTALiveScoreboardUpdate__Team *message,
                  void *closure_data);
typedef void (*CMsgDOTALiveScoreboardUpdate_Closure)
                 (const CMsgDOTALiveScoreboardUpdate *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestPlayerResources_Closure)
                 (const CMsgDOTARequestPlayerResources *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestPlayerResourcesResponse_Closure)
                 (const CMsgDOTARequestPlayerResourcesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestBatchPlayerResources_Closure)
                 (const CMsgDOTARequestBatchPlayerResources *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestBatchPlayerResourcesResponse__Result_Closure)
                 (const CMsgDOTARequestBatchPlayerResourcesResponse__Result *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestBatchPlayerResourcesResponse_Closure)
                 (const CMsgDOTARequestBatchPlayerResourcesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPlayerFailedToConnect_Closure)
                 (const CMsgDOTAPlayerFailedToConnect *message,
                  void *closure_data);
typedef void (*CMsgGCToRelayConnect_Closure)
                 (const CMsgGCToRelayConnect *message,
                  void *closure_data);
typedef void (*CMsgGCGCToLANServerRelayConnect_Closure)
                 (const CMsgGCGCToLANServerRelayConnect *message,
                  void *closure_data);
typedef void (*CMsgGCToRelayConnectResponse_Closure)
                 (const CMsgGCToRelayConnectResponse *message,
                  void *closure_data);
typedef void (*CMsgGCBanStatusRequest_Closure)
                 (const CMsgGCBanStatusRequest *message,
                  void *closure_data);
typedef void (*CMsgGCBanStatusResponse_Closure)
                 (const CMsgGCBanStatusResponse *message,
                  void *closure_data);
typedef void (*CMsgTournamentItemEvent_Closure)
                 (const CMsgTournamentItemEvent *message,
                  void *closure_data);
typedef void (*CMsgTournamentItemEventResponse_Closure)
                 (const CMsgTournamentItemEventResponse *message,
                  void *closure_data);
typedef void (*CMsgTeamFanfare_Closure)
                 (const CMsgTeamFanfare *message,
                  void *closure_data);
typedef void (*CMsgResponseTeamFanfare_Closure)
                 (const CMsgResponseTeamFanfare *message,
                  void *closure_data);
typedef void (*CMsgGameServerUploadSaveGame_Closure)
                 (const CMsgGameServerUploadSaveGame *message,
                  void *closure_data);
typedef void (*CMsgGameServerSaveGameResult_Closure)
                 (const CMsgGameServerSaveGameResult *message,
                  void *closure_data);
typedef void (*CMsgGameServerGetLoadGame_Closure)
                 (const CMsgGameServerGetLoadGame *message,
                  void *closure_data);
typedef void (*CMsgGameServerGetLoadGameResult_Closure)
                 (const CMsgGameServerGetLoadGameResult *message,
                  void *closure_data);
typedef void (*CMsgDOTAGenerateDiretidePrizeList_Closure)
                 (const CMsgDOTAGenerateDiretidePrizeList *message,
                  void *closure_data);
typedef void (*CMsgDOTAGenerateDiretidePrizeListResponse_Closure)
                 (const CMsgDOTAGenerateDiretidePrizeListResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTARewardDiretidePrizes_Closure)
                 (const CMsgDOTARewardDiretidePrizes *message,
                  void *closure_data);
typedef void (*CMsgDOTADiretidePrizesRewardedResponse_Closure)
                 (const CMsgDOTADiretidePrizesRewardedResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAAwardEventPoints__AwardPoints_Closure)
                 (const CMsgDOTAAwardEventPoints__AwardPoints *message,
                  void *closure_data);
typedef void (*CMsgDOTAAwardEventPoints_Closure)
                 (const CMsgDOTAAwardEventPoints *message,
                  void *closure_data);
typedef void (*CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops_Closure)
                 (const CMsgServerToGCSignoutAwardAdditionalDrops__AdditionalDrops *message,
                  void *closure_data);
typedef void (*CMsgServerToGCSignoutAwardAdditionalDrops_Closure)
                 (const CMsgServerToGCSignoutAwardAdditionalDrops *message,
                  void *closure_data);
typedef void (*CMsgDOTAFrostivusTimeElapsed__User_Closure)
                 (const CMsgDOTAFrostivusTimeElapsed__User *message,
                  void *closure_data);
typedef void (*CMsgDOTAFrostivusTimeElapsed_Closure)
                 (const CMsgDOTAFrostivusTimeElapsed *message,
                  void *closure_data);
typedef void (*CMsgGCToServerPingRequest_Closure)
                 (const CMsgGCToServerPingRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToServerPingResponse_Closure)
                 (const CMsgGCToServerPingResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToServerConsoleCommand_Closure)
                 (const CMsgGCToServerConsoleCommand *message,
                  void *closure_data);
typedef void (*CMsgServerGetEventPoints_Closure)
                 (const CMsgServerGetEventPoints *message,
                  void *closure_data);
typedef void (*CMsgServerGetEventPointsResponse__Points_Closure)
                 (const CMsgServerGetEventPointsResponse__Points *message,
                  void *closure_data);
typedef void (*CMsgServerGetEventPointsResponse_Closure)
                 (const CMsgServerGetEventPointsResponse *message,
                  void *closure_data);
typedef void (*CMsgServerGrantSurveyPermission__Survey_Closure)
                 (const CMsgServerGrantSurveyPermission__Survey *message,
                  void *closure_data);
typedef void (*CMsgServerGrantSurveyPermission_Closure)
                 (const CMsgServerGrantSurveyPermission *message,
                  void *closure_data);
typedef void (*CMsgServerGrantSurveyPermissionResponse_Closure)
                 (const CMsgServerGrantSurveyPermissionResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCMatchConnectionStats__Player_Closure)
                 (const CMsgServerToGCMatchConnectionStats__Player *message,
                  void *closure_data);
typedef void (*CMsgServerToGCMatchConnectionStats_Closure)
                 (const CMsgServerToGCMatchConnectionStats *message,
                  void *closure_data);
typedef void (*CMsgServerGCUpdateSpectatorCount_Closure)
                 (const CMsgServerGCUpdateSpectatorCount *message,
                  void *closure_data);
typedef void (*CSerializedCombatLog__Dictionary__DictString_Closure)
                 (const CSerializedCombatLog__Dictionary__DictString *message,
                  void *closure_data);
typedef void (*CSerializedCombatLog__Dictionary_Closure)
                 (const CSerializedCombatLog__Dictionary *message,
                  void *closure_data);
typedef void (*CSerializedCombatLog_Closure)
                 (const CSerializedCombatLog *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetAdditionalEquips_Closure)
                 (const CMsgServerToGCGetAdditionalEquips *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips_Closure)
                 (const CMsgServerToGCGetAdditionalEquipsResponse__CUserEquips *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetAdditionalEquipsResponse_Closure)
                 (const CMsgServerToGCGetAdditionalEquipsResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetProfileCard_Closure)
                 (const CMsgServerToGCGetProfileCard *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetProfileCardResponse_Closure)
                 (const CMsgServerToGCGetProfileCardResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCVictoryPredictions__Record_Closure)
                 (const CMsgServerToGCVictoryPredictions__Record *message,
                  void *closure_data);
typedef void (*CMsgServerToGCVictoryPredictions_Closure)
                 (const CMsgServerToGCVictoryPredictions *message,
                  void *closure_data);
typedef void (*CMsgSuspiciousActivity_Closure)
                 (const CMsgSuspiciousActivity *message,
                  void *closure_data);
typedef void (*CMsgServerToGCRequestStatus_Closure)
                 (const CMsgServerToGCRequestStatus *message,
                  void *closure_data);
typedef void (*CMsgServerToGCRequestStatusResponse_Closure)
                 (const CMsgServerToGCRequestStatusResponse *message,
                  void *closure_data);
typedef void (*CMsgSignOutAssassinMiniGameInfo_Closure)
                 (const CMsgSignOutAssassinMiniGameInfo *message,
                  void *closure_data);
typedef void (*CMsgServerToGCGetIngameEventData_Closure)
                 (const CMsgServerToGCGetIngameEventData *message,
                  void *closure_data);
typedef void (*CMsgGCToServerIngameEventDataOraclePA_Closure)
                 (const CMsgGCToServerIngameEventDataOraclePA *message,
                  void *closure_data);
typedef void (*CMsgServerToGCKillSummaries__KillSummary_Closure)
                 (const CMsgServerToGCKillSummaries__KillSummary *message,
                  void *closure_data);
typedef void (*CMsgServerToGCKillSummaries_Closure)
                 (const CMsgServerToGCKillSummaries *message,
                  void *closure_data);
typedef void (*CMsgGCToServerPredictionResult__Prediction_Closure)
                 (const CMsgGCToServerPredictionResult__Prediction *message,
                  void *closure_data);
typedef void (*CMsgGCToServerPredictionResult_Closure)
                 (const CMsgGCToServerPredictionResult *message,
                  void *closure_data);
typedef void (*CMsgServerToGCLockCharmTrading_Closure)
                 (const CMsgServerToGCLockCharmTrading *message,
                  void *closure_data);
typedef void (*CMsgSignOutUpdatePlayerChallenge__Challenge_Closure)
                 (const CMsgSignOutUpdatePlayerChallenge__Challenge *message,
                  void *closure_data);
typedef void (*CMsgSignOutUpdatePlayerChallenge_Closure)
                 (const CMsgSignOutUpdatePlayerChallenge *message,
                  void *closure_data);
typedef void (*CMsgServerToGCRerollPlayerChallenge_Closure)
                 (const CMsgServerToGCRerollPlayerChallenge *message,
                  void *closure_data);
typedef void (*CMsgServerToGCHoldEventPoints__HoldRequest_Closure)
                 (const CMsgServerToGCHoldEventPoints__HoldRequest *message,
                  void *closure_data);
typedef void (*CMsgServerToGCHoldEventPoints_Closure)
                 (const CMsgServerToGCHoldEventPoints *message,
                  void *closure_data);
typedef void (*CMsgSignOutReleaseEventPointHolds_Closure)
                 (const CMsgSignOutReleaseEventPointHolds *message,
                  void *closure_data);
typedef void (*CMsgGCToServerUpdateBroadcastCheers_Closure)
                 (const CMsgGCToServerUpdateBroadcastCheers *message,
                  void *closure_data);
typedef void (*CMsgSignOutWagerStats__Player_Closure)
                 (const CMsgSignOutWagerStats__Player *message,
                  void *closure_data);
typedef void (*CMsgSignOutWagerStats_Closure)
                 (const CMsgSignOutWagerStats *message,
                  void *closure_data);
typedef void (*CMsgSignOutXPCoins__Player_Closure)
                 (const CMsgSignOutXPCoins__Player *message,
                  void *closure_data);
typedef void (*CMsgSignOutXPCoins_Closure)
                 (const CMsgSignOutXPCoins *message,
                  void *closure_data);
typedef void (*CMsgSignOutCommunityGoalProgress__EventGoalIncrement_Closure)
                 (const CMsgSignOutCommunityGoalProgress__EventGoalIncrement *message,
                  void *closure_data);
typedef void (*CMsgSignOutCommunityGoalProgress_Closure)
                 (const CMsgSignOutCommunityGoalProgress *message,
                  void *closure_data);
typedef void (*CMsgServerToGCPostMatchTip_Closure)
                 (const CMsgServerToGCPostMatchTip *message,
                  void *closure_data);
typedef void (*CMsgServerToGCPostMatchTipResponse_Closure)
                 (const CMsgServerToGCPostMatchTipResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCStartCompendiumInGamePredictions_Closure)
                 (const CMsgServerToGCStartCompendiumInGamePredictions *message,
                  void *closure_data);
typedef void (*CMsgServerToGCStartCompendiumInGamePredictionsResponse_Closure)
                 (const CMsgServerToGCStartCompendiumInGamePredictionsResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCCloseCompendiumInGamePredictionVoting_Closure)
                 (const CMsgServerToGCCloseCompendiumInGamePredictionVoting *message,
                  void *closure_data);
typedef void (*CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse_Closure)
                 (const CMsgServerToGCCloseCompendiumInGamePredictionVotingResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCEndCompendiumInGamePredictions_Closure)
                 (const CMsgServerToGCEndCompendiumInGamePredictions *message,
                  void *closure_data);
typedef void (*CMsgServerToGCEndCompendiumInGamePredictionsResponse_Closure)
                 (const CMsgServerToGCEndCompendiumInGamePredictionsResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult_Closure)
                 (const CMsgServerToGCCompendiumInGamePredictionResults__PredictionResult *message,
                  void *closure_data);
typedef void (*CMsgServerToGCCompendiumInGamePredictionResults_Closure)
                 (const CMsgServerToGCCompendiumInGamePredictionResults *message,
                  void *closure_data);
typedef void (*CMsgServerToGCCompendiumInGamePredictionResultsResponse_Closure)
                 (const CMsgServerToGCCompendiumInGamePredictionResultsResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    epoor_network_conditions_type__descriptor;
extern const ProtobufCEnumDescriptor    eability_abuse_type__descriptor;
extern const ProtobufCEnumDescriptor    eintentional_feeding_type__descriptor;
extern const ProtobufCEnumDescriptor    esuspicious_activity__descriptor;
extern const ProtobufCEnumDescriptor    esuspicious_build_type__descriptor;
extern const ProtobufCMessageDescriptor cmsg_poor_network_conditions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_poor_network_conditions__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gameserver_crash__descriptor;
extern const ProtobufCMessageDescriptor cmsg_connected_players__descriptor;
extern const ProtobufCMessageDescriptor cmsg_connected_players__player__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_connected_players__send_reason__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_server_info__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_game_server_info__server_type__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_game_server_info__custom_games__descriptor;
extern const ProtobufCMessageDescriptor cmsg_leaver_detected__descriptor;
extern const ProtobufCMessageDescriptor cmsg_leaver_detected_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_player_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_final_player_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_live_player_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafantasy_match__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcrealtime_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_realtime_stats_start_stop__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__cteam__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__cteam__cplayer__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__cteam__cplayer__ccustom_game_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__cadditional_signout_msg__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__csocial_feed_match_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out__ccustom_game_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_draft_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_bot_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_bot_info__cmsg_bot_slot_difficulty__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_player_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_communication_summary__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_communication_summary__player_communication__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_signout_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_signout_response__cadditional_signout_msg__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_signout_response__player_metadata__descriptor;
extern const ProtobufCMessageDescriptor cmsg_timed_reward_container__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out_permission_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_match_sign_out_permission_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalive_scoreboard_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalive_scoreboard_update__team__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalive_scoreboard_update__team__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalive_scoreboard_update__team__player__hero_ability__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotalive_scoreboard_update__team__player__dotaultimate_state__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_player_resources__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_player_resources_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_batch_player_resources__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_batch_player_resources_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_batch_player_resources_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaplayer_failed_to_connect__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_relay_connect__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcgcto_lanserver_relay_connect__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_relay_connect_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcban_status_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcban_status_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_tournament_item_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_tournament_item_event_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_team_fanfare__descriptor;
extern const ProtobufCMessageDescriptor cmsg_response_team_fanfare__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_server_upload_save_game__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_server_save_game_result__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_game_server_save_game_result__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_server_get_load_game__descriptor;
extern const ProtobufCMessageDescriptor cmsg_game_server_get_load_game_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotagenerate_diretide_prize_list__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotagenerate_diretide_prize_list_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareward_diretide_prizes__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotadiretide_prizes_rewarded_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaaward_event_points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaaward_event_points__award_points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcsignout_award_additional_drops__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcsignout_award_additional_drops__additional_drops__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafrostivus_time_elapsed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafrostivus_time_elapsed__user__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_ping_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_ping_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_console_command__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_get_event_points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_get_event_points_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_get_event_points_response__points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_grant_survey_permission__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_grant_survey_permission__survey__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_grant_survey_permission_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcmatch_connection_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcmatch_connection_stats__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_gcupdate_spectator_count__descriptor;
extern const ProtobufCMessageDescriptor cserialized_combat_log__descriptor;
extern const ProtobufCMessageDescriptor cserialized_combat_log__dictionary__descriptor;
extern const ProtobufCMessageDescriptor cserialized_combat_log__dictionary__dict_string__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_additional_equips__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_additional_equips_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_additional_equips_response__cuser_equips__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_profile_card__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_profile_card_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcvictory_predictions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcvictory_predictions__record__descriptor;
extern const ProtobufCMessageDescriptor cmsg_suspicious_activity__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcrequest_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcrequest_status__response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_assassin_mini_game_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcget_ingame_event_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_ingame_event_data_oracle_pa__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gckill_summaries__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gckill_summaries__kill_summary__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_prediction_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_prediction_result__prediction__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcto_server_prediction_result__prediction__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gclock_charm_trading__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_update_player_challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_update_player_challenge__challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcreroll_player_challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gchold_event_points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gchold_event_points__hold_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_release_event_point_holds__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_update_broadcast_cheers__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_wager_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_wager_stats__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_xpcoins__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_xpcoins__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_community_goal_progress__descriptor;
extern const ProtobufCMessageDescriptor cmsg_sign_out_community_goal_progress__event_goal_increment__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcpost_match_tip__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcpost_match_tip_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_server_to_gcpost_match_tip_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcstart_compendium_in_game_predictions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcstart_compendium_in_game_predictions_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcclose_compendium_in_game_prediction_voting__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcclose_compendium_in_game_prediction_voting_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcend_compendium_in_game_predictions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcend_compendium_in_game_predictions_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gccompendium_in_game_prediction_results__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gccompendium_in_game_prediction_results__prediction_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gccompendium_in_game_prediction_results_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fgcmessages_5fserver_2eproto__INCLUDED */
