/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: steamdatagram_messages.proto */

#ifndef PROTOBUF_C_steamdatagram_5fmessages_2eproto__INCLUDED
#define PROTOBUF_C_steamdatagram_5fmessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _CMsgSteamDatagramRouterPingReply CMsgSteamDatagramRouterPingReply;
typedef struct _CMsgSteamDatagramGameserverPing CMsgSteamDatagramGameserverPing;
typedef struct _CMsgSteamDatagramGameServerAuthTicket CMsgSteamDatagramGameServerAuthTicket;
typedef struct _CMsgSteamDatagramGameServerAuthTicket__ExtraField CMsgSteamDatagramGameServerAuthTicket__ExtraField;
typedef struct _CMsgSteamDatagramGameserverSessionRequest CMsgSteamDatagramGameserverSessionRequest;
typedef struct _CMsgSteamDatagramGameserverSessionEstablished CMsgSteamDatagramGameserverSessionEstablished;
typedef struct _CMsgSteamDatagramNoSession CMsgSteamDatagramNoSession;
typedef struct _CMsgSteamDatagramDiagnostic CMsgSteamDatagramDiagnostic;
typedef struct _CMsgSteamDatagramDataCenterState CMsgSteamDatagramDataCenterState;
typedef struct _CMsgSteamDatagramDataCenterState__Server CMsgSteamDatagramDataCenterState__Server;
typedef struct _CMsgSteamDatagramDataCenterState__DataCenter CMsgSteamDatagramDataCenterState__DataCenter;
typedef struct _CMsgSteamDatagramLinkInstantaneousStats CMsgSteamDatagramLinkInstantaneousStats;
typedef struct _CMsgSteamDatagramLinkLifetimeStats CMsgSteamDatagramLinkLifetimeStats;
typedef struct _CMsgSteamDatagramConnectionQuality CMsgSteamDatagramConnectionQuality;
typedef struct _CMsgSteamDatagramConnectionStatsClientToRouter CMsgSteamDatagramConnectionStatsClientToRouter;
typedef struct _CMsgSteamDatagramConnectionStatsRouterToClient CMsgSteamDatagramConnectionStatsRouterToClient;
typedef struct _CMsgSteamDatagramConnectionStatsRouterToServer CMsgSteamDatagramConnectionStatsRouterToServer;
typedef struct _CMsgSteamDatagramConnectionStatsServerToRouter CMsgSteamDatagramConnectionStatsServerToRouter;
typedef struct _CMsgSteamDatagramClientPingSampleRequest CMsgSteamDatagramClientPingSampleRequest;
typedef struct _CMsgSteamDatagramClientPingSampleReply CMsgSteamDatagramClientPingSampleReply;
typedef struct _CMsgSteamDatagramClientPingSampleReply__RoutingCluster CMsgSteamDatagramClientPingSampleReply__RoutingCluster;
typedef struct _CMsgSteamDatagramClientSwitchedPrimary CMsgSteamDatagramClientSwitchedPrimary;
typedef struct _CMsgSteamDatagramClientSwitchedPrimary__RouterQuality CMsgSteamDatagramClientSwitchedPrimary__RouterQuality;


/* --- enums --- */

typedef enum _ESteamDatagramMsgID {
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_RouterPingRequest = 1,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_RouterPingReply = 2,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_GameserverPingRequest = 3,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_GameserverPingReply = 4,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_GameserverSessionRequest = 5,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_GameserverSessionEstablished = 6,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_NoSession = 7,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_Diagnostic = 8,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_DataClientToRouter = 9,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_DataRouterToServer = 10,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_DataServerToRouter = 11,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_DataRouterToClient = 12,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_Stats = 13,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_ClientPingSampleRequest = 14,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_ClientPingSampleReply = 15,
  ESTEAM_DATAGRAM_MSG_ID__k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTEAM_DATAGRAM_MSG_ID)
} ESteamDatagramMsgID;

/* --- messages --- */

struct  _CMsgSteamDatagramRouterPingReply
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_timestamp;
  uint32_t client_timestamp;
  size_t n_latency_datacenter_ids;
  uint32_t *latency_datacenter_ids;
  size_t n_latency_ping_ms;
  uint32_t *latency_ping_ms;
  protobuf_c_boolean has_your_public_ip;
  uint32_t your_public_ip;
  protobuf_c_boolean has_server_time;
  uint32_t server_time;
  protobuf_c_boolean has_challenge;
  uint64_t challenge;
  protobuf_c_boolean has_seconds_until_shutdown;
  uint32_t seconds_until_shutdown;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
};
#define CMSG_STEAM_DATAGRAM_ROUTER_PING_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_router_ping_reply__descriptor) \
    , 0,0, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramGameserverPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_session;
  uint32_t client_session;
  protobuf_c_boolean has_client_steam_id;
  uint64_t client_steam_id;
  protobuf_c_boolean has_client_timestamp;
  uint32_t client_timestamp;
  protobuf_c_boolean has_router_timestamp;
  uint32_t router_timestamp;
  protobuf_c_boolean has_router_gameserver_latency;
  uint32_t router_gameserver_latency;
  protobuf_c_boolean has_seq_number_router;
  uint32_t seq_number_router;
  protobuf_c_boolean has_seq_number_e2e;
  uint32_t seq_number_e2e;
};
#define CMSG_STEAM_DATAGRAM_GAMESERVER_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_gameserver_ping__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramGameServerAuthTicket__ExtraField
{
  ProtobufCMessage base;
  char *name;
  char *string_value;
  protobuf_c_boolean has_int32_value;
  int32_t int32_value;
  protobuf_c_boolean has_fixed32_value;
  uint32_t fixed32_value;
  protobuf_c_boolean has_fixed64_value;
  uint64_t fixed64_value;
};
#define CMSG_STEAM_DATAGRAM_GAME_SERVER_AUTH_TICKET__EXTRA_FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_game_server_auth_ticket__extra_field__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramGameServerAuthTicket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time_expiry;
  uint32_t time_expiry;
  protobuf_c_boolean has_authorized_steam_id;
  uint64_t authorized_steam_id;
  protobuf_c_boolean has_authorized_public_ip;
  uint32_t authorized_public_ip;
  protobuf_c_boolean has_gameserver_steam_id;
  uint64_t gameserver_steam_id;
  protobuf_c_boolean has_gameserver_net_id;
  uint64_t gameserver_net_id;
  protobuf_c_boolean has_signature;
  ProtobufCBinaryData signature;
  protobuf_c_boolean has_app_id;
  uint32_t app_id;
  size_t n_extra_fields;
  CMsgSteamDatagramGameServerAuthTicket__ExtraField **extra_fields;
};
#define CMSG_STEAM_DATAGRAM_GAME_SERVER_AUTH_TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_game_server_auth_ticket__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,{0,NULL}, 0,0, 0,NULL }


struct  _CMsgSteamDatagramGameserverSessionRequest
{
  ProtobufCMessage base;
  CMsgSteamDatagramGameServerAuthTicket *ticket;
  protobuf_c_boolean has_challenge_time;
  uint32_t challenge_time;
  protobuf_c_boolean has_challenge;
  uint64_t challenge;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
};
#define CMSG_STEAM_DATAGRAM_GAMESERVER_SESSION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_gameserver_session_request__descriptor) \
    , NULL, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramGameserverSessionEstablished
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  protobuf_c_boolean has_gameserver_steam_id;
  uint64_t gameserver_steam_id;
  protobuf_c_boolean has_seconds_until_shutdown;
  uint32_t seconds_until_shutdown;
};
#define CMSG_STEAM_DATAGRAM_GAMESERVER_SESSION_ESTABLISHED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_gameserver_session_established__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramNoSession
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  protobuf_c_boolean has_your_public_ip;
  uint32_t your_public_ip;
  protobuf_c_boolean has_server_time;
  uint32_t server_time;
  protobuf_c_boolean has_challenge;
  uint64_t challenge;
  protobuf_c_boolean has_seconds_until_shutdown;
  uint32_t seconds_until_shutdown;
};
#define CMSG_STEAM_DATAGRAM_NO_SESSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_no_session__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramDiagnostic
{
  ProtobufCMessage base;
  protobuf_c_boolean has_severity;
  uint32_t severity;
  char *text;
};
#define CMSG_STEAM_DATAGRAM_DIAGNOSTIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_diagnostic__descriptor) \
    , 0,0, NULL }


struct  _CMsgSteamDatagramDataCenterState__Server
{
  ProtobufCMessage base;
  char *address;
  protobuf_c_boolean has_ping_ms;
  uint32_t ping_ms;
};
#define CMSG_STEAM_DATAGRAM_DATA_CENTER_STATE__SERVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_data_center_state__server__descriptor) \
    , NULL, 0,0 }


struct  _CMsgSteamDatagramDataCenterState__DataCenter
{
  ProtobufCMessage base;
  char *code;
  size_t n_server_sample;
  CMsgSteamDatagramDataCenterState__Server **server_sample;
};
#define CMSG_STEAM_DATAGRAM_DATA_CENTER_STATE__DATA_CENTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_data_center_state__data_center__descriptor) \
    , NULL, 0,NULL }


struct  _CMsgSteamDatagramDataCenterState
{
  ProtobufCMessage base;
  size_t n_data_centers;
  CMsgSteamDatagramDataCenterState__DataCenter **data_centers;
};
#define CMSG_STEAM_DATAGRAM_DATA_CENTER_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_data_center_state__descriptor) \
    , 0,NULL }


struct  _CMsgSteamDatagramLinkInstantaneousStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_out_packets_per_sec_x10;
  uint32_t out_packets_per_sec_x10;
  protobuf_c_boolean has_out_bytes_per_sec;
  uint32_t out_bytes_per_sec;
  protobuf_c_boolean has_in_packets_per_sec_x10;
  uint32_t in_packets_per_sec_x10;
  protobuf_c_boolean has_in_bytes_per_sec;
  uint32_t in_bytes_per_sec;
  protobuf_c_boolean has_ping_ms;
  uint32_t ping_ms;
  protobuf_c_boolean has_packets_dropped_pct;
  uint32_t packets_dropped_pct;
  protobuf_c_boolean has_packets_weird_sequence_pct;
  uint32_t packets_weird_sequence_pct;
};
#define CMSG_STEAM_DATAGRAM_LINK_INSTANTANEOUS_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_link_instantaneous_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramLinkLifetimeStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_packets_sent;
  uint64_t packets_sent;
  protobuf_c_boolean has_kb_sent;
  uint64_t kb_sent;
  protobuf_c_boolean has_packets_recv;
  uint64_t packets_recv;
  protobuf_c_boolean has_kb_recv;
  uint64_t kb_recv;
  protobuf_c_boolean has_packets_recv_sequenced;
  uint64_t packets_recv_sequenced;
  protobuf_c_boolean has_packets_recv_dropped;
  uint64_t packets_recv_dropped;
  protobuf_c_boolean has_packets_recv_out_of_order;
  uint64_t packets_recv_out_of_order;
  protobuf_c_boolean has_packets_recv_duplicate;
  uint64_t packets_recv_duplicate;
  protobuf_c_boolean has_packets_recv_lurch;
  uint64_t packets_recv_lurch;
};
#define CMSG_STEAM_DATAGRAM_LINK_LIFETIME_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_link_lifetime_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramConnectionQuality
{
  ProtobufCMessage base;
  CMsgSteamDatagramLinkInstantaneousStats *instantaneous;
  CMsgSteamDatagramLinkLifetimeStats *lifetime;
};
#define CMSG_STEAM_DATAGRAM_CONNECTION_QUALITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_connection_quality__descriptor) \
    , NULL, NULL }


struct  _CMsgSteamDatagramConnectionStatsClientToRouter
{
  ProtobufCMessage base;
  CMsgSteamDatagramConnectionQuality *c2r;
  CMsgSteamDatagramConnectionQuality *c2s;
  protobuf_c_boolean has_client_timestamp;
  uint32_t client_timestamp;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  protobuf_c_boolean has_seq_num_c2r;
  uint32_t seq_num_c2r;
  protobuf_c_boolean has_seq_num_c2s;
  uint32_t seq_num_c2s;
};
#define CMSG_STEAM_DATAGRAM_CONNECTION_STATS_CLIENT_TO_ROUTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_connection_stats_client_to_router__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramConnectionStatsRouterToClient
{
  ProtobufCMessage base;
  CMsgSteamDatagramConnectionQuality *r2c;
  CMsgSteamDatagramConnectionQuality *s2c;
  protobuf_c_boolean has_client_timestamp_from_router;
  uint32_t client_timestamp_from_router;
  protobuf_c_boolean has_client_timestamp_from_server;
  uint32_t client_timestamp_from_server;
  protobuf_c_boolean has_router_gameserver_latency;
  uint32_t router_gameserver_latency;
  protobuf_c_boolean has_seconds_until_shutdown;
  uint32_t seconds_until_shutdown;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  protobuf_c_boolean has_seq_num_r2c;
  uint32_t seq_num_r2c;
  protobuf_c_boolean has_seq_num_s2c;
  uint32_t seq_num_s2c;
};
#define CMSG_STEAM_DATAGRAM_CONNECTION_STATS_ROUTER_TO_CLIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_connection_stats_router_to_client__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramConnectionStatsRouterToServer
{
  ProtobufCMessage base;
  CMsgSteamDatagramConnectionQuality *r2s;
  CMsgSteamDatagramConnectionQuality *c2s;
  protobuf_c_boolean has_client_timestamp;
  uint32_t client_timestamp;
  protobuf_c_boolean has_router_timestamp;
  uint32_t router_timestamp;
  protobuf_c_boolean has_seq_num_r2s;
  uint32_t seq_num_r2s;
  protobuf_c_boolean has_seq_num_c2s;
  uint32_t seq_num_c2s;
  protobuf_c_boolean has_client_steam_id;
  uint64_t client_steam_id;
  protobuf_c_boolean has_client_session_id;
  uint32_t client_session_id;
};
#define CMSG_STEAM_DATAGRAM_CONNECTION_STATS_ROUTER_TO_SERVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_connection_stats_router_to_server__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramConnectionStatsServerToRouter
{
  ProtobufCMessage base;
  CMsgSteamDatagramConnectionQuality *s2r;
  CMsgSteamDatagramConnectionQuality *s2c;
  protobuf_c_boolean has_seq_num_s2r;
  uint32_t seq_num_s2r;
  protobuf_c_boolean has_seq_num_s2c;
  uint32_t seq_num_s2c;
  protobuf_c_boolean has_client_steam_id;
  uint64_t client_steam_id;
  protobuf_c_boolean has_client_session_id;
  uint32_t client_session_id;
};
#define CMSG_STEAM_DATAGRAM_CONNECTION_STATS_SERVER_TO_ROUTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_connection_stats_server_to_router__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramClientPingSampleRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
};
#define CMSG_STEAM_DATAGRAM_CLIENT_PING_SAMPLE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_client_ping_sample_request__descriptor) \
    , 0,0 }


struct  _CMsgSteamDatagramClientPingSampleReply__RoutingCluster
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint32_t id;
  protobuf_c_boolean has_front_ping_ms;
  uint32_t front_ping_ms;
  protobuf_c_boolean has_e2e_ping_ms;
  uint32_t e2e_ping_ms;
};
#define CMSG_STEAM_DATAGRAM_CLIENT_PING_SAMPLE_REPLY__ROUTING_CLUSTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_client_ping_sample_reply__routing_cluster__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramClientPingSampleReply
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  size_t n_routing_clusters;
  CMsgSteamDatagramClientPingSampleReply__RoutingCluster **routing_clusters;
};
#define CMSG_STEAM_DATAGRAM_CLIENT_PING_SAMPLE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_client_ping_sample_reply__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgSteamDatagramClientSwitchedPrimary__RouterQuality
{
  ProtobufCMessage base;
  protobuf_c_boolean has_score;
  uint32_t score;
  protobuf_c_boolean has_front_ping;
  uint32_t front_ping;
  protobuf_c_boolean has_back_ping;
  uint32_t back_ping;
  protobuf_c_boolean has_seconds_until_down;
  uint32_t seconds_until_down;
};
#define CMSG_STEAM_DATAGRAM_CLIENT_SWITCHED_PRIMARY__ROUTER_QUALITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_client_switched_primary__router_quality__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgSteamDatagramClientSwitchedPrimary
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_cookie;
  uint32_t client_cookie;
  protobuf_c_boolean has_from_ip;
  uint32_t from_ip;
  protobuf_c_boolean has_from_port;
  uint32_t from_port;
  protobuf_c_boolean has_from_router_cluster;
  uint32_t from_router_cluster;
  protobuf_c_boolean has_from_active_time;
  uint32_t from_active_time;
  protobuf_c_boolean has_from_active_packets_recv;
  uint32_t from_active_packets_recv;
  char *from_dropped_reason;
  protobuf_c_boolean has_gap_ms;
  uint32_t gap_ms;
  CMsgSteamDatagramClientSwitchedPrimary__RouterQuality *from_quality_now;
  CMsgSteamDatagramClientSwitchedPrimary__RouterQuality *to_quality_now;
  CMsgSteamDatagramClientSwitchedPrimary__RouterQuality *from_quality_then;
  CMsgSteamDatagramClientSwitchedPrimary__RouterQuality *to_quality_then;
};
#define CMSG_STEAM_DATAGRAM_CLIENT_SWITCHED_PRIMARY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_steam_datagram_client_switched_primary__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, NULL, NULL, NULL, NULL }


/* CMsgSteamDatagramRouterPingReply methods */
void   cmsg_steam_datagram_router_ping_reply__init
                     (CMsgSteamDatagramRouterPingReply         *message);
size_t cmsg_steam_datagram_router_ping_reply__get_packed_size
                     (const CMsgSteamDatagramRouterPingReply   *message);
size_t cmsg_steam_datagram_router_ping_reply__pack
                     (const CMsgSteamDatagramRouterPingReply   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_router_ping_reply__pack_to_buffer
                     (const CMsgSteamDatagramRouterPingReply   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramRouterPingReply *
       cmsg_steam_datagram_router_ping_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_router_ping_reply__free_unpacked
                     (CMsgSteamDatagramRouterPingReply *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramGameserverPing methods */
void   cmsg_steam_datagram_gameserver_ping__init
                     (CMsgSteamDatagramGameserverPing         *message);
size_t cmsg_steam_datagram_gameserver_ping__get_packed_size
                     (const CMsgSteamDatagramGameserverPing   *message);
size_t cmsg_steam_datagram_gameserver_ping__pack
                     (const CMsgSteamDatagramGameserverPing   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_gameserver_ping__pack_to_buffer
                     (const CMsgSteamDatagramGameserverPing   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramGameserverPing *
       cmsg_steam_datagram_gameserver_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_gameserver_ping__free_unpacked
                     (CMsgSteamDatagramGameserverPing *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramGameServerAuthTicket__ExtraField methods */
void   cmsg_steam_datagram_game_server_auth_ticket__extra_field__init
                     (CMsgSteamDatagramGameServerAuthTicket__ExtraField         *message);
/* CMsgSteamDatagramGameServerAuthTicket methods */
void   cmsg_steam_datagram_game_server_auth_ticket__init
                     (CMsgSteamDatagramGameServerAuthTicket         *message);
size_t cmsg_steam_datagram_game_server_auth_ticket__get_packed_size
                     (const CMsgSteamDatagramGameServerAuthTicket   *message);
size_t cmsg_steam_datagram_game_server_auth_ticket__pack
                     (const CMsgSteamDatagramGameServerAuthTicket   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_game_server_auth_ticket__pack_to_buffer
                     (const CMsgSteamDatagramGameServerAuthTicket   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramGameServerAuthTicket *
       cmsg_steam_datagram_game_server_auth_ticket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_game_server_auth_ticket__free_unpacked
                     (CMsgSteamDatagramGameServerAuthTicket *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramGameserverSessionRequest methods */
void   cmsg_steam_datagram_gameserver_session_request__init
                     (CMsgSteamDatagramGameserverSessionRequest         *message);
size_t cmsg_steam_datagram_gameserver_session_request__get_packed_size
                     (const CMsgSteamDatagramGameserverSessionRequest   *message);
size_t cmsg_steam_datagram_gameserver_session_request__pack
                     (const CMsgSteamDatagramGameserverSessionRequest   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_gameserver_session_request__pack_to_buffer
                     (const CMsgSteamDatagramGameserverSessionRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramGameserverSessionRequest *
       cmsg_steam_datagram_gameserver_session_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_gameserver_session_request__free_unpacked
                     (CMsgSteamDatagramGameserverSessionRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramGameserverSessionEstablished methods */
void   cmsg_steam_datagram_gameserver_session_established__init
                     (CMsgSteamDatagramGameserverSessionEstablished         *message);
size_t cmsg_steam_datagram_gameserver_session_established__get_packed_size
                     (const CMsgSteamDatagramGameserverSessionEstablished   *message);
size_t cmsg_steam_datagram_gameserver_session_established__pack
                     (const CMsgSteamDatagramGameserverSessionEstablished   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_gameserver_session_established__pack_to_buffer
                     (const CMsgSteamDatagramGameserverSessionEstablished   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramGameserverSessionEstablished *
       cmsg_steam_datagram_gameserver_session_established__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_gameserver_session_established__free_unpacked
                     (CMsgSteamDatagramGameserverSessionEstablished *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramNoSession methods */
void   cmsg_steam_datagram_no_session__init
                     (CMsgSteamDatagramNoSession         *message);
size_t cmsg_steam_datagram_no_session__get_packed_size
                     (const CMsgSteamDatagramNoSession   *message);
size_t cmsg_steam_datagram_no_session__pack
                     (const CMsgSteamDatagramNoSession   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_no_session__pack_to_buffer
                     (const CMsgSteamDatagramNoSession   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramNoSession *
       cmsg_steam_datagram_no_session__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_no_session__free_unpacked
                     (CMsgSteamDatagramNoSession *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramDiagnostic methods */
void   cmsg_steam_datagram_diagnostic__init
                     (CMsgSteamDatagramDiagnostic         *message);
size_t cmsg_steam_datagram_diagnostic__get_packed_size
                     (const CMsgSteamDatagramDiagnostic   *message);
size_t cmsg_steam_datagram_diagnostic__pack
                     (const CMsgSteamDatagramDiagnostic   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_diagnostic__pack_to_buffer
                     (const CMsgSteamDatagramDiagnostic   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramDiagnostic *
       cmsg_steam_datagram_diagnostic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_diagnostic__free_unpacked
                     (CMsgSteamDatagramDiagnostic *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramDataCenterState__Server methods */
void   cmsg_steam_datagram_data_center_state__server__init
                     (CMsgSteamDatagramDataCenterState__Server         *message);
/* CMsgSteamDatagramDataCenterState__DataCenter methods */
void   cmsg_steam_datagram_data_center_state__data_center__init
                     (CMsgSteamDatagramDataCenterState__DataCenter         *message);
/* CMsgSteamDatagramDataCenterState methods */
void   cmsg_steam_datagram_data_center_state__init
                     (CMsgSteamDatagramDataCenterState         *message);
size_t cmsg_steam_datagram_data_center_state__get_packed_size
                     (const CMsgSteamDatagramDataCenterState   *message);
size_t cmsg_steam_datagram_data_center_state__pack
                     (const CMsgSteamDatagramDataCenterState   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_data_center_state__pack_to_buffer
                     (const CMsgSteamDatagramDataCenterState   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramDataCenterState *
       cmsg_steam_datagram_data_center_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_data_center_state__free_unpacked
                     (CMsgSteamDatagramDataCenterState *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramLinkInstantaneousStats methods */
void   cmsg_steam_datagram_link_instantaneous_stats__init
                     (CMsgSteamDatagramLinkInstantaneousStats         *message);
size_t cmsg_steam_datagram_link_instantaneous_stats__get_packed_size
                     (const CMsgSteamDatagramLinkInstantaneousStats   *message);
size_t cmsg_steam_datagram_link_instantaneous_stats__pack
                     (const CMsgSteamDatagramLinkInstantaneousStats   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_link_instantaneous_stats__pack_to_buffer
                     (const CMsgSteamDatagramLinkInstantaneousStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramLinkInstantaneousStats *
       cmsg_steam_datagram_link_instantaneous_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_link_instantaneous_stats__free_unpacked
                     (CMsgSteamDatagramLinkInstantaneousStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramLinkLifetimeStats methods */
void   cmsg_steam_datagram_link_lifetime_stats__init
                     (CMsgSteamDatagramLinkLifetimeStats         *message);
size_t cmsg_steam_datagram_link_lifetime_stats__get_packed_size
                     (const CMsgSteamDatagramLinkLifetimeStats   *message);
size_t cmsg_steam_datagram_link_lifetime_stats__pack
                     (const CMsgSteamDatagramLinkLifetimeStats   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_link_lifetime_stats__pack_to_buffer
                     (const CMsgSteamDatagramLinkLifetimeStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramLinkLifetimeStats *
       cmsg_steam_datagram_link_lifetime_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_link_lifetime_stats__free_unpacked
                     (CMsgSteamDatagramLinkLifetimeStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramConnectionQuality methods */
void   cmsg_steam_datagram_connection_quality__init
                     (CMsgSteamDatagramConnectionQuality         *message);
size_t cmsg_steam_datagram_connection_quality__get_packed_size
                     (const CMsgSteamDatagramConnectionQuality   *message);
size_t cmsg_steam_datagram_connection_quality__pack
                     (const CMsgSteamDatagramConnectionQuality   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_connection_quality__pack_to_buffer
                     (const CMsgSteamDatagramConnectionQuality   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramConnectionQuality *
       cmsg_steam_datagram_connection_quality__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_connection_quality__free_unpacked
                     (CMsgSteamDatagramConnectionQuality *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramConnectionStatsClientToRouter methods */
void   cmsg_steam_datagram_connection_stats_client_to_router__init
                     (CMsgSteamDatagramConnectionStatsClientToRouter         *message);
size_t cmsg_steam_datagram_connection_stats_client_to_router__get_packed_size
                     (const CMsgSteamDatagramConnectionStatsClientToRouter   *message);
size_t cmsg_steam_datagram_connection_stats_client_to_router__pack
                     (const CMsgSteamDatagramConnectionStatsClientToRouter   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_connection_stats_client_to_router__pack_to_buffer
                     (const CMsgSteamDatagramConnectionStatsClientToRouter   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramConnectionStatsClientToRouter *
       cmsg_steam_datagram_connection_stats_client_to_router__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_connection_stats_client_to_router__free_unpacked
                     (CMsgSteamDatagramConnectionStatsClientToRouter *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramConnectionStatsRouterToClient methods */
void   cmsg_steam_datagram_connection_stats_router_to_client__init
                     (CMsgSteamDatagramConnectionStatsRouterToClient         *message);
size_t cmsg_steam_datagram_connection_stats_router_to_client__get_packed_size
                     (const CMsgSteamDatagramConnectionStatsRouterToClient   *message);
size_t cmsg_steam_datagram_connection_stats_router_to_client__pack
                     (const CMsgSteamDatagramConnectionStatsRouterToClient   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_connection_stats_router_to_client__pack_to_buffer
                     (const CMsgSteamDatagramConnectionStatsRouterToClient   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramConnectionStatsRouterToClient *
       cmsg_steam_datagram_connection_stats_router_to_client__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_connection_stats_router_to_client__free_unpacked
                     (CMsgSteamDatagramConnectionStatsRouterToClient *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramConnectionStatsRouterToServer methods */
void   cmsg_steam_datagram_connection_stats_router_to_server__init
                     (CMsgSteamDatagramConnectionStatsRouterToServer         *message);
size_t cmsg_steam_datagram_connection_stats_router_to_server__get_packed_size
                     (const CMsgSteamDatagramConnectionStatsRouterToServer   *message);
size_t cmsg_steam_datagram_connection_stats_router_to_server__pack
                     (const CMsgSteamDatagramConnectionStatsRouterToServer   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_connection_stats_router_to_server__pack_to_buffer
                     (const CMsgSteamDatagramConnectionStatsRouterToServer   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramConnectionStatsRouterToServer *
       cmsg_steam_datagram_connection_stats_router_to_server__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_connection_stats_router_to_server__free_unpacked
                     (CMsgSteamDatagramConnectionStatsRouterToServer *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramConnectionStatsServerToRouter methods */
void   cmsg_steam_datagram_connection_stats_server_to_router__init
                     (CMsgSteamDatagramConnectionStatsServerToRouter         *message);
size_t cmsg_steam_datagram_connection_stats_server_to_router__get_packed_size
                     (const CMsgSteamDatagramConnectionStatsServerToRouter   *message);
size_t cmsg_steam_datagram_connection_stats_server_to_router__pack
                     (const CMsgSteamDatagramConnectionStatsServerToRouter   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_connection_stats_server_to_router__pack_to_buffer
                     (const CMsgSteamDatagramConnectionStatsServerToRouter   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramConnectionStatsServerToRouter *
       cmsg_steam_datagram_connection_stats_server_to_router__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_connection_stats_server_to_router__free_unpacked
                     (CMsgSteamDatagramConnectionStatsServerToRouter *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramClientPingSampleRequest methods */
void   cmsg_steam_datagram_client_ping_sample_request__init
                     (CMsgSteamDatagramClientPingSampleRequest         *message);
size_t cmsg_steam_datagram_client_ping_sample_request__get_packed_size
                     (const CMsgSteamDatagramClientPingSampleRequest   *message);
size_t cmsg_steam_datagram_client_ping_sample_request__pack
                     (const CMsgSteamDatagramClientPingSampleRequest   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_client_ping_sample_request__pack_to_buffer
                     (const CMsgSteamDatagramClientPingSampleRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramClientPingSampleRequest *
       cmsg_steam_datagram_client_ping_sample_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_client_ping_sample_request__free_unpacked
                     (CMsgSteamDatagramClientPingSampleRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramClientPingSampleReply__RoutingCluster methods */
void   cmsg_steam_datagram_client_ping_sample_reply__routing_cluster__init
                     (CMsgSteamDatagramClientPingSampleReply__RoutingCluster         *message);
/* CMsgSteamDatagramClientPingSampleReply methods */
void   cmsg_steam_datagram_client_ping_sample_reply__init
                     (CMsgSteamDatagramClientPingSampleReply         *message);
size_t cmsg_steam_datagram_client_ping_sample_reply__get_packed_size
                     (const CMsgSteamDatagramClientPingSampleReply   *message);
size_t cmsg_steam_datagram_client_ping_sample_reply__pack
                     (const CMsgSteamDatagramClientPingSampleReply   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_client_ping_sample_reply__pack_to_buffer
                     (const CMsgSteamDatagramClientPingSampleReply   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramClientPingSampleReply *
       cmsg_steam_datagram_client_ping_sample_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_client_ping_sample_reply__free_unpacked
                     (CMsgSteamDatagramClientPingSampleReply *message,
                      ProtobufCAllocator *allocator);
/* CMsgSteamDatagramClientSwitchedPrimary__RouterQuality methods */
void   cmsg_steam_datagram_client_switched_primary__router_quality__init
                     (CMsgSteamDatagramClientSwitchedPrimary__RouterQuality         *message);
/* CMsgSteamDatagramClientSwitchedPrimary methods */
void   cmsg_steam_datagram_client_switched_primary__init
                     (CMsgSteamDatagramClientSwitchedPrimary         *message);
size_t cmsg_steam_datagram_client_switched_primary__get_packed_size
                     (const CMsgSteamDatagramClientSwitchedPrimary   *message);
size_t cmsg_steam_datagram_client_switched_primary__pack
                     (const CMsgSteamDatagramClientSwitchedPrimary   *message,
                      uint8_t             *out);
size_t cmsg_steam_datagram_client_switched_primary__pack_to_buffer
                     (const CMsgSteamDatagramClientSwitchedPrimary   *message,
                      ProtobufCBuffer     *buffer);
CMsgSteamDatagramClientSwitchedPrimary *
       cmsg_steam_datagram_client_switched_primary__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_steam_datagram_client_switched_primary__free_unpacked
                     (CMsgSteamDatagramClientSwitchedPrimary *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgSteamDatagramRouterPingReply_Closure)
                 (const CMsgSteamDatagramRouterPingReply *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramGameserverPing_Closure)
                 (const CMsgSteamDatagramGameserverPing *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramGameServerAuthTicket__ExtraField_Closure)
                 (const CMsgSteamDatagramGameServerAuthTicket__ExtraField *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramGameServerAuthTicket_Closure)
                 (const CMsgSteamDatagramGameServerAuthTicket *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramGameserverSessionRequest_Closure)
                 (const CMsgSteamDatagramGameserverSessionRequest *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramGameserverSessionEstablished_Closure)
                 (const CMsgSteamDatagramGameserverSessionEstablished *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramNoSession_Closure)
                 (const CMsgSteamDatagramNoSession *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramDiagnostic_Closure)
                 (const CMsgSteamDatagramDiagnostic *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramDataCenterState__Server_Closure)
                 (const CMsgSteamDatagramDataCenterState__Server *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramDataCenterState__DataCenter_Closure)
                 (const CMsgSteamDatagramDataCenterState__DataCenter *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramDataCenterState_Closure)
                 (const CMsgSteamDatagramDataCenterState *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramLinkInstantaneousStats_Closure)
                 (const CMsgSteamDatagramLinkInstantaneousStats *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramLinkLifetimeStats_Closure)
                 (const CMsgSteamDatagramLinkLifetimeStats *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramConnectionQuality_Closure)
                 (const CMsgSteamDatagramConnectionQuality *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramConnectionStatsClientToRouter_Closure)
                 (const CMsgSteamDatagramConnectionStatsClientToRouter *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramConnectionStatsRouterToClient_Closure)
                 (const CMsgSteamDatagramConnectionStatsRouterToClient *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramConnectionStatsRouterToServer_Closure)
                 (const CMsgSteamDatagramConnectionStatsRouterToServer *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramConnectionStatsServerToRouter_Closure)
                 (const CMsgSteamDatagramConnectionStatsServerToRouter *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramClientPingSampleRequest_Closure)
                 (const CMsgSteamDatagramClientPingSampleRequest *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramClientPingSampleReply__RoutingCluster_Closure)
                 (const CMsgSteamDatagramClientPingSampleReply__RoutingCluster *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramClientPingSampleReply_Closure)
                 (const CMsgSteamDatagramClientPingSampleReply *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramClientSwitchedPrimary__RouterQuality_Closure)
                 (const CMsgSteamDatagramClientSwitchedPrimary__RouterQuality *message,
                  void *closure_data);
typedef void (*CMsgSteamDatagramClientSwitchedPrimary_Closure)
                 (const CMsgSteamDatagramClientSwitchedPrimary *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    esteam_datagram_msg_id__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_router_ping_reply__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_gameserver_ping__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_game_server_auth_ticket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_game_server_auth_ticket__extra_field__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_gameserver_session_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_gameserver_session_established__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_no_session__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_diagnostic__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_data_center_state__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_data_center_state__server__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_data_center_state__data_center__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_link_instantaneous_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_link_lifetime_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_connection_quality__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_connection_stats_client_to_router__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_connection_stats_router_to_client__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_connection_stats_router_to_server__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_connection_stats_server_to_router__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_client_ping_sample_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_client_ping_sample_reply__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_client_ping_sample_reply__routing_cluster__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_client_switched_primary__descriptor;
extern const ProtobufCMessageDescriptor cmsg_steam_datagram_client_switched_primary__router_quality__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_steamdatagram_5fmessages_2eproto__INCLUDED */
