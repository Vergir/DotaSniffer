/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_gcmessages_client.proto */

#ifndef PROTOBUF_C_dota_5fgcmessages_5fclient_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fgcmessages_5fclient_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "steammessages.pb-c.h"
#include "dota_shared_enums.pb-c.h"
#include "dota_gcmessages_common.pb-c.h"
#include "gcsdk_gcmessages.pb-c.h"
#include "dota_gcmessages_common_match_management.pb-c.h"

typedef struct _CMsgClientSuspended CMsgClientSuspended;
typedef struct _CMsgRequestInternationalTicket CMsgRequestInternationalTicket;
typedef struct _CMsgBalancedShuffleLobby CMsgBalancedShuffleLobby;
typedef struct _CMsgInitialQuestionnaireResponse CMsgInitialQuestionnaireResponse;
typedef struct _CMsgDOTAPlayerMatchHistory CMsgDOTAPlayerMatchHistory;
typedef struct _CMsgDOTAMatchHistoryFilter CMsgDOTAMatchHistoryFilter;
typedef struct _CMsgDOTARequestMatches CMsgDOTARequestMatches;
typedef struct _CMsgDOTARequestMatchesResponse CMsgDOTARequestMatchesResponse;
typedef struct _CMsgDOTARequestMatchesResponse__Series CMsgDOTARequestMatchesResponse__Series;
typedef struct _CMsgDOTAPopup CMsgDOTAPopup;
typedef struct _CMsgDOTAReportsRemainingRequest CMsgDOTAReportsRemainingRequest;
typedef struct _CMsgDOTAReportsRemainingResponse CMsgDOTAReportsRemainingResponse;
typedef struct _CMsgDOTASubmitPlayerReport CMsgDOTASubmitPlayerReport;
typedef struct _CMsgDOTASubmitPlayerReportResponse CMsgDOTASubmitPlayerReportResponse;
typedef struct _CMsgDOTAReportCountsRequest CMsgDOTAReportCountsRequest;
typedef struct _CMsgDOTAReportCountsResponse CMsgDOTAReportCountsResponse;
typedef struct _CMsgDOTASubmitLobbyMVPVote CMsgDOTASubmitLobbyMVPVote;
typedef struct _CMsgDOTASubmitLobbyMVPVoteResponse CMsgDOTASubmitLobbyMVPVoteResponse;
typedef struct _CMsgDOTALobbyMVPNotifyRecipient CMsgDOTALobbyMVPNotifyRecipient;
typedef struct _CMsgDOTALobbyMVPAwarded CMsgDOTALobbyMVPAwarded;
typedef struct _CMsgDOTAKickedFromMatchmakingQueue CMsgDOTAKickedFromMatchmakingQueue;
typedef struct _CMsgDOTARequestSaveGames CMsgDOTARequestSaveGames;
typedef struct _CMsgDOTARequestSaveGamesResponse CMsgDOTARequestSaveGamesResponse;
typedef struct _CMsgGCMatchDetailsRequest CMsgGCMatchDetailsRequest;
typedef struct _CMsgGCMatchDetailsResponse CMsgGCMatchDetailsResponse;
typedef struct _CMsgServerToGCMatchDetailsRequest CMsgServerToGCMatchDetailsRequest;
typedef struct _CMsgGCToServerMatchDetailsResponse CMsgGCToServerMatchDetailsResponse;
typedef struct _CMsgDOTAProfileRequest CMsgDOTAProfileRequest;
typedef struct _CMsgDOTAProfileResponse CMsgDOTAProfileResponse;
typedef struct _CMsgDOTAProfileResponse__PlayedHero CMsgDOTAProfileResponse__PlayedHero;
typedef struct _CMsgDOTAProfileResponse__ShowcaseHero CMsgDOTAProfileResponse__ShowcaseHero;
typedef struct _CMsgDOTAProfileResponse__LeaguePass CMsgDOTAProfileResponse__LeaguePass;
typedef struct _CMsgDOTAProfileResponse__EventTicket CMsgDOTAProfileResponse__EventTicket;
typedef struct _CMsgDOTAProfileResponse__FeaturedItem CMsgDOTAProfileResponse__FeaturedItem;
typedef struct _CMsgDOTAProfileTickets CMsgDOTAProfileTickets;
typedef struct _CMsgDOTAProfileTickets__LeaguePass CMsgDOTAProfileTickets__LeaguePass;
typedef struct _CMsgDOTAProfileTickets__EventTicket CMsgDOTAProfileTickets__EventTicket;
typedef struct _CMsgClientToGCGetProfileTickets CMsgClientToGCGetProfileTickets;
typedef struct _CMsgGCSteamProfileRequest CMsgGCSteamProfileRequest;
typedef struct _CMsgGCSteamProfileRequestResponse CMsgGCSteamProfileRequestResponse;
typedef struct _CMsgDOTAClearNotifySuccessfulReport CMsgDOTAClearNotifySuccessfulReport;
typedef struct _CMsgDOTAWelcome CMsgDOTAWelcome;
typedef struct _CMsgDOTAWelcome__LocalizationDigest CMsgDOTAWelcome__LocalizationDigest;
typedef struct _CMsgDOTAWelcome__CExtraMsg CMsgDOTAWelcome__CExtraMsg;
typedef struct _CSODOTAGameHeroFavorites CSODOTAGameHeroFavorites;
typedef struct _CMsgDOTAHeroFavoritesAdd CMsgDOTAHeroFavoritesAdd;
typedef struct _CMsgDOTAHeroFavoritesRemove CMsgDOTAHeroFavoritesRemove;
typedef struct _CMsgSetShowcaseHero CMsgSetShowcaseHero;
typedef struct _CMsgSetFeaturedItems CMsgSetFeaturedItems;
typedef struct _CMsgDOTAFeaturedItems CMsgDOTAFeaturedItems;
typedef struct _CMsgRequestLeagueInfo CMsgRequestLeagueInfo;
typedef struct _CDynamicLeagueData CDynamicLeagueData;
typedef struct _CStaticLeagueData CStaticLeagueData;
typedef struct _CLeagueData CLeagueData;
typedef struct _CMsgResponseLeagueInfo CMsgResponseLeagueInfo;
typedef struct _CMsgDOTAMatchVotes CMsgDOTAMatchVotes;
typedef struct _CMsgDOTAMatchVotes__PlayerVote CMsgDOTAMatchVotes__PlayerVote;
typedef struct _CMsgCastMatchVote CMsgCastMatchVote;
typedef struct _CMsgRetrieveMatchVote CMsgRetrieveMatchVote;
typedef struct _CMsgMatchVoteResponse CMsgMatchVoteResponse;
typedef struct _CMsgDOTAHallOfFame CMsgDOTAHallOfFame;
typedef struct _CMsgDOTAHallOfFame__FeaturedPlayer CMsgDOTAHallOfFame__FeaturedPlayer;
typedef struct _CMsgDOTAHallOfFame__FeaturedFarmer CMsgDOTAHallOfFame__FeaturedFarmer;
typedef struct _CMsgDOTAHallOfFameRequest CMsgDOTAHallOfFameRequest;
typedef struct _CMsgDOTAHallOfFameResponse CMsgDOTAHallOfFameResponse;
typedef struct _CMsgDOTAHalloweenHighScoreRequest CMsgDOTAHalloweenHighScoreRequest;
typedef struct _CMsgDOTAHalloweenHighScoreResponse CMsgDOTAHalloweenHighScoreResponse;
typedef struct _CMsgDOTAStorePromoPagesRequest CMsgDOTAStorePromoPagesRequest;
typedef struct _CMsgDOTAStorePromoPagesResponse CMsgDOTAStorePromoPagesResponse;
typedef struct _CMsgDOTAStorePromoPagesResponse__PromoPage CMsgDOTAStorePromoPagesResponse__PromoPage;
typedef struct _CMsgLeagueScheduleBlockTeamInfo CMsgLeagueScheduleBlockTeamInfo;
typedef struct _CMsgLeagueScheduleBlock CMsgLeagueScheduleBlock;
typedef struct _CMsgDOTALeague CMsgDOTALeague;
typedef struct _CMsgDOTALeagueScheduleRequest CMsgDOTALeagueScheduleRequest;
typedef struct _CMsgDOTALeagueScheduleResponse CMsgDOTALeagueScheduleResponse;
typedef struct _CMsgDOTALeagueScheduleEdit CMsgDOTALeagueScheduleEdit;
typedef struct _CMsgDOTALeagueScheduleEditResponse CMsgDOTALeagueScheduleEditResponse;
typedef struct _CMsgDOTALeaguesInMonthRequest CMsgDOTALeaguesInMonthRequest;
typedef struct _CMsgDOTALeaguesInMonthResponse CMsgDOTALeaguesInMonthResponse;
typedef struct _CMsgMatchmakingMatchGroupInfo CMsgMatchmakingMatchGroupInfo;
typedef struct _CMsgDOTAMatchmakingStatsRequest CMsgDOTAMatchmakingStatsRequest;
typedef struct _CMsgDOTAMatchmakingStatsResponse CMsgDOTAMatchmakingStatsResponse;
typedef struct _CMsgDOTAUpdateMatchmakingStats CMsgDOTAUpdateMatchmakingStats;
typedef struct _CMsgDOTAUpdateMatchManagementStats CMsgDOTAUpdateMatchManagementStats;
typedef struct _CMsgDOTASetMatchHistoryAccess CMsgDOTASetMatchHistoryAccess;
typedef struct _CMsgDOTASetMatchHistoryAccessResponse CMsgDOTASetMatchHistoryAccessResponse;
typedef struct _CMsgDOTANotifyAccountFlagsChange CMsgDOTANotifyAccountFlagsChange;
typedef struct _CMsgDOTASetProfilePrivacy CMsgDOTASetProfilePrivacy;
typedef struct _CMsgDOTASetProfilePrivacyResponse CMsgDOTASetProfilePrivacyResponse;
typedef struct _CMsgUpgradeLeagueItem CMsgUpgradeLeagueItem;
typedef struct _CMsgUpgradeLeagueItemResponse CMsgUpgradeLeagueItemResponse;
typedef struct _CMsgGCWatchDownloadedReplay CMsgGCWatchDownloadedReplay;
typedef struct _CMsgSetMapLocationState CMsgSetMapLocationState;
typedef struct _CMsgSetMapLocationStateResponse CMsgSetMapLocationStateResponse;
typedef struct _CMsgResetMapLocations CMsgResetMapLocations;
typedef struct _CMsgResetMapLocationsResponse CMsgResetMapLocationsResponse;
typedef struct _CMsgRefreshPartnerAccountLink CMsgRefreshPartnerAccountLink;
typedef struct _CMsgClientsRejoinChatChannels CMsgClientsRejoinChatChannels;
typedef struct _CMsgDOTASendFriendRecruits CMsgDOTASendFriendRecruits;
typedef struct _CMsgDOTAFriendRecruitsRequest CMsgDOTAFriendRecruitsRequest;
typedef struct _CMsgDOTAFriendRecruitsResponse CMsgDOTAFriendRecruitsResponse;
typedef struct _CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus;
typedef struct _CMsgDOTAFriendRecruitInviteAcceptDecline CMsgDOTAFriendRecruitInviteAcceptDecline;
typedef struct _CMsgRequestLeaguePrizePool CMsgRequestLeaguePrizePool;
typedef struct _CMsgRequestLeaguePrizePoolResponse CMsgRequestLeaguePrizePoolResponse;
typedef struct _CMsgGCGetHeroStandings CMsgGCGetHeroStandings;
typedef struct _CMsgGCGetHeroStandingsResponse CMsgGCGetHeroStandingsResponse;
typedef struct _CMsgGCGetHeroStandingsResponse__Hero CMsgGCGetHeroStandingsResponse__Hero;
typedef struct _CMsgGCItemEditorReservationsRequest CMsgGCItemEditorReservationsRequest;
typedef struct _CMsgGCItemEditorReservation CMsgGCItemEditorReservation;
typedef struct _CMsgGCItemEditorReservationsResponse CMsgGCItemEditorReservationsResponse;
typedef struct _CMsgGCItemEditorReserveItemDef CMsgGCItemEditorReserveItemDef;
typedef struct _CMsgGCItemEditorReserveItemDefResponse CMsgGCItemEditorReserveItemDefResponse;
typedef struct _CMsgGCItemEditorReleaseReservation CMsgGCItemEditorReleaseReservation;
typedef struct _CMsgGCItemEditorReleaseReservationResponse CMsgGCItemEditorReleaseReservationResponse;
typedef struct _CMsgGCItemEditorRequestLeagueInfo CMsgGCItemEditorRequestLeagueInfo;
typedef struct _CMsgGCItemEditorLeagueInfoResponse CMsgGCItemEditorLeagueInfoResponse;
typedef struct _CMsgDOTARewardTutorialPrizes CMsgDOTARewardTutorialPrizes;
typedef struct _CMsgDOTALastHitChallengeHighScorePost CMsgDOTALastHitChallengeHighScorePost;
typedef struct _CMsgDOTALastHitChallengeHighScoreRequest CMsgDOTALastHitChallengeHighScoreRequest;
typedef struct _CMsgDOTALastHitChallengeHighScoreResponse CMsgDOTALastHitChallengeHighScoreResponse;
typedef struct _CMsgFlipLobbyTeams CMsgFlipLobbyTeams;
typedef struct _CMsgPresentedClientTerminateDlg CMsgPresentedClientTerminateDlg;
typedef struct _CMsgGCLobbyUpdateBroadcastChannelInfo CMsgGCLobbyUpdateBroadcastChannelInfo;
typedef struct _CMsgDOTARedeemEventPrize CMsgDOTARedeemEventPrize;
typedef struct _CMsgDOTARedeemEventPrizeResponse CMsgDOTARedeemEventPrizeResponse;
typedef struct _CMsgDOTAGetEventPoints CMsgDOTAGetEventPoints;
typedef struct _CMsgDOTAGetEventPointsResponse CMsgDOTAGetEventPointsResponse;
typedef struct _CMsgDOTAGetEventPointsResponse__Action CMsgDOTAGetEventPointsResponse__Action;
typedef struct _CMsgDOTALiveLeagueGameUpdate CMsgDOTALiveLeagueGameUpdate;
typedef struct _CMsgDOTACompendiumSelection CMsgDOTACompendiumSelection;
typedef struct _CMsgDOTACompendiumSelectionResponse CMsgDOTACompendiumSelectionResponse;
typedef struct _CMsgDOTACompendiumData CMsgDOTACompendiumData;
typedef struct _CMsgDOTACompendiumDataRequest CMsgDOTACompendiumDataRequest;
typedef struct _CMsgDOTACompendiumDataResponse CMsgDOTACompendiumDataResponse;
typedef struct _CMsgDOTAGetPlayerMatchHistory CMsgDOTAGetPlayerMatchHistory;
typedef struct _CMsgDOTAGetPlayerMatchHistoryResponse CMsgDOTAGetPlayerMatchHistoryResponse;
typedef struct _CMsgDOTAGetPlayerMatchHistoryResponse__Match CMsgDOTAGetPlayerMatchHistoryResponse__Match;
typedef struct _CMsgDOTAStartDailyHeroChallenge CMsgDOTAStartDailyHeroChallenge;
typedef struct _CMsgGCNotificationsRequest CMsgGCNotificationsRequest;
typedef struct _CMsgGCNotificationsResponse CMsgGCNotificationsResponse;
typedef struct _CMsgGCNotificationsResponse__Notification CMsgGCNotificationsResponse__Notification;
typedef struct _CMsgGCNotificationsMarkReadRequest CMsgGCNotificationsMarkReadRequest;
typedef struct _CMsgClientToGCMarkNotificationListRead CMsgClientToGCMarkNotificationListRead;
typedef struct _CMsgGCLeagueAdminState CMsgGCLeagueAdminState;
typedef struct _CMsgGCLeagueAdminState__PrivateLeagueKeys CMsgGCLeagueAdminState__PrivateLeagueKeys;
typedef struct _CMsgGCPlayerInfoRequest CMsgGCPlayerInfoRequest;
typedef struct _CMsgGCPlayerInfoRequest__PlayerInfo CMsgGCPlayerInfoRequest__PlayerInfo;
typedef struct _CMsgGCPlayerInfoSubmit CMsgGCPlayerInfoSubmit;
typedef struct _CMsgGCPlayerInfoSubmitResponse CMsgGCPlayerInfoSubmitResponse;
typedef struct _CMsgClientProvideSurveyResult CMsgClientProvideSurveyResult;
typedef struct _CMsgClientProvideSurveyResult__Response CMsgClientProvideSurveyResult__Response;
typedef struct _CMsgDOTAEmoticonAccessSDO CMsgDOTAEmoticonAccessSDO;
typedef struct _CMsgClientToGCEmoticonDataRequest CMsgClientToGCEmoticonDataRequest;
typedef struct _CMsgGCToClientEmoticonData CMsgGCToClientEmoticonData;
typedef struct _CMsgClientToGCTrackDialogResult CMsgClientToGCTrackDialogResult;
typedef struct _CMsgGCToClientTournamentItemDrop CMsgGCToClientTournamentItemDrop;
typedef struct _CMsgClientToGCSetAdditionalEquips CMsgClientToGCSetAdditionalEquips;
typedef struct _CMsgClientToGCSetAdditionalEquipsResponse CMsgClientToGCSetAdditionalEquipsResponse;
typedef struct _CMsgClientToGCGetAdditionalEquips CMsgClientToGCGetAdditionalEquips;
typedef struct _CMsgClientToGCGetAdditionalEquipsResponse CMsgClientToGCGetAdditionalEquipsResponse;
typedef struct _CMsgClientToGCGetAllHeroOrder CMsgClientToGCGetAllHeroOrder;
typedef struct _CMsgClientToGCGetAllHeroOrderResponse CMsgClientToGCGetAllHeroOrderResponse;
typedef struct _CMsgClientToGCGetAllHeroProgress CMsgClientToGCGetAllHeroProgress;
typedef struct _CMsgClientToGCGetAllHeroProgressResponse CMsgClientToGCGetAllHeroProgressResponse;
typedef struct _CMsgClientToGCGetTrophyList CMsgClientToGCGetTrophyList;
typedef struct _CMsgClientToGCGetTrophyListResponse CMsgClientToGCGetTrophyListResponse;
typedef struct _CMsgClientToGCGetTrophyListResponse__Trophy CMsgClientToGCGetTrophyListResponse__Trophy;
typedef struct _CMsgGCToClientTrophyAwarded CMsgGCToClientTrophyAwarded;
typedef struct _CMsgClientToGCGetProfileCard CMsgClientToGCGetProfileCard;
typedef struct _CMsgClientToGCSetProfileCardSlots CMsgClientToGCSetProfileCardSlots;
typedef struct _CMsgClientToGCSetProfileCardSlots__CardSlot CMsgClientToGCSetProfileCardSlots__CardSlot;
typedef struct _CMsgClientToGCGetProfileCardStats CMsgClientToGCGetProfileCardStats;
typedef struct _CMsgClientToGCCreateHeroStatue CMsgClientToGCCreateHeroStatue;
typedef struct _CMsgClientToGCCreateTeamShowcase CMsgClientToGCCreateTeamShowcase;
typedef struct _CMsgGCToClientHeroStatueCreateResult CMsgGCToClientHeroStatueCreateResult;
typedef struct _CMsgGCToClientTeamShowcaseCreateResult CMsgGCToClientTeamShowcaseCreateResult;
typedef struct _CMsgClientToGCRecordCompendiumStats CMsgClientToGCRecordCompendiumStats;
typedef struct _CMsgGCToClientEventStatusChanged CMsgGCToClientEventStatusChanged;
typedef struct _CMsgClientToGCPlayerStatsRequest CMsgClientToGCPlayerStatsRequest;
typedef struct _CMsgGCToClientPlayerStatsResponse CMsgGCToClientPlayerStatsResponse;
typedef struct _CMsgClientToGCCustomGamePlayerCountRequest CMsgClientToGCCustomGamePlayerCountRequest;
typedef struct _CMsgGCToClientCustomGamePlayerCountResponse CMsgGCToClientCustomGamePlayerCountResponse;
typedef struct _CMsgClientToGCCustomGamesFriendsPlayedRequest CMsgClientToGCCustomGamesFriendsPlayedRequest;
typedef struct _CMsgGCToClientCustomGamesFriendsPlayedResponse CMsgGCToClientCustomGamesFriendsPlayedResponse;
typedef struct _CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame;
typedef struct _CMsgClientToGCSocialFeedPostCommentRequest CMsgClientToGCSocialFeedPostCommentRequest;
typedef struct _CMsgGCToClientSocialFeedPostCommentResponse CMsgGCToClientSocialFeedPostCommentResponse;
typedef struct _CMsgClientToGCSocialFeedPostMessageRequest CMsgClientToGCSocialFeedPostMessageRequest;
typedef struct _CMsgGCToClientSocialFeedPostMessageResponse CMsgGCToClientSocialFeedPostMessageResponse;
typedef struct _CMsgClientToGCFriendsPlayedCustomGameRequest CMsgClientToGCFriendsPlayedCustomGameRequest;
typedef struct _CMsgGCToClientFriendsPlayedCustomGameResponse CMsgGCToClientFriendsPlayedCustomGameResponse;
typedef struct _CMsgClientToGCFeaturedHeroesRequest CMsgClientToGCFeaturedHeroesRequest;
typedef struct _CMsgGCToClientFeaturedHeroesResponse CMsgGCToClientFeaturedHeroesResponse;
typedef struct _CMsgGCToClientFeaturedHeroesResponse__DataField CMsgGCToClientFeaturedHeroesResponse__DataField;
typedef struct _CMsgGCToClientFeaturedHeroesResponse__FeaturedHero CMsgGCToClientFeaturedHeroesResponse__FeaturedHero;
typedef struct _CMsgGCToClientFeaturedHeroesResponse__Category CMsgGCToClientFeaturedHeroesResponse__Category;
typedef struct _CMsgClientToGCSocialMatchPostCommentRequest CMsgClientToGCSocialMatchPostCommentRequest;
typedef struct _CMsgGCToClientSocialMatchPostCommentResponse CMsgGCToClientSocialMatchPostCommentResponse;
typedef struct _CMsgClientToGCSocialMatchDetailsRequest CMsgClientToGCSocialMatchDetailsRequest;
typedef struct _CMsgGCToClientSocialMatchDetailsResponse CMsgGCToClientSocialMatchDetailsResponse;
typedef struct _CMsgGCToClientSocialMatchDetailsResponse__Comment CMsgGCToClientSocialMatchDetailsResponse__Comment;
typedef struct _CMsgDOTAPartyRichPresence CMsgDOTAPartyRichPresence;
typedef struct _CMsgDOTAPartyRichPresence__Member CMsgDOTAPartyRichPresence__Member;
typedef struct _CMsgDOTAPartyRichPresence__WeekendTourney CMsgDOTAPartyRichPresence__WeekendTourney;
typedef struct _CMsgDOTALobbyRichPresence CMsgDOTALobbyRichPresence;
typedef struct _CMsgDOTACustomGameListenServerStartedLoading CMsgDOTACustomGameListenServerStartedLoading;
typedef struct _CMsgDOTACustomGameClientFinishedLoading CMsgDOTACustomGameClientFinishedLoading;
typedef struct _CMsgClientToGCGetLeagueSeries CMsgClientToGCGetLeagueSeries;
typedef struct _CMsgClientToGCGetLeagueSeriesResponse CMsgClientToGCGetLeagueSeriesResponse;
typedef struct _CMsgClientToGCGetLeagueSeriesResponse__Series CMsgClientToGCGetLeagueSeriesResponse__Series;
typedef struct _CMsgClientToGCGetLeagueSeriesResponse__Series__Team CMsgClientToGCGetLeagueSeriesResponse__Series__Team;
typedef struct _CMsgClientToGCApplyGemCombiner CMsgClientToGCApplyGemCombiner;
typedef struct _CMsgClientToGCH264Unsupported CMsgClientToGCH264Unsupported;
typedef struct _CMsgClientToGCRequestH264Support CMsgClientToGCRequestH264Support;
typedef struct _CMsgClientToGCGetQuestProgress CMsgClientToGCGetQuestProgress;
typedef struct _CMsgClientToGCGetQuestProgressResponse CMsgClientToGCGetQuestProgressResponse;
typedef struct _CMsgClientToGCGetQuestProgressResponse__Challenge CMsgClientToGCGetQuestProgressResponse__Challenge;
typedef struct _CMsgClientToGCGetQuestProgressResponse__Quest CMsgClientToGCGetQuestProgressResponse__Quest;
typedef struct _CMsgGCToClientMatchSignedOut CMsgGCToClientMatchSignedOut;
typedef struct _CMsgGCGetHeroStatsHistory CMsgGCGetHeroStatsHistory;
typedef struct _CMsgGCGetHeroStatsHistoryResponse CMsgGCGetHeroStatsHistoryResponse;
typedef struct _CMsgPlayerConductScorecardRequest CMsgPlayerConductScorecardRequest;
typedef struct _CMsgPlayerConductScorecard CMsgPlayerConductScorecard;
typedef struct _CMsgClientToGCWageringRequest CMsgClientToGCWageringRequest;
typedef struct _CMsgGCToClientWageringResponse CMsgGCToClientWageringResponse;
typedef struct _CMsgGCToClientWageringUpdate CMsgGCToClientWageringUpdate;
typedef struct _CMsgGCToClientArcanaVotesUpdate CMsgGCToClientArcanaVotesUpdate;
typedef struct _CMsgClientToGCMysteryItem CMsgClientToGCMysteryItem;
typedef struct _CMsgGCToClientMysteryItemResponse CMsgGCToClientMysteryItemResponse;
typedef struct _CMsgClientToGCGetEventGoals CMsgClientToGCGetEventGoals;
typedef struct _CMsgEventGoals CMsgEventGoals;
typedef struct _CMsgEventGoals__EventGoal CMsgEventGoals__EventGoal;
typedef struct _CMsgGCToGCLeaguePredictions CMsgGCToGCLeaguePredictions;
typedef struct _CMsgPredictionRankings CMsgPredictionRankings;
typedef struct _CMsgPredictionRankings__PredictionLine CMsgPredictionRankings__PredictionLine;
typedef struct _CMsgPredictionRankings__Prediction CMsgPredictionRankings__Prediction;
typedef struct _CMsgPredictionResults CMsgPredictionResults;
typedef struct _CMsgPredictionResults__ResultBreakdown CMsgPredictionResults__ResultBreakdown;
typedef struct _CMsgPredictionResults__Result CMsgPredictionResults__Result;
typedef struct _CMsgClientToGCSuspiciousActivity CMsgClientToGCSuspiciousActivity;
typedef struct _CMsgClientToGCHasPlayerVotedForMVP CMsgClientToGCHasPlayerVotedForMVP;
typedef struct _CMsgClientToGCHasPlayerVotedForMVPResponse CMsgClientToGCHasPlayerVotedForMVPResponse;
typedef struct _CMsgClientToGCVoteForMVP CMsgClientToGCVoteForMVP;
typedef struct _CMsgClientToGCVoteForMVPResponse CMsgClientToGCVoteForMVPResponse;
typedef struct _CMsgMVPVotesForMatch CMsgMVPVotesForMatch;
typedef struct _CMsgMVPVotesForMatch__Player CMsgMVPVotesForMatch__Player;
typedef struct _CMsgLeaguePrizePool CMsgLeaguePrizePool;
typedef struct _CMsgClientToGCTeammateStatsRequest CMsgClientToGCTeammateStatsRequest;
typedef struct _CMsgClientToGCTeammateStatsResponse CMsgClientToGCTeammateStatsResponse;
typedef struct _CMsgClientToGCTeammateStatsResponse__TeammateStat CMsgClientToGCTeammateStatsResponse__TeammateStat;
typedef struct _CMsgClientToGCVoteForArcana CMsgClientToGCVoteForArcana;
typedef struct _CMsgClientToGCVoteForArcana__MatchVote CMsgClientToGCVoteForArcana__MatchVote;
typedef struct _CMsgClientToGCVoteForArcanaResponse CMsgClientToGCVoteForArcanaResponse;
typedef struct _CMsgArcanaVotes CMsgArcanaVotes;
typedef struct _CMsgArcanaVotes__Match CMsgArcanaVotes__Match;
typedef struct _CMsgClientToGCRequestArcanaVotesRemaining CMsgClientToGCRequestArcanaVotesRemaining;
typedef struct _CMsgClientToGCRequestArcanaVotesRemainingResponse CMsgClientToGCRequestArcanaVotesRemainingResponse;
typedef struct _CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote;
typedef struct _CMsgClientToGCRequestEventPointLog CMsgClientToGCRequestEventPointLog;
typedef struct _CMsgClientToGCRequestEventPointLogResponse CMsgClientToGCRequestEventPointLogResponse;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__AchievementEvent CMsgClientToGCRequestEventPointLogResponse__AchievementEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent;
typedef struct _CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction;
typedef struct _CMsgClientToGCPublishUserStat CMsgClientToGCPublishUserStat;
typedef struct _CMsgClientToGCAddTI6TreeProgress CMsgClientToGCAddTI6TreeProgress;
typedef struct _CMsgClientToGCRedeemReward CMsgClientToGCRedeemReward;
typedef struct _CMsgGCToClientRedeemRewardResponse CMsgGCToClientRedeemRewardResponse;
typedef struct _CMsgClientToGCRequestLinaPlaysRemaining CMsgClientToGCRequestLinaPlaysRemaining;
typedef struct _CMsgClientToGCRequestLinaPlaysRemainingResponse CMsgClientToGCRequestLinaPlaysRemainingResponse;
typedef struct _CMsgClientToGCRequestLinaGameResult CMsgClientToGCRequestLinaGameResult;
typedef struct _CMsgClientToGCRequestLinaGameResultResponse CMsgClientToGCRequestLinaGameResultResponse;
typedef struct _CMsgGCToClientQuestProgressUpdated CMsgGCToClientQuestProgressUpdated;
typedef struct _CMsgGCToClientQuestProgressUpdated__Challenge CMsgGCToClientQuestProgressUpdated__Challenge;
typedef struct _CMsgDOTARedeemItem CMsgDOTARedeemItem;
typedef struct _CMsgDOTARedeemItemResponse CMsgDOTARedeemItemResponse;
typedef struct _CMsgPerfectWorldUserLookupRequest CMsgPerfectWorldUserLookupRequest;
typedef struct _CMsgPerfectWorldUserLookupResponse CMsgPerfectWorldUserLookupResponse;
typedef struct _CMsgNexonPartnerUpdate CMsgNexonPartnerUpdate;
typedef struct _CMsgMakeOffering CMsgMakeOffering;
typedef struct _CMsgRequestOfferings CMsgRequestOfferings;
typedef struct _CMsgRequestOfferingsResponse CMsgRequestOfferingsResponse;
typedef struct _CMsgRequestOfferingsResponse__NewYearsOffering CMsgRequestOfferingsResponse__NewYearsOffering;
typedef struct _CMsgDOTAPCBangTimedReward CMsgDOTAPCBangTimedReward;
typedef struct _CMsgDOTACompendiumInGamePredictionResults CMsgDOTACompendiumInGamePredictionResults;
typedef struct _CMsgDOTACompendiumInGamePredictionResults__PredictionResult CMsgDOTACompendiumInGamePredictionResults__PredictionResult;
typedef struct _CMsgClientToGCSelectCompendiumInGamePrediction CMsgClientToGCSelectCompendiumInGamePrediction;
typedef struct _CMsgClientToGCSelectCompendiumInGamePrediction__Prediction CMsgClientToGCSelectCompendiumInGamePrediction__Prediction;
typedef struct _CMsgClientToGCSelectCompendiumInGamePredictionResponse CMsgClientToGCSelectCompendiumInGamePredictionResponse;
typedef struct _CMsgClientToGCOpenPlayerCardPack CMsgClientToGCOpenPlayerCardPack;
typedef struct _CMsgClientToGCOpenPlayerCardPackResponse CMsgClientToGCOpenPlayerCardPackResponse;
typedef struct _CMsgClientToGCRecyclePlayerCard CMsgClientToGCRecyclePlayerCard;
typedef struct _CMsgClientToGCRecyclePlayerCardResponse CMsgClientToGCRecyclePlayerCardResponse;
typedef struct _CMsgClientToGCCreatePlayerCardPack CMsgClientToGCCreatePlayerCardPack;
typedef struct _CMsgClientToGCCreatePlayerCardPackResponse CMsgClientToGCCreatePlayerCardPackResponse;


/* --- enums --- */

typedef enum _CMsgDOTARequestMatches__SkillLevel {
  CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL__Any = 0,
  CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL__Normal = 1,
  CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL__High = 2,
  CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL__VeryHigh = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL)
} CMsgDOTARequestMatches__SkillLevel;
typedef enum _CMsgDOTAPopup__PopupID {
  CMSG_DOTAPOPUP__POPUP_ID__NONE = -1,
  CMSG_DOTAPOPUP__POPUP_ID__KICKED_FROM_LOBBY = 0,
  CMSG_DOTAPOPUP__POPUP_ID__KICKED_FROM_PARTY = 1,
  CMSG_DOTAPOPUP__POPUP_ID__KICKED_FROM_TEAM = 2,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_WAS_DISBANDED = 3,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_FULL = 6,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_FAIL_ADD = 7,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMSG_DOTAPOPUP__POPUP_ID__TEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMSG_DOTAPOPUP__POPUP_ID__MATCHMAKING_DISABLED = 12,
  CMSG_DOTAPOPUP__POPUP_ID__INVITE_DENIED = 13,
  CMSG_DOTAPOPUP__POPUP_ID__PARTY_FULL = 14,
  CMSG_DOTAPOPUP__POPUP_ID__MADE_ADMIN = 15,
  CMSG_DOTAPOPUP__POPUP_ID__NEED_TO_PURCHASE = 16,
  CMSG_DOTAPOPUP__POPUP_ID__SIGNON_MESSAGE = 17,
  CMSG_DOTAPOPUP__POPUP_ID__GUILD_KICKED = 18,
  CMSG_DOTAPOPUP__POPUP_ID__MATCHMAKING_REGION_OFFLINE = 19,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_NOT_FOUND = 21,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_HAS_LOBBY_ID = 22,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_HAS_MATCH_ID = 23,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25,
  CMSG_DOTAPOPUP__POPUP_ID__TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26,
  CMSG_DOTAPOPUP__POPUP_ID__NOT_LEAGUE_ADMIN = 27,
  CMSG_DOTAPOPUP__POPUP_ID__IN_ANOTHER_GAME = 29,
  CMSG_DOTAPOPUP__POPUP_ID__PARTY_MEMBER_IN_ANOTHER_GAME = 30,
  CMSG_DOTAPOPUP__POPUP_ID__PARTY_MEMBER_IN_LOW_PRIORITY = 31,
  CMSG_DOTAPOPUP__POPUP_ID__CLIENT_OUT_OF_DATE = 32,
  CMSG_DOTAPOPUP__POPUP_ID__SAVE_GAME_CORRUPT = 38,
  CMSG_DOTAPOPUP__POPUP_ID__INSUFFICIENT_INGOTS = 39,
  CMSG_DOTAPOPUP__POPUP_ID__COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = 42,
  CMSG_DOTAPOPUP__POPUP_ID__PARTY_LEADER_JOINED_LOBBY = 44,
  CMSG_DOTAPOPUP__POPUP_ID__WEEKEND_TOURNEY_UNMATCHED = 48,
  CMSG_DOTAPOPUP__POPUP_ID__POST_MATCH_SURVEY = 49,
  CMSG_DOTAPOPUP__POPUP_ID__TROPHY_AWARDED = 50,
  CMSG_DOTAPOPUP__POPUP_ID__TROPHY_LEVEL_UP = 51,
  CMSG_DOTAPOPUP__POPUP_ID__ALL_HERO_CHALLENGE_PROGRESS = 52,
  CMSG_DOTAPOPUP__POPUP_ID__NEED_INITIAL_SKILL = 53,
  CMSG_DOTAPOPUP__POPUP_ID__NEED_INITIAL_SKILL_IN_PARTY = 54,
  CMSG_DOTAPOPUP__POPUP_ID__TARGET_ENGINE_MISMATCH = 55,
  CMSG_DOTAPOPUP__POPUP_ID__VAC_NOT_VERIFIED = 56,
  CMSG_DOTAPOPUP__POPUP_ID__KICKED_FROM_QUEUE_EVENT_STARTING = 57,
  CMSG_DOTAPOPUP__POPUP_ID__KICKED_FROM_QUEUE_EVENT_ENDING = 58,
  CMSG_DOTAPOPUP__POPUP_ID__LOBBY_FULL = 62,
  CMSG_DOTAPOPUP__POPUP_ID__EVENT_POINTS_EARNED = 63,
  CMSG_DOTAPOPUP__POPUP_ID__CUSTOM_GAME_INCORRECT_VERSION = 64,
  CMSG_DOTAPOPUP__POPUP_ID__LIMITED_USER_CHAT = 66,
  CMSG_DOTAPOPUP__POPUP_ID__EVENT_PREMIUM_POINTS_EARNED = 67,
  CMSG_DOTAPOPUP__POPUP_ID__LOBBY_MVP_AWARDED = 68
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAPOPUP__POPUP_ID)
} CMsgDOTAPopup__PopupID;
typedef enum _CMsgDOTAFriendRecruitsResponse__EResult {
  CMSG_DOTAFRIEND_RECRUITS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_DOTAFRIEND_RECRUITS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAFRIEND_RECRUITS_RESPONSE__ERESULT)
} CMsgDOTAFriendRecruitsResponse__EResult;
typedef enum _CMsgDOTARedeemEventPrizeResponse__ResultCode {
  CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE__Success = 0,
  CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE__ServerError = 1,
  CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE__InsufficientPoints = 2,
  CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE__PointsHeld = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE)
} CMsgDOTARedeemEventPrizeResponse__ResultCode;
typedef enum _CMsgGCNotificationsResponse__EResult {
  CMSG_GCNOTIFICATIONS_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_GCNOTIFICATIONS_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCNOTIFICATIONS_RESPONSE__ERESULT)
} CMsgGCNotificationsResponse__EResult;
typedef enum _CMsgGCPlayerInfoSubmitResponse__EResult {
  CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__ERESULT__ERROR_UNSPECIFIED = 1,
  CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__ERESULT__ERROR_INFO_LOCKED = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__ERESULT)
} CMsgGCPlayerInfoSubmitResponse__EResult;
typedef enum _CMsgGCToClientMysteryItemResponse__Result {
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_SDO_LOAD = 1,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_NO_ACTIONS = 2,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_NO_LOOTLIST = 3,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_EMPTY_LOOTLIST = 4,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_NO_ITEM_GENERATED = 5,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_SQL_COMMIT = 6,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_EVENT_NOT_OWNED = 7,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_INVALID_ACTION = 8,
  CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__FAILURE_ALREADY_GRANTED = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT)
} CMsgGCToClientMysteryItemResponse__Result;
typedef enum _CMsgClientToGCVoteForArcanaResponse__Result {
  CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__RESULT__SUCCEEDED = 0,
  CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__RESULT__VOTING_NOT_ENABLED_FOR_ROUND = 1,
  CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__RESULT__UNKNOWN_FAILURE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__RESULT)
} CMsgClientToGCVoteForArcanaResponse__Result;
typedef enum _CMsgArcanaVotes__VotingState {
  CMSG_ARCANA_VOTES__VOTING_STATE__FINISHED = 0,
  CMSG_ARCANA_VOTES__VOTING_STATE__IN_PROGRESS = 1,
  CMSG_ARCANA_VOTES__VOTING_STATE__IN_FUTURE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_ARCANA_VOTES__VOTING_STATE)
} CMsgArcanaVotes__VotingState;
typedef enum _CMsgGCToClientRedeemRewardResponse__Result {
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__SUCCESS = 0,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_SDO_LOCK = 1,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_SDO_LOAD = 2,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_EVENT_NOT_OWNED = 3,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_EVENT_NOT_ACTIVE = 4,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_INVALID_ACTION = 5,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_REQUIREMENTS_NOT_MET = 6,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_ALREADY_GRANTED = 7,
  CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__FAILURE_TIMEOUT = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT)
} CMsgGCToClientRedeemRewardResponse__Result;
typedef enum _CMsgDOTARedeemItemResponse__EResultCode {
  CMSG_DOTAREDEEM_ITEM_RESPONSE__ERESULT_CODE__k_Succeeded = 0,
  CMSG_DOTAREDEEM_ITEM_RESPONSE__ERESULT_CODE__k_Failed = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAREDEEM_ITEM_RESPONSE__ERESULT_CODE)
} CMsgDOTARedeemItemResponse__EResultCode;
typedef enum _CMsgPerfectWorldUserLookupResponse__EResultCode {
  CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__SUCCESS_ACCOUNT_FOUND = 0,
  CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__ERROR_UNKNOWN = 1,
  CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__ERROR_USER_NAME_WRONG_FORMAT = 2,
  CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3,
  CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE)
} CMsgPerfectWorldUserLookupResponse__EResultCode;
typedef enum _CMsgClientToGCSelectCompendiumInGamePredictionResponse__EResult {
  CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT__SUCCESS = 0,
  CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT__INVALID_MATCH = 1,
  CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT__PREDICTIONS_ARE_CLOSED = 2,
  CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT__OTHER_ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT)
} CMsgClientToGCSelectCompendiumInGamePredictionResponse__EResult;
typedef enum _CMsgClientToGCOpenPlayerCardPackResponse__Result {
  CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__SUCCESS = 1,
  CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_INTERNAL = 2,
  CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_FAILED_TO_FIND_PACK = 3,
  CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_ITEM_NOT_CARD_PACK = 4,
  CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_FAILED_CARD_CREATE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT)
} CMsgClientToGCOpenPlayerCardPackResponse__Result;
typedef enum _CMsgClientToGCRecyclePlayerCardResponse__Result {
  CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__SUCCESS = 1,
  CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__ERROR_INTERNAL = 2,
  CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__ERROR_FAILED_TO_FIND_PLAYER_CARD = 3,
  CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__ERROR_ITEM_NOT_PLAYER_CARD = 4,
  CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__ERROR_FAILED_DUST_CARD_CREATE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT)
} CMsgClientToGCRecyclePlayerCardResponse__Result;
typedef enum _CMsgClientToGCCreatePlayerCardPackResponse__Result {
  CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__SUCCESS = 1,
  CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_INTERNAL = 2,
  CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_INSUFFICIENT_DUST = 3,
  CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_ITEM_NOT_DUST_ITEM = 4,
  CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__ERROR_FAILED_CARD_PACK_CREATE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT)
} CMsgClientToGCCreatePlayerCardPackResponse__Result;
typedef enum _DOTAWatchReplayType {
  DOTA__WATCH_REPLAY_TYPE__DOTA_WATCH_REPLAY_NORMAL = 0,
  DOTA__WATCH_REPLAY_TYPE__DOTA_WATCH_REPLAY_HIGHLIGHTS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__WATCH_REPLAY_TYPE)
} DOTAWatchReplayType;
typedef enum _EItemEditorReservationResult {
  EITEM_EDITOR_RESERVATION_RESULT__k_EItemEditorReservationResult_OK = 1,
  EITEM_EDITOR_RESERVATION_RESULT__k_EItemEditorReservationResult_AlreadyExists = 2,
  EITEM_EDITOR_RESERVATION_RESULT__k_EItemEditorReservationResult_Reserved = 3,
  EITEM_EDITOR_RESERVATION_RESULT__k_EItemEditorReservationResult_TimedOut = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EITEM_EDITOR_RESERVATION_RESULT)
} EItemEditorReservationResult;
typedef enum _EFeaturedHeroTextField {
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_NewHero = 0,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_NewItem = 1,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_ItemSetDescription = 2,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_ItemDescription = 3,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_Hype = 4,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_HeroWinLoss = 5,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_FrequentlyPlayedHero = 6,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_FeaturedItem = 7,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_PopularItem = 8,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_SaleItem = 9,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_SaleDiscount = 10,
  EFEATURED_HERO_TEXT_FIELD__k_EFeaturedHeroTextField_Container = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EFEATURED_HERO_TEXT_FIELD)
} EFeaturedHeroTextField;
typedef enum _EFeaturedHeroDataType {
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_HeroID = 0,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_ItemDef = 1,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_HypeString = 2,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_StartTimestamp = 3,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_ExpireTimestamp = 4,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_HeroWins = 5,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_HeroLosses = 6,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_SaleDiscount = 7,
  EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_ContainerItemDef = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EFEATURED_HERO_DATA_TYPE)
} EFeaturedHeroDataType;
typedef enum _EWeekendTourneyRichPresenceEvent {
  EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT__k_EWeekendTourneyRichPresenceEvent_None = 0,
  EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT__k_EWeekendTourneyRichPresenceEvent_StartedMatch = 1,
  EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT__k_EWeekendTourneyRichPresenceEvent_WonMatch = 2,
  EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT__k_EWeekendTourneyRichPresenceEvent_Eliminated = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT)
} EWeekendTourneyRichPresenceEvent;

/* --- messages --- */

struct  _CMsgClientSuspended
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time_end;
  uint32_t time_end;
};
#define CMSG_CLIENT_SUSPENDED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_suspended__descriptor) \
    , 0,0 }


struct  _CMsgRequestInternationalTicket
{
  ProtobufCMessage base;
};
#define CMSG_REQUEST_INTERNATIONAL_TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_international_ticket__descriptor) \
     }


struct  _CMsgBalancedShuffleLobby
{
  ProtobufCMessage base;
};
#define CMSG_BALANCED_SHUFFLE_LOBBY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_balanced_shuffle_lobby__descriptor) \
     }


struct  _CMsgInitialQuestionnaireResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_initial_skill;
  uint32_t initial_skill;
};
#define CMSG_INITIAL_QUESTIONNAIRE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_initial_questionnaire_response__descriptor) \
    , 0,0 }


struct  _CMsgDOTAPlayerMatchHistory
{
  ProtobufCMessage base;
  size_t n_match_ids;
  uint64_t *match_ids;
};
#define CMSG_DOTAPLAYER_MATCH_HISTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaplayer_match_history__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAMatchHistoryFilter
{
  ProtobufCMessage base;
  size_t n_match_ids;
  uint64_t *match_ids;
  protobuf_c_boolean has_newest_match_id_at_last_query;
  uint64_t newest_match_id_at_last_query;
  protobuf_c_boolean has_time_last_query;
  uint32_t time_last_query;
};
#define CMSG_DOTAMATCH_HISTORY_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch_history_filter__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _CMsgDOTARequestMatches
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_game_mode;
  uint32_t game_mode;
  protobuf_c_boolean has_date_min;
  uint32_t date_min;
  protobuf_c_boolean has_date_max;
  uint32_t date_max;
  protobuf_c_boolean has_matches_requested;
  uint32_t matches_requested;
  protobuf_c_boolean has_start_at_match_id;
  uint64_t start_at_match_id;
  protobuf_c_boolean has_min_players;
  uint32_t min_players;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
  protobuf_c_boolean has_tournament_games_only;
  protobuf_c_boolean tournament_games_only;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_skill;
  CMsgDOTARequestMatches__SkillLevel skill;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
};
#define CMSG_DOTAREQUEST_MATCHES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_matches__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,CMSG_DOTAREQUEST_MATCHES__SKILL_LEVEL__Any, 0,0, 0,0 }


struct  _CMsgDOTARequestMatchesResponse__Series
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgDOTAMatch **matches;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
};
#define CMSG_DOTAREQUEST_MATCHES_RESPONSE__SERIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_matches_response__series__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _CMsgDOTARequestMatchesResponse
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgDOTAMatch **matches;
  size_t n_series;
  CMsgDOTARequestMatchesResponse__Series **series;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
  protobuf_c_boolean has_total_results;
  uint32_t total_results;
  protobuf_c_boolean has_results_remaining;
  uint32_t results_remaining;
};
#define CMSG_DOTAREQUEST_MATCHES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_matches_response__descriptor) \
    , 0,NULL, 0,NULL, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAPopup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  CMsgDOTAPopup__PopupID id;
  char *custom_text;
  protobuf_c_boolean has_int_data;
  int32_t int_data;
  protobuf_c_boolean has_popup_data;
  ProtobufCBinaryData popup_data;
};
#define CMSG_DOTAPOPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapopup__descriptor) \
    , 0,CMSG_DOTAPOPUP__POPUP_ID__NONE, NULL, 0,0, 0,{0,NULL} }


struct  _CMsgDOTAReportsRemainingRequest
{
  ProtobufCMessage base;
};
#define CMSG_DOTAREPORTS_REMAINING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareports_remaining_request__descriptor) \
     }


struct  _CMsgDOTAReportsRemainingResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_num_positive_reports_remaining;
  uint32_t num_positive_reports_remaining;
  protobuf_c_boolean has_num_negative_reports_remaining;
  uint32_t num_negative_reports_remaining;
  protobuf_c_boolean has_num_positive_reports_total;
  uint32_t num_positive_reports_total;
  protobuf_c_boolean has_num_negative_reports_total;
  uint32_t num_negative_reports_total;
};
#define CMSG_DOTAREPORTS_REMAINING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareports_remaining_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTASubmitPlayerReport
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
  protobuf_c_boolean has_report_flags;
  uint32_t report_flags;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  char *comment;
};
#define CMSG_DOTASUBMIT_PLAYER_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotasubmit_player_report__descriptor) \
    , 0,0, 0,0, 0,0, NULL }


struct  _CMsgDOTASubmitPlayerReportResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
  protobuf_c_boolean has_report_flags;
  uint32_t report_flags;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_DOTASUBMIT_PLAYER_REPORT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotasubmit_player_report_response__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAReportCountsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
};
#define CMSG_DOTAREPORT_COUNTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareport_counts_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAReportCountsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
  protobuf_c_boolean has_leadership_count;
  uint32_t leadership_count;
  protobuf_c_boolean has_teaching_count;
  uint32_t teaching_count;
  protobuf_c_boolean has_friendly_count;
  uint32_t friendly_count;
  protobuf_c_boolean has_forgiving_count;
  uint32_t forgiving_count;
};
#define CMSG_DOTAREPORT_COUNTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareport_counts_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTASubmitLobbyMVPVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
};
#define CMSG_DOTASUBMIT_LOBBY_MVPVOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotasubmit_lobby_mvpvote__descriptor) \
    , 0,0 }


struct  _CMsgDOTASubmitLobbyMVPVoteResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_target_account_id;
  uint32_t target_account_id;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTASUBMIT_LOBBY_MVPVOTE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotasubmit_lobby_mvpvote_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTALobbyMVPNotifyRecipient
{
  ProtobufCMessage base;
  protobuf_c_boolean has_voter_account_id;
  uint32_t voter_account_id;
  protobuf_c_boolean has_recipient_account_id;
  uint32_t recipient_account_id;
  protobuf_c_boolean has_num_votes;
  uint32_t num_votes;
};
#define CMSG_DOTALOBBY_MVPNOTIFY_RECIPIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalobby_mvpnotify_recipient__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTALobbyMVPAwarded
{
  ProtobufCMessage base;
  protobuf_c_boolean has_mvp_account_id;
  uint32_t mvp_account_id;
};
#define CMSG_DOTALOBBY_MVPAWARDED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalobby_mvpawarded__descriptor) \
    , 0,0 }


struct  _CMsgDOTAKickedFromMatchmakingQueue
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_type;
  MatchType match_type;
};
#define CMSG_DOTAKICKED_FROM_MATCHMAKING_QUEUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotakicked_from_matchmaking_queue__descriptor) \
    , 0,MATCH_TYPE__MATCH_TYPE_CASUAL }


struct  _CMsgDOTARequestSaveGames
{
  ProtobufCMessage base;
  protobuf_c_boolean has_server_region;
  uint32_t server_region;
};
#define CMSG_DOTAREQUEST_SAVE_GAMES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_save_games__descriptor) \
    , 0,0 }


struct  _CMsgDOTARequestSaveGamesResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  size_t n_save_games;
  CDOTASaveGame **save_games;
};
#define CMSG_DOTAREQUEST_SAVE_GAMES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotarequest_save_games_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCMatchDetailsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_GCMATCH_DETAILS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcmatch_details_request__descriptor) \
    , 0,0 }


struct  _CMsgGCMatchDetailsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  CMsgDOTAMatch *match;
  protobuf_c_boolean has_vote;
  DOTAMatchVote vote;
};
#define CMSG_GCMATCH_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcmatch_details_response__descriptor) \
    , 0,0, NULL, 0,DOTAMATCH_VOTE__DOTAMatchVote_INVALID }


struct  _CMsgServerToGCMatchDetailsRequest
{
  ProtobufCMessage base;
  size_t n_match_ids;
  uint64_t *match_ids;
};
#define CMSG_SERVER_TO_GCMATCH_DETAILS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_server_to_gcmatch_details_request__descriptor) \
    , 0,NULL }


struct  _CMsgGCToServerMatchDetailsResponse
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgDOTAMatch **matches;
};
#define CMSG_GCTO_SERVER_MATCH_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_server_match_details_response__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAProfileRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_request_name;
  protobuf_c_boolean request_name;
  protobuf_c_boolean has_engine;
  ESourceEngine engine;
};
#define CMSG_DOTAPROFILE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_request__descriptor) \
    , 0,0, 0,0, 0,ESOURCE_ENGINE__k_ESE_Source1 }


struct  _CMsgDOTAProfileResponse__PlayedHero
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_wins;
  uint32_t wins;
};
#define CMSG_DOTAPROFILE_RESPONSE__PLAYED_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__played_hero__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAProfileResponse__ShowcaseHero
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  size_t n_object_data;
  ProtobufCBinaryData *object_data;
};
#define CMSG_DOTAPROFILE_RESPONSE__SHOWCASE_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__showcase_hero__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTAProfileResponse__LeaguePass
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
};
#define CMSG_DOTAPROFILE_RESPONSE__LEAGUE_PASS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__league_pass__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAProfileResponse__EventTicket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_DOTAPROFILE_RESPONSE__EVENT_TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__event_ticket__descriptor) \
    , 0,0 }


struct  _CMsgDOTAProfileResponse__FeaturedItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
  protobuf_c_boolean has_object_data;
  ProtobufCBinaryData object_data;
  protobuf_c_boolean has_slot_index;
  uint32_t slot_index;
};
#define CMSG_DOTAPROFILE_RESPONSE__FEATURED_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__featured_item__descriptor) \
    , 0,0, 0,{0,NULL}, 0,0 }


struct  _CMsgDOTAProfileResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  CSODOTAGameAccountClient *game_account_client;
  size_t n_latest_matches;
  CMsgDOTAMatch **latest_matches;
  size_t n_heroes;
  CMsgDOTAProfileResponse__PlayedHero **heroes;
  char *player_name;
  char *team_name;
  char *team_tag;
  protobuf_c_boolean has_team_logo;
  uint64_t team_logo;
  CMsgDOTAProfileResponse__ShowcaseHero *showcase_hero;
  size_t n_league_passes;
  CMsgDOTAProfileResponse__LeaguePass **league_passes;
  size_t n_event_tickets;
  CMsgDOTAProfileResponse__EventTicket **event_tickets;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  protobuf_c_boolean has_has_passport;
  protobuf_c_boolean has_passport;
  size_t n_featured_items;
  CMsgDOTAProfileResponse__FeaturedItem **featured_items;
  protobuf_c_boolean has_abandon_percent;
  uint32_t abandon_percent;
};
#define CMSG_DOTAPROFILE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_response__descriptor) \
    , 0,0, NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, 0,0, NULL, 0,NULL, 0,NULL, 0,0, 0,0, 0,NULL, 0,0 }


struct  _CMsgDOTAProfileTickets__LeaguePass
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
};
#define CMSG_DOTAPROFILE_TICKETS__LEAGUE_PASS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_tickets__league_pass__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAProfileTickets__EventTicket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_DOTAPROFILE_TICKETS__EVENT_TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_tickets__event_ticket__descriptor) \
    , 0,0 }


struct  _CMsgDOTAProfileTickets
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_league_passes;
  CMsgDOTAProfileTickets__LeaguePass **league_passes;
  size_t n_event_tickets;
  CMsgDOTAProfileTickets__EventTicket **event_tickets;
};
#define CMSG_DOTAPROFILE_TICKETS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaprofile_tickets__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL }


struct  _CMsgClientToGCGetProfileTickets
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCGET_PROFILE_TICKETS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_profile_tickets__descriptor) \
    , 0,0 }


struct  _CMsgGCSteamProfileRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_GCSTEAM_PROFILE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcsteam_profile_request__descriptor) \
    , 0,0 }


struct  _CMsgGCSteamProfileRequestResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_GCSTEAM_PROFILE_REQUEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcsteam_profile_request_response__descriptor) \
    , 0,0 }


struct  _CMsgDOTAClearNotifySuccessfulReport
{
  ProtobufCMessage base;
};
#define CMSG_DOTACLEAR_NOTIFY_SUCCESSFUL_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaclear_notify_successful_report__descriptor) \
     }


struct  _CMsgDOTAWelcome__LocalizationDigest
{
  ProtobufCMessage base;
  char *context;
  CMsgSHA1Digest *english_language_file_sha1;
  CMsgSHA1Digest *client_language_file_sha1;
};
#define CMSG_DOTAWELCOME__LOCALIZATION_DIGEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotawelcome__localization_digest__descriptor) \
    , NULL, NULL, NULL }


struct  _CMsgDOTAWelcome__CExtraMsg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint32_t id;
  protobuf_c_boolean has_contents;
  ProtobufCBinaryData contents;
};
#define CMSG_DOTAWELCOME__CEXTRA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotawelcome__cextra_msg__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgDOTAWelcome
{
  ProtobufCMessage base;
  protobuf_c_boolean has_store_item_hash;
  uint32_t store_item_hash;
  protobuf_c_boolean has_timeplayedconsecutively;
  uint32_t timeplayedconsecutively;
  protobuf_c_boolean has_allow_3rd_party_match_history;
  protobuf_c_boolean allow_3rd_party_match_history;
  protobuf_c_boolean has_partner_account_type;
  PartnerAccountType partner_account_type;
  protobuf_c_boolean has_banned_word_list_word_id;
  uint32_t banned_word_list_word_id;
  protobuf_c_boolean has_partner_account_state;
  uint32_t partner_account_state;
  protobuf_c_boolean has_last_time_played;
  uint32_t last_time_played;
  protobuf_c_boolean has_last_ip_address;
  uint32_t last_ip_address;
  protobuf_c_boolean has_shutdownlawterminateminutes;
  uint32_t shutdownlawterminateminutes;
  protobuf_c_boolean has_banned_word_list_version;
  uint32_t banned_word_list_version;
  protobuf_c_boolean has_profile_private;
  protobuf_c_boolean profile_private;
  protobuf_c_boolean has_currency;
  uint32_t currency;
  protobuf_c_boolean has_bang_no;
  uint32_t bang_no;
  protobuf_c_boolean has_should_request_player_origin;
  protobuf_c_boolean should_request_player_origin;
  protobuf_c_boolean has_compendium_unlocks;
  uint64_t compendium_unlocks;
  protobuf_c_boolean has_gc_socache_file_version;
  uint32_t gc_socache_file_version;
  size_t n_localization_digests;
  CMsgDOTAWelcome__LocalizationDigest **localization_digests;
  protobuf_c_boolean has_is_perfect_world_test_account;
  protobuf_c_boolean is_perfect_world_test_account;
  size_t n_active_events;
  EEvent *active_events;
  size_t n_extra_messages;
  CMsgDOTAWelcome__CExtraMsg **extra_messages;
  protobuf_c_boolean has_minimum_recent_item_id;
  uint64_t minimum_recent_item_id;
};
#define CMSG_DOTAWELCOME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotawelcome__descriptor) \
    , 0,0, 0,0, 0,0, 0,PARTNER_ACCOUNT_TYPE__PARTNER_NONE, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL, 0,NULL, 0,0 }


struct  _CSODOTAGameHeroFavorites
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CSODOTAGAME_HERO_FAVORITES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&csodotagame_hero_favorites__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAHeroFavoritesAdd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMSG_DOTAHERO_FAVORITES_ADD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahero_favorites_add__descriptor) \
    , 0,0 }


struct  _CMsgDOTAHeroFavoritesRemove
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMSG_DOTAHERO_FAVORITES_REMOVE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahero_favorites_remove__descriptor) \
    , 0,0 }


struct  _CMsgSetShowcaseHero
{
  ProtobufCMessage base;
  protobuf_c_boolean has_showcase_hero_id;
  uint32_t showcase_hero_id;
};
#define CMSG_SET_SHOWCASE_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_showcase_hero__descriptor) \
    , 0,0 }


struct  _CMsgSetFeaturedItems
{
  ProtobufCMessage base;
  size_t n_featured_item_id;
  uint64_t *featured_item_id;
};
#define CMSG_SET_FEATURED_ITEMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_featured_items__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAFeaturedItems
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_featured_item_id;
  uint64_t *featured_item_id;
  size_t n_object_data;
  ProtobufCBinaryData *object_data;
};
#define CMSG_DOTAFEATURED_ITEMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafeatured_items__descriptor) \
    , 0,0, 0,NULL, 0,NULL }


struct  _CMsgRequestLeagueInfo
{
  ProtobufCMessage base;
};
#define CMSG_REQUEST_LEAGUE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_league_info__descriptor) \
     }


struct  _CDynamicLeagueData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_last_match_time;
  uint32_t last_match_time;
  protobuf_c_boolean has_prize_pool_usd;
  uint32_t prize_pool_usd;
  protobuf_c_boolean has_has_live_matches;
  protobuf_c_boolean has_live_matches;
  protobuf_c_boolean has_is_compendium_public;
  protobuf_c_boolean is_compendium_public;
  protobuf_c_boolean has_compendium_version;
  uint32_t compendium_version;
  protobuf_c_boolean has_compendium_content_version;
  uint32_t compendium_content_version;
};
#define CDYNAMIC_LEAGUE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdynamic_league_data__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CStaticLeagueData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  char *name;
  char *description;
  char *banner_name;
  char *itemdef_name;
  char *url;
  protobuf_c_boolean has_item_def_index;
  uint32_t item_def_index;
  protobuf_c_boolean has_hud_skin_item_def_index;
  uint32_t hud_skin_item_def_index;
  char *loading_screen_name;
  protobuf_c_boolean has_base_prize_pool;
  uint32_t base_prize_pool;
  protobuf_c_boolean has_is_major;
  protobuf_c_boolean is_major;
  protobuf_c_boolean has_sort_order;
  uint32_t sort_order;
  protobuf_c_boolean has_tier;
  uint32_t tier;
  protobuf_c_boolean has_amateur_region;
  uint32_t amateur_region;
  char *organizer;
  protobuf_c_boolean has_start_date;
  uint32_t start_date;
  protobuf_c_boolean has_end_date;
  uint32_t end_date;
  char *location;
  char *inventory_image;
  char *square_image;
};
#define CSTATIC_LEAGUE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cstatic_league_data__descriptor) \
    , 0,0, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, NULL, NULL, NULL }


struct  _CLeagueData
{
  ProtobufCMessage base;
  CDynamicLeagueData *dynamic_data;
  CStaticLeagueData *static_data;
  protobuf_c_boolean has_is_owned;
  protobuf_c_boolean is_owned;
};
#define CLEAGUE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cleague_data__descriptor) \
    , NULL, NULL, 0,0 }


struct  _CMsgResponseLeagueInfo
{
  ProtobufCMessage base;
  size_t n_leagues;
  CDynamicLeagueData **leagues;
};
#define CMSG_RESPONSE_LEAGUE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_response_league_info__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAMatchVotes__PlayerVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_vote;
  uint32_t vote;
};
#define CMSG_DOTAMATCH_VOTES__PLAYER_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch_votes__player_vote__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAMatchVotes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  size_t n_votes;
  CMsgDOTAMatchVotes__PlayerVote **votes;
};
#define CMSG_DOTAMATCH_VOTES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch_votes__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgCastMatchVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_vote;
  DOTAMatchVote vote;
};
#define CMSG_CAST_MATCH_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_cast_match_vote__descriptor) \
    , 0,0, 0,DOTAMATCH_VOTE__DOTAMatchVote_INVALID }


struct  _CMsgRetrieveMatchVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_incremental;
  uint32_t incremental;
};
#define CMSG_RETRIEVE_MATCH_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_retrieve_match_vote__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgMatchVoteResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
  protobuf_c_boolean has_vote;
  DOTAMatchVote vote;
  protobuf_c_boolean has_positive_votes;
  uint32_t positive_votes;
  protobuf_c_boolean has_negative_votes;
  uint32_t negative_votes;
};
#define CMSG_MATCH_VOTE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_match_vote_response__descriptor) \
    , 0,2u, 0,DOTAMATCH_VOTE__DOTAMatchVote_INVALID, 0,0, 0,0 }


struct  _CMsgDOTAHallOfFame__FeaturedPlayer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_average_scaled_metric;
  float average_scaled_metric;
  protobuf_c_boolean has_num_games;
  uint32_t num_games;
};
#define CMSG_DOTAHALL_OF_FAME__FEATURED_PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahall_of_fame__featured_player__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAHallOfFame__FeaturedFarmer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_gold_per_min;
  uint32_t gold_per_min;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_DOTAHALL_OF_FAME__FEATURED_FARMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahall_of_fame__featured_farmer__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAHallOfFame
{
  ProtobufCMessage base;
  protobuf_c_boolean has_week;
  uint32_t week;
  size_t n_featured_players;
  CMsgDOTAHallOfFame__FeaturedPlayer **featured_players;
  CMsgDOTAHallOfFame__FeaturedFarmer *featured_farmer;
};
#define CMSG_DOTAHALL_OF_FAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahall_of_fame__descriptor) \
    , 0,0, 0,NULL, NULL }


struct  _CMsgDOTAHallOfFameRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_week;
  uint32_t week;
};
#define CMSG_DOTAHALL_OF_FAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahall_of_fame_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAHallOfFameResponse
{
  ProtobufCMessage base;
  CMsgDOTAHallOfFame *hall_of_fame;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTAHALL_OF_FAME_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahall_of_fame_response__descriptor) \
    , NULL, 0,2u }


struct  _CMsgDOTAHalloweenHighScoreRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_round;
  int32_t round;
};
#define CMSG_DOTAHALLOWEEN_HIGH_SCORE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahalloween_high_score_request__descriptor) \
    , 0,-1 }


struct  _CMsgDOTAHalloweenHighScoreResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_score;
  uint32_t score;
  CMsgDOTAMatch *match;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
  protobuf_c_boolean has_round;
  int32_t round;
};
#define CMSG_DOTAHALLOWEEN_HIGH_SCORE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotahalloween_high_score_response__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgDOTAStorePromoPagesRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version_seen;
  uint32_t version_seen;
};
#define CMSG_DOTASTORE_PROMO_PAGES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotastore_promo_pages_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTAStorePromoPagesResponse__PromoPage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_promo_id;
  uint32_t promo_id;
  char *title;
  char *url;
};
#define CMSG_DOTASTORE_PROMO_PAGES_RESPONSE__PROMO_PAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotastore_promo_pages_response__promo_page__descriptor) \
    , 0,0, NULL, NULL }


struct  _CMsgDOTAStorePromoPagesResponse
{
  ProtobufCMessage base;
  size_t n_pages;
  CMsgDOTAStorePromoPagesResponse__PromoPage **pages;
};
#define CMSG_DOTASTORE_PROMO_PAGES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotastore_promo_pages_response__descriptor) \
    , 0,NULL }


struct  _CMsgLeagueScheduleBlockTeamInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *name;
  protobuf_c_boolean has_logo;
  uint64_t logo;
};
#define CMSG_LEAGUE_SCHEDULE_BLOCK_TEAM_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_league_schedule_block_team_info__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CMsgLeagueScheduleBlock
{
  ProtobufCMessage base;
  protobuf_c_boolean has_block_id;
  uint32_t block_id;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_finals;
  protobuf_c_boolean finals;
  char *comment;
  size_t n_teams;
  CMsgLeagueScheduleBlockTeamInfo **teams;
};
#define CMSG_LEAGUE_SCHEDULE_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_league_schedule_block__descriptor) \
    , 0,0, 0,0, 0,0, NULL, 0,NULL }


struct  _CMsgDOTALeague
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  size_t n_schedule;
  CMsgLeagueScheduleBlock **schedule;
};
#define CMSG_DOTALEAGUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleague__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTALeagueScheduleRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_DOTALEAGUE_SCHEDULE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleague_schedule_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTALeagueScheduleResponse
{
  ProtobufCMessage base;
  CMsgDOTALeague *league;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTALEAGUE_SCHEDULE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleague_schedule_response__descriptor) \
    , NULL, 0,2u }


struct  _CMsgDOTALeagueScheduleEdit
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  CMsgLeagueScheduleBlock *schedule;
  protobuf_c_boolean has_delete_block;
  protobuf_c_boolean delete_block;
};
#define CMSG_DOTALEAGUE_SCHEDULE_EDIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleague_schedule_edit__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CMsgDOTALeagueScheduleEditResponse
{
  ProtobufCMessage base;
  CMsgDOTALeague *league;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTALEAGUE_SCHEDULE_EDIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleague_schedule_edit_response__descriptor) \
    , NULL, 0,2u }


struct  _CMsgDOTALeaguesInMonthRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_month;
  uint32_t month;
  protobuf_c_boolean has_year;
  uint32_t year;
  protobuf_c_boolean has_tier;
  uint32_t tier;
};
#define CMSG_DOTALEAGUES_IN_MONTH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleagues_in_month_request__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTALeaguesInMonthResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
  protobuf_c_boolean has_month;
  uint32_t month;
  protobuf_c_boolean has_year;
  uint32_t year;
  size_t n_leagues;
  CMsgDOTALeague **leagues;
};
#define CMSG_DOTALEAGUES_IN_MONTH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaleagues_in_month_response__descriptor) \
    , 0,2u, 0,0, 0,0, 0,NULL }


struct  _CMsgMatchmakingMatchGroupInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_players_searching;
  uint32_t players_searching;
  protobuf_c_boolean has_auto_region_select_ping_penalty;
  int32_t auto_region_select_ping_penalty;
  protobuf_c_boolean has_status;
  EMatchGroupServerStatus status;
};
#define CMSG_MATCHMAKING_MATCH_GROUP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_matchmaking_match_group_info__descriptor) \
    , 0,0, 0,0, 0,EMATCH_GROUP_SERVER_STATUS__k_EMatchGroupServerStatus_OK }


struct  _CMsgDOTAMatchmakingStatsRequest
{
  ProtobufCMessage base;
};
#define CMSG_DOTAMATCHMAKING_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatchmaking_stats_request__descriptor) \
     }


struct  _CMsgDOTAMatchmakingStatsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_matchgroups_version;
  uint32_t matchgroups_version;
  size_t n_legacy_searching_players_by_group_source2;
  uint32_t *legacy_searching_players_by_group_source2;
  size_t n_match_groups;
  CMsgMatchmakingMatchGroupInfo **match_groups;
};
#define CMSG_DOTAMATCHMAKING_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatchmaking_stats_response__descriptor) \
    , 0,0, 0,NULL, 0,NULL }


struct  _CMsgDOTAUpdateMatchmakingStats
{
  ProtobufCMessage base;
  CMsgDOTAMatchmakingStatsResponse *stats;
};
#define CMSG_DOTAUPDATE_MATCHMAKING_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaupdate_matchmaking_stats__descriptor) \
    , NULL }


struct  _CMsgDOTAUpdateMatchManagementStats
{
  ProtobufCMessage base;
  CMsgDOTAMatchmakingStatsResponse *stats;
};
#define CMSG_DOTAUPDATE_MATCH_MANAGEMENT_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaupdate_match_management_stats__descriptor) \
    , NULL }


struct  _CMsgDOTASetMatchHistoryAccess
{
  ProtobufCMessage base;
  protobuf_c_boolean has_allow_3rd_party_match_history;
  protobuf_c_boolean allow_3rd_party_match_history;
};
#define CMSG_DOTASET_MATCH_HISTORY_ACCESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaset_match_history_access__descriptor) \
    , 0,0 }


struct  _CMsgDOTASetMatchHistoryAccessResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTASET_MATCH_HISTORY_ACCESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaset_match_history_access_response__descriptor) \
    , 0,2u }


struct  _CMsgDOTANotifyAccountFlagsChange
{
  ProtobufCMessage base;
  protobuf_c_boolean has_accountid;
  uint32_t accountid;
  protobuf_c_boolean has_account_flags;
  uint32_t account_flags;
};
#define CMSG_DOTANOTIFY_ACCOUNT_FLAGS_CHANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotanotify_account_flags_change__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTASetProfilePrivacy
{
  ProtobufCMessage base;
  protobuf_c_boolean has_profile_private;
  protobuf_c_boolean profile_private;
};
#define CMSG_DOTASET_PROFILE_PRIVACY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaset_profile_privacy__descriptor) \
    , 0,0 }


struct  _CMsgDOTASetProfilePrivacyResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTASET_PROFILE_PRIVACY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaset_profile_privacy_response__descriptor) \
    , 0,0 }


struct  _CMsgUpgradeLeagueItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_UPGRADE_LEAGUE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_upgrade_league_item__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgUpgradeLeagueItemResponse
{
  ProtobufCMessage base;
};
#define CMSG_UPGRADE_LEAGUE_ITEM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_upgrade_league_item_response__descriptor) \
     }


struct  _CMsgGCWatchDownloadedReplay
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_watch_type;
  DOTAWatchReplayType watch_type;
};
#define CMSG_GCWATCH_DOWNLOADED_REPLAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcwatch_downloaded_replay__descriptor) \
    , 0,0, 0,DOTA__WATCH_REPLAY_TYPE__DOTA_WATCH_REPLAY_NORMAL }


struct  _CMsgSetMapLocationState
{
  ProtobufCMessage base;
  protobuf_c_boolean has_location_id;
  int32_t location_id;
  protobuf_c_boolean has_completed;
  protobuf_c_boolean completed;
};
#define CMSG_SET_MAP_LOCATION_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_map_location_state__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgSetMapLocationStateResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_SET_MAP_LOCATION_STATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_set_map_location_state_response__descriptor) \
    , 0,2u }


struct  _CMsgResetMapLocations
{
  ProtobufCMessage base;
};
#define CMSG_RESET_MAP_LOCATIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_reset_map_locations__descriptor) \
     }


struct  _CMsgResetMapLocationsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_RESET_MAP_LOCATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_reset_map_locations_response__descriptor) \
    , 0,2u }


struct  _CMsgRefreshPartnerAccountLink
{
  ProtobufCMessage base;
  protobuf_c_boolean has_partner_type;
  int32_t partner_type;
};
#define CMSG_REFRESH_PARTNER_ACCOUNT_LINK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_refresh_partner_account_link__descriptor) \
    , 0,0 }


struct  _CMsgClientsRejoinChatChannels
{
  ProtobufCMessage base;
};
#define CMSG_CLIENTS_REJOIN_CHAT_CHANNELS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_clients_rejoin_chat_channels__descriptor) \
     }


struct  _CMsgDOTASendFriendRecruits
{
  ProtobufCMessage base;
  size_t n_recruits;
  uint32_t *recruits;
};
#define CMSG_DOTASEND_FRIEND_RECRUITS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotasend_friend_recruits__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAFriendRecruitsRequest
{
  ProtobufCMessage base;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_DOTAFRIEND_RECRUITS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafriend_recruits_request__descriptor) \
    , 0,NULL }


struct  _CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_status;
  uint32_t status;
  protobuf_c_boolean has_levels_earned;
  uint32_t levels_earned;
  protobuf_c_boolean has_bonus;
  protobuf_c_boolean bonus;
};
#define CMSG_DOTAFRIEND_RECRUITS_RESPONSE__FRIEND_RECRUIT_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafriend_recruits_response__friend_recruit_status__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAFriendRecruitsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTAFriendRecruitsResponse__EResult result;
  size_t n_recruits;
  CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus **recruits;
  size_t n_recruiters;
  CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus **recruiters;
};
#define CMSG_DOTAFRIEND_RECRUITS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafriend_recruits_response__descriptor) \
    , 0,CMSG_DOTAFRIEND_RECRUITS_RESPONSE__ERESULT__SUCCESS, 0,NULL, 0,NULL }


struct  _CMsgDOTAFriendRecruitInviteAcceptDecline
{
  ProtobufCMessage base;
  protobuf_c_boolean has_accepted;
  protobuf_c_boolean accepted;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_DOTAFRIEND_RECRUIT_INVITE_ACCEPT_DECLINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotafriend_recruit_invite_accept_decline__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgRequestLeaguePrizePool
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_REQUEST_LEAGUE_PRIZE_POOL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_league_prize_pool__descriptor) \
    , 0,0 }


struct  _CMsgRequestLeaguePrizePoolResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_prize_pool;
  uint32_t prize_pool;
};
#define CMSG_REQUEST_LEAGUE_PRIZE_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_league_prize_pool_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCGetHeroStandings
{
  ProtobufCMessage base;
};
#define CMSG_GCGET_HERO_STANDINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcget_hero_standings__descriptor) \
     }


struct  _CMsgGCGetHeroStandingsResponse__Hero
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_wins;
  uint32_t wins;
  protobuf_c_boolean has_losses;
  uint32_t losses;
  protobuf_c_boolean has_win_streak;
  uint32_t win_streak;
  protobuf_c_boolean has_best_win_streak;
  uint32_t best_win_streak;
  protobuf_c_boolean has_avg_kills;
  float avg_kills;
  protobuf_c_boolean has_avg_deaths;
  float avg_deaths;
  protobuf_c_boolean has_avg_assists;
  float avg_assists;
  protobuf_c_boolean has_avg_gpm;
  float avg_gpm;
  protobuf_c_boolean has_avg_xpm;
  float avg_xpm;
  protobuf_c_boolean has_best_kills;
  uint32_t best_kills;
  protobuf_c_boolean has_best_assists;
  uint32_t best_assists;
  protobuf_c_boolean has_best_gpm;
  uint32_t best_gpm;
  protobuf_c_boolean has_best_xpm;
  uint32_t best_xpm;
  protobuf_c_boolean has_performance;
  float performance;
};
#define CMSG_GCGET_HERO_STANDINGS_RESPONSE__HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcget_hero_standings_response__hero__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCGetHeroStandingsResponse
{
  ProtobufCMessage base;
  size_t n_standings;
  CMsgGCGetHeroStandingsResponse__Hero **standings;
};
#define CMSG_GCGET_HERO_STANDINGS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcget_hero_standings_response__descriptor) \
    , 0,NULL }


struct  _CMsgGCItemEditorReservationsRequest
{
  ProtobufCMessage base;
};
#define CMSG_GCITEM_EDITOR_RESERVATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_reservations_request__descriptor) \
     }


struct  _CMsgGCItemEditorReservation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  char *name;
};
#define CMSG_GCITEM_EDITOR_RESERVATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_reservation__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCItemEditorReservationsResponse
{
  ProtobufCMessage base;
  size_t n_reservations;
  CMsgGCItemEditorReservation **reservations;
};
#define CMSG_GCITEM_EDITOR_RESERVATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_reservations_response__descriptor) \
    , 0,NULL }


struct  _CMsgGCItemEditorReserveItemDef
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  char *username;
};
#define CMSG_GCITEM_EDITOR_RESERVE_ITEM_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_reserve_item_def__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCItemEditorReserveItemDefResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  char *username;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_GCITEM_EDITOR_RESERVE_ITEM_DEF_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_reserve_item_def_response__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CMsgGCItemEditorReleaseReservation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  char *username;
};
#define CMSG_GCITEM_EDITOR_RELEASE_RESERVATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_release_reservation__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCItemEditorReleaseReservationResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_released;
  protobuf_c_boolean released;
};
#define CMSG_GCITEM_EDITOR_RELEASE_RESERVATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_release_reservation_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCItemEditorRequestLeagueInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_GCITEM_EDITOR_REQUEST_LEAGUE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_request_league_info__descriptor) \
    , 0,0 }


struct  _CMsgGCItemEditorLeagueInfoResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  char *league_name;
  char *league_desc;
  char *league_url;
  char *revenue_url;
  protobuf_c_boolean has_tier;
  uint32_t tier;
  protobuf_c_boolean has_location;
  uint32_t location;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_GCITEM_EDITOR_LEAGUE_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcitem_editor_league_info_response__descriptor) \
    , 0,0, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgDOTARewardTutorialPrizes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_location_id;
  uint32_t location_id;
  protobuf_c_boolean has_tracking_only;
  protobuf_c_boolean tracking_only;
};
#define CMSG_DOTAREWARD_TUTORIAL_PRIZES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotareward_tutorial_prizes__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTALastHitChallengeHighScorePost
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_high_score;
  uint32_t high_score;
};
#define CMSG_DOTALAST_HIT_CHALLENGE_HIGH_SCORE_POST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalast_hit_challenge_high_score_post__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTALastHitChallengeHighScoreRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMSG_DOTALAST_HIT_CHALLENGE_HIGH_SCORE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalast_hit_challenge_high_score_request__descriptor) \
    , 0,0 }


struct  _CMsgDOTALastHitChallengeHighScoreResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_score;
  uint32_t score;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
};
#define CMSG_DOTALAST_HIT_CHALLENGE_HIGH_SCORE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalast_hit_challenge_high_score_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgFlipLobbyTeams
{
  ProtobufCMessage base;
};
#define CMSG_FLIP_LOBBY_TEAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_flip_lobby_teams__descriptor) \
     }


struct  _CMsgPresentedClientTerminateDlg
{
  ProtobufCMessage base;
};
#define CMSG_PRESENTED_CLIENT_TERMINATE_DLG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_presented_client_terminate_dlg__descriptor) \
     }


struct  _CMsgGCLobbyUpdateBroadcastChannelInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_channel_id;
  uint32_t channel_id;
  char *country_code;
  char *description;
  char *language_code;
};
#define CMSG_GCLOBBY_UPDATE_BROADCAST_CHANNEL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gclobby_update_broadcast_channel_info__descriptor) \
    , 0,0, NULL, NULL, NULL }


struct  _CMsgDOTARedeemEventPrize
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prize_id;
  uint32_t prize_id;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_quantity;
  uint32_t quantity;
};
#define CMSG_DOTAREDEEM_EVENT_PRIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaredeem_event_prize__descriptor) \
    , 0,0, 0,0, 0,1u }


struct  _CMsgDOTARedeemEventPrizeResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgDOTARedeemEventPrizeResponse__ResultCode result;
  protobuf_c_boolean has_remaining_points;
  uint32_t remaining_points;
  protobuf_c_boolean has_remaining_premium_points;
  uint32_t remaining_premium_points;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaredeem_event_prize_response__descriptor) \
    , 0,CMSG_DOTAREDEEM_EVENT_PRIZE_RESPONSE__RESULT_CODE__Success, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAGetEventPoints
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_DOTAGET_EVENT_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_event_points__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAGetEventPointsResponse__Action
{
  ProtobufCMessage base;
  protobuf_c_boolean has_action_id;
  uint32_t action_id;
  protobuf_c_boolean has_times_completed;
  uint32_t times_completed;
};
#define CMSG_DOTAGET_EVENT_POINTS_RESPONSE__ACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_event_points_response__action__descriptor) \
    , 0,0, 0,1u }


struct  _CMsgDOTAGetEventPointsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_total_points;
  uint32_t total_points;
  protobuf_c_boolean has_total_premium_points;
  uint32_t total_premium_points;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_points;
  uint32_t points;
  protobuf_c_boolean has_premium_points;
  uint32_t premium_points;
  size_t n_completed_actions;
  CMsgDOTAGetEventPointsResponse__Action **completed_actions;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_owned;
  protobuf_c_boolean owned;
  protobuf_c_boolean has_audit_action;
  uint32_t audit_action;
  protobuf_c_boolean has_wager_tokens_remaining;
  uint32_t wager_tokens_remaining;
};
#define CMSG_DOTAGET_EVENT_POINTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_event_points_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTALiveLeagueGameUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_live_league_games;
  uint32_t live_league_games;
};
#define CMSG_DOTALIVE_LEAGUE_GAME_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalive_league_game_update__descriptor) \
    , 0,0 }


struct  _CMsgDOTACompendiumSelection
{
  ProtobufCMessage base;
  protobuf_c_boolean has_selection_index;
  uint32_t selection_index;
  protobuf_c_boolean has_selection;
  uint32_t selection;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
};
#define CMSG_DOTACOMPENDIUM_SELECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_selection__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTACompendiumSelectionResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_eresult;
  uint32_t eresult;
  size_t n_extra_selections;
  CMsgDOTACompendiumSelection **extra_selections;
};
#define CMSG_DOTACOMPENDIUM_SELECTION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_selection_response__descriptor) \
    , 0,2u, 0,NULL }


struct  _CMsgDOTACompendiumData
{
  ProtobufCMessage base;
  size_t n_selections;
  CMsgDOTACompendiumSelection **selections;
};
#define CMSG_DOTACOMPENDIUM_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_data__descriptor) \
    , 0,NULL }


struct  _CMsgDOTACompendiumDataRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
};
#define CMSG_DOTACOMPENDIUM_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_data_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTACompendiumDataResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  protobuf_c_boolean has_result;
  uint32_t result;
  CMsgDOTACompendiumData *compendium_data;
};
#define CMSG_DOTACOMPENDIUM_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_data_response__descriptor) \
    , 0,0, 0,0, 0,2u, NULL }


struct  _CMsgDOTAGetPlayerMatchHistory
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_start_at_match_id;
  uint64_t start_at_match_id;
  protobuf_c_boolean has_matches_requested;
  uint32_t matches_requested;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
  protobuf_c_boolean has_include_practice_matches;
  protobuf_c_boolean include_practice_matches;
  protobuf_c_boolean has_include_custom_games;
  protobuf_c_boolean include_custom_games;
};
#define CMSG_DOTAGET_PLAYER_MATCH_HISTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_player_match_history__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgDOTAGetPlayerMatchHistoryResponse__Match
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_winner;
  protobuf_c_boolean winner;
  protobuf_c_boolean has_game_mode;
  uint32_t game_mode;
  protobuf_c_boolean has_rank_change;
  int32_t rank_change;
  protobuf_c_boolean has_previous_rank;
  uint32_t previous_rank;
  protobuf_c_boolean has_lobby_type;
  uint32_t lobby_type;
  protobuf_c_boolean has_solo_rank;
  protobuf_c_boolean solo_rank;
  protobuf_c_boolean has_abandon;
  protobuf_c_boolean abandon;
  protobuf_c_boolean has_duration;
  uint32_t duration;
  protobuf_c_boolean has_engine;
  uint32_t engine;
  protobuf_c_boolean has_active_battle_pass;
  protobuf_c_boolean active_battle_pass;
  protobuf_c_boolean has_seasonal_rank;
  protobuf_c_boolean seasonal_rank;
  protobuf_c_boolean has_tourney_id;
  uint32_t tourney_id;
  protobuf_c_boolean has_tourney_round;
  uint32_t tourney_round;
  protobuf_c_boolean has_tourney_tier;
  uint32_t tourney_tier;
  protobuf_c_boolean has_tourney_division;
  uint32_t tourney_division;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *team_name;
  protobuf_c_boolean has_ugc_team_ui_logo;
  uint64_t ugc_team_ui_logo;
};
#define CMSG_DOTAGET_PLAYER_MATCH_HISTORY_RESPONSE__MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_player_match_history_response__match__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CMsgDOTAGetPlayerMatchHistoryResponse
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgDOTAGetPlayerMatchHistoryResponse__Match **matches;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
};
#define CMSG_DOTAGET_PLAYER_MATCH_HISTORY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaget_player_match_history_response__descriptor) \
    , 0,NULL, 0,0 }


struct  _CMsgDOTAStartDailyHeroChallenge
{
  ProtobufCMessage base;
};
#define CMSG_DOTASTART_DAILY_HERO_CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotastart_daily_hero_challenge__descriptor) \
     }


struct  _CMsgGCNotificationsRequest
{
  ProtobufCMessage base;
};
#define CMSG_GCNOTIFICATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcnotifications_request__descriptor) \
     }


struct  _CMsgGCNotificationsResponse__Notification
{
  ProtobufCMessage base;
  protobuf_c_boolean has_id;
  uint64_t id;
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_reference_a;
  uint32_t reference_a;
  protobuf_c_boolean has_reference_b;
  uint32_t reference_b;
  protobuf_c_boolean has_reference_c;
  uint32_t reference_c;
  char *message;
  protobuf_c_boolean has_unread;
  protobuf_c_boolean unread;
};
#define CMSG_GCNOTIFICATIONS_RESPONSE__NOTIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcnotifications_response__notification__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CMsgGCNotificationsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgGCNotificationsResponse__EResult result;
  size_t n_notifications;
  CMsgGCNotificationsResponse__Notification **notifications;
};
#define CMSG_GCNOTIFICATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcnotifications_response__descriptor) \
    , 0,CMSG_GCNOTIFICATIONS_RESPONSE__ERESULT__SUCCESS, 0,NULL }


struct  _CMsgGCNotificationsMarkReadRequest
{
  ProtobufCMessage base;
};
#define CMSG_GCNOTIFICATIONS_MARK_READ_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcnotifications_mark_read_request__descriptor) \
     }


struct  _CMsgClientToGCMarkNotificationListRead
{
  ProtobufCMessage base;
  size_t n_notification_ids;
  uint64_t *notification_ids;
};
#define CMSG_CLIENT_TO_GCMARK_NOTIFICATION_LIST_READ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcmark_notification_list_read__descriptor) \
    , 0,NULL }


struct  _CMsgGCLeagueAdminState__PrivateLeagueKeys
{
  ProtobufCMessage base;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  protobuf_c_boolean has_privatekey;
  uint32_t privatekey;
};
#define CMSG_GCLEAGUE_ADMIN_STATE__PRIVATE_LEAGUE_KEYS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcleague_admin_state__private_league_keys__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCLeagueAdminState
{
  ProtobufCMessage base;
  size_t n_leagues;
  uint32_t *leagues;
  size_t n_keys;
  CMsgGCLeagueAdminState__PrivateLeagueKeys **keys;
};
#define CMSG_GCLEAGUE_ADMIN_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcleague_admin_state__descriptor) \
    , 0,NULL, 0,NULL }


struct  _CMsgGCPlayerInfoRequest__PlayerInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
};
#define CMSG_GCPLAYER_INFO_REQUEST__PLAYER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info_request__player_info__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCPlayerInfoRequest
{
  ProtobufCMessage base;
  size_t n_player_infos;
  CMsgGCPlayerInfoRequest__PlayerInfo **player_infos;
};
#define CMSG_GCPLAYER_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info_request__descriptor) \
    , 0,NULL }


struct  _CMsgGCPlayerInfoSubmit
{
  ProtobufCMessage base;
  char *name;
  char *country_code;
  protobuf_c_boolean has_fantasy_role;
  uint32_t fantasy_role;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *sponsor;
};
#define CMSG_GCPLAYER_INFO_SUBMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info_submit__descriptor) \
    , NULL, NULL, 0,0, 0,0, NULL }


struct  _CMsgGCPlayerInfoSubmitResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgGCPlayerInfoSubmitResponse__EResult result;
};
#define CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcplayer_info_submit_response__descriptor) \
    , 0,CMSG_GCPLAYER_INFO_SUBMIT_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgClientProvideSurveyResult__Response
{
  ProtobufCMessage base;
  protobuf_c_boolean has_question_id;
  uint32_t question_id;
  protobuf_c_boolean has_survey_value;
  uint32_t survey_value;
};
#define CMSG_CLIENT_PROVIDE_SURVEY_RESULT__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_provide_survey_result__response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientProvideSurveyResult
{
  ProtobufCMessage base;
  size_t n_responses;
  CMsgClientProvideSurveyResult__Response **responses;
  protobuf_c_boolean has_survey_key;
  uint64_t survey_key;
};
#define CMSG_CLIENT_PROVIDE_SURVEY_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_provide_survey_result__descriptor) \
    , 0,NULL, 0,0 }


struct  _CMsgDOTAEmoticonAccessSDO
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_unlocked_emoticons;
  ProtobufCBinaryData unlocked_emoticons;
};
#define CMSG_DOTAEMOTICON_ACCESS_SDO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaemoticon_access_sdo__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _CMsgClientToGCEmoticonDataRequest
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCEMOTICON_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcemoticon_data_request__descriptor) \
     }


struct  _CMsgGCToClientEmoticonData
{
  ProtobufCMessage base;
  CMsgDOTAEmoticonAccessSDO *emoticon_access;
};
#define CMSG_GCTO_CLIENT_EMOTICON_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_emoticon_data__descriptor) \
    , NULL }


struct  _CMsgClientToGCTrackDialogResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dialog_id;
  uint32_t dialog_id;
  protobuf_c_boolean has_value;
  uint32_t value;
};
#define CMSG_CLIENT_TO_GCTRACK_DIALOG_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gctrack_dialog_result__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToClientTournamentItemDrop
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
  protobuf_c_boolean has_event_type;
  uint32_t event_type;
};
#define CMSG_GCTO_CLIENT_TOURNAMENT_ITEM_DROP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_tournament_item_drop__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCSetAdditionalEquips
{
  ProtobufCMessage base;
  size_t n_equips;
  CAdditionalEquipSlot **equips;
};
#define CMSG_CLIENT_TO_GCSET_ADDITIONAL_EQUIPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_additional_equips__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCSetAdditionalEquipsResponse
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCSET_ADDITIONAL_EQUIPS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_additional_equips_response__descriptor) \
     }


struct  _CMsgClientToGCGetAdditionalEquips
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCGET_ADDITIONAL_EQUIPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_additional_equips__descriptor) \
     }


struct  _CMsgClientToGCGetAdditionalEquipsResponse
{
  ProtobufCMessage base;
  size_t n_equips;
  CAdditionalEquipSlot **equips;
};
#define CMSG_CLIENT_TO_GCGET_ADDITIONAL_EQUIPS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_additional_equips_response__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCGetAllHeroOrder
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCGET_ALL_HERO_ORDER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_all_hero_order__descriptor) \
     }


struct  _CMsgClientToGCGetAllHeroOrderResponse
{
  ProtobufCMessage base;
  size_t n_hero_ids;
  uint32_t *hero_ids;
};
#define CMSG_CLIENT_TO_GCGET_ALL_HERO_ORDER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_all_hero_order_response__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCGetAllHeroProgress
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCGET_ALL_HERO_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_all_hero_progress__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCGetAllHeroProgressResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_curr_hero_id;
  uint32_t curr_hero_id;
  protobuf_c_boolean has_laps_completed;
  uint32_t laps_completed;
  protobuf_c_boolean has_curr_hero_games;
  uint32_t curr_hero_games;
  protobuf_c_boolean has_curr_lap_time_started;
  uint32_t curr_lap_time_started;
  protobuf_c_boolean has_curr_lap_games;
  uint32_t curr_lap_games;
  protobuf_c_boolean has_best_lap_games;
  uint32_t best_lap_games;
  protobuf_c_boolean has_best_lap_time;
  uint32_t best_lap_time;
  protobuf_c_boolean has_lap_heroes_completed;
  uint32_t lap_heroes_completed;
  protobuf_c_boolean has_lap_heroes_remaining;
  uint32_t lap_heroes_remaining;
  protobuf_c_boolean has_next_hero_id;
  uint32_t next_hero_id;
  protobuf_c_boolean has_prev_hero_id;
  uint32_t prev_hero_id;
  protobuf_c_boolean has_prev_hero_games;
  uint32_t prev_hero_games;
  protobuf_c_boolean has_prev_avg_tries;
  float prev_avg_tries;
  protobuf_c_boolean has_curr_avg_tries;
  float curr_avg_tries;
  protobuf_c_boolean has_next_avg_tries;
  float next_avg_tries;
  protobuf_c_boolean has_full_lap_avg_tries;
  float full_lap_avg_tries;
  protobuf_c_boolean has_curr_lap_avg_tries;
  float curr_lap_avg_tries;
  char *profile_name;
  protobuf_c_boolean has_start_hero_id;
  uint32_t start_hero_id;
};
#define CMSG_CLIENT_TO_GCGET_ALL_HERO_PROGRESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_all_hero_progress_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CMsgClientToGCGetTrophyList
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCGET_TROPHY_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_trophy_list__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCGetTrophyListResponse__Trophy
{
  ProtobufCMessage base;
  protobuf_c_boolean has_trophy_id;
  uint32_t trophy_id;
  protobuf_c_boolean has_trophy_score;
  uint32_t trophy_score;
  protobuf_c_boolean has_last_updated;
  uint32_t last_updated;
};
#define CMSG_CLIENT_TO_GCGET_TROPHY_LIST_RESPONSE__TROPHY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_trophy_list_response__trophy__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCGetTrophyListResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_trophies;
  CMsgClientToGCGetTrophyListResponse__Trophy **trophies;
  char *profile_name;
};
#define CMSG_CLIENT_TO_GCGET_TROPHY_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_trophy_list_response__descriptor) \
    , 0,0, 0,NULL, NULL }


struct  _CMsgGCToClientTrophyAwarded
{
  ProtobufCMessage base;
  protobuf_c_boolean has_trophy_id;
  uint32_t trophy_id;
  protobuf_c_boolean has_trophy_score;
  uint32_t trophy_score;
  protobuf_c_boolean has_trophy_old_score;
  uint32_t trophy_old_score;
  protobuf_c_boolean has_last_updated;
  uint32_t last_updated;
};
#define CMSG_GCTO_CLIENT_TROPHY_AWARDED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_trophy_awarded__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCGetProfileCard
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCGET_PROFILE_CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_profile_card__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCSetProfileCardSlots__CardSlot
{
  ProtobufCMessage base;
  protobuf_c_boolean has_slot_id;
  uint32_t slot_id;
  protobuf_c_boolean has_slot_type;
  EProfileCardSlotType slot_type;
  protobuf_c_boolean has_slot_value;
  uint64_t slot_value;
};
#define CMSG_CLIENT_TO_GCSET_PROFILE_CARD_SLOTS__CARD_SLOT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_profile_card_slots__card_slot__descriptor) \
    , 0,0, 0,EPROFILE_CARD_SLOT_TYPE__k_EProfileCardSlotType_Empty, 0,0 }


struct  _CMsgClientToGCSetProfileCardSlots
{
  ProtobufCMessage base;
  size_t n_slots;
  CMsgClientToGCSetProfileCardSlots__CardSlot **slots;
};
#define CMSG_CLIENT_TO_GCSET_PROFILE_CARD_SLOTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcset_profile_card_slots__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCGetProfileCardStats
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCGET_PROFILE_CARD_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_profile_card_stats__descriptor) \
     }


struct  _CMsgClientToGCCreateHeroStatue
{
  ProtobufCMessage base;
  protobuf_c_boolean has_source_item;
  uint64_t source_item;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  char *sequence_name;
  protobuf_c_boolean has_cycle;
  float cycle;
  size_t n_wearables;
  uint32_t *wearables;
  char *inscription;
  size_t n_styles;
  uint32_t *styles;
  protobuf_c_boolean has_reforger_item;
  uint64_t reforger_item;
  protobuf_c_boolean has_tournament_drop;
  protobuf_c_boolean tournament_drop;
};
#define CMSG_CLIENT_TO_GCCREATE_HERO_STATUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccreate_hero_statue__descriptor) \
    , 0,0, 0,0, NULL, 0,0, 0,NULL, NULL, 0,NULL, 0,0, 0,0 }


struct  _CMsgClientToGCCreateTeamShowcase
{
  ProtobufCMessage base;
  protobuf_c_boolean has_source_item;
  uint64_t source_item;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  char *sequence_name;
  protobuf_c_boolean has_cycle;
  float cycle;
  size_t n_wearables;
  uint32_t *wearables;
  char *inscription;
  size_t n_styles;
  uint32_t *styles;
};
#define CMSG_CLIENT_TO_GCCREATE_TEAM_SHOWCASE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccreate_team_showcase__descriptor) \
    , 0,0, 0,0, NULL, 0,0, 0,NULL, NULL, 0,NULL }


struct  _CMsgGCToClientHeroStatueCreateResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_resulting_item;
  uint64_t resulting_item;
};
#define CMSG_GCTO_CLIENT_HERO_STATUE_CREATE_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_hero_statue_create_result__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientTeamShowcaseCreateResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_resulting_item;
  uint64_t resulting_item;
};
#define CMSG_GCTO_CLIENT_TEAM_SHOWCASE_CREATE_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_team_showcase_create_result__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRecordCompendiumStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_view_duration_s;
  uint32_t view_duration_s;
  protobuf_c_boolean has_videos_viewed;
  uint32_t videos_viewed;
  protobuf_c_boolean has_page_turns;
  uint32_t page_turns;
  protobuf_c_boolean has_links_followed;
  uint32_t links_followed;
};
#define CMSG_CLIENT_TO_GCRECORD_COMPENDIUM_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrecord_compendium_stats__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCToClientEventStatusChanged
{
  ProtobufCMessage base;
  size_t n_active_events;
  EEvent *active_events;
};
#define CMSG_GCTO_CLIENT_EVENT_STATUS_CHANGED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_event_status_changed__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCPlayerStatsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCPLAYER_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcplayer_stats_request__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientPlayerStatsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_player_stats;
  float *player_stats;
  protobuf_c_boolean has_match_count;
  uint32_t match_count;
  protobuf_c_boolean has_mean_gpm;
  float mean_gpm;
  protobuf_c_boolean has_mean_xppm;
  float mean_xppm;
  protobuf_c_boolean has_mean_lasthits;
  float mean_lasthits;
  protobuf_c_boolean has_rampages;
  uint32_t rampages;
  protobuf_c_boolean has_triple_kills;
  uint32_t triple_kills;
  protobuf_c_boolean has_first_blood_claimed;
  uint32_t first_blood_claimed;
  protobuf_c_boolean has_first_blood_given;
  uint32_t first_blood_given;
  protobuf_c_boolean has_couriers_killed;
  uint32_t couriers_killed;
  protobuf_c_boolean has_aegises_snatched;
  uint32_t aegises_snatched;
  protobuf_c_boolean has_cheeses_eaten;
  uint32_t cheeses_eaten;
  protobuf_c_boolean has_creeps_stacked;
  uint32_t creeps_stacked;
  protobuf_c_boolean has_fight_score;
  float fight_score;
  protobuf_c_boolean has_farm_score;
  float farm_score;
  protobuf_c_boolean has_support_score;
  float support_score;
  protobuf_c_boolean has_push_score;
  float push_score;
  protobuf_c_boolean has_versatility_score;
  float versatility_score;
};
#define CMSG_GCTO_CLIENT_PLAYER_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_player_stats_response__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCCustomGamePlayerCountRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
};
#define CMSG_CLIENT_TO_GCCUSTOM_GAME_PLAYER_COUNT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccustom_game_player_count_request__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientCustomGamePlayerCountResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  protobuf_c_boolean has_player_count;
  uint64_t player_count;
  protobuf_c_boolean has_spectator_count;
  uint64_t spectator_count;
};
#define CMSG_GCTO_CLIENT_CUSTOM_GAME_PLAYER_COUNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_custom_game_player_count_response__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCCustomGamesFriendsPlayedRequest
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCCUSTOM_GAMES_FRIENDS_PLAYED_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccustom_games_friends_played_request__descriptor) \
     }


struct  _CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_GCTO_CLIENT_CUSTOM_GAMES_FRIENDS_PLAYED_RESPONSE__CUSTOM_GAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_custom_games_friends_played_response__custom_game__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCToClientCustomGamesFriendsPlayedResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_games;
  CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame **games;
};
#define CMSG_GCTO_CLIENT_CUSTOM_GAMES_FRIENDS_PLAYED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_custom_games_friends_played_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCSocialFeedPostCommentRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint64_t event_id;
  char *comment;
};
#define CMSG_CLIENT_TO_GCSOCIAL_FEED_POST_COMMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcsocial_feed_post_comment_request__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCToClientSocialFeedPostCommentResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CMSG_GCTO_CLIENT_SOCIAL_FEED_POST_COMMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_social_feed_post_comment_response__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCSocialFeedPostMessageRequest
{
  ProtobufCMessage base;
  char *message;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_match_timestamp;
  uint32_t match_timestamp;
};
#define CMSG_CLIENT_TO_GCSOCIAL_FEED_POST_MESSAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcsocial_feed_post_message_request__descriptor) \
    , NULL, 0,0, 0,0 }


struct  _CMsgGCToClientSocialFeedPostMessageResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CMSG_GCTO_CLIENT_SOCIAL_FEED_POST_MESSAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_social_feed_post_message_response__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCFriendsPlayedCustomGameRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
};
#define CMSG_CLIENT_TO_GCFRIENDS_PLAYED_CUSTOM_GAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcfriends_played_custom_game_request__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientFriendsPlayedCustomGameResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  size_t n_account_ids;
  uint32_t *account_ids;
};
#define CMSG_GCTO_CLIENT_FRIENDS_PLAYED_CUSTOM_GAME_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_friends_played_custom_game_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCFeaturedHeroesRequest
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCFEATURED_HEROES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcfeatured_heroes_request__descriptor) \
     }


struct  _CMsgGCToClientFeaturedHeroesResponse__DataField
{
  ProtobufCMessage base;
  protobuf_c_boolean has_data_type;
  EFeaturedHeroDataType data_type;
  protobuf_c_boolean has_uint32_value;
  uint32_t uint32_value;
  protobuf_c_boolean has_uint64_value;
  uint64_t uint64_value;
  char *string_value;
  protobuf_c_boolean has_float_value;
  float float_value;
};
#define CMSG_GCTO_CLIENT_FEATURED_HEROES_RESPONSE__DATA_FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_featured_heroes_response__data_field__descriptor) \
    , 0,EFEATURED_HERO_DATA_TYPE__k_EFeaturedHeroDataType_HeroID, 0,0, 0,0, NULL, 0,0 }


struct  _CMsgGCToClientFeaturedHeroesResponse__FeaturedHero
{
  ProtobufCMessage base;
  size_t n_data_fields;
  CMsgGCToClientFeaturedHeroesResponse__DataField **data_fields;
};
#define CMSG_GCTO_CLIENT_FEATURED_HEROES_RESPONSE__FEATURED_HERO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_featured_heroes_response__featured_hero__descriptor) \
    , 0,NULL }


struct  _CMsgGCToClientFeaturedHeroesResponse__Category
{
  ProtobufCMessage base;
  protobuf_c_boolean has_category_weight;
  int32_t category_weight;
  size_t n_text_fields;
  EFeaturedHeroTextField *text_fields;
  size_t n_featured_heroes;
  CMsgGCToClientFeaturedHeroesResponse__FeaturedHero **featured_heroes;
};
#define CMSG_GCTO_CLIENT_FEATURED_HEROES_RESPONSE__CATEGORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_featured_heroes_response__category__descriptor) \
    , 0,0, 0,NULL, 0,NULL }


struct  _CMsgGCToClientFeaturedHeroesResponse
{
  ProtobufCMessage base;
  size_t n_categories;
  CMsgGCToClientFeaturedHeroesResponse__Category **categories;
};
#define CMSG_GCTO_CLIENT_FEATURED_HEROES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_featured_heroes_response__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCSocialMatchPostCommentRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  char *comment;
};
#define CMSG_CLIENT_TO_GCSOCIAL_MATCH_POST_COMMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcsocial_match_post_comment_request__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCToClientSocialMatchPostCommentResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CMSG_GCTO_CLIENT_SOCIAL_MATCH_POST_COMMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_social_match_post_comment_response__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCSocialMatchDetailsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_pagination_timestamp;
  uint32_t pagination_timestamp;
};
#define CMSG_CLIENT_TO_GCSOCIAL_MATCH_DETAILS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcsocial_match_details_request__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToClientSocialMatchDetailsResponse__Comment
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  char *persona_name;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  char *comment;
};
#define CMSG_GCTO_CLIENT_SOCIAL_MATCH_DETAILS_RESPONSE__COMMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_social_match_details_response__comment__descriptor) \
    , 0,0, NULL, 0,0, NULL }


struct  _CMsgGCToClientSocialMatchDetailsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
  size_t n_comments;
  CMsgGCToClientSocialMatchDetailsResponse__Comment **comments;
};
#define CMSG_GCTO_CLIENT_SOCIAL_MATCH_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_social_match_details_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTAPartyRichPresence__Member
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steam_id;
  uint64_t steam_id;
  protobuf_c_boolean has_coach;
  protobuf_c_boolean coach;
};
#define CMSG_DOTAPARTY_RICH_PRESENCE__MEMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaparty_rich_presence__member__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAPartyRichPresence__WeekendTourney
{
  ProtobufCMessage base;
  protobuf_c_boolean has_division;
  uint32_t division;
  protobuf_c_boolean has_skill_level;
  uint32_t skill_level;
  protobuf_c_boolean has_round;
  uint32_t round;
  protobuf_c_boolean has_tournament_id;
  uint32_t tournament_id;
  protobuf_c_boolean has_state_seq_num;
  uint32_t state_seq_num;
  protobuf_c_boolean has_event;
  EWeekendTourneyRichPresenceEvent event;
  protobuf_c_boolean has_event_round;
  uint32_t event_round;
};
#define CMSG_DOTAPARTY_RICH_PRESENCE__WEEKEND_TOURNEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaparty_rich_presence__weekend_tourney__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,EWEEKEND_TOURNEY_RICH_PRESENCE_EVENT__k_EWeekendTourneyRichPresenceEvent_None, 0,0 }


struct  _CMsgDOTAPartyRichPresence
{
  ProtobufCMessage base;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_party_state;
  CSODOTAParty__State party_state;
  protobuf_c_boolean has_open;
  protobuf_c_boolean open;
  protobuf_c_boolean has_low_priority;
  protobuf_c_boolean low_priority;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *team_name;
  protobuf_c_boolean has_ugc_team_ui_logo;
  uint64_t ugc_team_ui_logo;
  size_t n_members;
  CMsgDOTAPartyRichPresence__Member **members;
  CMsgDOTAPartyRichPresence__WeekendTourney *weekend_tourney;
};
#define CMSG_DOTAPARTY_RICH_PRESENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaparty_rich_presence__descriptor) \
    , 0,0, 0,CSODOTAPARTY__STATE__UI, 0,0, 0,0, 0,0, NULL, 0,0, 0,NULL, NULL }


struct  _CMsgDOTALobbyRichPresence
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_lobby_state;
  CSODOTALobby__State lobby_state;
  protobuf_c_boolean has_password;
  protobuf_c_boolean password;
  protobuf_c_boolean has_game_mode;
  DOTAGameMode game_mode;
  protobuf_c_boolean has_member_count;
  uint32_t member_count;
  protobuf_c_boolean has_max_member_count;
  uint32_t max_member_count;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  char *name;
};
#define CMSG_DOTALOBBY_RICH_PRESENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotalobby_rich_presence__descriptor) \
    , 0,0, 0,CSODOTALOBBY__STATE__UI, 0,0, 0,DOTA__GAME_MODE__DOTA_GAMEMODE_NONE, 0,0, 0,0, 0,0, NULL }


struct  _CMsgDOTACustomGameListenServerStartedLoading
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  size_t n_lobby_members;
  uint32_t *lobby_members;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
};
#define CMSG_DOTACUSTOM_GAME_LISTEN_SERVER_STARTED_LOADING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacustom_game_listen_server_started_loading__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,0 }


struct  _CMsgDOTACustomGameClientFinishedLoading
{
  ProtobufCMessage base;
  protobuf_c_boolean has_lobby_id;
  uint64_t lobby_id;
  protobuf_c_boolean has_loading_duration;
  uint32_t loading_duration;
  protobuf_c_boolean has_result_code;
  int32_t result_code;
  char *result_string;
  protobuf_c_boolean has_signon_states;
  uint32_t signon_states;
  char *comment;
};
#define CMSG_DOTACUSTOM_GAME_CLIENT_FINISHED_LOADING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacustom_game_client_finished_loading__descriptor) \
    , 0,0, 0,0, 0,0, NULL, 0,0, NULL }


struct  _CMsgClientToGCGetLeagueSeries
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_CLIENT_TO_GCGET_LEAGUE_SERIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_league_series__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCGetLeagueSeriesResponse__Series__Team
{
  ProtobufCMessage base;
  protobuf_c_boolean has_team_id;
  uint32_t team_id;
  char *team_name;
  char *team_tag;
  protobuf_c_boolean has_team_score;
  uint32_t team_score;
  protobuf_c_boolean has_team_wins;
  uint32_t team_wins;
};
#define CMSG_CLIENT_TO_GCGET_LEAGUE_SERIES_RESPONSE__SERIES__TEAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_league_series_response__series__team__descriptor) \
    , 0,0, NULL, NULL, 0,0, 0,0 }


struct  _CMsgClientToGCGetLeagueSeriesResponse__Series
{
  ProtobufCMessage base;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_num_games;
  uint32_t num_games;
  size_t n_teams;
  CMsgClientToGCGetLeagueSeriesResponse__Series__Team **teams;
  char *series_name;
  char *phase_name;
  protobuf_c_boolean has_start_time;
  uint32_t start_time;
  protobuf_c_boolean has_after_series_id;
  uint32_t after_series_id;
  protobuf_c_boolean has_num_completed_games;
  uint32_t num_completed_games;
};
#define CMSG_CLIENT_TO_GCGET_LEAGUE_SERIES_RESPONSE__SERIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_league_series_response__series__descriptor) \
    , 0,0, 0,0, 0,NULL, NULL, NULL, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCGetLeagueSeriesResponse
{
  ProtobufCMessage base;
  size_t n_series;
  CMsgClientToGCGetLeagueSeriesResponse__Series **series;
};
#define CMSG_CLIENT_TO_GCGET_LEAGUE_SERIES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_league_series_response__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCApplyGemCombiner
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id_1;
  uint64_t item_id_1;
  protobuf_c_boolean has_item_id_2;
  uint64_t item_id_2;
};
#define CMSG_CLIENT_TO_GCAPPLY_GEM_COMBINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcapply_gem_combiner__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCH264Unsupported
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCH264_UNSUPPORTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gch264_unsupported__descriptor) \
     }


struct  _CMsgClientToGCRequestH264Support
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCREQUEST_H264_SUPPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_h264_support__descriptor) \
     }


struct  _CMsgClientToGCGetQuestProgress
{
  ProtobufCMessage base;
  size_t n_quest_ids;
  uint32_t *quest_ids;
};
#define CMSG_CLIENT_TO_GCGET_QUEST_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_quest_progress__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCGetQuestProgressResponse__Challenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
  protobuf_c_boolean has_time_completed;
  uint32_t time_completed;
  protobuf_c_boolean has_attempts;
  uint32_t attempts;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_challenge_type;
  uint32_t challenge_type;
  protobuf_c_boolean has_quest_rank;
  uint32_t quest_rank;
};
#define CMSG_CLIENT_TO_GCGET_QUEST_PROGRESS_RESPONSE__CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_quest_progress_response__challenge__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCGetQuestProgressResponse__Quest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quest_id;
  uint32_t quest_id;
  size_t n_completed_challenges;
  CMsgClientToGCGetQuestProgressResponse__Challenge **completed_challenges;
};
#define CMSG_CLIENT_TO_GCGET_QUEST_PROGRESS_RESPONSE__QUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_quest_progress_response__quest__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCGetQuestProgressResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
  size_t n_quests;
  CMsgClientToGCGetQuestProgressResponse__Quest **quests;
};
#define CMSG_CLIENT_TO_GCGET_QUEST_PROGRESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_quest_progress_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgGCToClientMatchSignedOut
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_GCTO_CLIENT_MATCH_SIGNED_OUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_match_signed_out__descriptor) \
    , 0,0 }


struct  _CMsgGCGetHeroStatsHistory
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMSG_GCGET_HERO_STATS_HISTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcget_hero_stats_history__descriptor) \
    , 0,0 }


struct  _CMsgGCGetHeroStatsHistoryResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  size_t n_records;
  CMsgDOTASDOHeroStatsHistory **records;
};
#define CMSG_GCGET_HERO_STATS_HISTORY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcget_hero_stats_history_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgPlayerConductScorecardRequest
{
  ProtobufCMessage base;
};
#define CMSG_PLAYER_CONDUCT_SCORECARD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_player_conduct_scorecard_request__descriptor) \
     }


struct  _CMsgPlayerConductScorecard
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_seq_num;
  uint32_t seq_num;
  protobuf_c_boolean has_reasons;
  uint32_t reasons;
  protobuf_c_boolean has_matches_in_report;
  uint32_t matches_in_report;
  protobuf_c_boolean has_matches_clean;
  uint32_t matches_clean;
  protobuf_c_boolean has_matches_reported;
  uint32_t matches_reported;
  protobuf_c_boolean has_matches_abandoned;
  uint32_t matches_abandoned;
  protobuf_c_boolean has_reports_count;
  uint32_t reports_count;
  protobuf_c_boolean has_reports_parties;
  uint32_t reports_parties;
  protobuf_c_boolean has_commend_count;
  uint32_t commend_count;
  protobuf_c_boolean has_end_score;
  uint32_t end_score;
  protobuf_c_boolean has_date;
  uint32_t date;
};
#define CMSG_PLAYER_CONDUCT_SCORECARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_player_conduct_scorecard__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCWageringRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_CLIENT_TO_GCWAGERING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcwagering_request__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientWageringResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_coins_remaining;
  uint32_t coins_remaining;
  protobuf_c_boolean has_total_points_won;
  uint32_t total_points_won;
  protobuf_c_boolean has_total_points_wagered;
  uint32_t total_points_wagered;
  protobuf_c_boolean has_total_points_tipped;
  uint32_t total_points_tipped;
  protobuf_c_boolean has_success_rate;
  uint32_t success_rate;
  protobuf_c_boolean has_total_games_wagered;
  uint32_t total_games_wagered;
  protobuf_c_boolean has_coins_max;
  uint32_t coins_max;
};
#define CMSG_GCTO_CLIENT_WAGERING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_wagering_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCToClientWageringUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  CMsgGCToClientWageringResponse *wagering_info;
};
#define CMSG_GCTO_CLIENT_WAGERING_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_wagering_update__descriptor) \
    , 0,0, NULL }


struct  _CMsgGCToClientArcanaVotesUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  CMsgClientToGCRequestArcanaVotesRemainingResponse *arcana_votes;
};
#define CMSG_GCTO_CLIENT_ARCANA_VOTES_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_arcana_votes_update__descriptor) \
    , 0,0, NULL }


struct  _CMsgClientToGCMysteryItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_action_id;
  uint32_t action_id;
};
#define CMSG_CLIENT_TO_GCMYSTERY_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcmystery_item__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgGCToClientMysteryItemResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgGCToClientMysteryItemResponse__Result result;
  protobuf_c_boolean has_reward_type;
  uint32_t reward_type;
  protobuf_c_boolean has_itemdef;
  uint32_t itemdef;
};
#define CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_mystery_item_response__descriptor) \
    , 0,CMSG_GCTO_CLIENT_MYSTERY_ITEM_RESPONSE__RESULT__SUCCESS, 0,0, 0,0 }


struct  _CMsgClientToGCGetEventGoals
{
  ProtobufCMessage base;
  size_t n_event_ids;
  EEvent *event_ids;
};
#define CMSG_CLIENT_TO_GCGET_EVENT_GOALS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcget_event_goals__descriptor) \
    , 0,NULL }


struct  _CMsgEventGoals__EventGoal
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  EEvent event_id;
  protobuf_c_boolean has_goal_id;
  uint32_t goal_id;
  protobuf_c_boolean has_value;
  uint64_t value;
};
#define CMSG_EVENT_GOALS__EVENT_GOAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_event_goals__event_goal__descriptor) \
    , 0,EEVENT__EVENT_ID_NONE, 0,0, 0,0 }


struct  _CMsgEventGoals
{
  ProtobufCMessage base;
  size_t n_event_goals;
  CMsgEventGoals__EventGoal **event_goals;
};
#define CMSG_EVENT_GOALS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_event_goals__descriptor) \
    , 0,NULL }


struct  _CMsgGCToGCLeaguePredictions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
};
#define CMSG_GCTO_GCLEAGUE_PREDICTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_gcleague_predictions__descriptor) \
    , 0,0 }


struct  _CMsgPredictionRankings__PredictionLine
{
  ProtobufCMessage base;
  protobuf_c_boolean has_answer_id;
  uint32_t answer_id;
  char *answer_name;
  protobuf_c_boolean has_answer_logo;
  uint64_t answer_logo;
  protobuf_c_boolean has_answer_value;
  float answer_value;
};
#define CMSG_PREDICTION_RANKINGS__PREDICTION_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_rankings__prediction_line__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CMsgPredictionRankings__Prediction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_selection_id;
  uint32_t selection_id;
  size_t n_prediction_lines;
  CMsgPredictionRankings__PredictionLine **prediction_lines;
};
#define CMSG_PREDICTION_RANKINGS__PREDICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_rankings__prediction__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgPredictionRankings
{
  ProtobufCMessage base;
  size_t n_predictions;
  CMsgPredictionRankings__Prediction **predictions;
};
#define CMSG_PREDICTION_RANKINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_rankings__descriptor) \
    , 0,NULL }


struct  _CMsgPredictionResults__ResultBreakdown
{
  ProtobufCMessage base;
  protobuf_c_boolean has_answer_selection;
  uint32_t answer_selection;
  protobuf_c_boolean has_answer_value;
  float answer_value;
};
#define CMSG_PREDICTION_RESULTS__RESULT_BREAKDOWN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_results__result_breakdown__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgPredictionResults__Result
{
  ProtobufCMessage base;
  protobuf_c_boolean has_selection_id;
  uint32_t selection_id;
  size_t n_result_breakdown;
  CMsgPredictionResults__ResultBreakdown **result_breakdown;
};
#define CMSG_PREDICTION_RESULTS__RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_results__result__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgPredictionResults
{
  ProtobufCMessage base;
  size_t n_results;
  CMsgPredictionResults__Result **results;
};
#define CMSG_PREDICTION_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_prediction_results__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCSuspiciousActivity
{
  ProtobufCMessage base;
  protobuf_c_boolean has_app_data;
  uint64_t app_data;
};
#define CMSG_CLIENT_TO_GCSUSPICIOUS_ACTIVITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcsuspicious_activity__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCHasPlayerVotedForMVP
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_CLIENT_TO_GCHAS_PLAYER_VOTED_FOR_MVP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gchas_player_voted_for_mvp__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCHasPlayerVotedForMVPResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_CLIENT_TO_GCHAS_PLAYER_VOTED_FOR_MVPRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gchas_player_voted_for_mvpresponse__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCVoteForMVP
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_CLIENT_TO_GCVOTE_FOR_MVP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcvote_for_mvp__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCVoteForMVPResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
};
#define CMSG_CLIENT_TO_GCVOTE_FOR_MVPRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcvote_for_mvpresponse__descriptor) \
    , 0,0 }


struct  _CMsgMVPVotesForMatch__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_vote_count;
  uint32_t vote_count;
};
#define CMSG_MVPVOTES_FOR_MATCH__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_mvpvotes_for_match__player__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgMVPVotesForMatch
{
  ProtobufCMessage base;
  size_t n_players;
  CMsgMVPVotesForMatch__Player **players;
};
#define CMSG_MVPVOTES_FOR_MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_mvpvotes_for_match__descriptor) \
    , 0,NULL }


struct  _CMsgLeaguePrizePool
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prize_pool;
  uint32_t prize_pool;
  protobuf_c_boolean has_increment_per_second;
  float increment_per_second;
};
#define CMSG_LEAGUE_PRIZE_POOL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_league_prize_pool__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCTeammateStatsRequest
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCTEAMMATE_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcteammate_stats_request__descriptor) \
     }


struct  _CMsgClientToGCTeammateStatsResponse__TeammateStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_games;
  uint32_t games;
  protobuf_c_boolean has_wins;
  uint32_t wins;
  protobuf_c_boolean has_most_recent_game_timestamp;
  uint32_t most_recent_game_timestamp;
  protobuf_c_boolean has_most_recent_game_match_id;
  uint64_t most_recent_game_match_id;
  protobuf_c_boolean has_performance;
  float performance;
};
#define CMSG_CLIENT_TO_GCTEAMMATE_STATS_RESPONSE__TEAMMATE_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcteammate_stats_response__teammate_stat__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCTeammateStatsResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
  size_t n_teammate_stats;
  CMsgClientToGCTeammateStatsResponse__TeammateStat **teammate_stats;
};
#define CMSG_CLIENT_TO_GCTEAMMATE_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcteammate_stats_response__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCVoteForArcana__MatchVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_vote_count;
  uint32_t vote_count;
};
#define CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA__MATCH_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcvote_for_arcana__match_vote__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCVoteForArcana
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgClientToGCVoteForArcana__MatchVote **matches;
};
#define CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcvote_for_arcana__descriptor) \
    , 0,NULL }


struct  _CMsgClientToGCVoteForArcanaResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCVoteForArcanaResponse__Result result;
};
#define CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcvote_for_arcana_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCVOTE_FOR_ARCANA_RESPONSE__RESULT__SUCCEEDED }


struct  _CMsgArcanaVotes__Match
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint32_t match_id;
  protobuf_c_boolean has_hero_id_0;
  uint32_t hero_id_0;
  protobuf_c_boolean has_hero_id_1;
  uint32_t hero_id_1;
  protobuf_c_boolean has_hero_seeding_0;
  uint32_t hero_seeding_0;
  protobuf_c_boolean has_hero_seeding_1;
  uint32_t hero_seeding_1;
  protobuf_c_boolean has_vote_count_0;
  uint32_t vote_count_0;
  protobuf_c_boolean has_vote_count_1;
  uint32_t vote_count_1;
  protobuf_c_boolean has_voting_state;
  uint32_t voting_state;
  protobuf_c_boolean has_round_number;
  uint32_t round_number;
  protobuf_c_boolean has_is_votes_hidden;
  protobuf_c_boolean is_votes_hidden;
  protobuf_c_boolean has_calibration_time_remaining;
  uint32_t calibration_time_remaining;
};
#define CMSG_ARCANA_VOTES__MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_arcana_votes__match__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgArcanaVotes
{
  ProtobufCMessage base;
  size_t n_matches;
  CMsgArcanaVotes__Match **matches;
  protobuf_c_boolean has_round_time_remaining;
  uint32_t round_time_remaining;
  protobuf_c_boolean has_round_number;
  uint32_t round_number;
  protobuf_c_boolean has_voting_state;
  uint32_t voting_state;
  protobuf_c_boolean has_is_current_round_calibrating;
  protobuf_c_boolean is_current_round_calibrating;
  protobuf_c_boolean has_closest_active_match_id;
  uint32_t closest_active_match_id;
};
#define CMSG_ARCANA_VOTES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_arcana_votes__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCRequestArcanaVotesRemaining
{
  ProtobufCMessage base;
};
#define CMSG_CLIENT_TO_GCREQUEST_ARCANA_VOTES_REMAINING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_arcana_votes_remaining__descriptor) \
     }


struct  _CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_vote_count;
  uint32_t vote_count;
};
#define CMSG_CLIENT_TO_GCREQUEST_ARCANA_VOTES_REMAINING_RESPONSE__MATCH_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_arcana_votes_remaining_response__match_vote__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCRequestArcanaVotesRemainingResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
  protobuf_c_boolean has_votes_remaining;
  uint32_t votes_remaining;
  protobuf_c_boolean has_votes_total;
  uint32_t votes_total;
  size_t n_matches_previously_voted_for;
  CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote **matches_previously_voted_for;
};
#define CMSG_CLIENT_TO_GCREQUEST_ARCANA_VOTES_REMAINING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_arcana_votes_remaining_response__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL }


struct  _CMsgClientToGCRequestEventPointLog
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quest_id;
  uint32_t quest_id;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
  protobuf_c_boolean has_rank;
  uint32_t rank;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__QUEST_CHALLENGE_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__quest_challenge_event__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__WAGER_WON_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__wager_won_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_recipient_account_id;
  uint32_t recipient_account_id;
  char *recipient_name;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__TIP_GIVEN_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__tip_given_event__descriptor) \
    , 0,0, NULL }


struct  _CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_giver_account_id;
  uint32_t giver_account_id;
  char *giver_name;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__TIP_RECEIVED_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__tip_received_event__descriptor) \
    , 0,0, NULL }


struct  _CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_recipe_item_def_index;
  uint32_t recipe_item_def_index;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__RECYCLED_ITEM_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__recycled_item_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__AchievementEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_action_id;
  uint32_t action_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__ACHIEVEMENT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__achievement_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_community_goal_item;
  protobuf_c_boolean community_goal_item;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__MYSTERY_ITEM_RECEIVED_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__mystery_item_received_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prediction_id;
  uint32_t prediction_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__CORRECT_PREDICTION_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__correct_prediction_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__IN_GAME_PREDICTION_CORRECT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__in_game_prediction_correct_event__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time;
  uint32_t time;
  protobuf_c_boolean has_event_points;
  int32_t event_points;
  protobuf_c_boolean has_compendium_activated_event;
  protobuf_c_boolean compendium_activated_event;
  protobuf_c_boolean has_point_item_used_event;
  protobuf_c_boolean point_item_used_event;
  CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent *wager_won_event;
  CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent *mystery_item_received_event;
  CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent *quest_challenge_event;
  CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent *tip_given_event;
  CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent *tip_received_event;
  CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent *recycled_item_event;
  CMsgClientToGCRequestEventPointLogResponse__AchievementEvent *achievement_event;
  CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent *in_game_prediction_event;
  CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent *prediction_event;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__EVENT_POINT_TRANSACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__event_point_transaction__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _CMsgClientToGCRequestEventPointLogResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  protobuf_c_boolean result;
  size_t n_transactions;
  CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction **transactions;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_EVENT_POINT_LOG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_event_point_log_response__descriptor) \
    , 0,0, 0,NULL, 0,0 }


struct  _CMsgClientToGCPublishUserStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_user_stats_event;
  uint32_t user_stats_event;
  protobuf_c_boolean has_reference_data;
  uint64_t reference_data;
};
#define CMSG_CLIENT_TO_GCPUBLISH_USER_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcpublish_user_stat__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCAddTI6TreeProgress
{
  ProtobufCMessage base;
  protobuf_c_boolean has_trees;
  uint32_t trees;
};
#define CMSG_CLIENT_TO_GCADD_TI6_TREE_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcadd_ti6_tree_progress__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRedeemReward
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  uint32_t event_id;
  protobuf_c_boolean has_action_id;
  uint32_t action_id;
  protobuf_c_boolean has_base_action_id;
  uint32_t base_action_id;
};
#define CMSG_CLIENT_TO_GCREDEEM_REWARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcredeem_reward__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgGCToClientRedeemRewardResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgGCToClientRedeemRewardResponse__Result result;
};
#define CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_redeem_reward_response__descriptor) \
    , 0,CMSG_GCTO_CLIENT_REDEEM_REWARD_RESPONSE__RESULT__SUCCESS }


struct  _CMsgClientToGCRequestLinaPlaysRemaining
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  EEvent event_id;
};
#define CMSG_CLIENT_TO_GCREQUEST_LINA_PLAYS_REMAINING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_lina_plays_remaining__descriptor) \
    , 0,EEVENT__EVENT_ID_NONE }


struct  _CMsgClientToGCRequestLinaPlaysRemainingResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_plays_remaining;
  uint32_t plays_remaining;
  protobuf_c_boolean has_plays_total;
  uint32_t plays_total;
};
#define CMSG_CLIENT_TO_GCREQUEST_LINA_PLAYS_REMAINING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_lina_plays_remaining_response__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCRequestLinaGameResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  EEvent event_id;
  protobuf_c_boolean has_slot_chosen;
  uint32_t slot_chosen;
};
#define CMSG_CLIENT_TO_GCREQUEST_LINA_GAME_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_lina_game_result__descriptor) \
    , 0,EEVENT__EVENT_ID_NONE, 0,0 }


struct  _CMsgClientToGCRequestLinaGameResultResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  uint32_t result;
};
#define CMSG_CLIENT_TO_GCREQUEST_LINA_GAME_RESULT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrequest_lina_game_result_response__descriptor) \
    , 0,0 }


struct  _CMsgGCToClientQuestProgressUpdated__Challenge
{
  ProtobufCMessage base;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
  protobuf_c_boolean has_time_completed;
  uint32_t time_completed;
  protobuf_c_boolean has_attempts;
  uint32_t attempts;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_challenge_type;
  uint32_t challenge_type;
  protobuf_c_boolean has_quest_rank;
  uint32_t quest_rank;
};
#define CMSG_GCTO_CLIENT_QUEST_PROGRESS_UPDATED__CHALLENGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_quest_progress_updated__challenge__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CMsgGCToClientQuestProgressUpdated
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quest_id;
  uint32_t quest_id;
  size_t n_completed_challenges;
  CMsgGCToClientQuestProgressUpdated__Challenge **completed_challenges;
};
#define CMSG_GCTO_CLIENT_QUEST_PROGRESS_UPDATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_gcto_client_quest_progress_updated__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgDOTARedeemItem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_currency_id;
  uint64_t currency_id;
  protobuf_c_boolean has_purchase_def;
  uint32_t purchase_def;
};
#define CMSG_DOTAREDEEM_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaredeem_item__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTARedeemItemResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_response;
  CMsgDOTARedeemItemResponse__EResultCode response;
};
#define CMSG_DOTAREDEEM_ITEM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotaredeem_item_response__descriptor) \
    , 0,CMSG_DOTAREDEEM_ITEM_RESPONSE__ERESULT_CODE__k_Succeeded }


struct  _CMsgPerfectWorldUserLookupRequest
{
  ProtobufCMessage base;
  char *user_name;
};
#define CMSG_PERFECT_WORLD_USER_LOOKUP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_perfect_world_user_lookup_request__descriptor) \
    , NULL }


struct  _CMsgPerfectWorldUserLookupResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result_code;
  CMsgPerfectWorldUserLookupResponse__EResultCode result_code;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
};
#define CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_perfect_world_user_lookup_response__descriptor) \
    , 0,CMSG_PERFECT_WORLD_USER_LOOKUP_RESPONSE__ERESULT_CODE__SUCCESS_ACCOUNT_FOUND, 0,0 }


struct  _CMsgNexonPartnerUpdate
{
  ProtobufCMessage base;
  protobuf_c_boolean has_messagetype;
  uint32_t messagetype;
  protobuf_c_boolean has_timeremaining;
  uint32_t timeremaining;
  protobuf_c_boolean has_terminate;
  protobuf_c_boolean terminate;
};
#define CMSG_NEXON_PARTNER_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_nexon_partner_update__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgMakeOffering
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
};
#define CMSG_MAKE_OFFERING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_make_offering__descriptor) \
    , 0,0 }


struct  _CMsgRequestOfferings
{
  ProtobufCMessage base;
};
#define CMSG_REQUEST_OFFERINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_offerings__descriptor) \
     }


struct  _CMsgRequestOfferingsResponse__NewYearsOffering
{
  ProtobufCMessage base;
  protobuf_c_boolean has_def_index;
  uint32_t def_index;
  protobuf_c_boolean has_item_id;
  uint64_t item_id;
};
#define CMSG_REQUEST_OFFERINGS_RESPONSE__NEW_YEARS_OFFERING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_offerings_response__new_years_offering__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgRequestOfferingsResponse
{
  ProtobufCMessage base;
  size_t n_offerings;
  CMsgRequestOfferingsResponse__NewYearsOffering **offerings;
  protobuf_c_boolean has_completed;
  protobuf_c_boolean completed;
};
#define CMSG_REQUEST_OFFERINGS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_request_offerings_response__descriptor) \
    , 0,NULL, 0,0 }


struct  _CMsgDOTAPCBangTimedReward
{
  ProtobufCMessage base;
  char *persona;
  protobuf_c_boolean has_itemdef;
  uint32_t itemdef;
  char *pcbangname;
};
#define CMSG_DOTAPCBANG_TIMED_REWARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotapcbang_timed_reward__descriptor) \
    , NULL, 0,0, NULL }


struct  _CMsgDOTACompendiumInGamePredictionResults__PredictionResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prediction_id;
  uint32_t prediction_id;
  protobuf_c_boolean has_prediction_value;
  uint32_t prediction_value;
};
#define CMSG_DOTACOMPENDIUM_IN_GAME_PREDICTION_RESULTS__PREDICTION_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_in_game_prediction_results__prediction_result__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTACompendiumInGamePredictionResults
{
  ProtobufCMessage base;
  size_t n_results;
  CMsgDOTACompendiumInGamePredictionResults__PredictionResult **results;
  protobuf_c_boolean has_league_id;
  uint32_t league_id;
  protobuf_c_boolean has_predictions_closed;
  protobuf_c_boolean predictions_closed;
};
#define CMSG_DOTACOMPENDIUM_IN_GAME_PREDICTION_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotacompendium_in_game_prediction_results__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _CMsgClientToGCSelectCompendiumInGamePrediction__Prediction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_prediction_id;
  uint32_t prediction_id;
  protobuf_c_boolean has_prediction_value;
  uint32_t prediction_value;
};
#define CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION__PREDICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcselect_compendium_in_game_prediction__prediction__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgClientToGCSelectCompendiumInGamePrediction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  size_t n_predictions;
  CMsgClientToGCSelectCompendiumInGamePrediction__Prediction **predictions;
};
#define CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcselect_compendium_in_game_prediction__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgClientToGCSelectCompendiumInGamePredictionResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCSelectCompendiumInGamePredictionResponse__EResult result;
};
#define CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcselect_compendium_in_game_prediction_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCSELECT_COMPENDIUM_IN_GAME_PREDICTION_RESPONSE__ERESULT__SUCCESS }


struct  _CMsgClientToGCOpenPlayerCardPack
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_card_pack_item_id;
  uint64_t player_card_pack_item_id;
};
#define CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcopen_player_card_pack__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCOpenPlayerCardPackResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCOpenPlayerCardPackResponse__Result result;
  size_t n_player_card_item_ids;
  uint64_t *player_card_item_ids;
};
#define CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcopen_player_card_pack_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCOPEN_PLAYER_CARD_PACK_RESPONSE__RESULT__SUCCESS, 0,NULL }


struct  _CMsgClientToGCRecyclePlayerCard
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_card_item_id;
  uint64_t player_card_item_id;
};
#define CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrecycle_player_card__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCRecyclePlayerCardResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCRecyclePlayerCardResponse__Result result;
  protobuf_c_boolean has_dust_amount;
  uint32_t dust_amount;
};
#define CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gcrecycle_player_card_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCRECYCLE_PLAYER_CARD_RESPONSE__RESULT__SUCCESS, 0,0 }


struct  _CMsgClientToGCCreatePlayerCardPack
{
  ProtobufCMessage base;
  protobuf_c_boolean has_card_dust_item_id;
  uint64_t card_dust_item_id;
};
#define CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccreate_player_card_pack__descriptor) \
    , 0,0 }


struct  _CMsgClientToGCCreatePlayerCardPackResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean has_result;
  CMsgClientToGCCreatePlayerCardPackResponse__Result result;
};
#define CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_client_to_gccreate_player_card_pack_response__descriptor) \
    , 0,CMSG_CLIENT_TO_GCCREATE_PLAYER_CARD_PACK_RESPONSE__RESULT__SUCCESS }


/* CMsgClientSuspended methods */
void   cmsg_client_suspended__init
                     (CMsgClientSuspended         *message);
size_t cmsg_client_suspended__get_packed_size
                     (const CMsgClientSuspended   *message);
size_t cmsg_client_suspended__pack
                     (const CMsgClientSuspended   *message,
                      uint8_t             *out);
size_t cmsg_client_suspended__pack_to_buffer
                     (const CMsgClientSuspended   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientSuspended *
       cmsg_client_suspended__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_suspended__free_unpacked
                     (CMsgClientSuspended *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestInternationalTicket methods */
void   cmsg_request_international_ticket__init
                     (CMsgRequestInternationalTicket         *message);
size_t cmsg_request_international_ticket__get_packed_size
                     (const CMsgRequestInternationalTicket   *message);
size_t cmsg_request_international_ticket__pack
                     (const CMsgRequestInternationalTicket   *message,
                      uint8_t             *out);
size_t cmsg_request_international_ticket__pack_to_buffer
                     (const CMsgRequestInternationalTicket   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestInternationalTicket *
       cmsg_request_international_ticket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_international_ticket__free_unpacked
                     (CMsgRequestInternationalTicket *message,
                      ProtobufCAllocator *allocator);
/* CMsgBalancedShuffleLobby methods */
void   cmsg_balanced_shuffle_lobby__init
                     (CMsgBalancedShuffleLobby         *message);
size_t cmsg_balanced_shuffle_lobby__get_packed_size
                     (const CMsgBalancedShuffleLobby   *message);
size_t cmsg_balanced_shuffle_lobby__pack
                     (const CMsgBalancedShuffleLobby   *message,
                      uint8_t             *out);
size_t cmsg_balanced_shuffle_lobby__pack_to_buffer
                     (const CMsgBalancedShuffleLobby   *message,
                      ProtobufCBuffer     *buffer);
CMsgBalancedShuffleLobby *
       cmsg_balanced_shuffle_lobby__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_balanced_shuffle_lobby__free_unpacked
                     (CMsgBalancedShuffleLobby *message,
                      ProtobufCAllocator *allocator);
/* CMsgInitialQuestionnaireResponse methods */
void   cmsg_initial_questionnaire_response__init
                     (CMsgInitialQuestionnaireResponse         *message);
size_t cmsg_initial_questionnaire_response__get_packed_size
                     (const CMsgInitialQuestionnaireResponse   *message);
size_t cmsg_initial_questionnaire_response__pack
                     (const CMsgInitialQuestionnaireResponse   *message,
                      uint8_t             *out);
size_t cmsg_initial_questionnaire_response__pack_to_buffer
                     (const CMsgInitialQuestionnaireResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgInitialQuestionnaireResponse *
       cmsg_initial_questionnaire_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_initial_questionnaire_response__free_unpacked
                     (CMsgInitialQuestionnaireResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPlayerMatchHistory methods */
void   cmsg_dotaplayer_match_history__init
                     (CMsgDOTAPlayerMatchHistory         *message);
size_t cmsg_dotaplayer_match_history__get_packed_size
                     (const CMsgDOTAPlayerMatchHistory   *message);
size_t cmsg_dotaplayer_match_history__pack
                     (const CMsgDOTAPlayerMatchHistory   *message,
                      uint8_t             *out);
size_t cmsg_dotaplayer_match_history__pack_to_buffer
                     (const CMsgDOTAPlayerMatchHistory   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPlayerMatchHistory *
       cmsg_dotaplayer_match_history__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaplayer_match_history__free_unpacked
                     (CMsgDOTAPlayerMatchHistory *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAMatchHistoryFilter methods */
void   cmsg_dotamatch_history_filter__init
                     (CMsgDOTAMatchHistoryFilter         *message);
size_t cmsg_dotamatch_history_filter__get_packed_size
                     (const CMsgDOTAMatchHistoryFilter   *message);
size_t cmsg_dotamatch_history_filter__pack
                     (const CMsgDOTAMatchHistoryFilter   *message,
                      uint8_t             *out);
size_t cmsg_dotamatch_history_filter__pack_to_buffer
                     (const CMsgDOTAMatchHistoryFilter   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAMatchHistoryFilter *
       cmsg_dotamatch_history_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotamatch_history_filter__free_unpacked
                     (CMsgDOTAMatchHistoryFilter *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestMatches methods */
void   cmsg_dotarequest_matches__init
                     (CMsgDOTARequestMatches         *message);
size_t cmsg_dotarequest_matches__get_packed_size
                     (const CMsgDOTARequestMatches   *message);
size_t cmsg_dotarequest_matches__pack
                     (const CMsgDOTARequestMatches   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_matches__pack_to_buffer
                     (const CMsgDOTARequestMatches   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestMatches *
       cmsg_dotarequest_matches__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_matches__free_unpacked
                     (CMsgDOTARequestMatches *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestMatchesResponse__Series methods */
void   cmsg_dotarequest_matches_response__series__init
                     (CMsgDOTARequestMatchesResponse__Series         *message);
/* CMsgDOTARequestMatchesResponse methods */
void   cmsg_dotarequest_matches_response__init
                     (CMsgDOTARequestMatchesResponse         *message);
size_t cmsg_dotarequest_matches_response__get_packed_size
                     (const CMsgDOTARequestMatchesResponse   *message);
size_t cmsg_dotarequest_matches_response__pack
                     (const CMsgDOTARequestMatchesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_matches_response__pack_to_buffer
                     (const CMsgDOTARequestMatchesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestMatchesResponse *
       cmsg_dotarequest_matches_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_matches_response__free_unpacked
                     (CMsgDOTARequestMatchesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPopup methods */
void   cmsg_dotapopup__init
                     (CMsgDOTAPopup         *message);
size_t cmsg_dotapopup__get_packed_size
                     (const CMsgDOTAPopup   *message);
size_t cmsg_dotapopup__pack
                     (const CMsgDOTAPopup   *message,
                      uint8_t             *out);
size_t cmsg_dotapopup__pack_to_buffer
                     (const CMsgDOTAPopup   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPopup *
       cmsg_dotapopup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapopup__free_unpacked
                     (CMsgDOTAPopup *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAReportsRemainingRequest methods */
void   cmsg_dotareports_remaining_request__init
                     (CMsgDOTAReportsRemainingRequest         *message);
size_t cmsg_dotareports_remaining_request__get_packed_size
                     (const CMsgDOTAReportsRemainingRequest   *message);
size_t cmsg_dotareports_remaining_request__pack
                     (const CMsgDOTAReportsRemainingRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotareports_remaining_request__pack_to_buffer
                     (const CMsgDOTAReportsRemainingRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAReportsRemainingRequest *
       cmsg_dotareports_remaining_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareports_remaining_request__free_unpacked
                     (CMsgDOTAReportsRemainingRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAReportsRemainingResponse methods */
void   cmsg_dotareports_remaining_response__init
                     (CMsgDOTAReportsRemainingResponse         *message);
size_t cmsg_dotareports_remaining_response__get_packed_size
                     (const CMsgDOTAReportsRemainingResponse   *message);
size_t cmsg_dotareports_remaining_response__pack
                     (const CMsgDOTAReportsRemainingResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotareports_remaining_response__pack_to_buffer
                     (const CMsgDOTAReportsRemainingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAReportsRemainingResponse *
       cmsg_dotareports_remaining_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareports_remaining_response__free_unpacked
                     (CMsgDOTAReportsRemainingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASubmitPlayerReport methods */
void   cmsg_dotasubmit_player_report__init
                     (CMsgDOTASubmitPlayerReport         *message);
size_t cmsg_dotasubmit_player_report__get_packed_size
                     (const CMsgDOTASubmitPlayerReport   *message);
size_t cmsg_dotasubmit_player_report__pack
                     (const CMsgDOTASubmitPlayerReport   *message,
                      uint8_t             *out);
size_t cmsg_dotasubmit_player_report__pack_to_buffer
                     (const CMsgDOTASubmitPlayerReport   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASubmitPlayerReport *
       cmsg_dotasubmit_player_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotasubmit_player_report__free_unpacked
                     (CMsgDOTASubmitPlayerReport *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASubmitPlayerReportResponse methods */
void   cmsg_dotasubmit_player_report_response__init
                     (CMsgDOTASubmitPlayerReportResponse         *message);
size_t cmsg_dotasubmit_player_report_response__get_packed_size
                     (const CMsgDOTASubmitPlayerReportResponse   *message);
size_t cmsg_dotasubmit_player_report_response__pack
                     (const CMsgDOTASubmitPlayerReportResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotasubmit_player_report_response__pack_to_buffer
                     (const CMsgDOTASubmitPlayerReportResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASubmitPlayerReportResponse *
       cmsg_dotasubmit_player_report_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotasubmit_player_report_response__free_unpacked
                     (CMsgDOTASubmitPlayerReportResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAReportCountsRequest methods */
void   cmsg_dotareport_counts_request__init
                     (CMsgDOTAReportCountsRequest         *message);
size_t cmsg_dotareport_counts_request__get_packed_size
                     (const CMsgDOTAReportCountsRequest   *message);
size_t cmsg_dotareport_counts_request__pack
                     (const CMsgDOTAReportCountsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotareport_counts_request__pack_to_buffer
                     (const CMsgDOTAReportCountsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAReportCountsRequest *
       cmsg_dotareport_counts_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareport_counts_request__free_unpacked
                     (CMsgDOTAReportCountsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAReportCountsResponse methods */
void   cmsg_dotareport_counts_response__init
                     (CMsgDOTAReportCountsResponse         *message);
size_t cmsg_dotareport_counts_response__get_packed_size
                     (const CMsgDOTAReportCountsResponse   *message);
size_t cmsg_dotareport_counts_response__pack
                     (const CMsgDOTAReportCountsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotareport_counts_response__pack_to_buffer
                     (const CMsgDOTAReportCountsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAReportCountsResponse *
       cmsg_dotareport_counts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareport_counts_response__free_unpacked
                     (CMsgDOTAReportCountsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASubmitLobbyMVPVote methods */
void   cmsg_dotasubmit_lobby_mvpvote__init
                     (CMsgDOTASubmitLobbyMVPVote         *message);
size_t cmsg_dotasubmit_lobby_mvpvote__get_packed_size
                     (const CMsgDOTASubmitLobbyMVPVote   *message);
size_t cmsg_dotasubmit_lobby_mvpvote__pack
                     (const CMsgDOTASubmitLobbyMVPVote   *message,
                      uint8_t             *out);
size_t cmsg_dotasubmit_lobby_mvpvote__pack_to_buffer
                     (const CMsgDOTASubmitLobbyMVPVote   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASubmitLobbyMVPVote *
       cmsg_dotasubmit_lobby_mvpvote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotasubmit_lobby_mvpvote__free_unpacked
                     (CMsgDOTASubmitLobbyMVPVote *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASubmitLobbyMVPVoteResponse methods */
void   cmsg_dotasubmit_lobby_mvpvote_response__init
                     (CMsgDOTASubmitLobbyMVPVoteResponse         *message);
size_t cmsg_dotasubmit_lobby_mvpvote_response__get_packed_size
                     (const CMsgDOTASubmitLobbyMVPVoteResponse   *message);
size_t cmsg_dotasubmit_lobby_mvpvote_response__pack
                     (const CMsgDOTASubmitLobbyMVPVoteResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotasubmit_lobby_mvpvote_response__pack_to_buffer
                     (const CMsgDOTASubmitLobbyMVPVoteResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASubmitLobbyMVPVoteResponse *
       cmsg_dotasubmit_lobby_mvpvote_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotasubmit_lobby_mvpvote_response__free_unpacked
                     (CMsgDOTASubmitLobbyMVPVoteResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALobbyMVPNotifyRecipient methods */
void   cmsg_dotalobby_mvpnotify_recipient__init
                     (CMsgDOTALobbyMVPNotifyRecipient         *message);
size_t cmsg_dotalobby_mvpnotify_recipient__get_packed_size
                     (const CMsgDOTALobbyMVPNotifyRecipient   *message);
size_t cmsg_dotalobby_mvpnotify_recipient__pack
                     (const CMsgDOTALobbyMVPNotifyRecipient   *message,
                      uint8_t             *out);
size_t cmsg_dotalobby_mvpnotify_recipient__pack_to_buffer
                     (const CMsgDOTALobbyMVPNotifyRecipient   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALobbyMVPNotifyRecipient *
       cmsg_dotalobby_mvpnotify_recipient__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalobby_mvpnotify_recipient__free_unpacked
                     (CMsgDOTALobbyMVPNotifyRecipient *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALobbyMVPAwarded methods */
void   cmsg_dotalobby_mvpawarded__init
                     (CMsgDOTALobbyMVPAwarded         *message);
size_t cmsg_dotalobby_mvpawarded__get_packed_size
                     (const CMsgDOTALobbyMVPAwarded   *message);
size_t cmsg_dotalobby_mvpawarded__pack
                     (const CMsgDOTALobbyMVPAwarded   *message,
                      uint8_t             *out);
size_t cmsg_dotalobby_mvpawarded__pack_to_buffer
                     (const CMsgDOTALobbyMVPAwarded   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALobbyMVPAwarded *
       cmsg_dotalobby_mvpawarded__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalobby_mvpawarded__free_unpacked
                     (CMsgDOTALobbyMVPAwarded *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAKickedFromMatchmakingQueue methods */
void   cmsg_dotakicked_from_matchmaking_queue__init
                     (CMsgDOTAKickedFromMatchmakingQueue         *message);
size_t cmsg_dotakicked_from_matchmaking_queue__get_packed_size
                     (const CMsgDOTAKickedFromMatchmakingQueue   *message);
size_t cmsg_dotakicked_from_matchmaking_queue__pack
                     (const CMsgDOTAKickedFromMatchmakingQueue   *message,
                      uint8_t             *out);
size_t cmsg_dotakicked_from_matchmaking_queue__pack_to_buffer
                     (const CMsgDOTAKickedFromMatchmakingQueue   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAKickedFromMatchmakingQueue *
       cmsg_dotakicked_from_matchmaking_queue__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotakicked_from_matchmaking_queue__free_unpacked
                     (CMsgDOTAKickedFromMatchmakingQueue *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestSaveGames methods */
void   cmsg_dotarequest_save_games__init
                     (CMsgDOTARequestSaveGames         *message);
size_t cmsg_dotarequest_save_games__get_packed_size
                     (const CMsgDOTARequestSaveGames   *message);
size_t cmsg_dotarequest_save_games__pack
                     (const CMsgDOTARequestSaveGames   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_save_games__pack_to_buffer
                     (const CMsgDOTARequestSaveGames   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestSaveGames *
       cmsg_dotarequest_save_games__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_save_games__free_unpacked
                     (CMsgDOTARequestSaveGames *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARequestSaveGamesResponse methods */
void   cmsg_dotarequest_save_games_response__init
                     (CMsgDOTARequestSaveGamesResponse         *message);
size_t cmsg_dotarequest_save_games_response__get_packed_size
                     (const CMsgDOTARequestSaveGamesResponse   *message);
size_t cmsg_dotarequest_save_games_response__pack
                     (const CMsgDOTARequestSaveGamesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotarequest_save_games_response__pack_to_buffer
                     (const CMsgDOTARequestSaveGamesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARequestSaveGamesResponse *
       cmsg_dotarequest_save_games_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotarequest_save_games_response__free_unpacked
                     (CMsgDOTARequestSaveGamesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCMatchDetailsRequest methods */
void   cmsg_gcmatch_details_request__init
                     (CMsgGCMatchDetailsRequest         *message);
size_t cmsg_gcmatch_details_request__get_packed_size
                     (const CMsgGCMatchDetailsRequest   *message);
size_t cmsg_gcmatch_details_request__pack
                     (const CMsgGCMatchDetailsRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcmatch_details_request__pack_to_buffer
                     (const CMsgGCMatchDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCMatchDetailsRequest *
       cmsg_gcmatch_details_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcmatch_details_request__free_unpacked
                     (CMsgGCMatchDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCMatchDetailsResponse methods */
void   cmsg_gcmatch_details_response__init
                     (CMsgGCMatchDetailsResponse         *message);
size_t cmsg_gcmatch_details_response__get_packed_size
                     (const CMsgGCMatchDetailsResponse   *message);
size_t cmsg_gcmatch_details_response__pack
                     (const CMsgGCMatchDetailsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcmatch_details_response__pack_to_buffer
                     (const CMsgGCMatchDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCMatchDetailsResponse *
       cmsg_gcmatch_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcmatch_details_response__free_unpacked
                     (CMsgGCMatchDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgServerToGCMatchDetailsRequest methods */
void   cmsg_server_to_gcmatch_details_request__init
                     (CMsgServerToGCMatchDetailsRequest         *message);
size_t cmsg_server_to_gcmatch_details_request__get_packed_size
                     (const CMsgServerToGCMatchDetailsRequest   *message);
size_t cmsg_server_to_gcmatch_details_request__pack
                     (const CMsgServerToGCMatchDetailsRequest   *message,
                      uint8_t             *out);
size_t cmsg_server_to_gcmatch_details_request__pack_to_buffer
                     (const CMsgServerToGCMatchDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgServerToGCMatchDetailsRequest *
       cmsg_server_to_gcmatch_details_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_server_to_gcmatch_details_request__free_unpacked
                     (CMsgServerToGCMatchDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToServerMatchDetailsResponse methods */
void   cmsg_gcto_server_match_details_response__init
                     (CMsgGCToServerMatchDetailsResponse         *message);
size_t cmsg_gcto_server_match_details_response__get_packed_size
                     (const CMsgGCToServerMatchDetailsResponse   *message);
size_t cmsg_gcto_server_match_details_response__pack
                     (const CMsgGCToServerMatchDetailsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_server_match_details_response__pack_to_buffer
                     (const CMsgGCToServerMatchDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToServerMatchDetailsResponse *
       cmsg_gcto_server_match_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_server_match_details_response__free_unpacked
                     (CMsgGCToServerMatchDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAProfileRequest methods */
void   cmsg_dotaprofile_request__init
                     (CMsgDOTAProfileRequest         *message);
size_t cmsg_dotaprofile_request__get_packed_size
                     (const CMsgDOTAProfileRequest   *message);
size_t cmsg_dotaprofile_request__pack
                     (const CMsgDOTAProfileRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotaprofile_request__pack_to_buffer
                     (const CMsgDOTAProfileRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAProfileRequest *
       cmsg_dotaprofile_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaprofile_request__free_unpacked
                     (CMsgDOTAProfileRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAProfileResponse__PlayedHero methods */
void   cmsg_dotaprofile_response__played_hero__init
                     (CMsgDOTAProfileResponse__PlayedHero         *message);
/* CMsgDOTAProfileResponse__ShowcaseHero methods */
void   cmsg_dotaprofile_response__showcase_hero__init
                     (CMsgDOTAProfileResponse__ShowcaseHero         *message);
/* CMsgDOTAProfileResponse__LeaguePass methods */
void   cmsg_dotaprofile_response__league_pass__init
                     (CMsgDOTAProfileResponse__LeaguePass         *message);
/* CMsgDOTAProfileResponse__EventTicket methods */
void   cmsg_dotaprofile_response__event_ticket__init
                     (CMsgDOTAProfileResponse__EventTicket         *message);
/* CMsgDOTAProfileResponse__FeaturedItem methods */
void   cmsg_dotaprofile_response__featured_item__init
                     (CMsgDOTAProfileResponse__FeaturedItem         *message);
/* CMsgDOTAProfileResponse methods */
void   cmsg_dotaprofile_response__init
                     (CMsgDOTAProfileResponse         *message);
size_t cmsg_dotaprofile_response__get_packed_size
                     (const CMsgDOTAProfileResponse   *message);
size_t cmsg_dotaprofile_response__pack
                     (const CMsgDOTAProfileResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaprofile_response__pack_to_buffer
                     (const CMsgDOTAProfileResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAProfileResponse *
       cmsg_dotaprofile_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaprofile_response__free_unpacked
                     (CMsgDOTAProfileResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAProfileTickets__LeaguePass methods */
void   cmsg_dotaprofile_tickets__league_pass__init
                     (CMsgDOTAProfileTickets__LeaguePass         *message);
/* CMsgDOTAProfileTickets__EventTicket methods */
void   cmsg_dotaprofile_tickets__event_ticket__init
                     (CMsgDOTAProfileTickets__EventTicket         *message);
/* CMsgDOTAProfileTickets methods */
void   cmsg_dotaprofile_tickets__init
                     (CMsgDOTAProfileTickets         *message);
size_t cmsg_dotaprofile_tickets__get_packed_size
                     (const CMsgDOTAProfileTickets   *message);
size_t cmsg_dotaprofile_tickets__pack
                     (const CMsgDOTAProfileTickets   *message,
                      uint8_t             *out);
size_t cmsg_dotaprofile_tickets__pack_to_buffer
                     (const CMsgDOTAProfileTickets   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAProfileTickets *
       cmsg_dotaprofile_tickets__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaprofile_tickets__free_unpacked
                     (CMsgDOTAProfileTickets *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetProfileTickets methods */
void   cmsg_client_to_gcget_profile_tickets__init
                     (CMsgClientToGCGetProfileTickets         *message);
size_t cmsg_client_to_gcget_profile_tickets__get_packed_size
                     (const CMsgClientToGCGetProfileTickets   *message);
size_t cmsg_client_to_gcget_profile_tickets__pack
                     (const CMsgClientToGCGetProfileTickets   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_profile_tickets__pack_to_buffer
                     (const CMsgClientToGCGetProfileTickets   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetProfileTickets *
       cmsg_client_to_gcget_profile_tickets__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_profile_tickets__free_unpacked
                     (CMsgClientToGCGetProfileTickets *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCSteamProfileRequest methods */
void   cmsg_gcsteam_profile_request__init
                     (CMsgGCSteamProfileRequest         *message);
size_t cmsg_gcsteam_profile_request__get_packed_size
                     (const CMsgGCSteamProfileRequest   *message);
size_t cmsg_gcsteam_profile_request__pack
                     (const CMsgGCSteamProfileRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcsteam_profile_request__pack_to_buffer
                     (const CMsgGCSteamProfileRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCSteamProfileRequest *
       cmsg_gcsteam_profile_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcsteam_profile_request__free_unpacked
                     (CMsgGCSteamProfileRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCSteamProfileRequestResponse methods */
void   cmsg_gcsteam_profile_request_response__init
                     (CMsgGCSteamProfileRequestResponse         *message);
size_t cmsg_gcsteam_profile_request_response__get_packed_size
                     (const CMsgGCSteamProfileRequestResponse   *message);
size_t cmsg_gcsteam_profile_request_response__pack
                     (const CMsgGCSteamProfileRequestResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcsteam_profile_request_response__pack_to_buffer
                     (const CMsgGCSteamProfileRequestResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCSteamProfileRequestResponse *
       cmsg_gcsteam_profile_request_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcsteam_profile_request_response__free_unpacked
                     (CMsgGCSteamProfileRequestResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAClearNotifySuccessfulReport methods */
void   cmsg_dotaclear_notify_successful_report__init
                     (CMsgDOTAClearNotifySuccessfulReport         *message);
size_t cmsg_dotaclear_notify_successful_report__get_packed_size
                     (const CMsgDOTAClearNotifySuccessfulReport   *message);
size_t cmsg_dotaclear_notify_successful_report__pack
                     (const CMsgDOTAClearNotifySuccessfulReport   *message,
                      uint8_t             *out);
size_t cmsg_dotaclear_notify_successful_report__pack_to_buffer
                     (const CMsgDOTAClearNotifySuccessfulReport   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAClearNotifySuccessfulReport *
       cmsg_dotaclear_notify_successful_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaclear_notify_successful_report__free_unpacked
                     (CMsgDOTAClearNotifySuccessfulReport *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAWelcome__LocalizationDigest methods */
void   cmsg_dotawelcome__localization_digest__init
                     (CMsgDOTAWelcome__LocalizationDigest         *message);
/* CMsgDOTAWelcome__CExtraMsg methods */
void   cmsg_dotawelcome__cextra_msg__init
                     (CMsgDOTAWelcome__CExtraMsg         *message);
/* CMsgDOTAWelcome methods */
void   cmsg_dotawelcome__init
                     (CMsgDOTAWelcome         *message);
size_t cmsg_dotawelcome__get_packed_size
                     (const CMsgDOTAWelcome   *message);
size_t cmsg_dotawelcome__pack
                     (const CMsgDOTAWelcome   *message,
                      uint8_t             *out);
size_t cmsg_dotawelcome__pack_to_buffer
                     (const CMsgDOTAWelcome   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAWelcome *
       cmsg_dotawelcome__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotawelcome__free_unpacked
                     (CMsgDOTAWelcome *message,
                      ProtobufCAllocator *allocator);
/* CSODOTAGameHeroFavorites methods */
void   csodotagame_hero_favorites__init
                     (CSODOTAGameHeroFavorites         *message);
size_t csodotagame_hero_favorites__get_packed_size
                     (const CSODOTAGameHeroFavorites   *message);
size_t csodotagame_hero_favorites__pack
                     (const CSODOTAGameHeroFavorites   *message,
                      uint8_t             *out);
size_t csodotagame_hero_favorites__pack_to_buffer
                     (const CSODOTAGameHeroFavorites   *message,
                      ProtobufCBuffer     *buffer);
CSODOTAGameHeroFavorites *
       csodotagame_hero_favorites__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   csodotagame_hero_favorites__free_unpacked
                     (CSODOTAGameHeroFavorites *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHeroFavoritesAdd methods */
void   cmsg_dotahero_favorites_add__init
                     (CMsgDOTAHeroFavoritesAdd         *message);
size_t cmsg_dotahero_favorites_add__get_packed_size
                     (const CMsgDOTAHeroFavoritesAdd   *message);
size_t cmsg_dotahero_favorites_add__pack
                     (const CMsgDOTAHeroFavoritesAdd   *message,
                      uint8_t             *out);
size_t cmsg_dotahero_favorites_add__pack_to_buffer
                     (const CMsgDOTAHeroFavoritesAdd   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHeroFavoritesAdd *
       cmsg_dotahero_favorites_add__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahero_favorites_add__free_unpacked
                     (CMsgDOTAHeroFavoritesAdd *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHeroFavoritesRemove methods */
void   cmsg_dotahero_favorites_remove__init
                     (CMsgDOTAHeroFavoritesRemove         *message);
size_t cmsg_dotahero_favorites_remove__get_packed_size
                     (const CMsgDOTAHeroFavoritesRemove   *message);
size_t cmsg_dotahero_favorites_remove__pack
                     (const CMsgDOTAHeroFavoritesRemove   *message,
                      uint8_t             *out);
size_t cmsg_dotahero_favorites_remove__pack_to_buffer
                     (const CMsgDOTAHeroFavoritesRemove   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHeroFavoritesRemove *
       cmsg_dotahero_favorites_remove__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahero_favorites_remove__free_unpacked
                     (CMsgDOTAHeroFavoritesRemove *message,
                      ProtobufCAllocator *allocator);
/* CMsgSetShowcaseHero methods */
void   cmsg_set_showcase_hero__init
                     (CMsgSetShowcaseHero         *message);
size_t cmsg_set_showcase_hero__get_packed_size
                     (const CMsgSetShowcaseHero   *message);
size_t cmsg_set_showcase_hero__pack
                     (const CMsgSetShowcaseHero   *message,
                      uint8_t             *out);
size_t cmsg_set_showcase_hero__pack_to_buffer
                     (const CMsgSetShowcaseHero   *message,
                      ProtobufCBuffer     *buffer);
CMsgSetShowcaseHero *
       cmsg_set_showcase_hero__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_set_showcase_hero__free_unpacked
                     (CMsgSetShowcaseHero *message,
                      ProtobufCAllocator *allocator);
/* CMsgSetFeaturedItems methods */
void   cmsg_set_featured_items__init
                     (CMsgSetFeaturedItems         *message);
size_t cmsg_set_featured_items__get_packed_size
                     (const CMsgSetFeaturedItems   *message);
size_t cmsg_set_featured_items__pack
                     (const CMsgSetFeaturedItems   *message,
                      uint8_t             *out);
size_t cmsg_set_featured_items__pack_to_buffer
                     (const CMsgSetFeaturedItems   *message,
                      ProtobufCBuffer     *buffer);
CMsgSetFeaturedItems *
       cmsg_set_featured_items__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_set_featured_items__free_unpacked
                     (CMsgSetFeaturedItems *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFeaturedItems methods */
void   cmsg_dotafeatured_items__init
                     (CMsgDOTAFeaturedItems         *message);
size_t cmsg_dotafeatured_items__get_packed_size
                     (const CMsgDOTAFeaturedItems   *message);
size_t cmsg_dotafeatured_items__pack
                     (const CMsgDOTAFeaturedItems   *message,
                      uint8_t             *out);
size_t cmsg_dotafeatured_items__pack_to_buffer
                     (const CMsgDOTAFeaturedItems   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFeaturedItems *
       cmsg_dotafeatured_items__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafeatured_items__free_unpacked
                     (CMsgDOTAFeaturedItems *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestLeagueInfo methods */
void   cmsg_request_league_info__init
                     (CMsgRequestLeagueInfo         *message);
size_t cmsg_request_league_info__get_packed_size
                     (const CMsgRequestLeagueInfo   *message);
size_t cmsg_request_league_info__pack
                     (const CMsgRequestLeagueInfo   *message,
                      uint8_t             *out);
size_t cmsg_request_league_info__pack_to_buffer
                     (const CMsgRequestLeagueInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestLeagueInfo *
       cmsg_request_league_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_league_info__free_unpacked
                     (CMsgRequestLeagueInfo *message,
                      ProtobufCAllocator *allocator);
/* CDynamicLeagueData methods */
void   cdynamic_league_data__init
                     (CDynamicLeagueData         *message);
size_t cdynamic_league_data__get_packed_size
                     (const CDynamicLeagueData   *message);
size_t cdynamic_league_data__pack
                     (const CDynamicLeagueData   *message,
                      uint8_t             *out);
size_t cdynamic_league_data__pack_to_buffer
                     (const CDynamicLeagueData   *message,
                      ProtobufCBuffer     *buffer);
CDynamicLeagueData *
       cdynamic_league_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdynamic_league_data__free_unpacked
                     (CDynamicLeagueData *message,
                      ProtobufCAllocator *allocator);
/* CStaticLeagueData methods */
void   cstatic_league_data__init
                     (CStaticLeagueData         *message);
size_t cstatic_league_data__get_packed_size
                     (const CStaticLeagueData   *message);
size_t cstatic_league_data__pack
                     (const CStaticLeagueData   *message,
                      uint8_t             *out);
size_t cstatic_league_data__pack_to_buffer
                     (const CStaticLeagueData   *message,
                      ProtobufCBuffer     *buffer);
CStaticLeagueData *
       cstatic_league_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cstatic_league_data__free_unpacked
                     (CStaticLeagueData *message,
                      ProtobufCAllocator *allocator);
/* CLeagueData methods */
void   cleague_data__init
                     (CLeagueData         *message);
size_t cleague_data__get_packed_size
                     (const CLeagueData   *message);
size_t cleague_data__pack
                     (const CLeagueData   *message,
                      uint8_t             *out);
size_t cleague_data__pack_to_buffer
                     (const CLeagueData   *message,
                      ProtobufCBuffer     *buffer);
CLeagueData *
       cleague_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cleague_data__free_unpacked
                     (CLeagueData *message,
                      ProtobufCAllocator *allocator);
/* CMsgResponseLeagueInfo methods */
void   cmsg_response_league_info__init
                     (CMsgResponseLeagueInfo         *message);
size_t cmsg_response_league_info__get_packed_size
                     (const CMsgResponseLeagueInfo   *message);
size_t cmsg_response_league_info__pack
                     (const CMsgResponseLeagueInfo   *message,
                      uint8_t             *out);
size_t cmsg_response_league_info__pack_to_buffer
                     (const CMsgResponseLeagueInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgResponseLeagueInfo *
       cmsg_response_league_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_response_league_info__free_unpacked
                     (CMsgResponseLeagueInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAMatchVotes__PlayerVote methods */
void   cmsg_dotamatch_votes__player_vote__init
                     (CMsgDOTAMatchVotes__PlayerVote         *message);
/* CMsgDOTAMatchVotes methods */
void   cmsg_dotamatch_votes__init
                     (CMsgDOTAMatchVotes         *message);
size_t cmsg_dotamatch_votes__get_packed_size
                     (const CMsgDOTAMatchVotes   *message);
size_t cmsg_dotamatch_votes__pack
                     (const CMsgDOTAMatchVotes   *message,
                      uint8_t             *out);
size_t cmsg_dotamatch_votes__pack_to_buffer
                     (const CMsgDOTAMatchVotes   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAMatchVotes *
       cmsg_dotamatch_votes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotamatch_votes__free_unpacked
                     (CMsgDOTAMatchVotes *message,
                      ProtobufCAllocator *allocator);
/* CMsgCastMatchVote methods */
void   cmsg_cast_match_vote__init
                     (CMsgCastMatchVote         *message);
size_t cmsg_cast_match_vote__get_packed_size
                     (const CMsgCastMatchVote   *message);
size_t cmsg_cast_match_vote__pack
                     (const CMsgCastMatchVote   *message,
                      uint8_t             *out);
size_t cmsg_cast_match_vote__pack_to_buffer
                     (const CMsgCastMatchVote   *message,
                      ProtobufCBuffer     *buffer);
CMsgCastMatchVote *
       cmsg_cast_match_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_cast_match_vote__free_unpacked
                     (CMsgCastMatchVote *message,
                      ProtobufCAllocator *allocator);
/* CMsgRetrieveMatchVote methods */
void   cmsg_retrieve_match_vote__init
                     (CMsgRetrieveMatchVote         *message);
size_t cmsg_retrieve_match_vote__get_packed_size
                     (const CMsgRetrieveMatchVote   *message);
size_t cmsg_retrieve_match_vote__pack
                     (const CMsgRetrieveMatchVote   *message,
                      uint8_t             *out);
size_t cmsg_retrieve_match_vote__pack_to_buffer
                     (const CMsgRetrieveMatchVote   *message,
                      ProtobufCBuffer     *buffer);
CMsgRetrieveMatchVote *
       cmsg_retrieve_match_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_retrieve_match_vote__free_unpacked
                     (CMsgRetrieveMatchVote *message,
                      ProtobufCAllocator *allocator);
/* CMsgMatchVoteResponse methods */
void   cmsg_match_vote_response__init
                     (CMsgMatchVoteResponse         *message);
size_t cmsg_match_vote_response__get_packed_size
                     (const CMsgMatchVoteResponse   *message);
size_t cmsg_match_vote_response__pack
                     (const CMsgMatchVoteResponse   *message,
                      uint8_t             *out);
size_t cmsg_match_vote_response__pack_to_buffer
                     (const CMsgMatchVoteResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgMatchVoteResponse *
       cmsg_match_vote_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_match_vote_response__free_unpacked
                     (CMsgMatchVoteResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHallOfFame__FeaturedPlayer methods */
void   cmsg_dotahall_of_fame__featured_player__init
                     (CMsgDOTAHallOfFame__FeaturedPlayer         *message);
/* CMsgDOTAHallOfFame__FeaturedFarmer methods */
void   cmsg_dotahall_of_fame__featured_farmer__init
                     (CMsgDOTAHallOfFame__FeaturedFarmer         *message);
/* CMsgDOTAHallOfFame methods */
void   cmsg_dotahall_of_fame__init
                     (CMsgDOTAHallOfFame         *message);
size_t cmsg_dotahall_of_fame__get_packed_size
                     (const CMsgDOTAHallOfFame   *message);
size_t cmsg_dotahall_of_fame__pack
                     (const CMsgDOTAHallOfFame   *message,
                      uint8_t             *out);
size_t cmsg_dotahall_of_fame__pack_to_buffer
                     (const CMsgDOTAHallOfFame   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHallOfFame *
       cmsg_dotahall_of_fame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahall_of_fame__free_unpacked
                     (CMsgDOTAHallOfFame *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHallOfFameRequest methods */
void   cmsg_dotahall_of_fame_request__init
                     (CMsgDOTAHallOfFameRequest         *message);
size_t cmsg_dotahall_of_fame_request__get_packed_size
                     (const CMsgDOTAHallOfFameRequest   *message);
size_t cmsg_dotahall_of_fame_request__pack
                     (const CMsgDOTAHallOfFameRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotahall_of_fame_request__pack_to_buffer
                     (const CMsgDOTAHallOfFameRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHallOfFameRequest *
       cmsg_dotahall_of_fame_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahall_of_fame_request__free_unpacked
                     (CMsgDOTAHallOfFameRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHallOfFameResponse methods */
void   cmsg_dotahall_of_fame_response__init
                     (CMsgDOTAHallOfFameResponse         *message);
size_t cmsg_dotahall_of_fame_response__get_packed_size
                     (const CMsgDOTAHallOfFameResponse   *message);
size_t cmsg_dotahall_of_fame_response__pack
                     (const CMsgDOTAHallOfFameResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotahall_of_fame_response__pack_to_buffer
                     (const CMsgDOTAHallOfFameResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHallOfFameResponse *
       cmsg_dotahall_of_fame_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahall_of_fame_response__free_unpacked
                     (CMsgDOTAHallOfFameResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHalloweenHighScoreRequest methods */
void   cmsg_dotahalloween_high_score_request__init
                     (CMsgDOTAHalloweenHighScoreRequest         *message);
size_t cmsg_dotahalloween_high_score_request__get_packed_size
                     (const CMsgDOTAHalloweenHighScoreRequest   *message);
size_t cmsg_dotahalloween_high_score_request__pack
                     (const CMsgDOTAHalloweenHighScoreRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotahalloween_high_score_request__pack_to_buffer
                     (const CMsgDOTAHalloweenHighScoreRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHalloweenHighScoreRequest *
       cmsg_dotahalloween_high_score_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahalloween_high_score_request__free_unpacked
                     (CMsgDOTAHalloweenHighScoreRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAHalloweenHighScoreResponse methods */
void   cmsg_dotahalloween_high_score_response__init
                     (CMsgDOTAHalloweenHighScoreResponse         *message);
size_t cmsg_dotahalloween_high_score_response__get_packed_size
                     (const CMsgDOTAHalloweenHighScoreResponse   *message);
size_t cmsg_dotahalloween_high_score_response__pack
                     (const CMsgDOTAHalloweenHighScoreResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotahalloween_high_score_response__pack_to_buffer
                     (const CMsgDOTAHalloweenHighScoreResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAHalloweenHighScoreResponse *
       cmsg_dotahalloween_high_score_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotahalloween_high_score_response__free_unpacked
                     (CMsgDOTAHalloweenHighScoreResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAStorePromoPagesRequest methods */
void   cmsg_dotastore_promo_pages_request__init
                     (CMsgDOTAStorePromoPagesRequest         *message);
size_t cmsg_dotastore_promo_pages_request__get_packed_size
                     (const CMsgDOTAStorePromoPagesRequest   *message);
size_t cmsg_dotastore_promo_pages_request__pack
                     (const CMsgDOTAStorePromoPagesRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotastore_promo_pages_request__pack_to_buffer
                     (const CMsgDOTAStorePromoPagesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAStorePromoPagesRequest *
       cmsg_dotastore_promo_pages_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotastore_promo_pages_request__free_unpacked
                     (CMsgDOTAStorePromoPagesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAStorePromoPagesResponse__PromoPage methods */
void   cmsg_dotastore_promo_pages_response__promo_page__init
                     (CMsgDOTAStorePromoPagesResponse__PromoPage         *message);
/* CMsgDOTAStorePromoPagesResponse methods */
void   cmsg_dotastore_promo_pages_response__init
                     (CMsgDOTAStorePromoPagesResponse         *message);
size_t cmsg_dotastore_promo_pages_response__get_packed_size
                     (const CMsgDOTAStorePromoPagesResponse   *message);
size_t cmsg_dotastore_promo_pages_response__pack
                     (const CMsgDOTAStorePromoPagesResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotastore_promo_pages_response__pack_to_buffer
                     (const CMsgDOTAStorePromoPagesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAStorePromoPagesResponse *
       cmsg_dotastore_promo_pages_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotastore_promo_pages_response__free_unpacked
                     (CMsgDOTAStorePromoPagesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeagueScheduleBlockTeamInfo methods */
void   cmsg_league_schedule_block_team_info__init
                     (CMsgLeagueScheduleBlockTeamInfo         *message);
size_t cmsg_league_schedule_block_team_info__get_packed_size
                     (const CMsgLeagueScheduleBlockTeamInfo   *message);
size_t cmsg_league_schedule_block_team_info__pack
                     (const CMsgLeagueScheduleBlockTeamInfo   *message,
                      uint8_t             *out);
size_t cmsg_league_schedule_block_team_info__pack_to_buffer
                     (const CMsgLeagueScheduleBlockTeamInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeagueScheduleBlockTeamInfo *
       cmsg_league_schedule_block_team_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_league_schedule_block_team_info__free_unpacked
                     (CMsgLeagueScheduleBlockTeamInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeagueScheduleBlock methods */
void   cmsg_league_schedule_block__init
                     (CMsgLeagueScheduleBlock         *message);
size_t cmsg_league_schedule_block__get_packed_size
                     (const CMsgLeagueScheduleBlock   *message);
size_t cmsg_league_schedule_block__pack
                     (const CMsgLeagueScheduleBlock   *message,
                      uint8_t             *out);
size_t cmsg_league_schedule_block__pack_to_buffer
                     (const CMsgLeagueScheduleBlock   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeagueScheduleBlock *
       cmsg_league_schedule_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_league_schedule_block__free_unpacked
                     (CMsgLeagueScheduleBlock *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeague methods */
void   cmsg_dotaleague__init
                     (CMsgDOTALeague         *message);
size_t cmsg_dotaleague__get_packed_size
                     (const CMsgDOTALeague   *message);
size_t cmsg_dotaleague__pack
                     (const CMsgDOTALeague   *message,
                      uint8_t             *out);
size_t cmsg_dotaleague__pack_to_buffer
                     (const CMsgDOTALeague   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeague *
       cmsg_dotaleague__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleague__free_unpacked
                     (CMsgDOTALeague *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeagueScheduleRequest methods */
void   cmsg_dotaleague_schedule_request__init
                     (CMsgDOTALeagueScheduleRequest         *message);
size_t cmsg_dotaleague_schedule_request__get_packed_size
                     (const CMsgDOTALeagueScheduleRequest   *message);
size_t cmsg_dotaleague_schedule_request__pack
                     (const CMsgDOTALeagueScheduleRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotaleague_schedule_request__pack_to_buffer
                     (const CMsgDOTALeagueScheduleRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeagueScheduleRequest *
       cmsg_dotaleague_schedule_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleague_schedule_request__free_unpacked
                     (CMsgDOTALeagueScheduleRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeagueScheduleResponse methods */
void   cmsg_dotaleague_schedule_response__init
                     (CMsgDOTALeagueScheduleResponse         *message);
size_t cmsg_dotaleague_schedule_response__get_packed_size
                     (const CMsgDOTALeagueScheduleResponse   *message);
size_t cmsg_dotaleague_schedule_response__pack
                     (const CMsgDOTALeagueScheduleResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaleague_schedule_response__pack_to_buffer
                     (const CMsgDOTALeagueScheduleResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeagueScheduleResponse *
       cmsg_dotaleague_schedule_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleague_schedule_response__free_unpacked
                     (CMsgDOTALeagueScheduleResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeagueScheduleEdit methods */
void   cmsg_dotaleague_schedule_edit__init
                     (CMsgDOTALeagueScheduleEdit         *message);
size_t cmsg_dotaleague_schedule_edit__get_packed_size
                     (const CMsgDOTALeagueScheduleEdit   *message);
size_t cmsg_dotaleague_schedule_edit__pack
                     (const CMsgDOTALeagueScheduleEdit   *message,
                      uint8_t             *out);
size_t cmsg_dotaleague_schedule_edit__pack_to_buffer
                     (const CMsgDOTALeagueScheduleEdit   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeagueScheduleEdit *
       cmsg_dotaleague_schedule_edit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleague_schedule_edit__free_unpacked
                     (CMsgDOTALeagueScheduleEdit *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeagueScheduleEditResponse methods */
void   cmsg_dotaleague_schedule_edit_response__init
                     (CMsgDOTALeagueScheduleEditResponse         *message);
size_t cmsg_dotaleague_schedule_edit_response__get_packed_size
                     (const CMsgDOTALeagueScheduleEditResponse   *message);
size_t cmsg_dotaleague_schedule_edit_response__pack
                     (const CMsgDOTALeagueScheduleEditResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaleague_schedule_edit_response__pack_to_buffer
                     (const CMsgDOTALeagueScheduleEditResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeagueScheduleEditResponse *
       cmsg_dotaleague_schedule_edit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleague_schedule_edit_response__free_unpacked
                     (CMsgDOTALeagueScheduleEditResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeaguesInMonthRequest methods */
void   cmsg_dotaleagues_in_month_request__init
                     (CMsgDOTALeaguesInMonthRequest         *message);
size_t cmsg_dotaleagues_in_month_request__get_packed_size
                     (const CMsgDOTALeaguesInMonthRequest   *message);
size_t cmsg_dotaleagues_in_month_request__pack
                     (const CMsgDOTALeaguesInMonthRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotaleagues_in_month_request__pack_to_buffer
                     (const CMsgDOTALeaguesInMonthRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeaguesInMonthRequest *
       cmsg_dotaleagues_in_month_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleagues_in_month_request__free_unpacked
                     (CMsgDOTALeaguesInMonthRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALeaguesInMonthResponse methods */
void   cmsg_dotaleagues_in_month_response__init
                     (CMsgDOTALeaguesInMonthResponse         *message);
size_t cmsg_dotaleagues_in_month_response__get_packed_size
                     (const CMsgDOTALeaguesInMonthResponse   *message);
size_t cmsg_dotaleagues_in_month_response__pack
                     (const CMsgDOTALeaguesInMonthResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaleagues_in_month_response__pack_to_buffer
                     (const CMsgDOTALeaguesInMonthResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALeaguesInMonthResponse *
       cmsg_dotaleagues_in_month_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaleagues_in_month_response__free_unpacked
                     (CMsgDOTALeaguesInMonthResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgMatchmakingMatchGroupInfo methods */
void   cmsg_matchmaking_match_group_info__init
                     (CMsgMatchmakingMatchGroupInfo         *message);
size_t cmsg_matchmaking_match_group_info__get_packed_size
                     (const CMsgMatchmakingMatchGroupInfo   *message);
size_t cmsg_matchmaking_match_group_info__pack
                     (const CMsgMatchmakingMatchGroupInfo   *message,
                      uint8_t             *out);
size_t cmsg_matchmaking_match_group_info__pack_to_buffer
                     (const CMsgMatchmakingMatchGroupInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgMatchmakingMatchGroupInfo *
       cmsg_matchmaking_match_group_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_matchmaking_match_group_info__free_unpacked
                     (CMsgMatchmakingMatchGroupInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAMatchmakingStatsRequest methods */
void   cmsg_dotamatchmaking_stats_request__init
                     (CMsgDOTAMatchmakingStatsRequest         *message);
size_t cmsg_dotamatchmaking_stats_request__get_packed_size
                     (const CMsgDOTAMatchmakingStatsRequest   *message);
size_t cmsg_dotamatchmaking_stats_request__pack
                     (const CMsgDOTAMatchmakingStatsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotamatchmaking_stats_request__pack_to_buffer
                     (const CMsgDOTAMatchmakingStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAMatchmakingStatsRequest *
       cmsg_dotamatchmaking_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotamatchmaking_stats_request__free_unpacked
                     (CMsgDOTAMatchmakingStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAMatchmakingStatsResponse methods */
void   cmsg_dotamatchmaking_stats_response__init
                     (CMsgDOTAMatchmakingStatsResponse         *message);
size_t cmsg_dotamatchmaking_stats_response__get_packed_size
                     (const CMsgDOTAMatchmakingStatsResponse   *message);
size_t cmsg_dotamatchmaking_stats_response__pack
                     (const CMsgDOTAMatchmakingStatsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotamatchmaking_stats_response__pack_to_buffer
                     (const CMsgDOTAMatchmakingStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAMatchmakingStatsResponse *
       cmsg_dotamatchmaking_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotamatchmaking_stats_response__free_unpacked
                     (CMsgDOTAMatchmakingStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAUpdateMatchmakingStats methods */
void   cmsg_dotaupdate_matchmaking_stats__init
                     (CMsgDOTAUpdateMatchmakingStats         *message);
size_t cmsg_dotaupdate_matchmaking_stats__get_packed_size
                     (const CMsgDOTAUpdateMatchmakingStats   *message);
size_t cmsg_dotaupdate_matchmaking_stats__pack
                     (const CMsgDOTAUpdateMatchmakingStats   *message,
                      uint8_t             *out);
size_t cmsg_dotaupdate_matchmaking_stats__pack_to_buffer
                     (const CMsgDOTAUpdateMatchmakingStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAUpdateMatchmakingStats *
       cmsg_dotaupdate_matchmaking_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaupdate_matchmaking_stats__free_unpacked
                     (CMsgDOTAUpdateMatchmakingStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAUpdateMatchManagementStats methods */
void   cmsg_dotaupdate_match_management_stats__init
                     (CMsgDOTAUpdateMatchManagementStats         *message);
size_t cmsg_dotaupdate_match_management_stats__get_packed_size
                     (const CMsgDOTAUpdateMatchManagementStats   *message);
size_t cmsg_dotaupdate_match_management_stats__pack
                     (const CMsgDOTAUpdateMatchManagementStats   *message,
                      uint8_t             *out);
size_t cmsg_dotaupdate_match_management_stats__pack_to_buffer
                     (const CMsgDOTAUpdateMatchManagementStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAUpdateMatchManagementStats *
       cmsg_dotaupdate_match_management_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaupdate_match_management_stats__free_unpacked
                     (CMsgDOTAUpdateMatchManagementStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASetMatchHistoryAccess methods */
void   cmsg_dotaset_match_history_access__init
                     (CMsgDOTASetMatchHistoryAccess         *message);
size_t cmsg_dotaset_match_history_access__get_packed_size
                     (const CMsgDOTASetMatchHistoryAccess   *message);
size_t cmsg_dotaset_match_history_access__pack
                     (const CMsgDOTASetMatchHistoryAccess   *message,
                      uint8_t             *out);
size_t cmsg_dotaset_match_history_access__pack_to_buffer
                     (const CMsgDOTASetMatchHistoryAccess   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASetMatchHistoryAccess *
       cmsg_dotaset_match_history_access__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaset_match_history_access__free_unpacked
                     (CMsgDOTASetMatchHistoryAccess *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASetMatchHistoryAccessResponse methods */
void   cmsg_dotaset_match_history_access_response__init
                     (CMsgDOTASetMatchHistoryAccessResponse         *message);
size_t cmsg_dotaset_match_history_access_response__get_packed_size
                     (const CMsgDOTASetMatchHistoryAccessResponse   *message);
size_t cmsg_dotaset_match_history_access_response__pack
                     (const CMsgDOTASetMatchHistoryAccessResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaset_match_history_access_response__pack_to_buffer
                     (const CMsgDOTASetMatchHistoryAccessResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASetMatchHistoryAccessResponse *
       cmsg_dotaset_match_history_access_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaset_match_history_access_response__free_unpacked
                     (CMsgDOTASetMatchHistoryAccessResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTANotifyAccountFlagsChange methods */
void   cmsg_dotanotify_account_flags_change__init
                     (CMsgDOTANotifyAccountFlagsChange         *message);
size_t cmsg_dotanotify_account_flags_change__get_packed_size
                     (const CMsgDOTANotifyAccountFlagsChange   *message);
size_t cmsg_dotanotify_account_flags_change__pack
                     (const CMsgDOTANotifyAccountFlagsChange   *message,
                      uint8_t             *out);
size_t cmsg_dotanotify_account_flags_change__pack_to_buffer
                     (const CMsgDOTANotifyAccountFlagsChange   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTANotifyAccountFlagsChange *
       cmsg_dotanotify_account_flags_change__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotanotify_account_flags_change__free_unpacked
                     (CMsgDOTANotifyAccountFlagsChange *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASetProfilePrivacy methods */
void   cmsg_dotaset_profile_privacy__init
                     (CMsgDOTASetProfilePrivacy         *message);
size_t cmsg_dotaset_profile_privacy__get_packed_size
                     (const CMsgDOTASetProfilePrivacy   *message);
size_t cmsg_dotaset_profile_privacy__pack
                     (const CMsgDOTASetProfilePrivacy   *message,
                      uint8_t             *out);
size_t cmsg_dotaset_profile_privacy__pack_to_buffer
                     (const CMsgDOTASetProfilePrivacy   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASetProfilePrivacy *
       cmsg_dotaset_profile_privacy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaset_profile_privacy__free_unpacked
                     (CMsgDOTASetProfilePrivacy *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASetProfilePrivacyResponse methods */
void   cmsg_dotaset_profile_privacy_response__init
                     (CMsgDOTASetProfilePrivacyResponse         *message);
size_t cmsg_dotaset_profile_privacy_response__get_packed_size
                     (const CMsgDOTASetProfilePrivacyResponse   *message);
size_t cmsg_dotaset_profile_privacy_response__pack
                     (const CMsgDOTASetProfilePrivacyResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaset_profile_privacy_response__pack_to_buffer
                     (const CMsgDOTASetProfilePrivacyResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASetProfilePrivacyResponse *
       cmsg_dotaset_profile_privacy_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaset_profile_privacy_response__free_unpacked
                     (CMsgDOTASetProfilePrivacyResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgUpgradeLeagueItem methods */
void   cmsg_upgrade_league_item__init
                     (CMsgUpgradeLeagueItem         *message);
size_t cmsg_upgrade_league_item__get_packed_size
                     (const CMsgUpgradeLeagueItem   *message);
size_t cmsg_upgrade_league_item__pack
                     (const CMsgUpgradeLeagueItem   *message,
                      uint8_t             *out);
size_t cmsg_upgrade_league_item__pack_to_buffer
                     (const CMsgUpgradeLeagueItem   *message,
                      ProtobufCBuffer     *buffer);
CMsgUpgradeLeagueItem *
       cmsg_upgrade_league_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_upgrade_league_item__free_unpacked
                     (CMsgUpgradeLeagueItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgUpgradeLeagueItemResponse methods */
void   cmsg_upgrade_league_item_response__init
                     (CMsgUpgradeLeagueItemResponse         *message);
size_t cmsg_upgrade_league_item_response__get_packed_size
                     (const CMsgUpgradeLeagueItemResponse   *message);
size_t cmsg_upgrade_league_item_response__pack
                     (const CMsgUpgradeLeagueItemResponse   *message,
                      uint8_t             *out);
size_t cmsg_upgrade_league_item_response__pack_to_buffer
                     (const CMsgUpgradeLeagueItemResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgUpgradeLeagueItemResponse *
       cmsg_upgrade_league_item_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_upgrade_league_item_response__free_unpacked
                     (CMsgUpgradeLeagueItemResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCWatchDownloadedReplay methods */
void   cmsg_gcwatch_downloaded_replay__init
                     (CMsgGCWatchDownloadedReplay         *message);
size_t cmsg_gcwatch_downloaded_replay__get_packed_size
                     (const CMsgGCWatchDownloadedReplay   *message);
size_t cmsg_gcwatch_downloaded_replay__pack
                     (const CMsgGCWatchDownloadedReplay   *message,
                      uint8_t             *out);
size_t cmsg_gcwatch_downloaded_replay__pack_to_buffer
                     (const CMsgGCWatchDownloadedReplay   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCWatchDownloadedReplay *
       cmsg_gcwatch_downloaded_replay__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcwatch_downloaded_replay__free_unpacked
                     (CMsgGCWatchDownloadedReplay *message,
                      ProtobufCAllocator *allocator);
/* CMsgSetMapLocationState methods */
void   cmsg_set_map_location_state__init
                     (CMsgSetMapLocationState         *message);
size_t cmsg_set_map_location_state__get_packed_size
                     (const CMsgSetMapLocationState   *message);
size_t cmsg_set_map_location_state__pack
                     (const CMsgSetMapLocationState   *message,
                      uint8_t             *out);
size_t cmsg_set_map_location_state__pack_to_buffer
                     (const CMsgSetMapLocationState   *message,
                      ProtobufCBuffer     *buffer);
CMsgSetMapLocationState *
       cmsg_set_map_location_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_set_map_location_state__free_unpacked
                     (CMsgSetMapLocationState *message,
                      ProtobufCAllocator *allocator);
/* CMsgSetMapLocationStateResponse methods */
void   cmsg_set_map_location_state_response__init
                     (CMsgSetMapLocationStateResponse         *message);
size_t cmsg_set_map_location_state_response__get_packed_size
                     (const CMsgSetMapLocationStateResponse   *message);
size_t cmsg_set_map_location_state_response__pack
                     (const CMsgSetMapLocationStateResponse   *message,
                      uint8_t             *out);
size_t cmsg_set_map_location_state_response__pack_to_buffer
                     (const CMsgSetMapLocationStateResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgSetMapLocationStateResponse *
       cmsg_set_map_location_state_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_set_map_location_state_response__free_unpacked
                     (CMsgSetMapLocationStateResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgResetMapLocations methods */
void   cmsg_reset_map_locations__init
                     (CMsgResetMapLocations         *message);
size_t cmsg_reset_map_locations__get_packed_size
                     (const CMsgResetMapLocations   *message);
size_t cmsg_reset_map_locations__pack
                     (const CMsgResetMapLocations   *message,
                      uint8_t             *out);
size_t cmsg_reset_map_locations__pack_to_buffer
                     (const CMsgResetMapLocations   *message,
                      ProtobufCBuffer     *buffer);
CMsgResetMapLocations *
       cmsg_reset_map_locations__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_reset_map_locations__free_unpacked
                     (CMsgResetMapLocations *message,
                      ProtobufCAllocator *allocator);
/* CMsgResetMapLocationsResponse methods */
void   cmsg_reset_map_locations_response__init
                     (CMsgResetMapLocationsResponse         *message);
size_t cmsg_reset_map_locations_response__get_packed_size
                     (const CMsgResetMapLocationsResponse   *message);
size_t cmsg_reset_map_locations_response__pack
                     (const CMsgResetMapLocationsResponse   *message,
                      uint8_t             *out);
size_t cmsg_reset_map_locations_response__pack_to_buffer
                     (const CMsgResetMapLocationsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgResetMapLocationsResponse *
       cmsg_reset_map_locations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_reset_map_locations_response__free_unpacked
                     (CMsgResetMapLocationsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgRefreshPartnerAccountLink methods */
void   cmsg_refresh_partner_account_link__init
                     (CMsgRefreshPartnerAccountLink         *message);
size_t cmsg_refresh_partner_account_link__get_packed_size
                     (const CMsgRefreshPartnerAccountLink   *message);
size_t cmsg_refresh_partner_account_link__pack
                     (const CMsgRefreshPartnerAccountLink   *message,
                      uint8_t             *out);
size_t cmsg_refresh_partner_account_link__pack_to_buffer
                     (const CMsgRefreshPartnerAccountLink   *message,
                      ProtobufCBuffer     *buffer);
CMsgRefreshPartnerAccountLink *
       cmsg_refresh_partner_account_link__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_refresh_partner_account_link__free_unpacked
                     (CMsgRefreshPartnerAccountLink *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientsRejoinChatChannels methods */
void   cmsg_clients_rejoin_chat_channels__init
                     (CMsgClientsRejoinChatChannels         *message);
size_t cmsg_clients_rejoin_chat_channels__get_packed_size
                     (const CMsgClientsRejoinChatChannels   *message);
size_t cmsg_clients_rejoin_chat_channels__pack
                     (const CMsgClientsRejoinChatChannels   *message,
                      uint8_t             *out);
size_t cmsg_clients_rejoin_chat_channels__pack_to_buffer
                     (const CMsgClientsRejoinChatChannels   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientsRejoinChatChannels *
       cmsg_clients_rejoin_chat_channels__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_clients_rejoin_chat_channels__free_unpacked
                     (CMsgClientsRejoinChatChannels *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTASendFriendRecruits methods */
void   cmsg_dotasend_friend_recruits__init
                     (CMsgDOTASendFriendRecruits         *message);
size_t cmsg_dotasend_friend_recruits__get_packed_size
                     (const CMsgDOTASendFriendRecruits   *message);
size_t cmsg_dotasend_friend_recruits__pack
                     (const CMsgDOTASendFriendRecruits   *message,
                      uint8_t             *out);
size_t cmsg_dotasend_friend_recruits__pack_to_buffer
                     (const CMsgDOTASendFriendRecruits   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTASendFriendRecruits *
       cmsg_dotasend_friend_recruits__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotasend_friend_recruits__free_unpacked
                     (CMsgDOTASendFriendRecruits *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFriendRecruitsRequest methods */
void   cmsg_dotafriend_recruits_request__init
                     (CMsgDOTAFriendRecruitsRequest         *message);
size_t cmsg_dotafriend_recruits_request__get_packed_size
                     (const CMsgDOTAFriendRecruitsRequest   *message);
size_t cmsg_dotafriend_recruits_request__pack
                     (const CMsgDOTAFriendRecruitsRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotafriend_recruits_request__pack_to_buffer
                     (const CMsgDOTAFriendRecruitsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFriendRecruitsRequest *
       cmsg_dotafriend_recruits_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafriend_recruits_request__free_unpacked
                     (CMsgDOTAFriendRecruitsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus methods */
void   cmsg_dotafriend_recruits_response__friend_recruit_status__init
                     (CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus         *message);
/* CMsgDOTAFriendRecruitsResponse methods */
void   cmsg_dotafriend_recruits_response__init
                     (CMsgDOTAFriendRecruitsResponse         *message);
size_t cmsg_dotafriend_recruits_response__get_packed_size
                     (const CMsgDOTAFriendRecruitsResponse   *message);
size_t cmsg_dotafriend_recruits_response__pack
                     (const CMsgDOTAFriendRecruitsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotafriend_recruits_response__pack_to_buffer
                     (const CMsgDOTAFriendRecruitsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFriendRecruitsResponse *
       cmsg_dotafriend_recruits_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafriend_recruits_response__free_unpacked
                     (CMsgDOTAFriendRecruitsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAFriendRecruitInviteAcceptDecline methods */
void   cmsg_dotafriend_recruit_invite_accept_decline__init
                     (CMsgDOTAFriendRecruitInviteAcceptDecline         *message);
size_t cmsg_dotafriend_recruit_invite_accept_decline__get_packed_size
                     (const CMsgDOTAFriendRecruitInviteAcceptDecline   *message);
size_t cmsg_dotafriend_recruit_invite_accept_decline__pack
                     (const CMsgDOTAFriendRecruitInviteAcceptDecline   *message,
                      uint8_t             *out);
size_t cmsg_dotafriend_recruit_invite_accept_decline__pack_to_buffer
                     (const CMsgDOTAFriendRecruitInviteAcceptDecline   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAFriendRecruitInviteAcceptDecline *
       cmsg_dotafriend_recruit_invite_accept_decline__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotafriend_recruit_invite_accept_decline__free_unpacked
                     (CMsgDOTAFriendRecruitInviteAcceptDecline *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestLeaguePrizePool methods */
void   cmsg_request_league_prize_pool__init
                     (CMsgRequestLeaguePrizePool         *message);
size_t cmsg_request_league_prize_pool__get_packed_size
                     (const CMsgRequestLeaguePrizePool   *message);
size_t cmsg_request_league_prize_pool__pack
                     (const CMsgRequestLeaguePrizePool   *message,
                      uint8_t             *out);
size_t cmsg_request_league_prize_pool__pack_to_buffer
                     (const CMsgRequestLeaguePrizePool   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestLeaguePrizePool *
       cmsg_request_league_prize_pool__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_league_prize_pool__free_unpacked
                     (CMsgRequestLeaguePrizePool *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestLeaguePrizePoolResponse methods */
void   cmsg_request_league_prize_pool_response__init
                     (CMsgRequestLeaguePrizePoolResponse         *message);
size_t cmsg_request_league_prize_pool_response__get_packed_size
                     (const CMsgRequestLeaguePrizePoolResponse   *message);
size_t cmsg_request_league_prize_pool_response__pack
                     (const CMsgRequestLeaguePrizePoolResponse   *message,
                      uint8_t             *out);
size_t cmsg_request_league_prize_pool_response__pack_to_buffer
                     (const CMsgRequestLeaguePrizePoolResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestLeaguePrizePoolResponse *
       cmsg_request_league_prize_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_league_prize_pool_response__free_unpacked
                     (CMsgRequestLeaguePrizePoolResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCGetHeroStandings methods */
void   cmsg_gcget_hero_standings__init
                     (CMsgGCGetHeroStandings         *message);
size_t cmsg_gcget_hero_standings__get_packed_size
                     (const CMsgGCGetHeroStandings   *message);
size_t cmsg_gcget_hero_standings__pack
                     (const CMsgGCGetHeroStandings   *message,
                      uint8_t             *out);
size_t cmsg_gcget_hero_standings__pack_to_buffer
                     (const CMsgGCGetHeroStandings   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCGetHeroStandings *
       cmsg_gcget_hero_standings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcget_hero_standings__free_unpacked
                     (CMsgGCGetHeroStandings *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCGetHeroStandingsResponse__Hero methods */
void   cmsg_gcget_hero_standings_response__hero__init
                     (CMsgGCGetHeroStandingsResponse__Hero         *message);
/* CMsgGCGetHeroStandingsResponse methods */
void   cmsg_gcget_hero_standings_response__init
                     (CMsgGCGetHeroStandingsResponse         *message);
size_t cmsg_gcget_hero_standings_response__get_packed_size
                     (const CMsgGCGetHeroStandingsResponse   *message);
size_t cmsg_gcget_hero_standings_response__pack
                     (const CMsgGCGetHeroStandingsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcget_hero_standings_response__pack_to_buffer
                     (const CMsgGCGetHeroStandingsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCGetHeroStandingsResponse *
       cmsg_gcget_hero_standings_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcget_hero_standings_response__free_unpacked
                     (CMsgGCGetHeroStandingsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReservationsRequest methods */
void   cmsg_gcitem_editor_reservations_request__init
                     (CMsgGCItemEditorReservationsRequest         *message);
size_t cmsg_gcitem_editor_reservations_request__get_packed_size
                     (const CMsgGCItemEditorReservationsRequest   *message);
size_t cmsg_gcitem_editor_reservations_request__pack
                     (const CMsgGCItemEditorReservationsRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_reservations_request__pack_to_buffer
                     (const CMsgGCItemEditorReservationsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReservationsRequest *
       cmsg_gcitem_editor_reservations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_reservations_request__free_unpacked
                     (CMsgGCItemEditorReservationsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReservation methods */
void   cmsg_gcitem_editor_reservation__init
                     (CMsgGCItemEditorReservation         *message);
size_t cmsg_gcitem_editor_reservation__get_packed_size
                     (const CMsgGCItemEditorReservation   *message);
size_t cmsg_gcitem_editor_reservation__pack
                     (const CMsgGCItemEditorReservation   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_reservation__pack_to_buffer
                     (const CMsgGCItemEditorReservation   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReservation *
       cmsg_gcitem_editor_reservation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_reservation__free_unpacked
                     (CMsgGCItemEditorReservation *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReservationsResponse methods */
void   cmsg_gcitem_editor_reservations_response__init
                     (CMsgGCItemEditorReservationsResponse         *message);
size_t cmsg_gcitem_editor_reservations_response__get_packed_size
                     (const CMsgGCItemEditorReservationsResponse   *message);
size_t cmsg_gcitem_editor_reservations_response__pack
                     (const CMsgGCItemEditorReservationsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_reservations_response__pack_to_buffer
                     (const CMsgGCItemEditorReservationsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReservationsResponse *
       cmsg_gcitem_editor_reservations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_reservations_response__free_unpacked
                     (CMsgGCItemEditorReservationsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReserveItemDef methods */
void   cmsg_gcitem_editor_reserve_item_def__init
                     (CMsgGCItemEditorReserveItemDef         *message);
size_t cmsg_gcitem_editor_reserve_item_def__get_packed_size
                     (const CMsgGCItemEditorReserveItemDef   *message);
size_t cmsg_gcitem_editor_reserve_item_def__pack
                     (const CMsgGCItemEditorReserveItemDef   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_reserve_item_def__pack_to_buffer
                     (const CMsgGCItemEditorReserveItemDef   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReserveItemDef *
       cmsg_gcitem_editor_reserve_item_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_reserve_item_def__free_unpacked
                     (CMsgGCItemEditorReserveItemDef *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReserveItemDefResponse methods */
void   cmsg_gcitem_editor_reserve_item_def_response__init
                     (CMsgGCItemEditorReserveItemDefResponse         *message);
size_t cmsg_gcitem_editor_reserve_item_def_response__get_packed_size
                     (const CMsgGCItemEditorReserveItemDefResponse   *message);
size_t cmsg_gcitem_editor_reserve_item_def_response__pack
                     (const CMsgGCItemEditorReserveItemDefResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_reserve_item_def_response__pack_to_buffer
                     (const CMsgGCItemEditorReserveItemDefResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReserveItemDefResponse *
       cmsg_gcitem_editor_reserve_item_def_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_reserve_item_def_response__free_unpacked
                     (CMsgGCItemEditorReserveItemDefResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReleaseReservation methods */
void   cmsg_gcitem_editor_release_reservation__init
                     (CMsgGCItemEditorReleaseReservation         *message);
size_t cmsg_gcitem_editor_release_reservation__get_packed_size
                     (const CMsgGCItemEditorReleaseReservation   *message);
size_t cmsg_gcitem_editor_release_reservation__pack
                     (const CMsgGCItemEditorReleaseReservation   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_release_reservation__pack_to_buffer
                     (const CMsgGCItemEditorReleaseReservation   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReleaseReservation *
       cmsg_gcitem_editor_release_reservation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_release_reservation__free_unpacked
                     (CMsgGCItemEditorReleaseReservation *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorReleaseReservationResponse methods */
void   cmsg_gcitem_editor_release_reservation_response__init
                     (CMsgGCItemEditorReleaseReservationResponse         *message);
size_t cmsg_gcitem_editor_release_reservation_response__get_packed_size
                     (const CMsgGCItemEditorReleaseReservationResponse   *message);
size_t cmsg_gcitem_editor_release_reservation_response__pack
                     (const CMsgGCItemEditorReleaseReservationResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_release_reservation_response__pack_to_buffer
                     (const CMsgGCItemEditorReleaseReservationResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorReleaseReservationResponse *
       cmsg_gcitem_editor_release_reservation_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_release_reservation_response__free_unpacked
                     (CMsgGCItemEditorReleaseReservationResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorRequestLeagueInfo methods */
void   cmsg_gcitem_editor_request_league_info__init
                     (CMsgGCItemEditorRequestLeagueInfo         *message);
size_t cmsg_gcitem_editor_request_league_info__get_packed_size
                     (const CMsgGCItemEditorRequestLeagueInfo   *message);
size_t cmsg_gcitem_editor_request_league_info__pack
                     (const CMsgGCItemEditorRequestLeagueInfo   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_request_league_info__pack_to_buffer
                     (const CMsgGCItemEditorRequestLeagueInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorRequestLeagueInfo *
       cmsg_gcitem_editor_request_league_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_request_league_info__free_unpacked
                     (CMsgGCItemEditorRequestLeagueInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCItemEditorLeagueInfoResponse methods */
void   cmsg_gcitem_editor_league_info_response__init
                     (CMsgGCItemEditorLeagueInfoResponse         *message);
size_t cmsg_gcitem_editor_league_info_response__get_packed_size
                     (const CMsgGCItemEditorLeagueInfoResponse   *message);
size_t cmsg_gcitem_editor_league_info_response__pack
                     (const CMsgGCItemEditorLeagueInfoResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcitem_editor_league_info_response__pack_to_buffer
                     (const CMsgGCItemEditorLeagueInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCItemEditorLeagueInfoResponse *
       cmsg_gcitem_editor_league_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcitem_editor_league_info_response__free_unpacked
                     (CMsgGCItemEditorLeagueInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARewardTutorialPrizes methods */
void   cmsg_dotareward_tutorial_prizes__init
                     (CMsgDOTARewardTutorialPrizes         *message);
size_t cmsg_dotareward_tutorial_prizes__get_packed_size
                     (const CMsgDOTARewardTutorialPrizes   *message);
size_t cmsg_dotareward_tutorial_prizes__pack
                     (const CMsgDOTARewardTutorialPrizes   *message,
                      uint8_t             *out);
size_t cmsg_dotareward_tutorial_prizes__pack_to_buffer
                     (const CMsgDOTARewardTutorialPrizes   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARewardTutorialPrizes *
       cmsg_dotareward_tutorial_prizes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotareward_tutorial_prizes__free_unpacked
                     (CMsgDOTARewardTutorialPrizes *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALastHitChallengeHighScorePost methods */
void   cmsg_dotalast_hit_challenge_high_score_post__init
                     (CMsgDOTALastHitChallengeHighScorePost         *message);
size_t cmsg_dotalast_hit_challenge_high_score_post__get_packed_size
                     (const CMsgDOTALastHitChallengeHighScorePost   *message);
size_t cmsg_dotalast_hit_challenge_high_score_post__pack
                     (const CMsgDOTALastHitChallengeHighScorePost   *message,
                      uint8_t             *out);
size_t cmsg_dotalast_hit_challenge_high_score_post__pack_to_buffer
                     (const CMsgDOTALastHitChallengeHighScorePost   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALastHitChallengeHighScorePost *
       cmsg_dotalast_hit_challenge_high_score_post__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalast_hit_challenge_high_score_post__free_unpacked
                     (CMsgDOTALastHitChallengeHighScorePost *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALastHitChallengeHighScoreRequest methods */
void   cmsg_dotalast_hit_challenge_high_score_request__init
                     (CMsgDOTALastHitChallengeHighScoreRequest         *message);
size_t cmsg_dotalast_hit_challenge_high_score_request__get_packed_size
                     (const CMsgDOTALastHitChallengeHighScoreRequest   *message);
size_t cmsg_dotalast_hit_challenge_high_score_request__pack
                     (const CMsgDOTALastHitChallengeHighScoreRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotalast_hit_challenge_high_score_request__pack_to_buffer
                     (const CMsgDOTALastHitChallengeHighScoreRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALastHitChallengeHighScoreRequest *
       cmsg_dotalast_hit_challenge_high_score_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalast_hit_challenge_high_score_request__free_unpacked
                     (CMsgDOTALastHitChallengeHighScoreRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALastHitChallengeHighScoreResponse methods */
void   cmsg_dotalast_hit_challenge_high_score_response__init
                     (CMsgDOTALastHitChallengeHighScoreResponse         *message);
size_t cmsg_dotalast_hit_challenge_high_score_response__get_packed_size
                     (const CMsgDOTALastHitChallengeHighScoreResponse   *message);
size_t cmsg_dotalast_hit_challenge_high_score_response__pack
                     (const CMsgDOTALastHitChallengeHighScoreResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotalast_hit_challenge_high_score_response__pack_to_buffer
                     (const CMsgDOTALastHitChallengeHighScoreResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALastHitChallengeHighScoreResponse *
       cmsg_dotalast_hit_challenge_high_score_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalast_hit_challenge_high_score_response__free_unpacked
                     (CMsgDOTALastHitChallengeHighScoreResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgFlipLobbyTeams methods */
void   cmsg_flip_lobby_teams__init
                     (CMsgFlipLobbyTeams         *message);
size_t cmsg_flip_lobby_teams__get_packed_size
                     (const CMsgFlipLobbyTeams   *message);
size_t cmsg_flip_lobby_teams__pack
                     (const CMsgFlipLobbyTeams   *message,
                      uint8_t             *out);
size_t cmsg_flip_lobby_teams__pack_to_buffer
                     (const CMsgFlipLobbyTeams   *message,
                      ProtobufCBuffer     *buffer);
CMsgFlipLobbyTeams *
       cmsg_flip_lobby_teams__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_flip_lobby_teams__free_unpacked
                     (CMsgFlipLobbyTeams *message,
                      ProtobufCAllocator *allocator);
/* CMsgPresentedClientTerminateDlg methods */
void   cmsg_presented_client_terminate_dlg__init
                     (CMsgPresentedClientTerminateDlg         *message);
size_t cmsg_presented_client_terminate_dlg__get_packed_size
                     (const CMsgPresentedClientTerminateDlg   *message);
size_t cmsg_presented_client_terminate_dlg__pack
                     (const CMsgPresentedClientTerminateDlg   *message,
                      uint8_t             *out);
size_t cmsg_presented_client_terminate_dlg__pack_to_buffer
                     (const CMsgPresentedClientTerminateDlg   *message,
                      ProtobufCBuffer     *buffer);
CMsgPresentedClientTerminateDlg *
       cmsg_presented_client_terminate_dlg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_presented_client_terminate_dlg__free_unpacked
                     (CMsgPresentedClientTerminateDlg *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCLobbyUpdateBroadcastChannelInfo methods */
void   cmsg_gclobby_update_broadcast_channel_info__init
                     (CMsgGCLobbyUpdateBroadcastChannelInfo         *message);
size_t cmsg_gclobby_update_broadcast_channel_info__get_packed_size
                     (const CMsgGCLobbyUpdateBroadcastChannelInfo   *message);
size_t cmsg_gclobby_update_broadcast_channel_info__pack
                     (const CMsgGCLobbyUpdateBroadcastChannelInfo   *message,
                      uint8_t             *out);
size_t cmsg_gclobby_update_broadcast_channel_info__pack_to_buffer
                     (const CMsgGCLobbyUpdateBroadcastChannelInfo   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCLobbyUpdateBroadcastChannelInfo *
       cmsg_gclobby_update_broadcast_channel_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gclobby_update_broadcast_channel_info__free_unpacked
                     (CMsgGCLobbyUpdateBroadcastChannelInfo *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARedeemEventPrize methods */
void   cmsg_dotaredeem_event_prize__init
                     (CMsgDOTARedeemEventPrize         *message);
size_t cmsg_dotaredeem_event_prize__get_packed_size
                     (const CMsgDOTARedeemEventPrize   *message);
size_t cmsg_dotaredeem_event_prize__pack
                     (const CMsgDOTARedeemEventPrize   *message,
                      uint8_t             *out);
size_t cmsg_dotaredeem_event_prize__pack_to_buffer
                     (const CMsgDOTARedeemEventPrize   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARedeemEventPrize *
       cmsg_dotaredeem_event_prize__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaredeem_event_prize__free_unpacked
                     (CMsgDOTARedeemEventPrize *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARedeemEventPrizeResponse methods */
void   cmsg_dotaredeem_event_prize_response__init
                     (CMsgDOTARedeemEventPrizeResponse         *message);
size_t cmsg_dotaredeem_event_prize_response__get_packed_size
                     (const CMsgDOTARedeemEventPrizeResponse   *message);
size_t cmsg_dotaredeem_event_prize_response__pack
                     (const CMsgDOTARedeemEventPrizeResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaredeem_event_prize_response__pack_to_buffer
                     (const CMsgDOTARedeemEventPrizeResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARedeemEventPrizeResponse *
       cmsg_dotaredeem_event_prize_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaredeem_event_prize_response__free_unpacked
                     (CMsgDOTARedeemEventPrizeResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGetEventPoints methods */
void   cmsg_dotaget_event_points__init
                     (CMsgDOTAGetEventPoints         *message);
size_t cmsg_dotaget_event_points__get_packed_size
                     (const CMsgDOTAGetEventPoints   *message);
size_t cmsg_dotaget_event_points__pack
                     (const CMsgDOTAGetEventPoints   *message,
                      uint8_t             *out);
size_t cmsg_dotaget_event_points__pack_to_buffer
                     (const CMsgDOTAGetEventPoints   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGetEventPoints *
       cmsg_dotaget_event_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaget_event_points__free_unpacked
                     (CMsgDOTAGetEventPoints *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGetEventPointsResponse__Action methods */
void   cmsg_dotaget_event_points_response__action__init
                     (CMsgDOTAGetEventPointsResponse__Action         *message);
/* CMsgDOTAGetEventPointsResponse methods */
void   cmsg_dotaget_event_points_response__init
                     (CMsgDOTAGetEventPointsResponse         *message);
size_t cmsg_dotaget_event_points_response__get_packed_size
                     (const CMsgDOTAGetEventPointsResponse   *message);
size_t cmsg_dotaget_event_points_response__pack
                     (const CMsgDOTAGetEventPointsResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaget_event_points_response__pack_to_buffer
                     (const CMsgDOTAGetEventPointsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGetEventPointsResponse *
       cmsg_dotaget_event_points_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaget_event_points_response__free_unpacked
                     (CMsgDOTAGetEventPointsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALiveLeagueGameUpdate methods */
void   cmsg_dotalive_league_game_update__init
                     (CMsgDOTALiveLeagueGameUpdate         *message);
size_t cmsg_dotalive_league_game_update__get_packed_size
                     (const CMsgDOTALiveLeagueGameUpdate   *message);
size_t cmsg_dotalive_league_game_update__pack
                     (const CMsgDOTALiveLeagueGameUpdate   *message,
                      uint8_t             *out);
size_t cmsg_dotalive_league_game_update__pack_to_buffer
                     (const CMsgDOTALiveLeagueGameUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALiveLeagueGameUpdate *
       cmsg_dotalive_league_game_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalive_league_game_update__free_unpacked
                     (CMsgDOTALiveLeagueGameUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumSelection methods */
void   cmsg_dotacompendium_selection__init
                     (CMsgDOTACompendiumSelection         *message);
size_t cmsg_dotacompendium_selection__get_packed_size
                     (const CMsgDOTACompendiumSelection   *message);
size_t cmsg_dotacompendium_selection__pack
                     (const CMsgDOTACompendiumSelection   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_selection__pack_to_buffer
                     (const CMsgDOTACompendiumSelection   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumSelection *
       cmsg_dotacompendium_selection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_selection__free_unpacked
                     (CMsgDOTACompendiumSelection *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumSelectionResponse methods */
void   cmsg_dotacompendium_selection_response__init
                     (CMsgDOTACompendiumSelectionResponse         *message);
size_t cmsg_dotacompendium_selection_response__get_packed_size
                     (const CMsgDOTACompendiumSelectionResponse   *message);
size_t cmsg_dotacompendium_selection_response__pack
                     (const CMsgDOTACompendiumSelectionResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_selection_response__pack_to_buffer
                     (const CMsgDOTACompendiumSelectionResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumSelectionResponse *
       cmsg_dotacompendium_selection_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_selection_response__free_unpacked
                     (CMsgDOTACompendiumSelectionResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumData methods */
void   cmsg_dotacompendium_data__init
                     (CMsgDOTACompendiumData         *message);
size_t cmsg_dotacompendium_data__get_packed_size
                     (const CMsgDOTACompendiumData   *message);
size_t cmsg_dotacompendium_data__pack
                     (const CMsgDOTACompendiumData   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_data__pack_to_buffer
                     (const CMsgDOTACompendiumData   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumData *
       cmsg_dotacompendium_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_data__free_unpacked
                     (CMsgDOTACompendiumData *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumDataRequest methods */
void   cmsg_dotacompendium_data_request__init
                     (CMsgDOTACompendiumDataRequest         *message);
size_t cmsg_dotacompendium_data_request__get_packed_size
                     (const CMsgDOTACompendiumDataRequest   *message);
size_t cmsg_dotacompendium_data_request__pack
                     (const CMsgDOTACompendiumDataRequest   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_data_request__pack_to_buffer
                     (const CMsgDOTACompendiumDataRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumDataRequest *
       cmsg_dotacompendium_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_data_request__free_unpacked
                     (CMsgDOTACompendiumDataRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumDataResponse methods */
void   cmsg_dotacompendium_data_response__init
                     (CMsgDOTACompendiumDataResponse         *message);
size_t cmsg_dotacompendium_data_response__get_packed_size
                     (const CMsgDOTACompendiumDataResponse   *message);
size_t cmsg_dotacompendium_data_response__pack
                     (const CMsgDOTACompendiumDataResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_data_response__pack_to_buffer
                     (const CMsgDOTACompendiumDataResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumDataResponse *
       cmsg_dotacompendium_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_data_response__free_unpacked
                     (CMsgDOTACompendiumDataResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGetPlayerMatchHistory methods */
void   cmsg_dotaget_player_match_history__init
                     (CMsgDOTAGetPlayerMatchHistory         *message);
size_t cmsg_dotaget_player_match_history__get_packed_size
                     (const CMsgDOTAGetPlayerMatchHistory   *message);
size_t cmsg_dotaget_player_match_history__pack
                     (const CMsgDOTAGetPlayerMatchHistory   *message,
                      uint8_t             *out);
size_t cmsg_dotaget_player_match_history__pack_to_buffer
                     (const CMsgDOTAGetPlayerMatchHistory   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGetPlayerMatchHistory *
       cmsg_dotaget_player_match_history__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaget_player_match_history__free_unpacked
                     (CMsgDOTAGetPlayerMatchHistory *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAGetPlayerMatchHistoryResponse__Match methods */
void   cmsg_dotaget_player_match_history_response__match__init
                     (CMsgDOTAGetPlayerMatchHistoryResponse__Match         *message);
/* CMsgDOTAGetPlayerMatchHistoryResponse methods */
void   cmsg_dotaget_player_match_history_response__init
                     (CMsgDOTAGetPlayerMatchHistoryResponse         *message);
size_t cmsg_dotaget_player_match_history_response__get_packed_size
                     (const CMsgDOTAGetPlayerMatchHistoryResponse   *message);
size_t cmsg_dotaget_player_match_history_response__pack
                     (const CMsgDOTAGetPlayerMatchHistoryResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaget_player_match_history_response__pack_to_buffer
                     (const CMsgDOTAGetPlayerMatchHistoryResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAGetPlayerMatchHistoryResponse *
       cmsg_dotaget_player_match_history_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaget_player_match_history_response__free_unpacked
                     (CMsgDOTAGetPlayerMatchHistoryResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAStartDailyHeroChallenge methods */
void   cmsg_dotastart_daily_hero_challenge__init
                     (CMsgDOTAStartDailyHeroChallenge         *message);
size_t cmsg_dotastart_daily_hero_challenge__get_packed_size
                     (const CMsgDOTAStartDailyHeroChallenge   *message);
size_t cmsg_dotastart_daily_hero_challenge__pack
                     (const CMsgDOTAStartDailyHeroChallenge   *message,
                      uint8_t             *out);
size_t cmsg_dotastart_daily_hero_challenge__pack_to_buffer
                     (const CMsgDOTAStartDailyHeroChallenge   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAStartDailyHeroChallenge *
       cmsg_dotastart_daily_hero_challenge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotastart_daily_hero_challenge__free_unpacked
                     (CMsgDOTAStartDailyHeroChallenge *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCNotificationsRequest methods */
void   cmsg_gcnotifications_request__init
                     (CMsgGCNotificationsRequest         *message);
size_t cmsg_gcnotifications_request__get_packed_size
                     (const CMsgGCNotificationsRequest   *message);
size_t cmsg_gcnotifications_request__pack
                     (const CMsgGCNotificationsRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcnotifications_request__pack_to_buffer
                     (const CMsgGCNotificationsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCNotificationsRequest *
       cmsg_gcnotifications_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcnotifications_request__free_unpacked
                     (CMsgGCNotificationsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCNotificationsResponse__Notification methods */
void   cmsg_gcnotifications_response__notification__init
                     (CMsgGCNotificationsResponse__Notification         *message);
/* CMsgGCNotificationsResponse methods */
void   cmsg_gcnotifications_response__init
                     (CMsgGCNotificationsResponse         *message);
size_t cmsg_gcnotifications_response__get_packed_size
                     (const CMsgGCNotificationsResponse   *message);
size_t cmsg_gcnotifications_response__pack
                     (const CMsgGCNotificationsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcnotifications_response__pack_to_buffer
                     (const CMsgGCNotificationsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCNotificationsResponse *
       cmsg_gcnotifications_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcnotifications_response__free_unpacked
                     (CMsgGCNotificationsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCNotificationsMarkReadRequest methods */
void   cmsg_gcnotifications_mark_read_request__init
                     (CMsgGCNotificationsMarkReadRequest         *message);
size_t cmsg_gcnotifications_mark_read_request__get_packed_size
                     (const CMsgGCNotificationsMarkReadRequest   *message);
size_t cmsg_gcnotifications_mark_read_request__pack
                     (const CMsgGCNotificationsMarkReadRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcnotifications_mark_read_request__pack_to_buffer
                     (const CMsgGCNotificationsMarkReadRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCNotificationsMarkReadRequest *
       cmsg_gcnotifications_mark_read_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcnotifications_mark_read_request__free_unpacked
                     (CMsgGCNotificationsMarkReadRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCMarkNotificationListRead methods */
void   cmsg_client_to_gcmark_notification_list_read__init
                     (CMsgClientToGCMarkNotificationListRead         *message);
size_t cmsg_client_to_gcmark_notification_list_read__get_packed_size
                     (const CMsgClientToGCMarkNotificationListRead   *message);
size_t cmsg_client_to_gcmark_notification_list_read__pack
                     (const CMsgClientToGCMarkNotificationListRead   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcmark_notification_list_read__pack_to_buffer
                     (const CMsgClientToGCMarkNotificationListRead   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCMarkNotificationListRead *
       cmsg_client_to_gcmark_notification_list_read__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcmark_notification_list_read__free_unpacked
                     (CMsgClientToGCMarkNotificationListRead *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCLeagueAdminState__PrivateLeagueKeys methods */
void   cmsg_gcleague_admin_state__private_league_keys__init
                     (CMsgGCLeagueAdminState__PrivateLeagueKeys         *message);
/* CMsgGCLeagueAdminState methods */
void   cmsg_gcleague_admin_state__init
                     (CMsgGCLeagueAdminState         *message);
size_t cmsg_gcleague_admin_state__get_packed_size
                     (const CMsgGCLeagueAdminState   *message);
size_t cmsg_gcleague_admin_state__pack
                     (const CMsgGCLeagueAdminState   *message,
                      uint8_t             *out);
size_t cmsg_gcleague_admin_state__pack_to_buffer
                     (const CMsgGCLeagueAdminState   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCLeagueAdminState *
       cmsg_gcleague_admin_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcleague_admin_state__free_unpacked
                     (CMsgGCLeagueAdminState *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCPlayerInfoRequest__PlayerInfo methods */
void   cmsg_gcplayer_info_request__player_info__init
                     (CMsgGCPlayerInfoRequest__PlayerInfo         *message);
/* CMsgGCPlayerInfoRequest methods */
void   cmsg_gcplayer_info_request__init
                     (CMsgGCPlayerInfoRequest         *message);
size_t cmsg_gcplayer_info_request__get_packed_size
                     (const CMsgGCPlayerInfoRequest   *message);
size_t cmsg_gcplayer_info_request__pack
                     (const CMsgGCPlayerInfoRequest   *message,
                      uint8_t             *out);
size_t cmsg_gcplayer_info_request__pack_to_buffer
                     (const CMsgGCPlayerInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCPlayerInfoRequest *
       cmsg_gcplayer_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcplayer_info_request__free_unpacked
                     (CMsgGCPlayerInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCPlayerInfoSubmit methods */
void   cmsg_gcplayer_info_submit__init
                     (CMsgGCPlayerInfoSubmit         *message);
size_t cmsg_gcplayer_info_submit__get_packed_size
                     (const CMsgGCPlayerInfoSubmit   *message);
size_t cmsg_gcplayer_info_submit__pack
                     (const CMsgGCPlayerInfoSubmit   *message,
                      uint8_t             *out);
size_t cmsg_gcplayer_info_submit__pack_to_buffer
                     (const CMsgGCPlayerInfoSubmit   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCPlayerInfoSubmit *
       cmsg_gcplayer_info_submit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcplayer_info_submit__free_unpacked
                     (CMsgGCPlayerInfoSubmit *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCPlayerInfoSubmitResponse methods */
void   cmsg_gcplayer_info_submit_response__init
                     (CMsgGCPlayerInfoSubmitResponse         *message);
size_t cmsg_gcplayer_info_submit_response__get_packed_size
                     (const CMsgGCPlayerInfoSubmitResponse   *message);
size_t cmsg_gcplayer_info_submit_response__pack
                     (const CMsgGCPlayerInfoSubmitResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcplayer_info_submit_response__pack_to_buffer
                     (const CMsgGCPlayerInfoSubmitResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCPlayerInfoSubmitResponse *
       cmsg_gcplayer_info_submit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcplayer_info_submit_response__free_unpacked
                     (CMsgGCPlayerInfoSubmitResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientProvideSurveyResult__Response methods */
void   cmsg_client_provide_survey_result__response__init
                     (CMsgClientProvideSurveyResult__Response         *message);
/* CMsgClientProvideSurveyResult methods */
void   cmsg_client_provide_survey_result__init
                     (CMsgClientProvideSurveyResult         *message);
size_t cmsg_client_provide_survey_result__get_packed_size
                     (const CMsgClientProvideSurveyResult   *message);
size_t cmsg_client_provide_survey_result__pack
                     (const CMsgClientProvideSurveyResult   *message,
                      uint8_t             *out);
size_t cmsg_client_provide_survey_result__pack_to_buffer
                     (const CMsgClientProvideSurveyResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientProvideSurveyResult *
       cmsg_client_provide_survey_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_provide_survey_result__free_unpacked
                     (CMsgClientProvideSurveyResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAEmoticonAccessSDO methods */
void   cmsg_dotaemoticon_access_sdo__init
                     (CMsgDOTAEmoticonAccessSDO         *message);
size_t cmsg_dotaemoticon_access_sdo__get_packed_size
                     (const CMsgDOTAEmoticonAccessSDO   *message);
size_t cmsg_dotaemoticon_access_sdo__pack
                     (const CMsgDOTAEmoticonAccessSDO   *message,
                      uint8_t             *out);
size_t cmsg_dotaemoticon_access_sdo__pack_to_buffer
                     (const CMsgDOTAEmoticonAccessSDO   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAEmoticonAccessSDO *
       cmsg_dotaemoticon_access_sdo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaemoticon_access_sdo__free_unpacked
                     (CMsgDOTAEmoticonAccessSDO *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCEmoticonDataRequest methods */
void   cmsg_client_to_gcemoticon_data_request__init
                     (CMsgClientToGCEmoticonDataRequest         *message);
size_t cmsg_client_to_gcemoticon_data_request__get_packed_size
                     (const CMsgClientToGCEmoticonDataRequest   *message);
size_t cmsg_client_to_gcemoticon_data_request__pack
                     (const CMsgClientToGCEmoticonDataRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcemoticon_data_request__pack_to_buffer
                     (const CMsgClientToGCEmoticonDataRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCEmoticonDataRequest *
       cmsg_client_to_gcemoticon_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcemoticon_data_request__free_unpacked
                     (CMsgClientToGCEmoticonDataRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientEmoticonData methods */
void   cmsg_gcto_client_emoticon_data__init
                     (CMsgGCToClientEmoticonData         *message);
size_t cmsg_gcto_client_emoticon_data__get_packed_size
                     (const CMsgGCToClientEmoticonData   *message);
size_t cmsg_gcto_client_emoticon_data__pack
                     (const CMsgGCToClientEmoticonData   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_emoticon_data__pack_to_buffer
                     (const CMsgGCToClientEmoticonData   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientEmoticonData *
       cmsg_gcto_client_emoticon_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_emoticon_data__free_unpacked
                     (CMsgGCToClientEmoticonData *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCTrackDialogResult methods */
void   cmsg_client_to_gctrack_dialog_result__init
                     (CMsgClientToGCTrackDialogResult         *message);
size_t cmsg_client_to_gctrack_dialog_result__get_packed_size
                     (const CMsgClientToGCTrackDialogResult   *message);
size_t cmsg_client_to_gctrack_dialog_result__pack
                     (const CMsgClientToGCTrackDialogResult   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gctrack_dialog_result__pack_to_buffer
                     (const CMsgClientToGCTrackDialogResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCTrackDialogResult *
       cmsg_client_to_gctrack_dialog_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gctrack_dialog_result__free_unpacked
                     (CMsgClientToGCTrackDialogResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientTournamentItemDrop methods */
void   cmsg_gcto_client_tournament_item_drop__init
                     (CMsgGCToClientTournamentItemDrop         *message);
size_t cmsg_gcto_client_tournament_item_drop__get_packed_size
                     (const CMsgGCToClientTournamentItemDrop   *message);
size_t cmsg_gcto_client_tournament_item_drop__pack
                     (const CMsgGCToClientTournamentItemDrop   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_tournament_item_drop__pack_to_buffer
                     (const CMsgGCToClientTournamentItemDrop   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientTournamentItemDrop *
       cmsg_gcto_client_tournament_item_drop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_tournament_item_drop__free_unpacked
                     (CMsgGCToClientTournamentItemDrop *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSetAdditionalEquips methods */
void   cmsg_client_to_gcset_additional_equips__init
                     (CMsgClientToGCSetAdditionalEquips         *message);
size_t cmsg_client_to_gcset_additional_equips__get_packed_size
                     (const CMsgClientToGCSetAdditionalEquips   *message);
size_t cmsg_client_to_gcset_additional_equips__pack
                     (const CMsgClientToGCSetAdditionalEquips   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcset_additional_equips__pack_to_buffer
                     (const CMsgClientToGCSetAdditionalEquips   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSetAdditionalEquips *
       cmsg_client_to_gcset_additional_equips__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcset_additional_equips__free_unpacked
                     (CMsgClientToGCSetAdditionalEquips *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSetAdditionalEquipsResponse methods */
void   cmsg_client_to_gcset_additional_equips_response__init
                     (CMsgClientToGCSetAdditionalEquipsResponse         *message);
size_t cmsg_client_to_gcset_additional_equips_response__get_packed_size
                     (const CMsgClientToGCSetAdditionalEquipsResponse   *message);
size_t cmsg_client_to_gcset_additional_equips_response__pack
                     (const CMsgClientToGCSetAdditionalEquipsResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcset_additional_equips_response__pack_to_buffer
                     (const CMsgClientToGCSetAdditionalEquipsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSetAdditionalEquipsResponse *
       cmsg_client_to_gcset_additional_equips_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcset_additional_equips_response__free_unpacked
                     (CMsgClientToGCSetAdditionalEquipsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAdditionalEquips methods */
void   cmsg_client_to_gcget_additional_equips__init
                     (CMsgClientToGCGetAdditionalEquips         *message);
size_t cmsg_client_to_gcget_additional_equips__get_packed_size
                     (const CMsgClientToGCGetAdditionalEquips   *message);
size_t cmsg_client_to_gcget_additional_equips__pack
                     (const CMsgClientToGCGetAdditionalEquips   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_additional_equips__pack_to_buffer
                     (const CMsgClientToGCGetAdditionalEquips   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAdditionalEquips *
       cmsg_client_to_gcget_additional_equips__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_additional_equips__free_unpacked
                     (CMsgClientToGCGetAdditionalEquips *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAdditionalEquipsResponse methods */
void   cmsg_client_to_gcget_additional_equips_response__init
                     (CMsgClientToGCGetAdditionalEquipsResponse         *message);
size_t cmsg_client_to_gcget_additional_equips_response__get_packed_size
                     (const CMsgClientToGCGetAdditionalEquipsResponse   *message);
size_t cmsg_client_to_gcget_additional_equips_response__pack
                     (const CMsgClientToGCGetAdditionalEquipsResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_additional_equips_response__pack_to_buffer
                     (const CMsgClientToGCGetAdditionalEquipsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAdditionalEquipsResponse *
       cmsg_client_to_gcget_additional_equips_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_additional_equips_response__free_unpacked
                     (CMsgClientToGCGetAdditionalEquipsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAllHeroOrder methods */
void   cmsg_client_to_gcget_all_hero_order__init
                     (CMsgClientToGCGetAllHeroOrder         *message);
size_t cmsg_client_to_gcget_all_hero_order__get_packed_size
                     (const CMsgClientToGCGetAllHeroOrder   *message);
size_t cmsg_client_to_gcget_all_hero_order__pack
                     (const CMsgClientToGCGetAllHeroOrder   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_all_hero_order__pack_to_buffer
                     (const CMsgClientToGCGetAllHeroOrder   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAllHeroOrder *
       cmsg_client_to_gcget_all_hero_order__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_all_hero_order__free_unpacked
                     (CMsgClientToGCGetAllHeroOrder *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAllHeroOrderResponse methods */
void   cmsg_client_to_gcget_all_hero_order_response__init
                     (CMsgClientToGCGetAllHeroOrderResponse         *message);
size_t cmsg_client_to_gcget_all_hero_order_response__get_packed_size
                     (const CMsgClientToGCGetAllHeroOrderResponse   *message);
size_t cmsg_client_to_gcget_all_hero_order_response__pack
                     (const CMsgClientToGCGetAllHeroOrderResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_all_hero_order_response__pack_to_buffer
                     (const CMsgClientToGCGetAllHeroOrderResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAllHeroOrderResponse *
       cmsg_client_to_gcget_all_hero_order_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_all_hero_order_response__free_unpacked
                     (CMsgClientToGCGetAllHeroOrderResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAllHeroProgress methods */
void   cmsg_client_to_gcget_all_hero_progress__init
                     (CMsgClientToGCGetAllHeroProgress         *message);
size_t cmsg_client_to_gcget_all_hero_progress__get_packed_size
                     (const CMsgClientToGCGetAllHeroProgress   *message);
size_t cmsg_client_to_gcget_all_hero_progress__pack
                     (const CMsgClientToGCGetAllHeroProgress   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_all_hero_progress__pack_to_buffer
                     (const CMsgClientToGCGetAllHeroProgress   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAllHeroProgress *
       cmsg_client_to_gcget_all_hero_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_all_hero_progress__free_unpacked
                     (CMsgClientToGCGetAllHeroProgress *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetAllHeroProgressResponse methods */
void   cmsg_client_to_gcget_all_hero_progress_response__init
                     (CMsgClientToGCGetAllHeroProgressResponse         *message);
size_t cmsg_client_to_gcget_all_hero_progress_response__get_packed_size
                     (const CMsgClientToGCGetAllHeroProgressResponse   *message);
size_t cmsg_client_to_gcget_all_hero_progress_response__pack
                     (const CMsgClientToGCGetAllHeroProgressResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_all_hero_progress_response__pack_to_buffer
                     (const CMsgClientToGCGetAllHeroProgressResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetAllHeroProgressResponse *
       cmsg_client_to_gcget_all_hero_progress_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_all_hero_progress_response__free_unpacked
                     (CMsgClientToGCGetAllHeroProgressResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetTrophyList methods */
void   cmsg_client_to_gcget_trophy_list__init
                     (CMsgClientToGCGetTrophyList         *message);
size_t cmsg_client_to_gcget_trophy_list__get_packed_size
                     (const CMsgClientToGCGetTrophyList   *message);
size_t cmsg_client_to_gcget_trophy_list__pack
                     (const CMsgClientToGCGetTrophyList   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_trophy_list__pack_to_buffer
                     (const CMsgClientToGCGetTrophyList   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetTrophyList *
       cmsg_client_to_gcget_trophy_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_trophy_list__free_unpacked
                     (CMsgClientToGCGetTrophyList *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetTrophyListResponse__Trophy methods */
void   cmsg_client_to_gcget_trophy_list_response__trophy__init
                     (CMsgClientToGCGetTrophyListResponse__Trophy         *message);
/* CMsgClientToGCGetTrophyListResponse methods */
void   cmsg_client_to_gcget_trophy_list_response__init
                     (CMsgClientToGCGetTrophyListResponse         *message);
size_t cmsg_client_to_gcget_trophy_list_response__get_packed_size
                     (const CMsgClientToGCGetTrophyListResponse   *message);
size_t cmsg_client_to_gcget_trophy_list_response__pack
                     (const CMsgClientToGCGetTrophyListResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_trophy_list_response__pack_to_buffer
                     (const CMsgClientToGCGetTrophyListResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetTrophyListResponse *
       cmsg_client_to_gcget_trophy_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_trophy_list_response__free_unpacked
                     (CMsgClientToGCGetTrophyListResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientTrophyAwarded methods */
void   cmsg_gcto_client_trophy_awarded__init
                     (CMsgGCToClientTrophyAwarded         *message);
size_t cmsg_gcto_client_trophy_awarded__get_packed_size
                     (const CMsgGCToClientTrophyAwarded   *message);
size_t cmsg_gcto_client_trophy_awarded__pack
                     (const CMsgGCToClientTrophyAwarded   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_trophy_awarded__pack_to_buffer
                     (const CMsgGCToClientTrophyAwarded   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientTrophyAwarded *
       cmsg_gcto_client_trophy_awarded__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_trophy_awarded__free_unpacked
                     (CMsgGCToClientTrophyAwarded *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetProfileCard methods */
void   cmsg_client_to_gcget_profile_card__init
                     (CMsgClientToGCGetProfileCard         *message);
size_t cmsg_client_to_gcget_profile_card__get_packed_size
                     (const CMsgClientToGCGetProfileCard   *message);
size_t cmsg_client_to_gcget_profile_card__pack
                     (const CMsgClientToGCGetProfileCard   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_profile_card__pack_to_buffer
                     (const CMsgClientToGCGetProfileCard   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetProfileCard *
       cmsg_client_to_gcget_profile_card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_profile_card__free_unpacked
                     (CMsgClientToGCGetProfileCard *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSetProfileCardSlots__CardSlot methods */
void   cmsg_client_to_gcset_profile_card_slots__card_slot__init
                     (CMsgClientToGCSetProfileCardSlots__CardSlot         *message);
/* CMsgClientToGCSetProfileCardSlots methods */
void   cmsg_client_to_gcset_profile_card_slots__init
                     (CMsgClientToGCSetProfileCardSlots         *message);
size_t cmsg_client_to_gcset_profile_card_slots__get_packed_size
                     (const CMsgClientToGCSetProfileCardSlots   *message);
size_t cmsg_client_to_gcset_profile_card_slots__pack
                     (const CMsgClientToGCSetProfileCardSlots   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcset_profile_card_slots__pack_to_buffer
                     (const CMsgClientToGCSetProfileCardSlots   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSetProfileCardSlots *
       cmsg_client_to_gcset_profile_card_slots__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcset_profile_card_slots__free_unpacked
                     (CMsgClientToGCSetProfileCardSlots *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetProfileCardStats methods */
void   cmsg_client_to_gcget_profile_card_stats__init
                     (CMsgClientToGCGetProfileCardStats         *message);
size_t cmsg_client_to_gcget_profile_card_stats__get_packed_size
                     (const CMsgClientToGCGetProfileCardStats   *message);
size_t cmsg_client_to_gcget_profile_card_stats__pack
                     (const CMsgClientToGCGetProfileCardStats   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_profile_card_stats__pack_to_buffer
                     (const CMsgClientToGCGetProfileCardStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetProfileCardStats *
       cmsg_client_to_gcget_profile_card_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_profile_card_stats__free_unpacked
                     (CMsgClientToGCGetProfileCardStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCreateHeroStatue methods */
void   cmsg_client_to_gccreate_hero_statue__init
                     (CMsgClientToGCCreateHeroStatue         *message);
size_t cmsg_client_to_gccreate_hero_statue__get_packed_size
                     (const CMsgClientToGCCreateHeroStatue   *message);
size_t cmsg_client_to_gccreate_hero_statue__pack
                     (const CMsgClientToGCCreateHeroStatue   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccreate_hero_statue__pack_to_buffer
                     (const CMsgClientToGCCreateHeroStatue   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCreateHeroStatue *
       cmsg_client_to_gccreate_hero_statue__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccreate_hero_statue__free_unpacked
                     (CMsgClientToGCCreateHeroStatue *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCreateTeamShowcase methods */
void   cmsg_client_to_gccreate_team_showcase__init
                     (CMsgClientToGCCreateTeamShowcase         *message);
size_t cmsg_client_to_gccreate_team_showcase__get_packed_size
                     (const CMsgClientToGCCreateTeamShowcase   *message);
size_t cmsg_client_to_gccreate_team_showcase__pack
                     (const CMsgClientToGCCreateTeamShowcase   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccreate_team_showcase__pack_to_buffer
                     (const CMsgClientToGCCreateTeamShowcase   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCreateTeamShowcase *
       cmsg_client_to_gccreate_team_showcase__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccreate_team_showcase__free_unpacked
                     (CMsgClientToGCCreateTeamShowcase *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientHeroStatueCreateResult methods */
void   cmsg_gcto_client_hero_statue_create_result__init
                     (CMsgGCToClientHeroStatueCreateResult         *message);
size_t cmsg_gcto_client_hero_statue_create_result__get_packed_size
                     (const CMsgGCToClientHeroStatueCreateResult   *message);
size_t cmsg_gcto_client_hero_statue_create_result__pack
                     (const CMsgGCToClientHeroStatueCreateResult   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_hero_statue_create_result__pack_to_buffer
                     (const CMsgGCToClientHeroStatueCreateResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientHeroStatueCreateResult *
       cmsg_gcto_client_hero_statue_create_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_hero_statue_create_result__free_unpacked
                     (CMsgGCToClientHeroStatueCreateResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientTeamShowcaseCreateResult methods */
void   cmsg_gcto_client_team_showcase_create_result__init
                     (CMsgGCToClientTeamShowcaseCreateResult         *message);
size_t cmsg_gcto_client_team_showcase_create_result__get_packed_size
                     (const CMsgGCToClientTeamShowcaseCreateResult   *message);
size_t cmsg_gcto_client_team_showcase_create_result__pack
                     (const CMsgGCToClientTeamShowcaseCreateResult   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_team_showcase_create_result__pack_to_buffer
                     (const CMsgGCToClientTeamShowcaseCreateResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientTeamShowcaseCreateResult *
       cmsg_gcto_client_team_showcase_create_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_team_showcase_create_result__free_unpacked
                     (CMsgGCToClientTeamShowcaseCreateResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRecordCompendiumStats methods */
void   cmsg_client_to_gcrecord_compendium_stats__init
                     (CMsgClientToGCRecordCompendiumStats         *message);
size_t cmsg_client_to_gcrecord_compendium_stats__get_packed_size
                     (const CMsgClientToGCRecordCompendiumStats   *message);
size_t cmsg_client_to_gcrecord_compendium_stats__pack
                     (const CMsgClientToGCRecordCompendiumStats   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrecord_compendium_stats__pack_to_buffer
                     (const CMsgClientToGCRecordCompendiumStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRecordCompendiumStats *
       cmsg_client_to_gcrecord_compendium_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrecord_compendium_stats__free_unpacked
                     (CMsgClientToGCRecordCompendiumStats *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientEventStatusChanged methods */
void   cmsg_gcto_client_event_status_changed__init
                     (CMsgGCToClientEventStatusChanged         *message);
size_t cmsg_gcto_client_event_status_changed__get_packed_size
                     (const CMsgGCToClientEventStatusChanged   *message);
size_t cmsg_gcto_client_event_status_changed__pack
                     (const CMsgGCToClientEventStatusChanged   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_event_status_changed__pack_to_buffer
                     (const CMsgGCToClientEventStatusChanged   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientEventStatusChanged *
       cmsg_gcto_client_event_status_changed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_event_status_changed__free_unpacked
                     (CMsgGCToClientEventStatusChanged *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPlayerStatsRequest methods */
void   cmsg_client_to_gcplayer_stats_request__init
                     (CMsgClientToGCPlayerStatsRequest         *message);
size_t cmsg_client_to_gcplayer_stats_request__get_packed_size
                     (const CMsgClientToGCPlayerStatsRequest   *message);
size_t cmsg_client_to_gcplayer_stats_request__pack
                     (const CMsgClientToGCPlayerStatsRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcplayer_stats_request__pack_to_buffer
                     (const CMsgClientToGCPlayerStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPlayerStatsRequest *
       cmsg_client_to_gcplayer_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcplayer_stats_request__free_unpacked
                     (CMsgClientToGCPlayerStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientPlayerStatsResponse methods */
void   cmsg_gcto_client_player_stats_response__init
                     (CMsgGCToClientPlayerStatsResponse         *message);
size_t cmsg_gcto_client_player_stats_response__get_packed_size
                     (const CMsgGCToClientPlayerStatsResponse   *message);
size_t cmsg_gcto_client_player_stats_response__pack
                     (const CMsgGCToClientPlayerStatsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_player_stats_response__pack_to_buffer
                     (const CMsgGCToClientPlayerStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientPlayerStatsResponse *
       cmsg_gcto_client_player_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_player_stats_response__free_unpacked
                     (CMsgGCToClientPlayerStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCustomGamePlayerCountRequest methods */
void   cmsg_client_to_gccustom_game_player_count_request__init
                     (CMsgClientToGCCustomGamePlayerCountRequest         *message);
size_t cmsg_client_to_gccustom_game_player_count_request__get_packed_size
                     (const CMsgClientToGCCustomGamePlayerCountRequest   *message);
size_t cmsg_client_to_gccustom_game_player_count_request__pack
                     (const CMsgClientToGCCustomGamePlayerCountRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccustom_game_player_count_request__pack_to_buffer
                     (const CMsgClientToGCCustomGamePlayerCountRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCustomGamePlayerCountRequest *
       cmsg_client_to_gccustom_game_player_count_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccustom_game_player_count_request__free_unpacked
                     (CMsgClientToGCCustomGamePlayerCountRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientCustomGamePlayerCountResponse methods */
void   cmsg_gcto_client_custom_game_player_count_response__init
                     (CMsgGCToClientCustomGamePlayerCountResponse         *message);
size_t cmsg_gcto_client_custom_game_player_count_response__get_packed_size
                     (const CMsgGCToClientCustomGamePlayerCountResponse   *message);
size_t cmsg_gcto_client_custom_game_player_count_response__pack
                     (const CMsgGCToClientCustomGamePlayerCountResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_custom_game_player_count_response__pack_to_buffer
                     (const CMsgGCToClientCustomGamePlayerCountResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientCustomGamePlayerCountResponse *
       cmsg_gcto_client_custom_game_player_count_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_custom_game_player_count_response__free_unpacked
                     (CMsgGCToClientCustomGamePlayerCountResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCustomGamesFriendsPlayedRequest methods */
void   cmsg_client_to_gccustom_games_friends_played_request__init
                     (CMsgClientToGCCustomGamesFriendsPlayedRequest         *message);
size_t cmsg_client_to_gccustom_games_friends_played_request__get_packed_size
                     (const CMsgClientToGCCustomGamesFriendsPlayedRequest   *message);
size_t cmsg_client_to_gccustom_games_friends_played_request__pack
                     (const CMsgClientToGCCustomGamesFriendsPlayedRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccustom_games_friends_played_request__pack_to_buffer
                     (const CMsgClientToGCCustomGamesFriendsPlayedRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCustomGamesFriendsPlayedRequest *
       cmsg_client_to_gccustom_games_friends_played_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccustom_games_friends_played_request__free_unpacked
                     (CMsgClientToGCCustomGamesFriendsPlayedRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame methods */
void   cmsg_gcto_client_custom_games_friends_played_response__custom_game__init
                     (CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame         *message);
/* CMsgGCToClientCustomGamesFriendsPlayedResponse methods */
void   cmsg_gcto_client_custom_games_friends_played_response__init
                     (CMsgGCToClientCustomGamesFriendsPlayedResponse         *message);
size_t cmsg_gcto_client_custom_games_friends_played_response__get_packed_size
                     (const CMsgGCToClientCustomGamesFriendsPlayedResponse   *message);
size_t cmsg_gcto_client_custom_games_friends_played_response__pack
                     (const CMsgGCToClientCustomGamesFriendsPlayedResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_custom_games_friends_played_response__pack_to_buffer
                     (const CMsgGCToClientCustomGamesFriendsPlayedResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientCustomGamesFriendsPlayedResponse *
       cmsg_gcto_client_custom_games_friends_played_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_custom_games_friends_played_response__free_unpacked
                     (CMsgGCToClientCustomGamesFriendsPlayedResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSocialFeedPostCommentRequest methods */
void   cmsg_client_to_gcsocial_feed_post_comment_request__init
                     (CMsgClientToGCSocialFeedPostCommentRequest         *message);
size_t cmsg_client_to_gcsocial_feed_post_comment_request__get_packed_size
                     (const CMsgClientToGCSocialFeedPostCommentRequest   *message);
size_t cmsg_client_to_gcsocial_feed_post_comment_request__pack
                     (const CMsgClientToGCSocialFeedPostCommentRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcsocial_feed_post_comment_request__pack_to_buffer
                     (const CMsgClientToGCSocialFeedPostCommentRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSocialFeedPostCommentRequest *
       cmsg_client_to_gcsocial_feed_post_comment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcsocial_feed_post_comment_request__free_unpacked
                     (CMsgClientToGCSocialFeedPostCommentRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientSocialFeedPostCommentResponse methods */
void   cmsg_gcto_client_social_feed_post_comment_response__init
                     (CMsgGCToClientSocialFeedPostCommentResponse         *message);
size_t cmsg_gcto_client_social_feed_post_comment_response__get_packed_size
                     (const CMsgGCToClientSocialFeedPostCommentResponse   *message);
size_t cmsg_gcto_client_social_feed_post_comment_response__pack
                     (const CMsgGCToClientSocialFeedPostCommentResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_social_feed_post_comment_response__pack_to_buffer
                     (const CMsgGCToClientSocialFeedPostCommentResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientSocialFeedPostCommentResponse *
       cmsg_gcto_client_social_feed_post_comment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_social_feed_post_comment_response__free_unpacked
                     (CMsgGCToClientSocialFeedPostCommentResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSocialFeedPostMessageRequest methods */
void   cmsg_client_to_gcsocial_feed_post_message_request__init
                     (CMsgClientToGCSocialFeedPostMessageRequest         *message);
size_t cmsg_client_to_gcsocial_feed_post_message_request__get_packed_size
                     (const CMsgClientToGCSocialFeedPostMessageRequest   *message);
size_t cmsg_client_to_gcsocial_feed_post_message_request__pack
                     (const CMsgClientToGCSocialFeedPostMessageRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcsocial_feed_post_message_request__pack_to_buffer
                     (const CMsgClientToGCSocialFeedPostMessageRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSocialFeedPostMessageRequest *
       cmsg_client_to_gcsocial_feed_post_message_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcsocial_feed_post_message_request__free_unpacked
                     (CMsgClientToGCSocialFeedPostMessageRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientSocialFeedPostMessageResponse methods */
void   cmsg_gcto_client_social_feed_post_message_response__init
                     (CMsgGCToClientSocialFeedPostMessageResponse         *message);
size_t cmsg_gcto_client_social_feed_post_message_response__get_packed_size
                     (const CMsgGCToClientSocialFeedPostMessageResponse   *message);
size_t cmsg_gcto_client_social_feed_post_message_response__pack
                     (const CMsgGCToClientSocialFeedPostMessageResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_social_feed_post_message_response__pack_to_buffer
                     (const CMsgGCToClientSocialFeedPostMessageResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientSocialFeedPostMessageResponse *
       cmsg_gcto_client_social_feed_post_message_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_social_feed_post_message_response__free_unpacked
                     (CMsgGCToClientSocialFeedPostMessageResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCFriendsPlayedCustomGameRequest methods */
void   cmsg_client_to_gcfriends_played_custom_game_request__init
                     (CMsgClientToGCFriendsPlayedCustomGameRequest         *message);
size_t cmsg_client_to_gcfriends_played_custom_game_request__get_packed_size
                     (const CMsgClientToGCFriendsPlayedCustomGameRequest   *message);
size_t cmsg_client_to_gcfriends_played_custom_game_request__pack
                     (const CMsgClientToGCFriendsPlayedCustomGameRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcfriends_played_custom_game_request__pack_to_buffer
                     (const CMsgClientToGCFriendsPlayedCustomGameRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCFriendsPlayedCustomGameRequest *
       cmsg_client_to_gcfriends_played_custom_game_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcfriends_played_custom_game_request__free_unpacked
                     (CMsgClientToGCFriendsPlayedCustomGameRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientFriendsPlayedCustomGameResponse methods */
void   cmsg_gcto_client_friends_played_custom_game_response__init
                     (CMsgGCToClientFriendsPlayedCustomGameResponse         *message);
size_t cmsg_gcto_client_friends_played_custom_game_response__get_packed_size
                     (const CMsgGCToClientFriendsPlayedCustomGameResponse   *message);
size_t cmsg_gcto_client_friends_played_custom_game_response__pack
                     (const CMsgGCToClientFriendsPlayedCustomGameResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_friends_played_custom_game_response__pack_to_buffer
                     (const CMsgGCToClientFriendsPlayedCustomGameResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientFriendsPlayedCustomGameResponse *
       cmsg_gcto_client_friends_played_custom_game_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_friends_played_custom_game_response__free_unpacked
                     (CMsgGCToClientFriendsPlayedCustomGameResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCFeaturedHeroesRequest methods */
void   cmsg_client_to_gcfeatured_heroes_request__init
                     (CMsgClientToGCFeaturedHeroesRequest         *message);
size_t cmsg_client_to_gcfeatured_heroes_request__get_packed_size
                     (const CMsgClientToGCFeaturedHeroesRequest   *message);
size_t cmsg_client_to_gcfeatured_heroes_request__pack
                     (const CMsgClientToGCFeaturedHeroesRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcfeatured_heroes_request__pack_to_buffer
                     (const CMsgClientToGCFeaturedHeroesRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCFeaturedHeroesRequest *
       cmsg_client_to_gcfeatured_heroes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcfeatured_heroes_request__free_unpacked
                     (CMsgClientToGCFeaturedHeroesRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientFeaturedHeroesResponse__DataField methods */
void   cmsg_gcto_client_featured_heroes_response__data_field__init
                     (CMsgGCToClientFeaturedHeroesResponse__DataField         *message);
/* CMsgGCToClientFeaturedHeroesResponse__FeaturedHero methods */
void   cmsg_gcto_client_featured_heroes_response__featured_hero__init
                     (CMsgGCToClientFeaturedHeroesResponse__FeaturedHero         *message);
/* CMsgGCToClientFeaturedHeroesResponse__Category methods */
void   cmsg_gcto_client_featured_heroes_response__category__init
                     (CMsgGCToClientFeaturedHeroesResponse__Category         *message);
/* CMsgGCToClientFeaturedHeroesResponse methods */
void   cmsg_gcto_client_featured_heroes_response__init
                     (CMsgGCToClientFeaturedHeroesResponse         *message);
size_t cmsg_gcto_client_featured_heroes_response__get_packed_size
                     (const CMsgGCToClientFeaturedHeroesResponse   *message);
size_t cmsg_gcto_client_featured_heroes_response__pack
                     (const CMsgGCToClientFeaturedHeroesResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_featured_heroes_response__pack_to_buffer
                     (const CMsgGCToClientFeaturedHeroesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientFeaturedHeroesResponse *
       cmsg_gcto_client_featured_heroes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_featured_heroes_response__free_unpacked
                     (CMsgGCToClientFeaturedHeroesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSocialMatchPostCommentRequest methods */
void   cmsg_client_to_gcsocial_match_post_comment_request__init
                     (CMsgClientToGCSocialMatchPostCommentRequest         *message);
size_t cmsg_client_to_gcsocial_match_post_comment_request__get_packed_size
                     (const CMsgClientToGCSocialMatchPostCommentRequest   *message);
size_t cmsg_client_to_gcsocial_match_post_comment_request__pack
                     (const CMsgClientToGCSocialMatchPostCommentRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcsocial_match_post_comment_request__pack_to_buffer
                     (const CMsgClientToGCSocialMatchPostCommentRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSocialMatchPostCommentRequest *
       cmsg_client_to_gcsocial_match_post_comment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcsocial_match_post_comment_request__free_unpacked
                     (CMsgClientToGCSocialMatchPostCommentRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientSocialMatchPostCommentResponse methods */
void   cmsg_gcto_client_social_match_post_comment_response__init
                     (CMsgGCToClientSocialMatchPostCommentResponse         *message);
size_t cmsg_gcto_client_social_match_post_comment_response__get_packed_size
                     (const CMsgGCToClientSocialMatchPostCommentResponse   *message);
size_t cmsg_gcto_client_social_match_post_comment_response__pack
                     (const CMsgGCToClientSocialMatchPostCommentResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_social_match_post_comment_response__pack_to_buffer
                     (const CMsgGCToClientSocialMatchPostCommentResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientSocialMatchPostCommentResponse *
       cmsg_gcto_client_social_match_post_comment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_social_match_post_comment_response__free_unpacked
                     (CMsgGCToClientSocialMatchPostCommentResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSocialMatchDetailsRequest methods */
void   cmsg_client_to_gcsocial_match_details_request__init
                     (CMsgClientToGCSocialMatchDetailsRequest         *message);
size_t cmsg_client_to_gcsocial_match_details_request__get_packed_size
                     (const CMsgClientToGCSocialMatchDetailsRequest   *message);
size_t cmsg_client_to_gcsocial_match_details_request__pack
                     (const CMsgClientToGCSocialMatchDetailsRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcsocial_match_details_request__pack_to_buffer
                     (const CMsgClientToGCSocialMatchDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSocialMatchDetailsRequest *
       cmsg_client_to_gcsocial_match_details_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcsocial_match_details_request__free_unpacked
                     (CMsgClientToGCSocialMatchDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientSocialMatchDetailsResponse__Comment methods */
void   cmsg_gcto_client_social_match_details_response__comment__init
                     (CMsgGCToClientSocialMatchDetailsResponse__Comment         *message);
/* CMsgGCToClientSocialMatchDetailsResponse methods */
void   cmsg_gcto_client_social_match_details_response__init
                     (CMsgGCToClientSocialMatchDetailsResponse         *message);
size_t cmsg_gcto_client_social_match_details_response__get_packed_size
                     (const CMsgGCToClientSocialMatchDetailsResponse   *message);
size_t cmsg_gcto_client_social_match_details_response__pack
                     (const CMsgGCToClientSocialMatchDetailsResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_social_match_details_response__pack_to_buffer
                     (const CMsgGCToClientSocialMatchDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientSocialMatchDetailsResponse *
       cmsg_gcto_client_social_match_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_social_match_details_response__free_unpacked
                     (CMsgGCToClientSocialMatchDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPartyRichPresence__Member methods */
void   cmsg_dotaparty_rich_presence__member__init
                     (CMsgDOTAPartyRichPresence__Member         *message);
/* CMsgDOTAPartyRichPresence__WeekendTourney methods */
void   cmsg_dotaparty_rich_presence__weekend_tourney__init
                     (CMsgDOTAPartyRichPresence__WeekendTourney         *message);
/* CMsgDOTAPartyRichPresence methods */
void   cmsg_dotaparty_rich_presence__init
                     (CMsgDOTAPartyRichPresence         *message);
size_t cmsg_dotaparty_rich_presence__get_packed_size
                     (const CMsgDOTAPartyRichPresence   *message);
size_t cmsg_dotaparty_rich_presence__pack
                     (const CMsgDOTAPartyRichPresence   *message,
                      uint8_t             *out);
size_t cmsg_dotaparty_rich_presence__pack_to_buffer
                     (const CMsgDOTAPartyRichPresence   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPartyRichPresence *
       cmsg_dotaparty_rich_presence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaparty_rich_presence__free_unpacked
                     (CMsgDOTAPartyRichPresence *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTALobbyRichPresence methods */
void   cmsg_dotalobby_rich_presence__init
                     (CMsgDOTALobbyRichPresence         *message);
size_t cmsg_dotalobby_rich_presence__get_packed_size
                     (const CMsgDOTALobbyRichPresence   *message);
size_t cmsg_dotalobby_rich_presence__pack
                     (const CMsgDOTALobbyRichPresence   *message,
                      uint8_t             *out);
size_t cmsg_dotalobby_rich_presence__pack_to_buffer
                     (const CMsgDOTALobbyRichPresence   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTALobbyRichPresence *
       cmsg_dotalobby_rich_presence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotalobby_rich_presence__free_unpacked
                     (CMsgDOTALobbyRichPresence *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACustomGameListenServerStartedLoading methods */
void   cmsg_dotacustom_game_listen_server_started_loading__init
                     (CMsgDOTACustomGameListenServerStartedLoading         *message);
size_t cmsg_dotacustom_game_listen_server_started_loading__get_packed_size
                     (const CMsgDOTACustomGameListenServerStartedLoading   *message);
size_t cmsg_dotacustom_game_listen_server_started_loading__pack
                     (const CMsgDOTACustomGameListenServerStartedLoading   *message,
                      uint8_t             *out);
size_t cmsg_dotacustom_game_listen_server_started_loading__pack_to_buffer
                     (const CMsgDOTACustomGameListenServerStartedLoading   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACustomGameListenServerStartedLoading *
       cmsg_dotacustom_game_listen_server_started_loading__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacustom_game_listen_server_started_loading__free_unpacked
                     (CMsgDOTACustomGameListenServerStartedLoading *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACustomGameClientFinishedLoading methods */
void   cmsg_dotacustom_game_client_finished_loading__init
                     (CMsgDOTACustomGameClientFinishedLoading         *message);
size_t cmsg_dotacustom_game_client_finished_loading__get_packed_size
                     (const CMsgDOTACustomGameClientFinishedLoading   *message);
size_t cmsg_dotacustom_game_client_finished_loading__pack
                     (const CMsgDOTACustomGameClientFinishedLoading   *message,
                      uint8_t             *out);
size_t cmsg_dotacustom_game_client_finished_loading__pack_to_buffer
                     (const CMsgDOTACustomGameClientFinishedLoading   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACustomGameClientFinishedLoading *
       cmsg_dotacustom_game_client_finished_loading__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacustom_game_client_finished_loading__free_unpacked
                     (CMsgDOTACustomGameClientFinishedLoading *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetLeagueSeries methods */
void   cmsg_client_to_gcget_league_series__init
                     (CMsgClientToGCGetLeagueSeries         *message);
size_t cmsg_client_to_gcget_league_series__get_packed_size
                     (const CMsgClientToGCGetLeagueSeries   *message);
size_t cmsg_client_to_gcget_league_series__pack
                     (const CMsgClientToGCGetLeagueSeries   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_league_series__pack_to_buffer
                     (const CMsgClientToGCGetLeagueSeries   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetLeagueSeries *
       cmsg_client_to_gcget_league_series__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_league_series__free_unpacked
                     (CMsgClientToGCGetLeagueSeries *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetLeagueSeriesResponse__Series__Team methods */
void   cmsg_client_to_gcget_league_series_response__series__team__init
                     (CMsgClientToGCGetLeagueSeriesResponse__Series__Team         *message);
/* CMsgClientToGCGetLeagueSeriesResponse__Series methods */
void   cmsg_client_to_gcget_league_series_response__series__init
                     (CMsgClientToGCGetLeagueSeriesResponse__Series         *message);
/* CMsgClientToGCGetLeagueSeriesResponse methods */
void   cmsg_client_to_gcget_league_series_response__init
                     (CMsgClientToGCGetLeagueSeriesResponse         *message);
size_t cmsg_client_to_gcget_league_series_response__get_packed_size
                     (const CMsgClientToGCGetLeagueSeriesResponse   *message);
size_t cmsg_client_to_gcget_league_series_response__pack
                     (const CMsgClientToGCGetLeagueSeriesResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_league_series_response__pack_to_buffer
                     (const CMsgClientToGCGetLeagueSeriesResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetLeagueSeriesResponse *
       cmsg_client_to_gcget_league_series_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_league_series_response__free_unpacked
                     (CMsgClientToGCGetLeagueSeriesResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCApplyGemCombiner methods */
void   cmsg_client_to_gcapply_gem_combiner__init
                     (CMsgClientToGCApplyGemCombiner         *message);
size_t cmsg_client_to_gcapply_gem_combiner__get_packed_size
                     (const CMsgClientToGCApplyGemCombiner   *message);
size_t cmsg_client_to_gcapply_gem_combiner__pack
                     (const CMsgClientToGCApplyGemCombiner   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcapply_gem_combiner__pack_to_buffer
                     (const CMsgClientToGCApplyGemCombiner   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCApplyGemCombiner *
       cmsg_client_to_gcapply_gem_combiner__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcapply_gem_combiner__free_unpacked
                     (CMsgClientToGCApplyGemCombiner *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCH264Unsupported methods */
void   cmsg_client_to_gch264_unsupported__init
                     (CMsgClientToGCH264Unsupported         *message);
size_t cmsg_client_to_gch264_unsupported__get_packed_size
                     (const CMsgClientToGCH264Unsupported   *message);
size_t cmsg_client_to_gch264_unsupported__pack
                     (const CMsgClientToGCH264Unsupported   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gch264_unsupported__pack_to_buffer
                     (const CMsgClientToGCH264Unsupported   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCH264Unsupported *
       cmsg_client_to_gch264_unsupported__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gch264_unsupported__free_unpacked
                     (CMsgClientToGCH264Unsupported *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestH264Support methods */
void   cmsg_client_to_gcrequest_h264_support__init
                     (CMsgClientToGCRequestH264Support         *message);
size_t cmsg_client_to_gcrequest_h264_support__get_packed_size
                     (const CMsgClientToGCRequestH264Support   *message);
size_t cmsg_client_to_gcrequest_h264_support__pack
                     (const CMsgClientToGCRequestH264Support   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_h264_support__pack_to_buffer
                     (const CMsgClientToGCRequestH264Support   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestH264Support *
       cmsg_client_to_gcrequest_h264_support__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_h264_support__free_unpacked
                     (CMsgClientToGCRequestH264Support *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetQuestProgress methods */
void   cmsg_client_to_gcget_quest_progress__init
                     (CMsgClientToGCGetQuestProgress         *message);
size_t cmsg_client_to_gcget_quest_progress__get_packed_size
                     (const CMsgClientToGCGetQuestProgress   *message);
size_t cmsg_client_to_gcget_quest_progress__pack
                     (const CMsgClientToGCGetQuestProgress   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_quest_progress__pack_to_buffer
                     (const CMsgClientToGCGetQuestProgress   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetQuestProgress *
       cmsg_client_to_gcget_quest_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_quest_progress__free_unpacked
                     (CMsgClientToGCGetQuestProgress *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetQuestProgressResponse__Challenge methods */
void   cmsg_client_to_gcget_quest_progress_response__challenge__init
                     (CMsgClientToGCGetQuestProgressResponse__Challenge         *message);
/* CMsgClientToGCGetQuestProgressResponse__Quest methods */
void   cmsg_client_to_gcget_quest_progress_response__quest__init
                     (CMsgClientToGCGetQuestProgressResponse__Quest         *message);
/* CMsgClientToGCGetQuestProgressResponse methods */
void   cmsg_client_to_gcget_quest_progress_response__init
                     (CMsgClientToGCGetQuestProgressResponse         *message);
size_t cmsg_client_to_gcget_quest_progress_response__get_packed_size
                     (const CMsgClientToGCGetQuestProgressResponse   *message);
size_t cmsg_client_to_gcget_quest_progress_response__pack
                     (const CMsgClientToGCGetQuestProgressResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_quest_progress_response__pack_to_buffer
                     (const CMsgClientToGCGetQuestProgressResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetQuestProgressResponse *
       cmsg_client_to_gcget_quest_progress_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_quest_progress_response__free_unpacked
                     (CMsgClientToGCGetQuestProgressResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientMatchSignedOut methods */
void   cmsg_gcto_client_match_signed_out__init
                     (CMsgGCToClientMatchSignedOut         *message);
size_t cmsg_gcto_client_match_signed_out__get_packed_size
                     (const CMsgGCToClientMatchSignedOut   *message);
size_t cmsg_gcto_client_match_signed_out__pack
                     (const CMsgGCToClientMatchSignedOut   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_match_signed_out__pack_to_buffer
                     (const CMsgGCToClientMatchSignedOut   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientMatchSignedOut *
       cmsg_gcto_client_match_signed_out__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_match_signed_out__free_unpacked
                     (CMsgGCToClientMatchSignedOut *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCGetHeroStatsHistory methods */
void   cmsg_gcget_hero_stats_history__init
                     (CMsgGCGetHeroStatsHistory         *message);
size_t cmsg_gcget_hero_stats_history__get_packed_size
                     (const CMsgGCGetHeroStatsHistory   *message);
size_t cmsg_gcget_hero_stats_history__pack
                     (const CMsgGCGetHeroStatsHistory   *message,
                      uint8_t             *out);
size_t cmsg_gcget_hero_stats_history__pack_to_buffer
                     (const CMsgGCGetHeroStatsHistory   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCGetHeroStatsHistory *
       cmsg_gcget_hero_stats_history__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcget_hero_stats_history__free_unpacked
                     (CMsgGCGetHeroStatsHistory *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCGetHeroStatsHistoryResponse methods */
void   cmsg_gcget_hero_stats_history_response__init
                     (CMsgGCGetHeroStatsHistoryResponse         *message);
size_t cmsg_gcget_hero_stats_history_response__get_packed_size
                     (const CMsgGCGetHeroStatsHistoryResponse   *message);
size_t cmsg_gcget_hero_stats_history_response__pack
                     (const CMsgGCGetHeroStatsHistoryResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcget_hero_stats_history_response__pack_to_buffer
                     (const CMsgGCGetHeroStatsHistoryResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCGetHeroStatsHistoryResponse *
       cmsg_gcget_hero_stats_history_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcget_hero_stats_history_response__free_unpacked
                     (CMsgGCGetHeroStatsHistoryResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgPlayerConductScorecardRequest methods */
void   cmsg_player_conduct_scorecard_request__init
                     (CMsgPlayerConductScorecardRequest         *message);
size_t cmsg_player_conduct_scorecard_request__get_packed_size
                     (const CMsgPlayerConductScorecardRequest   *message);
size_t cmsg_player_conduct_scorecard_request__pack
                     (const CMsgPlayerConductScorecardRequest   *message,
                      uint8_t             *out);
size_t cmsg_player_conduct_scorecard_request__pack_to_buffer
                     (const CMsgPlayerConductScorecardRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgPlayerConductScorecardRequest *
       cmsg_player_conduct_scorecard_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_player_conduct_scorecard_request__free_unpacked
                     (CMsgPlayerConductScorecardRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgPlayerConductScorecard methods */
void   cmsg_player_conduct_scorecard__init
                     (CMsgPlayerConductScorecard         *message);
size_t cmsg_player_conduct_scorecard__get_packed_size
                     (const CMsgPlayerConductScorecard   *message);
size_t cmsg_player_conduct_scorecard__pack
                     (const CMsgPlayerConductScorecard   *message,
                      uint8_t             *out);
size_t cmsg_player_conduct_scorecard__pack_to_buffer
                     (const CMsgPlayerConductScorecard   *message,
                      ProtobufCBuffer     *buffer);
CMsgPlayerConductScorecard *
       cmsg_player_conduct_scorecard__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_player_conduct_scorecard__free_unpacked
                     (CMsgPlayerConductScorecard *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCWageringRequest methods */
void   cmsg_client_to_gcwagering_request__init
                     (CMsgClientToGCWageringRequest         *message);
size_t cmsg_client_to_gcwagering_request__get_packed_size
                     (const CMsgClientToGCWageringRequest   *message);
size_t cmsg_client_to_gcwagering_request__pack
                     (const CMsgClientToGCWageringRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcwagering_request__pack_to_buffer
                     (const CMsgClientToGCWageringRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCWageringRequest *
       cmsg_client_to_gcwagering_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcwagering_request__free_unpacked
                     (CMsgClientToGCWageringRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientWageringResponse methods */
void   cmsg_gcto_client_wagering_response__init
                     (CMsgGCToClientWageringResponse         *message);
size_t cmsg_gcto_client_wagering_response__get_packed_size
                     (const CMsgGCToClientWageringResponse   *message);
size_t cmsg_gcto_client_wagering_response__pack
                     (const CMsgGCToClientWageringResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_wagering_response__pack_to_buffer
                     (const CMsgGCToClientWageringResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientWageringResponse *
       cmsg_gcto_client_wagering_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_wagering_response__free_unpacked
                     (CMsgGCToClientWageringResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientWageringUpdate methods */
void   cmsg_gcto_client_wagering_update__init
                     (CMsgGCToClientWageringUpdate         *message);
size_t cmsg_gcto_client_wagering_update__get_packed_size
                     (const CMsgGCToClientWageringUpdate   *message);
size_t cmsg_gcto_client_wagering_update__pack
                     (const CMsgGCToClientWageringUpdate   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_wagering_update__pack_to_buffer
                     (const CMsgGCToClientWageringUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientWageringUpdate *
       cmsg_gcto_client_wagering_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_wagering_update__free_unpacked
                     (CMsgGCToClientWageringUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientArcanaVotesUpdate methods */
void   cmsg_gcto_client_arcana_votes_update__init
                     (CMsgGCToClientArcanaVotesUpdate         *message);
size_t cmsg_gcto_client_arcana_votes_update__get_packed_size
                     (const CMsgGCToClientArcanaVotesUpdate   *message);
size_t cmsg_gcto_client_arcana_votes_update__pack
                     (const CMsgGCToClientArcanaVotesUpdate   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_arcana_votes_update__pack_to_buffer
                     (const CMsgGCToClientArcanaVotesUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientArcanaVotesUpdate *
       cmsg_gcto_client_arcana_votes_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_arcana_votes_update__free_unpacked
                     (CMsgGCToClientArcanaVotesUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCMysteryItem methods */
void   cmsg_client_to_gcmystery_item__init
                     (CMsgClientToGCMysteryItem         *message);
size_t cmsg_client_to_gcmystery_item__get_packed_size
                     (const CMsgClientToGCMysteryItem   *message);
size_t cmsg_client_to_gcmystery_item__pack
                     (const CMsgClientToGCMysteryItem   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcmystery_item__pack_to_buffer
                     (const CMsgClientToGCMysteryItem   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCMysteryItem *
       cmsg_client_to_gcmystery_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcmystery_item__free_unpacked
                     (CMsgClientToGCMysteryItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientMysteryItemResponse methods */
void   cmsg_gcto_client_mystery_item_response__init
                     (CMsgGCToClientMysteryItemResponse         *message);
size_t cmsg_gcto_client_mystery_item_response__get_packed_size
                     (const CMsgGCToClientMysteryItemResponse   *message);
size_t cmsg_gcto_client_mystery_item_response__pack
                     (const CMsgGCToClientMysteryItemResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_mystery_item_response__pack_to_buffer
                     (const CMsgGCToClientMysteryItemResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientMysteryItemResponse *
       cmsg_gcto_client_mystery_item_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_mystery_item_response__free_unpacked
                     (CMsgGCToClientMysteryItemResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCGetEventGoals methods */
void   cmsg_client_to_gcget_event_goals__init
                     (CMsgClientToGCGetEventGoals         *message);
size_t cmsg_client_to_gcget_event_goals__get_packed_size
                     (const CMsgClientToGCGetEventGoals   *message);
size_t cmsg_client_to_gcget_event_goals__pack
                     (const CMsgClientToGCGetEventGoals   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcget_event_goals__pack_to_buffer
                     (const CMsgClientToGCGetEventGoals   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCGetEventGoals *
       cmsg_client_to_gcget_event_goals__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcget_event_goals__free_unpacked
                     (CMsgClientToGCGetEventGoals *message,
                      ProtobufCAllocator *allocator);
/* CMsgEventGoals__EventGoal methods */
void   cmsg_event_goals__event_goal__init
                     (CMsgEventGoals__EventGoal         *message);
/* CMsgEventGoals methods */
void   cmsg_event_goals__init
                     (CMsgEventGoals         *message);
size_t cmsg_event_goals__get_packed_size
                     (const CMsgEventGoals   *message);
size_t cmsg_event_goals__pack
                     (const CMsgEventGoals   *message,
                      uint8_t             *out);
size_t cmsg_event_goals__pack_to_buffer
                     (const CMsgEventGoals   *message,
                      ProtobufCBuffer     *buffer);
CMsgEventGoals *
       cmsg_event_goals__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_event_goals__free_unpacked
                     (CMsgEventGoals *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToGCLeaguePredictions methods */
void   cmsg_gcto_gcleague_predictions__init
                     (CMsgGCToGCLeaguePredictions         *message);
size_t cmsg_gcto_gcleague_predictions__get_packed_size
                     (const CMsgGCToGCLeaguePredictions   *message);
size_t cmsg_gcto_gcleague_predictions__pack
                     (const CMsgGCToGCLeaguePredictions   *message,
                      uint8_t             *out);
size_t cmsg_gcto_gcleague_predictions__pack_to_buffer
                     (const CMsgGCToGCLeaguePredictions   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToGCLeaguePredictions *
       cmsg_gcto_gcleague_predictions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_gcleague_predictions__free_unpacked
                     (CMsgGCToGCLeaguePredictions *message,
                      ProtobufCAllocator *allocator);
/* CMsgPredictionRankings__PredictionLine methods */
void   cmsg_prediction_rankings__prediction_line__init
                     (CMsgPredictionRankings__PredictionLine         *message);
/* CMsgPredictionRankings__Prediction methods */
void   cmsg_prediction_rankings__prediction__init
                     (CMsgPredictionRankings__Prediction         *message);
/* CMsgPredictionRankings methods */
void   cmsg_prediction_rankings__init
                     (CMsgPredictionRankings         *message);
size_t cmsg_prediction_rankings__get_packed_size
                     (const CMsgPredictionRankings   *message);
size_t cmsg_prediction_rankings__pack
                     (const CMsgPredictionRankings   *message,
                      uint8_t             *out);
size_t cmsg_prediction_rankings__pack_to_buffer
                     (const CMsgPredictionRankings   *message,
                      ProtobufCBuffer     *buffer);
CMsgPredictionRankings *
       cmsg_prediction_rankings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_prediction_rankings__free_unpacked
                     (CMsgPredictionRankings *message,
                      ProtobufCAllocator *allocator);
/* CMsgPredictionResults__ResultBreakdown methods */
void   cmsg_prediction_results__result_breakdown__init
                     (CMsgPredictionResults__ResultBreakdown         *message);
/* CMsgPredictionResults__Result methods */
void   cmsg_prediction_results__result__init
                     (CMsgPredictionResults__Result         *message);
/* CMsgPredictionResults methods */
void   cmsg_prediction_results__init
                     (CMsgPredictionResults         *message);
size_t cmsg_prediction_results__get_packed_size
                     (const CMsgPredictionResults   *message);
size_t cmsg_prediction_results__pack
                     (const CMsgPredictionResults   *message,
                      uint8_t             *out);
size_t cmsg_prediction_results__pack_to_buffer
                     (const CMsgPredictionResults   *message,
                      ProtobufCBuffer     *buffer);
CMsgPredictionResults *
       cmsg_prediction_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_prediction_results__free_unpacked
                     (CMsgPredictionResults *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSuspiciousActivity methods */
void   cmsg_client_to_gcsuspicious_activity__init
                     (CMsgClientToGCSuspiciousActivity         *message);
size_t cmsg_client_to_gcsuspicious_activity__get_packed_size
                     (const CMsgClientToGCSuspiciousActivity   *message);
size_t cmsg_client_to_gcsuspicious_activity__pack
                     (const CMsgClientToGCSuspiciousActivity   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcsuspicious_activity__pack_to_buffer
                     (const CMsgClientToGCSuspiciousActivity   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSuspiciousActivity *
       cmsg_client_to_gcsuspicious_activity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcsuspicious_activity__free_unpacked
                     (CMsgClientToGCSuspiciousActivity *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCHasPlayerVotedForMVP methods */
void   cmsg_client_to_gchas_player_voted_for_mvp__init
                     (CMsgClientToGCHasPlayerVotedForMVP         *message);
size_t cmsg_client_to_gchas_player_voted_for_mvp__get_packed_size
                     (const CMsgClientToGCHasPlayerVotedForMVP   *message);
size_t cmsg_client_to_gchas_player_voted_for_mvp__pack
                     (const CMsgClientToGCHasPlayerVotedForMVP   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gchas_player_voted_for_mvp__pack_to_buffer
                     (const CMsgClientToGCHasPlayerVotedForMVP   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCHasPlayerVotedForMVP *
       cmsg_client_to_gchas_player_voted_for_mvp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gchas_player_voted_for_mvp__free_unpacked
                     (CMsgClientToGCHasPlayerVotedForMVP *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCHasPlayerVotedForMVPResponse methods */
void   cmsg_client_to_gchas_player_voted_for_mvpresponse__init
                     (CMsgClientToGCHasPlayerVotedForMVPResponse         *message);
size_t cmsg_client_to_gchas_player_voted_for_mvpresponse__get_packed_size
                     (const CMsgClientToGCHasPlayerVotedForMVPResponse   *message);
size_t cmsg_client_to_gchas_player_voted_for_mvpresponse__pack
                     (const CMsgClientToGCHasPlayerVotedForMVPResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gchas_player_voted_for_mvpresponse__pack_to_buffer
                     (const CMsgClientToGCHasPlayerVotedForMVPResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCHasPlayerVotedForMVPResponse *
       cmsg_client_to_gchas_player_voted_for_mvpresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gchas_player_voted_for_mvpresponse__free_unpacked
                     (CMsgClientToGCHasPlayerVotedForMVPResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCVoteForMVP methods */
void   cmsg_client_to_gcvote_for_mvp__init
                     (CMsgClientToGCVoteForMVP         *message);
size_t cmsg_client_to_gcvote_for_mvp__get_packed_size
                     (const CMsgClientToGCVoteForMVP   *message);
size_t cmsg_client_to_gcvote_for_mvp__pack
                     (const CMsgClientToGCVoteForMVP   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcvote_for_mvp__pack_to_buffer
                     (const CMsgClientToGCVoteForMVP   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCVoteForMVP *
       cmsg_client_to_gcvote_for_mvp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcvote_for_mvp__free_unpacked
                     (CMsgClientToGCVoteForMVP *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCVoteForMVPResponse methods */
void   cmsg_client_to_gcvote_for_mvpresponse__init
                     (CMsgClientToGCVoteForMVPResponse         *message);
size_t cmsg_client_to_gcvote_for_mvpresponse__get_packed_size
                     (const CMsgClientToGCVoteForMVPResponse   *message);
size_t cmsg_client_to_gcvote_for_mvpresponse__pack
                     (const CMsgClientToGCVoteForMVPResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcvote_for_mvpresponse__pack_to_buffer
                     (const CMsgClientToGCVoteForMVPResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCVoteForMVPResponse *
       cmsg_client_to_gcvote_for_mvpresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcvote_for_mvpresponse__free_unpacked
                     (CMsgClientToGCVoteForMVPResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgMVPVotesForMatch__Player methods */
void   cmsg_mvpvotes_for_match__player__init
                     (CMsgMVPVotesForMatch__Player         *message);
/* CMsgMVPVotesForMatch methods */
void   cmsg_mvpvotes_for_match__init
                     (CMsgMVPVotesForMatch         *message);
size_t cmsg_mvpvotes_for_match__get_packed_size
                     (const CMsgMVPVotesForMatch   *message);
size_t cmsg_mvpvotes_for_match__pack
                     (const CMsgMVPVotesForMatch   *message,
                      uint8_t             *out);
size_t cmsg_mvpvotes_for_match__pack_to_buffer
                     (const CMsgMVPVotesForMatch   *message,
                      ProtobufCBuffer     *buffer);
CMsgMVPVotesForMatch *
       cmsg_mvpvotes_for_match__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_mvpvotes_for_match__free_unpacked
                     (CMsgMVPVotesForMatch *message,
                      ProtobufCAllocator *allocator);
/* CMsgLeaguePrizePool methods */
void   cmsg_league_prize_pool__init
                     (CMsgLeaguePrizePool         *message);
size_t cmsg_league_prize_pool__get_packed_size
                     (const CMsgLeaguePrizePool   *message);
size_t cmsg_league_prize_pool__pack
                     (const CMsgLeaguePrizePool   *message,
                      uint8_t             *out);
size_t cmsg_league_prize_pool__pack_to_buffer
                     (const CMsgLeaguePrizePool   *message,
                      ProtobufCBuffer     *buffer);
CMsgLeaguePrizePool *
       cmsg_league_prize_pool__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_league_prize_pool__free_unpacked
                     (CMsgLeaguePrizePool *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCTeammateStatsRequest methods */
void   cmsg_client_to_gcteammate_stats_request__init
                     (CMsgClientToGCTeammateStatsRequest         *message);
size_t cmsg_client_to_gcteammate_stats_request__get_packed_size
                     (const CMsgClientToGCTeammateStatsRequest   *message);
size_t cmsg_client_to_gcteammate_stats_request__pack
                     (const CMsgClientToGCTeammateStatsRequest   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcteammate_stats_request__pack_to_buffer
                     (const CMsgClientToGCTeammateStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCTeammateStatsRequest *
       cmsg_client_to_gcteammate_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcteammate_stats_request__free_unpacked
                     (CMsgClientToGCTeammateStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCTeammateStatsResponse__TeammateStat methods */
void   cmsg_client_to_gcteammate_stats_response__teammate_stat__init
                     (CMsgClientToGCTeammateStatsResponse__TeammateStat         *message);
/* CMsgClientToGCTeammateStatsResponse methods */
void   cmsg_client_to_gcteammate_stats_response__init
                     (CMsgClientToGCTeammateStatsResponse         *message);
size_t cmsg_client_to_gcteammate_stats_response__get_packed_size
                     (const CMsgClientToGCTeammateStatsResponse   *message);
size_t cmsg_client_to_gcteammate_stats_response__pack
                     (const CMsgClientToGCTeammateStatsResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcteammate_stats_response__pack_to_buffer
                     (const CMsgClientToGCTeammateStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCTeammateStatsResponse *
       cmsg_client_to_gcteammate_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcteammate_stats_response__free_unpacked
                     (CMsgClientToGCTeammateStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCVoteForArcana__MatchVote methods */
void   cmsg_client_to_gcvote_for_arcana__match_vote__init
                     (CMsgClientToGCVoteForArcana__MatchVote         *message);
/* CMsgClientToGCVoteForArcana methods */
void   cmsg_client_to_gcvote_for_arcana__init
                     (CMsgClientToGCVoteForArcana         *message);
size_t cmsg_client_to_gcvote_for_arcana__get_packed_size
                     (const CMsgClientToGCVoteForArcana   *message);
size_t cmsg_client_to_gcvote_for_arcana__pack
                     (const CMsgClientToGCVoteForArcana   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcvote_for_arcana__pack_to_buffer
                     (const CMsgClientToGCVoteForArcana   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCVoteForArcana *
       cmsg_client_to_gcvote_for_arcana__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcvote_for_arcana__free_unpacked
                     (CMsgClientToGCVoteForArcana *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCVoteForArcanaResponse methods */
void   cmsg_client_to_gcvote_for_arcana_response__init
                     (CMsgClientToGCVoteForArcanaResponse         *message);
size_t cmsg_client_to_gcvote_for_arcana_response__get_packed_size
                     (const CMsgClientToGCVoteForArcanaResponse   *message);
size_t cmsg_client_to_gcvote_for_arcana_response__pack
                     (const CMsgClientToGCVoteForArcanaResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcvote_for_arcana_response__pack_to_buffer
                     (const CMsgClientToGCVoteForArcanaResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCVoteForArcanaResponse *
       cmsg_client_to_gcvote_for_arcana_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcvote_for_arcana_response__free_unpacked
                     (CMsgClientToGCVoteForArcanaResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgArcanaVotes__Match methods */
void   cmsg_arcana_votes__match__init
                     (CMsgArcanaVotes__Match         *message);
/* CMsgArcanaVotes methods */
void   cmsg_arcana_votes__init
                     (CMsgArcanaVotes         *message);
size_t cmsg_arcana_votes__get_packed_size
                     (const CMsgArcanaVotes   *message);
size_t cmsg_arcana_votes__pack
                     (const CMsgArcanaVotes   *message,
                      uint8_t             *out);
size_t cmsg_arcana_votes__pack_to_buffer
                     (const CMsgArcanaVotes   *message,
                      ProtobufCBuffer     *buffer);
CMsgArcanaVotes *
       cmsg_arcana_votes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_arcana_votes__free_unpacked
                     (CMsgArcanaVotes *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestArcanaVotesRemaining methods */
void   cmsg_client_to_gcrequest_arcana_votes_remaining__init
                     (CMsgClientToGCRequestArcanaVotesRemaining         *message);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining__get_packed_size
                     (const CMsgClientToGCRequestArcanaVotesRemaining   *message);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining__pack
                     (const CMsgClientToGCRequestArcanaVotesRemaining   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining__pack_to_buffer
                     (const CMsgClientToGCRequestArcanaVotesRemaining   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestArcanaVotesRemaining *
       cmsg_client_to_gcrequest_arcana_votes_remaining__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_arcana_votes_remaining__free_unpacked
                     (CMsgClientToGCRequestArcanaVotesRemaining *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote methods */
void   cmsg_client_to_gcrequest_arcana_votes_remaining_response__match_vote__init
                     (CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote         *message);
/* CMsgClientToGCRequestArcanaVotesRemainingResponse methods */
void   cmsg_client_to_gcrequest_arcana_votes_remaining_response__init
                     (CMsgClientToGCRequestArcanaVotesRemainingResponse         *message);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining_response__get_packed_size
                     (const CMsgClientToGCRequestArcanaVotesRemainingResponse   *message);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining_response__pack
                     (const CMsgClientToGCRequestArcanaVotesRemainingResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_arcana_votes_remaining_response__pack_to_buffer
                     (const CMsgClientToGCRequestArcanaVotesRemainingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestArcanaVotesRemainingResponse *
       cmsg_client_to_gcrequest_arcana_votes_remaining_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_arcana_votes_remaining_response__free_unpacked
                     (CMsgClientToGCRequestArcanaVotesRemainingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestEventPointLog methods */
void   cmsg_client_to_gcrequest_event_point_log__init
                     (CMsgClientToGCRequestEventPointLog         *message);
size_t cmsg_client_to_gcrequest_event_point_log__get_packed_size
                     (const CMsgClientToGCRequestEventPointLog   *message);
size_t cmsg_client_to_gcrequest_event_point_log__pack
                     (const CMsgClientToGCRequestEventPointLog   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_event_point_log__pack_to_buffer
                     (const CMsgClientToGCRequestEventPointLog   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestEventPointLog *
       cmsg_client_to_gcrequest_event_point_log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_event_point_log__free_unpacked
                     (CMsgClientToGCRequestEventPointLog *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__quest_challenge_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__wager_won_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__tip_given_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__tip_received_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__recycled_item_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__AchievementEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__achievement_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__AchievementEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__mystery_item_received_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__correct_prediction_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent methods */
void   cmsg_client_to_gcrequest_event_point_log_response__in_game_prediction_correct_event__init
                     (CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent         *message);
/* CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction methods */
void   cmsg_client_to_gcrequest_event_point_log_response__event_point_transaction__init
                     (CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction         *message);
/* CMsgClientToGCRequestEventPointLogResponse methods */
void   cmsg_client_to_gcrequest_event_point_log_response__init
                     (CMsgClientToGCRequestEventPointLogResponse         *message);
size_t cmsg_client_to_gcrequest_event_point_log_response__get_packed_size
                     (const CMsgClientToGCRequestEventPointLogResponse   *message);
size_t cmsg_client_to_gcrequest_event_point_log_response__pack
                     (const CMsgClientToGCRequestEventPointLogResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_event_point_log_response__pack_to_buffer
                     (const CMsgClientToGCRequestEventPointLogResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestEventPointLogResponse *
       cmsg_client_to_gcrequest_event_point_log_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_event_point_log_response__free_unpacked
                     (CMsgClientToGCRequestEventPointLogResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCPublishUserStat methods */
void   cmsg_client_to_gcpublish_user_stat__init
                     (CMsgClientToGCPublishUserStat         *message);
size_t cmsg_client_to_gcpublish_user_stat__get_packed_size
                     (const CMsgClientToGCPublishUserStat   *message);
size_t cmsg_client_to_gcpublish_user_stat__pack
                     (const CMsgClientToGCPublishUserStat   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcpublish_user_stat__pack_to_buffer
                     (const CMsgClientToGCPublishUserStat   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCPublishUserStat *
       cmsg_client_to_gcpublish_user_stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcpublish_user_stat__free_unpacked
                     (CMsgClientToGCPublishUserStat *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCAddTI6TreeProgress methods */
void   cmsg_client_to_gcadd_ti6_tree_progress__init
                     (CMsgClientToGCAddTI6TreeProgress         *message);
size_t cmsg_client_to_gcadd_ti6_tree_progress__get_packed_size
                     (const CMsgClientToGCAddTI6TreeProgress   *message);
size_t cmsg_client_to_gcadd_ti6_tree_progress__pack
                     (const CMsgClientToGCAddTI6TreeProgress   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcadd_ti6_tree_progress__pack_to_buffer
                     (const CMsgClientToGCAddTI6TreeProgress   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCAddTI6TreeProgress *
       cmsg_client_to_gcadd_ti6_tree_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcadd_ti6_tree_progress__free_unpacked
                     (CMsgClientToGCAddTI6TreeProgress *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRedeemReward methods */
void   cmsg_client_to_gcredeem_reward__init
                     (CMsgClientToGCRedeemReward         *message);
size_t cmsg_client_to_gcredeem_reward__get_packed_size
                     (const CMsgClientToGCRedeemReward   *message);
size_t cmsg_client_to_gcredeem_reward__pack
                     (const CMsgClientToGCRedeemReward   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcredeem_reward__pack_to_buffer
                     (const CMsgClientToGCRedeemReward   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRedeemReward *
       cmsg_client_to_gcredeem_reward__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcredeem_reward__free_unpacked
                     (CMsgClientToGCRedeemReward *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientRedeemRewardResponse methods */
void   cmsg_gcto_client_redeem_reward_response__init
                     (CMsgGCToClientRedeemRewardResponse         *message);
size_t cmsg_gcto_client_redeem_reward_response__get_packed_size
                     (const CMsgGCToClientRedeemRewardResponse   *message);
size_t cmsg_gcto_client_redeem_reward_response__pack
                     (const CMsgGCToClientRedeemRewardResponse   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_redeem_reward_response__pack_to_buffer
                     (const CMsgGCToClientRedeemRewardResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientRedeemRewardResponse *
       cmsg_gcto_client_redeem_reward_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_redeem_reward_response__free_unpacked
                     (CMsgGCToClientRedeemRewardResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestLinaPlaysRemaining methods */
void   cmsg_client_to_gcrequest_lina_plays_remaining__init
                     (CMsgClientToGCRequestLinaPlaysRemaining         *message);
size_t cmsg_client_to_gcrequest_lina_plays_remaining__get_packed_size
                     (const CMsgClientToGCRequestLinaPlaysRemaining   *message);
size_t cmsg_client_to_gcrequest_lina_plays_remaining__pack
                     (const CMsgClientToGCRequestLinaPlaysRemaining   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_lina_plays_remaining__pack_to_buffer
                     (const CMsgClientToGCRequestLinaPlaysRemaining   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestLinaPlaysRemaining *
       cmsg_client_to_gcrequest_lina_plays_remaining__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_lina_plays_remaining__free_unpacked
                     (CMsgClientToGCRequestLinaPlaysRemaining *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestLinaPlaysRemainingResponse methods */
void   cmsg_client_to_gcrequest_lina_plays_remaining_response__init
                     (CMsgClientToGCRequestLinaPlaysRemainingResponse         *message);
size_t cmsg_client_to_gcrequest_lina_plays_remaining_response__get_packed_size
                     (const CMsgClientToGCRequestLinaPlaysRemainingResponse   *message);
size_t cmsg_client_to_gcrequest_lina_plays_remaining_response__pack
                     (const CMsgClientToGCRequestLinaPlaysRemainingResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_lina_plays_remaining_response__pack_to_buffer
                     (const CMsgClientToGCRequestLinaPlaysRemainingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestLinaPlaysRemainingResponse *
       cmsg_client_to_gcrequest_lina_plays_remaining_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_lina_plays_remaining_response__free_unpacked
                     (CMsgClientToGCRequestLinaPlaysRemainingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestLinaGameResult methods */
void   cmsg_client_to_gcrequest_lina_game_result__init
                     (CMsgClientToGCRequestLinaGameResult         *message);
size_t cmsg_client_to_gcrequest_lina_game_result__get_packed_size
                     (const CMsgClientToGCRequestLinaGameResult   *message);
size_t cmsg_client_to_gcrequest_lina_game_result__pack
                     (const CMsgClientToGCRequestLinaGameResult   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_lina_game_result__pack_to_buffer
                     (const CMsgClientToGCRequestLinaGameResult   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestLinaGameResult *
       cmsg_client_to_gcrequest_lina_game_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_lina_game_result__free_unpacked
                     (CMsgClientToGCRequestLinaGameResult *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRequestLinaGameResultResponse methods */
void   cmsg_client_to_gcrequest_lina_game_result_response__init
                     (CMsgClientToGCRequestLinaGameResultResponse         *message);
size_t cmsg_client_to_gcrequest_lina_game_result_response__get_packed_size
                     (const CMsgClientToGCRequestLinaGameResultResponse   *message);
size_t cmsg_client_to_gcrequest_lina_game_result_response__pack
                     (const CMsgClientToGCRequestLinaGameResultResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrequest_lina_game_result_response__pack_to_buffer
                     (const CMsgClientToGCRequestLinaGameResultResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRequestLinaGameResultResponse *
       cmsg_client_to_gcrequest_lina_game_result_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrequest_lina_game_result_response__free_unpacked
                     (CMsgClientToGCRequestLinaGameResultResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgGCToClientQuestProgressUpdated__Challenge methods */
void   cmsg_gcto_client_quest_progress_updated__challenge__init
                     (CMsgGCToClientQuestProgressUpdated__Challenge         *message);
/* CMsgGCToClientQuestProgressUpdated methods */
void   cmsg_gcto_client_quest_progress_updated__init
                     (CMsgGCToClientQuestProgressUpdated         *message);
size_t cmsg_gcto_client_quest_progress_updated__get_packed_size
                     (const CMsgGCToClientQuestProgressUpdated   *message);
size_t cmsg_gcto_client_quest_progress_updated__pack
                     (const CMsgGCToClientQuestProgressUpdated   *message,
                      uint8_t             *out);
size_t cmsg_gcto_client_quest_progress_updated__pack_to_buffer
                     (const CMsgGCToClientQuestProgressUpdated   *message,
                      ProtobufCBuffer     *buffer);
CMsgGCToClientQuestProgressUpdated *
       cmsg_gcto_client_quest_progress_updated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_gcto_client_quest_progress_updated__free_unpacked
                     (CMsgGCToClientQuestProgressUpdated *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARedeemItem methods */
void   cmsg_dotaredeem_item__init
                     (CMsgDOTARedeemItem         *message);
size_t cmsg_dotaredeem_item__get_packed_size
                     (const CMsgDOTARedeemItem   *message);
size_t cmsg_dotaredeem_item__pack
                     (const CMsgDOTARedeemItem   *message,
                      uint8_t             *out);
size_t cmsg_dotaredeem_item__pack_to_buffer
                     (const CMsgDOTARedeemItem   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARedeemItem *
       cmsg_dotaredeem_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaredeem_item__free_unpacked
                     (CMsgDOTARedeemItem *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTARedeemItemResponse methods */
void   cmsg_dotaredeem_item_response__init
                     (CMsgDOTARedeemItemResponse         *message);
size_t cmsg_dotaredeem_item_response__get_packed_size
                     (const CMsgDOTARedeemItemResponse   *message);
size_t cmsg_dotaredeem_item_response__pack
                     (const CMsgDOTARedeemItemResponse   *message,
                      uint8_t             *out);
size_t cmsg_dotaredeem_item_response__pack_to_buffer
                     (const CMsgDOTARedeemItemResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTARedeemItemResponse *
       cmsg_dotaredeem_item_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotaredeem_item_response__free_unpacked
                     (CMsgDOTARedeemItemResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgPerfectWorldUserLookupRequest methods */
void   cmsg_perfect_world_user_lookup_request__init
                     (CMsgPerfectWorldUserLookupRequest         *message);
size_t cmsg_perfect_world_user_lookup_request__get_packed_size
                     (const CMsgPerfectWorldUserLookupRequest   *message);
size_t cmsg_perfect_world_user_lookup_request__pack
                     (const CMsgPerfectWorldUserLookupRequest   *message,
                      uint8_t             *out);
size_t cmsg_perfect_world_user_lookup_request__pack_to_buffer
                     (const CMsgPerfectWorldUserLookupRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgPerfectWorldUserLookupRequest *
       cmsg_perfect_world_user_lookup_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_perfect_world_user_lookup_request__free_unpacked
                     (CMsgPerfectWorldUserLookupRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgPerfectWorldUserLookupResponse methods */
void   cmsg_perfect_world_user_lookup_response__init
                     (CMsgPerfectWorldUserLookupResponse         *message);
size_t cmsg_perfect_world_user_lookup_response__get_packed_size
                     (const CMsgPerfectWorldUserLookupResponse   *message);
size_t cmsg_perfect_world_user_lookup_response__pack
                     (const CMsgPerfectWorldUserLookupResponse   *message,
                      uint8_t             *out);
size_t cmsg_perfect_world_user_lookup_response__pack_to_buffer
                     (const CMsgPerfectWorldUserLookupResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgPerfectWorldUserLookupResponse *
       cmsg_perfect_world_user_lookup_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_perfect_world_user_lookup_response__free_unpacked
                     (CMsgPerfectWorldUserLookupResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgNexonPartnerUpdate methods */
void   cmsg_nexon_partner_update__init
                     (CMsgNexonPartnerUpdate         *message);
size_t cmsg_nexon_partner_update__get_packed_size
                     (const CMsgNexonPartnerUpdate   *message);
size_t cmsg_nexon_partner_update__pack
                     (const CMsgNexonPartnerUpdate   *message,
                      uint8_t             *out);
size_t cmsg_nexon_partner_update__pack_to_buffer
                     (const CMsgNexonPartnerUpdate   *message,
                      ProtobufCBuffer     *buffer);
CMsgNexonPartnerUpdate *
       cmsg_nexon_partner_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_nexon_partner_update__free_unpacked
                     (CMsgNexonPartnerUpdate *message,
                      ProtobufCAllocator *allocator);
/* CMsgMakeOffering methods */
void   cmsg_make_offering__init
                     (CMsgMakeOffering         *message);
size_t cmsg_make_offering__get_packed_size
                     (const CMsgMakeOffering   *message);
size_t cmsg_make_offering__pack
                     (const CMsgMakeOffering   *message,
                      uint8_t             *out);
size_t cmsg_make_offering__pack_to_buffer
                     (const CMsgMakeOffering   *message,
                      ProtobufCBuffer     *buffer);
CMsgMakeOffering *
       cmsg_make_offering__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_make_offering__free_unpacked
                     (CMsgMakeOffering *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestOfferings methods */
void   cmsg_request_offerings__init
                     (CMsgRequestOfferings         *message);
size_t cmsg_request_offerings__get_packed_size
                     (const CMsgRequestOfferings   *message);
size_t cmsg_request_offerings__pack
                     (const CMsgRequestOfferings   *message,
                      uint8_t             *out);
size_t cmsg_request_offerings__pack_to_buffer
                     (const CMsgRequestOfferings   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestOfferings *
       cmsg_request_offerings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_offerings__free_unpacked
                     (CMsgRequestOfferings *message,
                      ProtobufCAllocator *allocator);
/* CMsgRequestOfferingsResponse__NewYearsOffering methods */
void   cmsg_request_offerings_response__new_years_offering__init
                     (CMsgRequestOfferingsResponse__NewYearsOffering         *message);
/* CMsgRequestOfferingsResponse methods */
void   cmsg_request_offerings_response__init
                     (CMsgRequestOfferingsResponse         *message);
size_t cmsg_request_offerings_response__get_packed_size
                     (const CMsgRequestOfferingsResponse   *message);
size_t cmsg_request_offerings_response__pack
                     (const CMsgRequestOfferingsResponse   *message,
                      uint8_t             *out);
size_t cmsg_request_offerings_response__pack_to_buffer
                     (const CMsgRequestOfferingsResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgRequestOfferingsResponse *
       cmsg_request_offerings_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_request_offerings_response__free_unpacked
                     (CMsgRequestOfferingsResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAPCBangTimedReward methods */
void   cmsg_dotapcbang_timed_reward__init
                     (CMsgDOTAPCBangTimedReward         *message);
size_t cmsg_dotapcbang_timed_reward__get_packed_size
                     (const CMsgDOTAPCBangTimedReward   *message);
size_t cmsg_dotapcbang_timed_reward__pack
                     (const CMsgDOTAPCBangTimedReward   *message,
                      uint8_t             *out);
size_t cmsg_dotapcbang_timed_reward__pack_to_buffer
                     (const CMsgDOTAPCBangTimedReward   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAPCBangTimedReward *
       cmsg_dotapcbang_timed_reward__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotapcbang_timed_reward__free_unpacked
                     (CMsgDOTAPCBangTimedReward *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTACompendiumInGamePredictionResults__PredictionResult methods */
void   cmsg_dotacompendium_in_game_prediction_results__prediction_result__init
                     (CMsgDOTACompendiumInGamePredictionResults__PredictionResult         *message);
/* CMsgDOTACompendiumInGamePredictionResults methods */
void   cmsg_dotacompendium_in_game_prediction_results__init
                     (CMsgDOTACompendiumInGamePredictionResults         *message);
size_t cmsg_dotacompendium_in_game_prediction_results__get_packed_size
                     (const CMsgDOTACompendiumInGamePredictionResults   *message);
size_t cmsg_dotacompendium_in_game_prediction_results__pack
                     (const CMsgDOTACompendiumInGamePredictionResults   *message,
                      uint8_t             *out);
size_t cmsg_dotacompendium_in_game_prediction_results__pack_to_buffer
                     (const CMsgDOTACompendiumInGamePredictionResults   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTACompendiumInGamePredictionResults *
       cmsg_dotacompendium_in_game_prediction_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotacompendium_in_game_prediction_results__free_unpacked
                     (CMsgDOTACompendiumInGamePredictionResults *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSelectCompendiumInGamePrediction__Prediction methods */
void   cmsg_client_to_gcselect_compendium_in_game_prediction__prediction__init
                     (CMsgClientToGCSelectCompendiumInGamePrediction__Prediction         *message);
/* CMsgClientToGCSelectCompendiumInGamePrediction methods */
void   cmsg_client_to_gcselect_compendium_in_game_prediction__init
                     (CMsgClientToGCSelectCompendiumInGamePrediction         *message);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction__get_packed_size
                     (const CMsgClientToGCSelectCompendiumInGamePrediction   *message);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction__pack
                     (const CMsgClientToGCSelectCompendiumInGamePrediction   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction__pack_to_buffer
                     (const CMsgClientToGCSelectCompendiumInGamePrediction   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSelectCompendiumInGamePrediction *
       cmsg_client_to_gcselect_compendium_in_game_prediction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcselect_compendium_in_game_prediction__free_unpacked
                     (CMsgClientToGCSelectCompendiumInGamePrediction *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCSelectCompendiumInGamePredictionResponse methods */
void   cmsg_client_to_gcselect_compendium_in_game_prediction_response__init
                     (CMsgClientToGCSelectCompendiumInGamePredictionResponse         *message);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction_response__get_packed_size
                     (const CMsgClientToGCSelectCompendiumInGamePredictionResponse   *message);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction_response__pack
                     (const CMsgClientToGCSelectCompendiumInGamePredictionResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcselect_compendium_in_game_prediction_response__pack_to_buffer
                     (const CMsgClientToGCSelectCompendiumInGamePredictionResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCSelectCompendiumInGamePredictionResponse *
       cmsg_client_to_gcselect_compendium_in_game_prediction_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcselect_compendium_in_game_prediction_response__free_unpacked
                     (CMsgClientToGCSelectCompendiumInGamePredictionResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCOpenPlayerCardPack methods */
void   cmsg_client_to_gcopen_player_card_pack__init
                     (CMsgClientToGCOpenPlayerCardPack         *message);
size_t cmsg_client_to_gcopen_player_card_pack__get_packed_size
                     (const CMsgClientToGCOpenPlayerCardPack   *message);
size_t cmsg_client_to_gcopen_player_card_pack__pack
                     (const CMsgClientToGCOpenPlayerCardPack   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcopen_player_card_pack__pack_to_buffer
                     (const CMsgClientToGCOpenPlayerCardPack   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCOpenPlayerCardPack *
       cmsg_client_to_gcopen_player_card_pack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcopen_player_card_pack__free_unpacked
                     (CMsgClientToGCOpenPlayerCardPack *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCOpenPlayerCardPackResponse methods */
void   cmsg_client_to_gcopen_player_card_pack_response__init
                     (CMsgClientToGCOpenPlayerCardPackResponse         *message);
size_t cmsg_client_to_gcopen_player_card_pack_response__get_packed_size
                     (const CMsgClientToGCOpenPlayerCardPackResponse   *message);
size_t cmsg_client_to_gcopen_player_card_pack_response__pack
                     (const CMsgClientToGCOpenPlayerCardPackResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcopen_player_card_pack_response__pack_to_buffer
                     (const CMsgClientToGCOpenPlayerCardPackResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCOpenPlayerCardPackResponse *
       cmsg_client_to_gcopen_player_card_pack_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcopen_player_card_pack_response__free_unpacked
                     (CMsgClientToGCOpenPlayerCardPackResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRecyclePlayerCard methods */
void   cmsg_client_to_gcrecycle_player_card__init
                     (CMsgClientToGCRecyclePlayerCard         *message);
size_t cmsg_client_to_gcrecycle_player_card__get_packed_size
                     (const CMsgClientToGCRecyclePlayerCard   *message);
size_t cmsg_client_to_gcrecycle_player_card__pack
                     (const CMsgClientToGCRecyclePlayerCard   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrecycle_player_card__pack_to_buffer
                     (const CMsgClientToGCRecyclePlayerCard   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRecyclePlayerCard *
       cmsg_client_to_gcrecycle_player_card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrecycle_player_card__free_unpacked
                     (CMsgClientToGCRecyclePlayerCard *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCRecyclePlayerCardResponse methods */
void   cmsg_client_to_gcrecycle_player_card_response__init
                     (CMsgClientToGCRecyclePlayerCardResponse         *message);
size_t cmsg_client_to_gcrecycle_player_card_response__get_packed_size
                     (const CMsgClientToGCRecyclePlayerCardResponse   *message);
size_t cmsg_client_to_gcrecycle_player_card_response__pack
                     (const CMsgClientToGCRecyclePlayerCardResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gcrecycle_player_card_response__pack_to_buffer
                     (const CMsgClientToGCRecyclePlayerCardResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCRecyclePlayerCardResponse *
       cmsg_client_to_gcrecycle_player_card_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gcrecycle_player_card_response__free_unpacked
                     (CMsgClientToGCRecyclePlayerCardResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCreatePlayerCardPack methods */
void   cmsg_client_to_gccreate_player_card_pack__init
                     (CMsgClientToGCCreatePlayerCardPack         *message);
size_t cmsg_client_to_gccreate_player_card_pack__get_packed_size
                     (const CMsgClientToGCCreatePlayerCardPack   *message);
size_t cmsg_client_to_gccreate_player_card_pack__pack
                     (const CMsgClientToGCCreatePlayerCardPack   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccreate_player_card_pack__pack_to_buffer
                     (const CMsgClientToGCCreatePlayerCardPack   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCreatePlayerCardPack *
       cmsg_client_to_gccreate_player_card_pack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccreate_player_card_pack__free_unpacked
                     (CMsgClientToGCCreatePlayerCardPack *message,
                      ProtobufCAllocator *allocator);
/* CMsgClientToGCCreatePlayerCardPackResponse methods */
void   cmsg_client_to_gccreate_player_card_pack_response__init
                     (CMsgClientToGCCreatePlayerCardPackResponse         *message);
size_t cmsg_client_to_gccreate_player_card_pack_response__get_packed_size
                     (const CMsgClientToGCCreatePlayerCardPackResponse   *message);
size_t cmsg_client_to_gccreate_player_card_pack_response__pack
                     (const CMsgClientToGCCreatePlayerCardPackResponse   *message,
                      uint8_t             *out);
size_t cmsg_client_to_gccreate_player_card_pack_response__pack_to_buffer
                     (const CMsgClientToGCCreatePlayerCardPackResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgClientToGCCreatePlayerCardPackResponse *
       cmsg_client_to_gccreate_player_card_pack_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_client_to_gccreate_player_card_pack_response__free_unpacked
                     (CMsgClientToGCCreatePlayerCardPackResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgClientSuspended_Closure)
                 (const CMsgClientSuspended *message,
                  void *closure_data);
typedef void (*CMsgRequestInternationalTicket_Closure)
                 (const CMsgRequestInternationalTicket *message,
                  void *closure_data);
typedef void (*CMsgBalancedShuffleLobby_Closure)
                 (const CMsgBalancedShuffleLobby *message,
                  void *closure_data);
typedef void (*CMsgInitialQuestionnaireResponse_Closure)
                 (const CMsgInitialQuestionnaireResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPlayerMatchHistory_Closure)
                 (const CMsgDOTAPlayerMatchHistory *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatchHistoryFilter_Closure)
                 (const CMsgDOTAMatchHistoryFilter *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestMatches_Closure)
                 (const CMsgDOTARequestMatches *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestMatchesResponse__Series_Closure)
                 (const CMsgDOTARequestMatchesResponse__Series *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestMatchesResponse_Closure)
                 (const CMsgDOTARequestMatchesResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPopup_Closure)
                 (const CMsgDOTAPopup *message,
                  void *closure_data);
typedef void (*CMsgDOTAReportsRemainingRequest_Closure)
                 (const CMsgDOTAReportsRemainingRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAReportsRemainingResponse_Closure)
                 (const CMsgDOTAReportsRemainingResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTASubmitPlayerReport_Closure)
                 (const CMsgDOTASubmitPlayerReport *message,
                  void *closure_data);
typedef void (*CMsgDOTASubmitPlayerReportResponse_Closure)
                 (const CMsgDOTASubmitPlayerReportResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAReportCountsRequest_Closure)
                 (const CMsgDOTAReportCountsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAReportCountsResponse_Closure)
                 (const CMsgDOTAReportCountsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTASubmitLobbyMVPVote_Closure)
                 (const CMsgDOTASubmitLobbyMVPVote *message,
                  void *closure_data);
typedef void (*CMsgDOTASubmitLobbyMVPVoteResponse_Closure)
                 (const CMsgDOTASubmitLobbyMVPVoteResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTALobbyMVPNotifyRecipient_Closure)
                 (const CMsgDOTALobbyMVPNotifyRecipient *message,
                  void *closure_data);
typedef void (*CMsgDOTALobbyMVPAwarded_Closure)
                 (const CMsgDOTALobbyMVPAwarded *message,
                  void *closure_data);
typedef void (*CMsgDOTAKickedFromMatchmakingQueue_Closure)
                 (const CMsgDOTAKickedFromMatchmakingQueue *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestSaveGames_Closure)
                 (const CMsgDOTARequestSaveGames *message,
                  void *closure_data);
typedef void (*CMsgDOTARequestSaveGamesResponse_Closure)
                 (const CMsgDOTARequestSaveGamesResponse *message,
                  void *closure_data);
typedef void (*CMsgGCMatchDetailsRequest_Closure)
                 (const CMsgGCMatchDetailsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCMatchDetailsResponse_Closure)
                 (const CMsgGCMatchDetailsResponse *message,
                  void *closure_data);
typedef void (*CMsgServerToGCMatchDetailsRequest_Closure)
                 (const CMsgServerToGCMatchDetailsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToServerMatchDetailsResponse_Closure)
                 (const CMsgGCToServerMatchDetailsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileRequest_Closure)
                 (const CMsgDOTAProfileRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse__PlayedHero_Closure)
                 (const CMsgDOTAProfileResponse__PlayedHero *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse__ShowcaseHero_Closure)
                 (const CMsgDOTAProfileResponse__ShowcaseHero *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse__LeaguePass_Closure)
                 (const CMsgDOTAProfileResponse__LeaguePass *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse__EventTicket_Closure)
                 (const CMsgDOTAProfileResponse__EventTicket *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse__FeaturedItem_Closure)
                 (const CMsgDOTAProfileResponse__FeaturedItem *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileResponse_Closure)
                 (const CMsgDOTAProfileResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileTickets__LeaguePass_Closure)
                 (const CMsgDOTAProfileTickets__LeaguePass *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileTickets__EventTicket_Closure)
                 (const CMsgDOTAProfileTickets__EventTicket *message,
                  void *closure_data);
typedef void (*CMsgDOTAProfileTickets_Closure)
                 (const CMsgDOTAProfileTickets *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetProfileTickets_Closure)
                 (const CMsgClientToGCGetProfileTickets *message,
                  void *closure_data);
typedef void (*CMsgGCSteamProfileRequest_Closure)
                 (const CMsgGCSteamProfileRequest *message,
                  void *closure_data);
typedef void (*CMsgGCSteamProfileRequestResponse_Closure)
                 (const CMsgGCSteamProfileRequestResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAClearNotifySuccessfulReport_Closure)
                 (const CMsgDOTAClearNotifySuccessfulReport *message,
                  void *closure_data);
typedef void (*CMsgDOTAWelcome__LocalizationDigest_Closure)
                 (const CMsgDOTAWelcome__LocalizationDigest *message,
                  void *closure_data);
typedef void (*CMsgDOTAWelcome__CExtraMsg_Closure)
                 (const CMsgDOTAWelcome__CExtraMsg *message,
                  void *closure_data);
typedef void (*CMsgDOTAWelcome_Closure)
                 (const CMsgDOTAWelcome *message,
                  void *closure_data);
typedef void (*CSODOTAGameHeroFavorites_Closure)
                 (const CSODOTAGameHeroFavorites *message,
                  void *closure_data);
typedef void (*CMsgDOTAHeroFavoritesAdd_Closure)
                 (const CMsgDOTAHeroFavoritesAdd *message,
                  void *closure_data);
typedef void (*CMsgDOTAHeroFavoritesRemove_Closure)
                 (const CMsgDOTAHeroFavoritesRemove *message,
                  void *closure_data);
typedef void (*CMsgSetShowcaseHero_Closure)
                 (const CMsgSetShowcaseHero *message,
                  void *closure_data);
typedef void (*CMsgSetFeaturedItems_Closure)
                 (const CMsgSetFeaturedItems *message,
                  void *closure_data);
typedef void (*CMsgDOTAFeaturedItems_Closure)
                 (const CMsgDOTAFeaturedItems *message,
                  void *closure_data);
typedef void (*CMsgRequestLeagueInfo_Closure)
                 (const CMsgRequestLeagueInfo *message,
                  void *closure_data);
typedef void (*CDynamicLeagueData_Closure)
                 (const CDynamicLeagueData *message,
                  void *closure_data);
typedef void (*CStaticLeagueData_Closure)
                 (const CStaticLeagueData *message,
                  void *closure_data);
typedef void (*CLeagueData_Closure)
                 (const CLeagueData *message,
                  void *closure_data);
typedef void (*CMsgResponseLeagueInfo_Closure)
                 (const CMsgResponseLeagueInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatchVotes__PlayerVote_Closure)
                 (const CMsgDOTAMatchVotes__PlayerVote *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatchVotes_Closure)
                 (const CMsgDOTAMatchVotes *message,
                  void *closure_data);
typedef void (*CMsgCastMatchVote_Closure)
                 (const CMsgCastMatchVote *message,
                  void *closure_data);
typedef void (*CMsgRetrieveMatchVote_Closure)
                 (const CMsgRetrieveMatchVote *message,
                  void *closure_data);
typedef void (*CMsgMatchVoteResponse_Closure)
                 (const CMsgMatchVoteResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAHallOfFame__FeaturedPlayer_Closure)
                 (const CMsgDOTAHallOfFame__FeaturedPlayer *message,
                  void *closure_data);
typedef void (*CMsgDOTAHallOfFame__FeaturedFarmer_Closure)
                 (const CMsgDOTAHallOfFame__FeaturedFarmer *message,
                  void *closure_data);
typedef void (*CMsgDOTAHallOfFame_Closure)
                 (const CMsgDOTAHallOfFame *message,
                  void *closure_data);
typedef void (*CMsgDOTAHallOfFameRequest_Closure)
                 (const CMsgDOTAHallOfFameRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAHallOfFameResponse_Closure)
                 (const CMsgDOTAHallOfFameResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAHalloweenHighScoreRequest_Closure)
                 (const CMsgDOTAHalloweenHighScoreRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAHalloweenHighScoreResponse_Closure)
                 (const CMsgDOTAHalloweenHighScoreResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAStorePromoPagesRequest_Closure)
                 (const CMsgDOTAStorePromoPagesRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAStorePromoPagesResponse__PromoPage_Closure)
                 (const CMsgDOTAStorePromoPagesResponse__PromoPage *message,
                  void *closure_data);
typedef void (*CMsgDOTAStorePromoPagesResponse_Closure)
                 (const CMsgDOTAStorePromoPagesResponse *message,
                  void *closure_data);
typedef void (*CMsgLeagueScheduleBlockTeamInfo_Closure)
                 (const CMsgLeagueScheduleBlockTeamInfo *message,
                  void *closure_data);
typedef void (*CMsgLeagueScheduleBlock_Closure)
                 (const CMsgLeagueScheduleBlock *message,
                  void *closure_data);
typedef void (*CMsgDOTALeague_Closure)
                 (const CMsgDOTALeague *message,
                  void *closure_data);
typedef void (*CMsgDOTALeagueScheduleRequest_Closure)
                 (const CMsgDOTALeagueScheduleRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTALeagueScheduleResponse_Closure)
                 (const CMsgDOTALeagueScheduleResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTALeagueScheduleEdit_Closure)
                 (const CMsgDOTALeagueScheduleEdit *message,
                  void *closure_data);
typedef void (*CMsgDOTALeagueScheduleEditResponse_Closure)
                 (const CMsgDOTALeagueScheduleEditResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTALeaguesInMonthRequest_Closure)
                 (const CMsgDOTALeaguesInMonthRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTALeaguesInMonthResponse_Closure)
                 (const CMsgDOTALeaguesInMonthResponse *message,
                  void *closure_data);
typedef void (*CMsgMatchmakingMatchGroupInfo_Closure)
                 (const CMsgMatchmakingMatchGroupInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatchmakingStatsRequest_Closure)
                 (const CMsgDOTAMatchmakingStatsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatchmakingStatsResponse_Closure)
                 (const CMsgDOTAMatchmakingStatsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAUpdateMatchmakingStats_Closure)
                 (const CMsgDOTAUpdateMatchmakingStats *message,
                  void *closure_data);
typedef void (*CMsgDOTAUpdateMatchManagementStats_Closure)
                 (const CMsgDOTAUpdateMatchManagementStats *message,
                  void *closure_data);
typedef void (*CMsgDOTASetMatchHistoryAccess_Closure)
                 (const CMsgDOTASetMatchHistoryAccess *message,
                  void *closure_data);
typedef void (*CMsgDOTASetMatchHistoryAccessResponse_Closure)
                 (const CMsgDOTASetMatchHistoryAccessResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTANotifyAccountFlagsChange_Closure)
                 (const CMsgDOTANotifyAccountFlagsChange *message,
                  void *closure_data);
typedef void (*CMsgDOTASetProfilePrivacy_Closure)
                 (const CMsgDOTASetProfilePrivacy *message,
                  void *closure_data);
typedef void (*CMsgDOTASetProfilePrivacyResponse_Closure)
                 (const CMsgDOTASetProfilePrivacyResponse *message,
                  void *closure_data);
typedef void (*CMsgUpgradeLeagueItem_Closure)
                 (const CMsgUpgradeLeagueItem *message,
                  void *closure_data);
typedef void (*CMsgUpgradeLeagueItemResponse_Closure)
                 (const CMsgUpgradeLeagueItemResponse *message,
                  void *closure_data);
typedef void (*CMsgGCWatchDownloadedReplay_Closure)
                 (const CMsgGCWatchDownloadedReplay *message,
                  void *closure_data);
typedef void (*CMsgSetMapLocationState_Closure)
                 (const CMsgSetMapLocationState *message,
                  void *closure_data);
typedef void (*CMsgSetMapLocationStateResponse_Closure)
                 (const CMsgSetMapLocationStateResponse *message,
                  void *closure_data);
typedef void (*CMsgResetMapLocations_Closure)
                 (const CMsgResetMapLocations *message,
                  void *closure_data);
typedef void (*CMsgResetMapLocationsResponse_Closure)
                 (const CMsgResetMapLocationsResponse *message,
                  void *closure_data);
typedef void (*CMsgRefreshPartnerAccountLink_Closure)
                 (const CMsgRefreshPartnerAccountLink *message,
                  void *closure_data);
typedef void (*CMsgClientsRejoinChatChannels_Closure)
                 (const CMsgClientsRejoinChatChannels *message,
                  void *closure_data);
typedef void (*CMsgDOTASendFriendRecruits_Closure)
                 (const CMsgDOTASendFriendRecruits *message,
                  void *closure_data);
typedef void (*CMsgDOTAFriendRecruitsRequest_Closure)
                 (const CMsgDOTAFriendRecruitsRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus_Closure)
                 (const CMsgDOTAFriendRecruitsResponse__FriendRecruitStatus *message,
                  void *closure_data);
typedef void (*CMsgDOTAFriendRecruitsResponse_Closure)
                 (const CMsgDOTAFriendRecruitsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAFriendRecruitInviteAcceptDecline_Closure)
                 (const CMsgDOTAFriendRecruitInviteAcceptDecline *message,
                  void *closure_data);
typedef void (*CMsgRequestLeaguePrizePool_Closure)
                 (const CMsgRequestLeaguePrizePool *message,
                  void *closure_data);
typedef void (*CMsgRequestLeaguePrizePoolResponse_Closure)
                 (const CMsgRequestLeaguePrizePoolResponse *message,
                  void *closure_data);
typedef void (*CMsgGCGetHeroStandings_Closure)
                 (const CMsgGCGetHeroStandings *message,
                  void *closure_data);
typedef void (*CMsgGCGetHeroStandingsResponse__Hero_Closure)
                 (const CMsgGCGetHeroStandingsResponse__Hero *message,
                  void *closure_data);
typedef void (*CMsgGCGetHeroStandingsResponse_Closure)
                 (const CMsgGCGetHeroStandingsResponse *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReservationsRequest_Closure)
                 (const CMsgGCItemEditorReservationsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReservation_Closure)
                 (const CMsgGCItemEditorReservation *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReservationsResponse_Closure)
                 (const CMsgGCItemEditorReservationsResponse *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReserveItemDef_Closure)
                 (const CMsgGCItemEditorReserveItemDef *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReserveItemDefResponse_Closure)
                 (const CMsgGCItemEditorReserveItemDefResponse *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReleaseReservation_Closure)
                 (const CMsgGCItemEditorReleaseReservation *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorReleaseReservationResponse_Closure)
                 (const CMsgGCItemEditorReleaseReservationResponse *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorRequestLeagueInfo_Closure)
                 (const CMsgGCItemEditorRequestLeagueInfo *message,
                  void *closure_data);
typedef void (*CMsgGCItemEditorLeagueInfoResponse_Closure)
                 (const CMsgGCItemEditorLeagueInfoResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTARewardTutorialPrizes_Closure)
                 (const CMsgDOTARewardTutorialPrizes *message,
                  void *closure_data);
typedef void (*CMsgDOTALastHitChallengeHighScorePost_Closure)
                 (const CMsgDOTALastHitChallengeHighScorePost *message,
                  void *closure_data);
typedef void (*CMsgDOTALastHitChallengeHighScoreRequest_Closure)
                 (const CMsgDOTALastHitChallengeHighScoreRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTALastHitChallengeHighScoreResponse_Closure)
                 (const CMsgDOTALastHitChallengeHighScoreResponse *message,
                  void *closure_data);
typedef void (*CMsgFlipLobbyTeams_Closure)
                 (const CMsgFlipLobbyTeams *message,
                  void *closure_data);
typedef void (*CMsgPresentedClientTerminateDlg_Closure)
                 (const CMsgPresentedClientTerminateDlg *message,
                  void *closure_data);
typedef void (*CMsgGCLobbyUpdateBroadcastChannelInfo_Closure)
                 (const CMsgGCLobbyUpdateBroadcastChannelInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTARedeemEventPrize_Closure)
                 (const CMsgDOTARedeemEventPrize *message,
                  void *closure_data);
typedef void (*CMsgDOTARedeemEventPrizeResponse_Closure)
                 (const CMsgDOTARedeemEventPrizeResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetEventPoints_Closure)
                 (const CMsgDOTAGetEventPoints *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetEventPointsResponse__Action_Closure)
                 (const CMsgDOTAGetEventPointsResponse__Action *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetEventPointsResponse_Closure)
                 (const CMsgDOTAGetEventPointsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTALiveLeagueGameUpdate_Closure)
                 (const CMsgDOTALiveLeagueGameUpdate *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumSelection_Closure)
                 (const CMsgDOTACompendiumSelection *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumSelectionResponse_Closure)
                 (const CMsgDOTACompendiumSelectionResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumData_Closure)
                 (const CMsgDOTACompendiumData *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumDataRequest_Closure)
                 (const CMsgDOTACompendiumDataRequest *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumDataResponse_Closure)
                 (const CMsgDOTACompendiumDataResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetPlayerMatchHistory_Closure)
                 (const CMsgDOTAGetPlayerMatchHistory *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetPlayerMatchHistoryResponse__Match_Closure)
                 (const CMsgDOTAGetPlayerMatchHistoryResponse__Match *message,
                  void *closure_data);
typedef void (*CMsgDOTAGetPlayerMatchHistoryResponse_Closure)
                 (const CMsgDOTAGetPlayerMatchHistoryResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAStartDailyHeroChallenge_Closure)
                 (const CMsgDOTAStartDailyHeroChallenge *message,
                  void *closure_data);
typedef void (*CMsgGCNotificationsRequest_Closure)
                 (const CMsgGCNotificationsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCNotificationsResponse__Notification_Closure)
                 (const CMsgGCNotificationsResponse__Notification *message,
                  void *closure_data);
typedef void (*CMsgGCNotificationsResponse_Closure)
                 (const CMsgGCNotificationsResponse *message,
                  void *closure_data);
typedef void (*CMsgGCNotificationsMarkReadRequest_Closure)
                 (const CMsgGCNotificationsMarkReadRequest *message,
                  void *closure_data);
typedef void (*CMsgClientToGCMarkNotificationListRead_Closure)
                 (const CMsgClientToGCMarkNotificationListRead *message,
                  void *closure_data);
typedef void (*CMsgGCLeagueAdminState__PrivateLeagueKeys_Closure)
                 (const CMsgGCLeagueAdminState__PrivateLeagueKeys *message,
                  void *closure_data);
typedef void (*CMsgGCLeagueAdminState_Closure)
                 (const CMsgGCLeagueAdminState *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfoRequest__PlayerInfo_Closure)
                 (const CMsgGCPlayerInfoRequest__PlayerInfo *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfoRequest_Closure)
                 (const CMsgGCPlayerInfoRequest *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfoSubmit_Closure)
                 (const CMsgGCPlayerInfoSubmit *message,
                  void *closure_data);
typedef void (*CMsgGCPlayerInfoSubmitResponse_Closure)
                 (const CMsgGCPlayerInfoSubmitResponse *message,
                  void *closure_data);
typedef void (*CMsgClientProvideSurveyResult__Response_Closure)
                 (const CMsgClientProvideSurveyResult__Response *message,
                  void *closure_data);
typedef void (*CMsgClientProvideSurveyResult_Closure)
                 (const CMsgClientProvideSurveyResult *message,
                  void *closure_data);
typedef void (*CMsgDOTAEmoticonAccessSDO_Closure)
                 (const CMsgDOTAEmoticonAccessSDO *message,
                  void *closure_data);
typedef void (*CMsgClientToGCEmoticonDataRequest_Closure)
                 (const CMsgClientToGCEmoticonDataRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientEmoticonData_Closure)
                 (const CMsgGCToClientEmoticonData *message,
                  void *closure_data);
typedef void (*CMsgClientToGCTrackDialogResult_Closure)
                 (const CMsgClientToGCTrackDialogResult *message,
                  void *closure_data);
typedef void (*CMsgGCToClientTournamentItemDrop_Closure)
                 (const CMsgGCToClientTournamentItemDrop *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetAdditionalEquips_Closure)
                 (const CMsgClientToGCSetAdditionalEquips *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetAdditionalEquipsResponse_Closure)
                 (const CMsgClientToGCSetAdditionalEquipsResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAdditionalEquips_Closure)
                 (const CMsgClientToGCGetAdditionalEquips *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAdditionalEquipsResponse_Closure)
                 (const CMsgClientToGCGetAdditionalEquipsResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAllHeroOrder_Closure)
                 (const CMsgClientToGCGetAllHeroOrder *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAllHeroOrderResponse_Closure)
                 (const CMsgClientToGCGetAllHeroOrderResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAllHeroProgress_Closure)
                 (const CMsgClientToGCGetAllHeroProgress *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetAllHeroProgressResponse_Closure)
                 (const CMsgClientToGCGetAllHeroProgressResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetTrophyList_Closure)
                 (const CMsgClientToGCGetTrophyList *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetTrophyListResponse__Trophy_Closure)
                 (const CMsgClientToGCGetTrophyListResponse__Trophy *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetTrophyListResponse_Closure)
                 (const CMsgClientToGCGetTrophyListResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToClientTrophyAwarded_Closure)
                 (const CMsgGCToClientTrophyAwarded *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetProfileCard_Closure)
                 (const CMsgClientToGCGetProfileCard *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetProfileCardSlots__CardSlot_Closure)
                 (const CMsgClientToGCSetProfileCardSlots__CardSlot *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSetProfileCardSlots_Closure)
                 (const CMsgClientToGCSetProfileCardSlots *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetProfileCardStats_Closure)
                 (const CMsgClientToGCGetProfileCardStats *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCreateHeroStatue_Closure)
                 (const CMsgClientToGCCreateHeroStatue *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCreateTeamShowcase_Closure)
                 (const CMsgClientToGCCreateTeamShowcase *message,
                  void *closure_data);
typedef void (*CMsgGCToClientHeroStatueCreateResult_Closure)
                 (const CMsgGCToClientHeroStatueCreateResult *message,
                  void *closure_data);
typedef void (*CMsgGCToClientTeamShowcaseCreateResult_Closure)
                 (const CMsgGCToClientTeamShowcaseCreateResult *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRecordCompendiumStats_Closure)
                 (const CMsgClientToGCRecordCompendiumStats *message,
                  void *closure_data);
typedef void (*CMsgGCToClientEventStatusChanged_Closure)
                 (const CMsgGCToClientEventStatusChanged *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPlayerStatsRequest_Closure)
                 (const CMsgClientToGCPlayerStatsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientPlayerStatsResponse_Closure)
                 (const CMsgGCToClientPlayerStatsResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCustomGamePlayerCountRequest_Closure)
                 (const CMsgClientToGCCustomGamePlayerCountRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientCustomGamePlayerCountResponse_Closure)
                 (const CMsgGCToClientCustomGamePlayerCountResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCustomGamesFriendsPlayedRequest_Closure)
                 (const CMsgClientToGCCustomGamesFriendsPlayedRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame_Closure)
                 (const CMsgGCToClientCustomGamesFriendsPlayedResponse__CustomGame *message,
                  void *closure_data);
typedef void (*CMsgGCToClientCustomGamesFriendsPlayedResponse_Closure)
                 (const CMsgGCToClientCustomGamesFriendsPlayedResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSocialFeedPostCommentRequest_Closure)
                 (const CMsgClientToGCSocialFeedPostCommentRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientSocialFeedPostCommentResponse_Closure)
                 (const CMsgGCToClientSocialFeedPostCommentResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSocialFeedPostMessageRequest_Closure)
                 (const CMsgClientToGCSocialFeedPostMessageRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientSocialFeedPostMessageResponse_Closure)
                 (const CMsgGCToClientSocialFeedPostMessageResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCFriendsPlayedCustomGameRequest_Closure)
                 (const CMsgClientToGCFriendsPlayedCustomGameRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientFriendsPlayedCustomGameResponse_Closure)
                 (const CMsgGCToClientFriendsPlayedCustomGameResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCFeaturedHeroesRequest_Closure)
                 (const CMsgClientToGCFeaturedHeroesRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientFeaturedHeroesResponse__DataField_Closure)
                 (const CMsgGCToClientFeaturedHeroesResponse__DataField *message,
                  void *closure_data);
typedef void (*CMsgGCToClientFeaturedHeroesResponse__FeaturedHero_Closure)
                 (const CMsgGCToClientFeaturedHeroesResponse__FeaturedHero *message,
                  void *closure_data);
typedef void (*CMsgGCToClientFeaturedHeroesResponse__Category_Closure)
                 (const CMsgGCToClientFeaturedHeroesResponse__Category *message,
                  void *closure_data);
typedef void (*CMsgGCToClientFeaturedHeroesResponse_Closure)
                 (const CMsgGCToClientFeaturedHeroesResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSocialMatchPostCommentRequest_Closure)
                 (const CMsgClientToGCSocialMatchPostCommentRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientSocialMatchPostCommentResponse_Closure)
                 (const CMsgGCToClientSocialMatchPostCommentResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSocialMatchDetailsRequest_Closure)
                 (const CMsgClientToGCSocialMatchDetailsRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientSocialMatchDetailsResponse__Comment_Closure)
                 (const CMsgGCToClientSocialMatchDetailsResponse__Comment *message,
                  void *closure_data);
typedef void (*CMsgGCToClientSocialMatchDetailsResponse_Closure)
                 (const CMsgGCToClientSocialMatchDetailsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPartyRichPresence__Member_Closure)
                 (const CMsgDOTAPartyRichPresence__Member *message,
                  void *closure_data);
typedef void (*CMsgDOTAPartyRichPresence__WeekendTourney_Closure)
                 (const CMsgDOTAPartyRichPresence__WeekendTourney *message,
                  void *closure_data);
typedef void (*CMsgDOTAPartyRichPresence_Closure)
                 (const CMsgDOTAPartyRichPresence *message,
                  void *closure_data);
typedef void (*CMsgDOTALobbyRichPresence_Closure)
                 (const CMsgDOTALobbyRichPresence *message,
                  void *closure_data);
typedef void (*CMsgDOTACustomGameListenServerStartedLoading_Closure)
                 (const CMsgDOTACustomGameListenServerStartedLoading *message,
                  void *closure_data);
typedef void (*CMsgDOTACustomGameClientFinishedLoading_Closure)
                 (const CMsgDOTACustomGameClientFinishedLoading *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetLeagueSeries_Closure)
                 (const CMsgClientToGCGetLeagueSeries *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetLeagueSeriesResponse__Series__Team_Closure)
                 (const CMsgClientToGCGetLeagueSeriesResponse__Series__Team *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetLeagueSeriesResponse__Series_Closure)
                 (const CMsgClientToGCGetLeagueSeriesResponse__Series *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetLeagueSeriesResponse_Closure)
                 (const CMsgClientToGCGetLeagueSeriesResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCApplyGemCombiner_Closure)
                 (const CMsgClientToGCApplyGemCombiner *message,
                  void *closure_data);
typedef void (*CMsgClientToGCH264Unsupported_Closure)
                 (const CMsgClientToGCH264Unsupported *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestH264Support_Closure)
                 (const CMsgClientToGCRequestH264Support *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetQuestProgress_Closure)
                 (const CMsgClientToGCGetQuestProgress *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetQuestProgressResponse__Challenge_Closure)
                 (const CMsgClientToGCGetQuestProgressResponse__Challenge *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetQuestProgressResponse__Quest_Closure)
                 (const CMsgClientToGCGetQuestProgressResponse__Quest *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetQuestProgressResponse_Closure)
                 (const CMsgClientToGCGetQuestProgressResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToClientMatchSignedOut_Closure)
                 (const CMsgGCToClientMatchSignedOut *message,
                  void *closure_data);
typedef void (*CMsgGCGetHeroStatsHistory_Closure)
                 (const CMsgGCGetHeroStatsHistory *message,
                  void *closure_data);
typedef void (*CMsgGCGetHeroStatsHistoryResponse_Closure)
                 (const CMsgGCGetHeroStatsHistoryResponse *message,
                  void *closure_data);
typedef void (*CMsgPlayerConductScorecardRequest_Closure)
                 (const CMsgPlayerConductScorecardRequest *message,
                  void *closure_data);
typedef void (*CMsgPlayerConductScorecard_Closure)
                 (const CMsgPlayerConductScorecard *message,
                  void *closure_data);
typedef void (*CMsgClientToGCWageringRequest_Closure)
                 (const CMsgClientToGCWageringRequest *message,
                  void *closure_data);
typedef void (*CMsgGCToClientWageringResponse_Closure)
                 (const CMsgGCToClientWageringResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToClientWageringUpdate_Closure)
                 (const CMsgGCToClientWageringUpdate *message,
                  void *closure_data);
typedef void (*CMsgGCToClientArcanaVotesUpdate_Closure)
                 (const CMsgGCToClientArcanaVotesUpdate *message,
                  void *closure_data);
typedef void (*CMsgClientToGCMysteryItem_Closure)
                 (const CMsgClientToGCMysteryItem *message,
                  void *closure_data);
typedef void (*CMsgGCToClientMysteryItemResponse_Closure)
                 (const CMsgGCToClientMysteryItemResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCGetEventGoals_Closure)
                 (const CMsgClientToGCGetEventGoals *message,
                  void *closure_data);
typedef void (*CMsgEventGoals__EventGoal_Closure)
                 (const CMsgEventGoals__EventGoal *message,
                  void *closure_data);
typedef void (*CMsgEventGoals_Closure)
                 (const CMsgEventGoals *message,
                  void *closure_data);
typedef void (*CMsgGCToGCLeaguePredictions_Closure)
                 (const CMsgGCToGCLeaguePredictions *message,
                  void *closure_data);
typedef void (*CMsgPredictionRankings__PredictionLine_Closure)
                 (const CMsgPredictionRankings__PredictionLine *message,
                  void *closure_data);
typedef void (*CMsgPredictionRankings__Prediction_Closure)
                 (const CMsgPredictionRankings__Prediction *message,
                  void *closure_data);
typedef void (*CMsgPredictionRankings_Closure)
                 (const CMsgPredictionRankings *message,
                  void *closure_data);
typedef void (*CMsgPredictionResults__ResultBreakdown_Closure)
                 (const CMsgPredictionResults__ResultBreakdown *message,
                  void *closure_data);
typedef void (*CMsgPredictionResults__Result_Closure)
                 (const CMsgPredictionResults__Result *message,
                  void *closure_data);
typedef void (*CMsgPredictionResults_Closure)
                 (const CMsgPredictionResults *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSuspiciousActivity_Closure)
                 (const CMsgClientToGCSuspiciousActivity *message,
                  void *closure_data);
typedef void (*CMsgClientToGCHasPlayerVotedForMVP_Closure)
                 (const CMsgClientToGCHasPlayerVotedForMVP *message,
                  void *closure_data);
typedef void (*CMsgClientToGCHasPlayerVotedForMVPResponse_Closure)
                 (const CMsgClientToGCHasPlayerVotedForMVPResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCVoteForMVP_Closure)
                 (const CMsgClientToGCVoteForMVP *message,
                  void *closure_data);
typedef void (*CMsgClientToGCVoteForMVPResponse_Closure)
                 (const CMsgClientToGCVoteForMVPResponse *message,
                  void *closure_data);
typedef void (*CMsgMVPVotesForMatch__Player_Closure)
                 (const CMsgMVPVotesForMatch__Player *message,
                  void *closure_data);
typedef void (*CMsgMVPVotesForMatch_Closure)
                 (const CMsgMVPVotesForMatch *message,
                  void *closure_data);
typedef void (*CMsgLeaguePrizePool_Closure)
                 (const CMsgLeaguePrizePool *message,
                  void *closure_data);
typedef void (*CMsgClientToGCTeammateStatsRequest_Closure)
                 (const CMsgClientToGCTeammateStatsRequest *message,
                  void *closure_data);
typedef void (*CMsgClientToGCTeammateStatsResponse__TeammateStat_Closure)
                 (const CMsgClientToGCTeammateStatsResponse__TeammateStat *message,
                  void *closure_data);
typedef void (*CMsgClientToGCTeammateStatsResponse_Closure)
                 (const CMsgClientToGCTeammateStatsResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCVoteForArcana__MatchVote_Closure)
                 (const CMsgClientToGCVoteForArcana__MatchVote *message,
                  void *closure_data);
typedef void (*CMsgClientToGCVoteForArcana_Closure)
                 (const CMsgClientToGCVoteForArcana *message,
                  void *closure_data);
typedef void (*CMsgClientToGCVoteForArcanaResponse_Closure)
                 (const CMsgClientToGCVoteForArcanaResponse *message,
                  void *closure_data);
typedef void (*CMsgArcanaVotes__Match_Closure)
                 (const CMsgArcanaVotes__Match *message,
                  void *closure_data);
typedef void (*CMsgArcanaVotes_Closure)
                 (const CMsgArcanaVotes *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestArcanaVotesRemaining_Closure)
                 (const CMsgClientToGCRequestArcanaVotesRemaining *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote_Closure)
                 (const CMsgClientToGCRequestArcanaVotesRemainingResponse__MatchVote *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestArcanaVotesRemainingResponse_Closure)
                 (const CMsgClientToGCRequestArcanaVotesRemainingResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLog_Closure)
                 (const CMsgClientToGCRequestEventPointLog *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__QuestChallengeEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__WagerWonEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__TipGivenEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__TipReceivedEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__RecycledItemEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__AchievementEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__AchievementEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__MysteryItemReceivedEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__CorrectPredictionEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__InGamePredictionCorrectEvent *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse__EventPointTransaction *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestEventPointLogResponse_Closure)
                 (const CMsgClientToGCRequestEventPointLogResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCPublishUserStat_Closure)
                 (const CMsgClientToGCPublishUserStat *message,
                  void *closure_data);
typedef void (*CMsgClientToGCAddTI6TreeProgress_Closure)
                 (const CMsgClientToGCAddTI6TreeProgress *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRedeemReward_Closure)
                 (const CMsgClientToGCRedeemReward *message,
                  void *closure_data);
typedef void (*CMsgGCToClientRedeemRewardResponse_Closure)
                 (const CMsgGCToClientRedeemRewardResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestLinaPlaysRemaining_Closure)
                 (const CMsgClientToGCRequestLinaPlaysRemaining *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestLinaPlaysRemainingResponse_Closure)
                 (const CMsgClientToGCRequestLinaPlaysRemainingResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestLinaGameResult_Closure)
                 (const CMsgClientToGCRequestLinaGameResult *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRequestLinaGameResultResponse_Closure)
                 (const CMsgClientToGCRequestLinaGameResultResponse *message,
                  void *closure_data);
typedef void (*CMsgGCToClientQuestProgressUpdated__Challenge_Closure)
                 (const CMsgGCToClientQuestProgressUpdated__Challenge *message,
                  void *closure_data);
typedef void (*CMsgGCToClientQuestProgressUpdated_Closure)
                 (const CMsgGCToClientQuestProgressUpdated *message,
                  void *closure_data);
typedef void (*CMsgDOTARedeemItem_Closure)
                 (const CMsgDOTARedeemItem *message,
                  void *closure_data);
typedef void (*CMsgDOTARedeemItemResponse_Closure)
                 (const CMsgDOTARedeemItemResponse *message,
                  void *closure_data);
typedef void (*CMsgPerfectWorldUserLookupRequest_Closure)
                 (const CMsgPerfectWorldUserLookupRequest *message,
                  void *closure_data);
typedef void (*CMsgPerfectWorldUserLookupResponse_Closure)
                 (const CMsgPerfectWorldUserLookupResponse *message,
                  void *closure_data);
typedef void (*CMsgNexonPartnerUpdate_Closure)
                 (const CMsgNexonPartnerUpdate *message,
                  void *closure_data);
typedef void (*CMsgMakeOffering_Closure)
                 (const CMsgMakeOffering *message,
                  void *closure_data);
typedef void (*CMsgRequestOfferings_Closure)
                 (const CMsgRequestOfferings *message,
                  void *closure_data);
typedef void (*CMsgRequestOfferingsResponse__NewYearsOffering_Closure)
                 (const CMsgRequestOfferingsResponse__NewYearsOffering *message,
                  void *closure_data);
typedef void (*CMsgRequestOfferingsResponse_Closure)
                 (const CMsgRequestOfferingsResponse *message,
                  void *closure_data);
typedef void (*CMsgDOTAPCBangTimedReward_Closure)
                 (const CMsgDOTAPCBangTimedReward *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumInGamePredictionResults__PredictionResult_Closure)
                 (const CMsgDOTACompendiumInGamePredictionResults__PredictionResult *message,
                  void *closure_data);
typedef void (*CMsgDOTACompendiumInGamePredictionResults_Closure)
                 (const CMsgDOTACompendiumInGamePredictionResults *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSelectCompendiumInGamePrediction__Prediction_Closure)
                 (const CMsgClientToGCSelectCompendiumInGamePrediction__Prediction *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSelectCompendiumInGamePrediction_Closure)
                 (const CMsgClientToGCSelectCompendiumInGamePrediction *message,
                  void *closure_data);
typedef void (*CMsgClientToGCSelectCompendiumInGamePredictionResponse_Closure)
                 (const CMsgClientToGCSelectCompendiumInGamePredictionResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCOpenPlayerCardPack_Closure)
                 (const CMsgClientToGCOpenPlayerCardPack *message,
                  void *closure_data);
typedef void (*CMsgClientToGCOpenPlayerCardPackResponse_Closure)
                 (const CMsgClientToGCOpenPlayerCardPackResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRecyclePlayerCard_Closure)
                 (const CMsgClientToGCRecyclePlayerCard *message,
                  void *closure_data);
typedef void (*CMsgClientToGCRecyclePlayerCardResponse_Closure)
                 (const CMsgClientToGCRecyclePlayerCardResponse *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCreatePlayerCardPack_Closure)
                 (const CMsgClientToGCCreatePlayerCardPack *message,
                  void *closure_data);
typedef void (*CMsgClientToGCCreatePlayerCardPackResponse_Closure)
                 (const CMsgClientToGCCreatePlayerCardPackResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dota__watch_replay_type__descriptor;
extern const ProtobufCEnumDescriptor    eitem_editor_reservation_result__descriptor;
extern const ProtobufCEnumDescriptor    efeatured_hero_text_field__descriptor;
extern const ProtobufCEnumDescriptor    efeatured_hero_data_type__descriptor;
extern const ProtobufCEnumDescriptor    eweekend_tourney_rich_presence_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_suspended__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_international_ticket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_balanced_shuffle_lobby__descriptor;
extern const ProtobufCMessageDescriptor cmsg_initial_questionnaire_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaplayer_match_history__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch_history_filter__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_matches__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotarequest_matches__skill_level__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_matches_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_matches_response__series__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapopup__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotapopup__popup_id__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareports_remaining_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareports_remaining_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotasubmit_player_report__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotasubmit_player_report_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareport_counts_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareport_counts_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotasubmit_lobby_mvpvote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotasubmit_lobby_mvpvote_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalobby_mvpnotify_recipient__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalobby_mvpawarded__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotakicked_from_matchmaking_queue__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_save_games__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotarequest_save_games_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcmatch_details_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcmatch_details_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_server_to_gcmatch_details_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_server_match_details_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__played_hero__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__showcase_hero__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__league_pass__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__event_ticket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_response__featured_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_tickets__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_tickets__league_pass__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaprofile_tickets__event_ticket__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_profile_tickets__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcsteam_profile_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcsteam_profile_request_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaclear_notify_successful_report__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotawelcome__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotawelcome__localization_digest__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotawelcome__cextra_msg__descriptor;
extern const ProtobufCMessageDescriptor csodotagame_hero_favorites__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahero_favorites_add__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahero_favorites_remove__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_showcase_hero__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_featured_items__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafeatured_items__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_league_info__descriptor;
extern const ProtobufCMessageDescriptor cdynamic_league_data__descriptor;
extern const ProtobufCMessageDescriptor cstatic_league_data__descriptor;
extern const ProtobufCMessageDescriptor cleague_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_response_league_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch_votes__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch_votes__player_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_cast_match_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_retrieve_match_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_match_vote_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahall_of_fame__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahall_of_fame__featured_player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahall_of_fame__featured_farmer__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahall_of_fame_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahall_of_fame_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahalloween_high_score_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotahalloween_high_score_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotastore_promo_pages_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotastore_promo_pages_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotastore_promo_pages_response__promo_page__descriptor;
extern const ProtobufCMessageDescriptor cmsg_league_schedule_block_team_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_league_schedule_block__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleague__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleague_schedule_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleague_schedule_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleague_schedule_edit__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleague_schedule_edit_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleagues_in_month_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaleagues_in_month_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_matchmaking_match_group_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatchmaking_stats_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatchmaking_stats_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaupdate_matchmaking_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaupdate_match_management_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaset_match_history_access__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaset_match_history_access_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotanotify_account_flags_change__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaset_profile_privacy__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaset_profile_privacy_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_upgrade_league_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_upgrade_league_item_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcwatch_downloaded_replay__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_map_location_state__descriptor;
extern const ProtobufCMessageDescriptor cmsg_set_map_location_state_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_reset_map_locations__descriptor;
extern const ProtobufCMessageDescriptor cmsg_reset_map_locations_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_refresh_partner_account_link__descriptor;
extern const ProtobufCMessageDescriptor cmsg_clients_rejoin_chat_channels__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotasend_friend_recruits__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafriend_recruits_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafriend_recruits_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafriend_recruits_response__friend_recruit_status__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotafriend_recruits_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotafriend_recruit_invite_accept_decline__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_league_prize_pool__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_league_prize_pool_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcget_hero_standings__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcget_hero_standings_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcget_hero_standings_response__hero__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_reservations_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_reservation__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_reservations_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_reserve_item_def__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_reserve_item_def_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_release_reservation__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_release_reservation_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_request_league_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcitem_editor_league_info_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotareward_tutorial_prizes__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalast_hit_challenge_high_score_post__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalast_hit_challenge_high_score_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalast_hit_challenge_high_score_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_flip_lobby_teams__descriptor;
extern const ProtobufCMessageDescriptor cmsg_presented_client_terminate_dlg__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gclobby_update_broadcast_channel_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaredeem_event_prize__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaredeem_event_prize_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotaredeem_event_prize_response__result_code__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_event_points__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_event_points_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_event_points_response__action__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalive_league_game_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_selection__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_selection_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_data_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_data_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_player_match_history__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_player_match_history_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaget_player_match_history_response__match__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotastart_daily_hero_challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcnotifications_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcnotifications_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcnotifications_response__notification__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcnotifications_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcnotifications_mark_read_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcmark_notification_list_read__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcleague_admin_state__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcleague_admin_state__private_league_keys__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info_request__player_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info_submit__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcplayer_info_submit_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcplayer_info_submit_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_provide_survey_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_provide_survey_result__response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaemoticon_access_sdo__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcemoticon_data_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_emoticon_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gctrack_dialog_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_tournament_item_drop__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_additional_equips__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_additional_equips_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_additional_equips__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_additional_equips_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_all_hero_order__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_all_hero_order_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_all_hero_progress__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_all_hero_progress_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_trophy_list__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_trophy_list_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_trophy_list_response__trophy__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_trophy_awarded__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_profile_card__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_profile_card_slots__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcset_profile_card_slots__card_slot__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_profile_card_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccreate_hero_statue__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccreate_team_showcase__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_hero_statue_create_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_team_showcase_create_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrecord_compendium_stats__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_event_status_changed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcplayer_stats_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_player_stats_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccustom_game_player_count_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_custom_game_player_count_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccustom_games_friends_played_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_custom_games_friends_played_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_custom_games_friends_played_response__custom_game__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcsocial_feed_post_comment_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_social_feed_post_comment_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcsocial_feed_post_message_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_social_feed_post_message_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcfriends_played_custom_game_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_friends_played_custom_game_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcfeatured_heroes_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_featured_heroes_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_featured_heroes_response__data_field__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_featured_heroes_response__featured_hero__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_featured_heroes_response__category__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcsocial_match_post_comment_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_social_match_post_comment_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcsocial_match_details_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_social_match_details_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_social_match_details_response__comment__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaparty_rich_presence__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaparty_rich_presence__member__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaparty_rich_presence__weekend_tourney__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotalobby_rich_presence__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacustom_game_listen_server_started_loading__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacustom_game_client_finished_loading__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_league_series__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_league_series_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_league_series_response__series__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_league_series_response__series__team__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcapply_gem_combiner__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gch264_unsupported__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_h264_support__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_quest_progress__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_quest_progress_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_quest_progress_response__challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_quest_progress_response__quest__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_match_signed_out__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcget_hero_stats_history__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcget_hero_stats_history_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_player_conduct_scorecard_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_player_conduct_scorecard__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcwagering_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_wagering_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_wagering_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_arcana_votes_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcmystery_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_mystery_item_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcto_client_mystery_item_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcget_event_goals__descriptor;
extern const ProtobufCMessageDescriptor cmsg_event_goals__descriptor;
extern const ProtobufCMessageDescriptor cmsg_event_goals__event_goal__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_gcleague_predictions__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_rankings__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_rankings__prediction_line__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_rankings__prediction__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_results__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_results__result_breakdown__descriptor;
extern const ProtobufCMessageDescriptor cmsg_prediction_results__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcsuspicious_activity__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gchas_player_voted_for_mvp__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gchas_player_voted_for_mvpresponse__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcvote_for_mvp__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcvote_for_mvpresponse__descriptor;
extern const ProtobufCMessageDescriptor cmsg_mvpvotes_for_match__descriptor;
extern const ProtobufCMessageDescriptor cmsg_mvpvotes_for_match__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_league_prize_pool__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcteammate_stats_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcteammate_stats_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcteammate_stats_response__teammate_stat__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcvote_for_arcana__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcvote_for_arcana__match_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcvote_for_arcana_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcvote_for_arcana_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_arcana_votes__descriptor;
extern const ProtobufCMessageDescriptor cmsg_arcana_votes__match__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_arcana_votes__voting_state__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_arcana_votes_remaining__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_arcana_votes_remaining_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_arcana_votes_remaining_response__match_vote__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__quest_challenge_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__wager_won_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__tip_given_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__tip_received_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__recycled_item_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__achievement_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__mystery_item_received_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__correct_prediction_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__in_game_prediction_correct_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_event_point_log_response__event_point_transaction__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcpublish_user_stat__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcadd_ti6_tree_progress__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcredeem_reward__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_redeem_reward_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_gcto_client_redeem_reward_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_lina_plays_remaining__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_lina_plays_remaining_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_lina_game_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrequest_lina_game_result_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_quest_progress_updated__descriptor;
extern const ProtobufCMessageDescriptor cmsg_gcto_client_quest_progress_updated__challenge__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaredeem_item__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotaredeem_item_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotaredeem_item_response__eresult_code__descriptor;
extern const ProtobufCMessageDescriptor cmsg_perfect_world_user_lookup_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_perfect_world_user_lookup_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_perfect_world_user_lookup_response__eresult_code__descriptor;
extern const ProtobufCMessageDescriptor cmsg_nexon_partner_update__descriptor;
extern const ProtobufCMessageDescriptor cmsg_make_offering__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_offerings__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_offerings_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_request_offerings_response__new_years_offering__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotapcbang_timed_reward__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_in_game_prediction_results__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotacompendium_in_game_prediction_results__prediction_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcselect_compendium_in_game_prediction__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcselect_compendium_in_game_prediction__prediction__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcselect_compendium_in_game_prediction_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcselect_compendium_in_game_prediction_response__eresult__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcopen_player_card_pack__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcopen_player_card_pack_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcopen_player_card_pack_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrecycle_player_card__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gcrecycle_player_card_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gcrecycle_player_card_response__result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccreate_player_card_pack__descriptor;
extern const ProtobufCMessageDescriptor cmsg_client_to_gccreate_player_card_pack_response__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_client_to_gccreate_player_card_pack_response__result__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fgcmessages_5fclient_2eproto__INCLUDED */
