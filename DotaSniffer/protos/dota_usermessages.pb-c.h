/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: dota_usermessages.proto */

#ifndef PROTOBUF_C_dota_5fusermessages_2eproto__INCLUDED
#define PROTOBUF_C_dota_5fusermessages_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "networkbasetypes.pb-c.h"
#include "dota_commonmessages.pb-c.h"

typedef struct _CDOTAUserMsgAIDebugLine CDOTAUserMsgAIDebugLine;
typedef struct _CDOTAUserMsgPing CDOTAUserMsgPing;
typedef struct _CDOTAUserMsgSwapVerify CDOTAUserMsgSwapVerify;
typedef struct _CDOTAUserMsgChatEvent CDOTAUserMsgChatEvent;
typedef struct _CDOTAUserMsgCombatLogShowDeath CDOTAUserMsgCombatLogShowDeath;
typedef struct _CDOTAUserMsgBotChat CDOTAUserMsgBotChat;
typedef struct _CDOTAUserMsgCombatHeroPositions CDOTAUserMsgCombatHeroPositions;
typedef struct _CDOTAUserMsgMiniKillCamInfo CDOTAUserMsgMiniKillCamInfo;
typedef struct _CDOTAUserMsgMiniKillCamInfo__Attacker CDOTAUserMsgMiniKillCamInfo__Attacker;
typedef struct _CDOTAUserMsgMiniKillCamInfo__Attacker__Ability CDOTAUserMsgMiniKillCamInfo__Attacker__Ability;
typedef struct _CDOTAUserMsgGlobalLightColor CDOTAUserMsgGlobalLightColor;
typedef struct _CDOTAUserMsgGlobalLightDirection CDOTAUserMsgGlobalLightDirection;
typedef struct _CDOTAUserMsgLocationPing CDOTAUserMsgLocationPing;
typedef struct _CDOTAUserMsgItemAlert CDOTAUserMsgItemAlert;
typedef struct _CDOTAUserMsgEnemyItemAlert CDOTAUserMsgEnemyItemAlert;
typedef struct _CDOTAUserMsgModifierAlert CDOTAUserMsgModifierAlert;
typedef struct _CDOTAUserMsgHPManaAlert CDOTAUserMsgHPManaAlert;
typedef struct _CDOTAUserMsgGlyphAlert CDOTAUserMsgGlyphAlert;
typedef struct _CDOTAUserMsgWillPurchaseAlert CDOTAUserMsgWillPurchaseAlert;
typedef struct _CDOTAUserMsgBuyBackStateAlert CDOTAUserMsgBuyBackStateAlert;
typedef struct _CDOTAUserMsgQuickBuyAlert CDOTAUserMsgQuickBuyAlert;
typedef struct _CDOTAUserMsgCourierKilledAlert CDOTAUserMsgCourierKilledAlert;
typedef struct _CDOTAUserMsgMinimapEvent CDOTAUserMsgMinimapEvent;
typedef struct _CDOTAUserMsgMapLine CDOTAUserMsgMapLine;
typedef struct _CDOTAUserMsgMinimapDebugPoint CDOTAUserMsgMinimapDebugPoint;
typedef struct _CDOTAUserMsgCreateLinearProjectile CDOTAUserMsgCreateLinearProjectile;
typedef struct _CDOTAUserMsgDestroyLinearProjectile CDOTAUserMsgDestroyLinearProjectile;
typedef struct _CDOTAUserMsgDodgeTrackingProjectiles CDOTAUserMsgDodgeTrackingProjectiles;
typedef struct _CDOTAUserMsgSpectatorPlayerClick CDOTAUserMsgSpectatorPlayerClick;
typedef struct _CDOTAUserMsgSpectatorPlayerUnitOrders CDOTAUserMsgSpectatorPlayerUnitOrders;
typedef struct _CDOTAUserMsgNevermoreRequiem CDOTAUserMsgNevermoreRequiem;
typedef struct _CDOTAUserMsgInvalidCommand CDOTAUserMsgInvalidCommand;
typedef struct _CDOTAUserMsgHudError CDOTAUserMsgHudError;
typedef struct _CDOTAUserMsgSharedCooldown CDOTAUserMsgSharedCooldown;
typedef struct _CDOTAUserMsgSetNextAutobuyItem CDOTAUserMsgSetNextAutobuyItem;
typedef struct _CDOTAUserMsgHalloweenDrops CDOTAUserMsgHalloweenDrops;
typedef struct _CDOTAUserMsgPredictionResult CDOTAUserMsgPredictionResult;
typedef struct _CDOTAUserMsgPredictionResult__Prediction CDOTAUserMsgPredictionResult__Prediction;
typedef struct _CDOTAResponseQuerySerialized CDOTAResponseQuerySerialized;
typedef struct _CDOTAResponseQuerySerialized__Fact CDOTAResponseQuerySerialized__Fact;
typedef struct _CDOTASpeechMatchOnClient CDOTASpeechMatchOnClient;
typedef struct _CDOTAUserMsgUnitEvent CDOTAUserMsgUnitEvent;
typedef struct _CDOTAUserMsgUnitEvent__Speech CDOTAUserMsgUnitEvent__Speech;
typedef struct _CDOTAUserMsgUnitEvent__SpeechMute CDOTAUserMsgUnitEvent__SpeechMute;
typedef struct _CDOTAUserMsgUnitEvent__AddGesture CDOTAUserMsgUnitEvent__AddGesture;
typedef struct _CDOTAUserMsgUnitEvent__RemoveGesture CDOTAUserMsgUnitEvent__RemoveGesture;
typedef struct _CDOTAUserMsgUnitEvent__BloodImpact CDOTAUserMsgUnitEvent__BloodImpact;
typedef struct _CDOTAUserMsgUnitEvent__FadeGesture CDOTAUserMsgUnitEvent__FadeGesture;
typedef struct _CDOTAUserMsgItemPurchased CDOTAUserMsgItemPurchased;
typedef struct _CDOTAUserMsgItemFound CDOTAUserMsgItemFound;
typedef struct _CDOTAUserMsgParticleManager CDOTAUserMsgParticleManager;
typedef struct _CDOTAUserMsgParticleManager__ReleaseParticleIndex CDOTAUserMsgParticleManager__ReleaseParticleIndex;
typedef struct _CDOTAUserMsgParticleManager__CreateParticle CDOTAUserMsgParticleManager__CreateParticle;
typedef struct _CDOTAUserMsgParticleManager__DestroyParticle CDOTAUserMsgParticleManager__DestroyParticle;
typedef struct _CDOTAUserMsgParticleManager__DestroyParticleInvolving CDOTAUserMsgParticleManager__DestroyParticleInvolving;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticle CDOTAUserMsgParticleManager__UpdateParticle;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleFwd CDOTAUserMsgParticleManager__UpdateParticleFwd;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleOrient CDOTAUserMsgParticleManager__UpdateParticleOrient;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleFallback CDOTAUserMsgParticleManager__UpdateParticleFallback;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleOffset CDOTAUserMsgParticleManager__UpdateParticleOffset;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleEnt CDOTAUserMsgParticleManager__UpdateParticleEnt;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleSetFrozen CDOTAUserMsgParticleManager__UpdateParticleSetFrozen;
typedef struct _CDOTAUserMsgParticleManager__UpdateParticleShouldDraw CDOTAUserMsgParticleManager__UpdateParticleShouldDraw;
typedef struct _CDOTAUserMsgParticleManager__ChangeControlPointAttachment CDOTAUserMsgParticleManager__ChangeControlPointAttachment;
typedef struct _CDOTAUserMsgParticleManager__UpdateEntityPosition CDOTAUserMsgParticleManager__UpdateEntityPosition;
typedef struct _CDOTAUserMsgOverheadEvent CDOTAUserMsgOverheadEvent;
typedef struct _CDOTAUserMsgTutorialTipInfo CDOTAUserMsgTutorialTipInfo;
typedef struct _CDOTAUserMsgTutorialFinish CDOTAUserMsgTutorialFinish;
typedef struct _CDOTAUserMsgTutorialMinimapPosition CDOTAUserMsgTutorialMinimapPosition;
typedef struct _CDOTAUserMsgSendGenericToolTip CDOTAUserMsgSendGenericToolTip;
typedef struct _CDOTAUserMsgWorldLine CDOTAUserMsgWorldLine;
typedef struct _CDOTAUserMsgChatWheel CDOTAUserMsgChatWheel;
typedef struct _CDOTAUserMsgReceivedXmasGift CDOTAUserMsgReceivedXmasGift;
typedef struct _CDOTAUserMsgShowSurvey CDOTAUserMsgShowSurvey;
typedef struct _CDOTAUserMsgUpdateSharedContent CDOTAUserMsgUpdateSharedContent;
typedef struct _CDOTAUserMsgTutorialRequestExp CDOTAUserMsgTutorialRequestExp;
typedef struct _CDOTAUserMsgTutorialFade CDOTAUserMsgTutorialFade;
typedef struct _CDOTAUserMsgTutorialPingMinimap CDOTAUserMsgTutorialPingMinimap;
typedef struct _CDOTAUserMsgGamerulesStateChanged CDOTAUserMsgGamerulesStateChanged;
typedef struct _CDOTAUserMsgAddQuestLogEntry CDOTAUserMsgAddQuestLogEntry;
typedef struct _CDOTAUserMsgSendStatPopup CDOTAUserMsgSendStatPopup;
typedef struct _CDOTAUserMsgSendRoshanPopup CDOTAUserMsgSendRoshanPopup;
typedef struct _CDOTAUserMsgSendFinalGold CDOTAUserMsgSendFinalGold;
typedef struct _CDOTAUserMsgCustomMsg CDOTAUserMsgCustomMsg;
typedef struct _CDOTAUserMsgCoachHUDPing CDOTAUserMsgCoachHUDPing;
typedef struct _CDOTAUserMsgClientLoadGridNav CDOTAUserMsgClientLoadGridNav;
typedef struct _CDOTAUserMsgTEProjectile CDOTAUserMsgTEProjectile;
typedef struct _CDOTAUserMsgTEProjectileLoc CDOTAUserMsgTEProjectileLoc;
typedef struct _CDOTAUserMsgTEDotaBloodImpact CDOTAUserMsgTEDotaBloodImpact;
typedef struct _CDOTAUserMsgAbilityPing CDOTAUserMsgAbilityPing;
typedef struct _CDOTAUserMsgTEUnitAnimation CDOTAUserMsgTEUnitAnimation;
typedef struct _CDOTAUserMsgTEUnitAnimationEnd CDOTAUserMsgTEUnitAnimationEnd;
typedef struct _CDOTAUserMsgShowGenericPopup CDOTAUserMsgShowGenericPopup;
typedef struct _CDOTAUserMsgVoteStart CDOTAUserMsgVoteStart;
typedef struct _CDOTAUserMsgVoteUpdate CDOTAUserMsgVoteUpdate;
typedef struct _CDOTAUserMsgVoteEnd CDOTAUserMsgVoteEnd;
typedef struct _CDOTAUserMsgBoosterStatePlayer CDOTAUserMsgBoosterStatePlayer;
typedef struct _CDOTAUserMsgBoosterState CDOTAUserMsgBoosterState;
typedef struct _CDOTAUserMsgPlayerMMR CDOTAUserMsgPlayerMMR;
typedef struct _CDOTAUserMsgAbilitySteal CDOTAUserMsgAbilitySteal;
typedef struct _CDOTAUserMsgStatsHeroLookup CDOTAUserMsgStatsHeroLookup;
typedef struct _CDOTAUserMsgStatsHeroPositionInfo CDOTAUserMsgStatsHeroPositionInfo;
typedef struct _CDOTAUserMsgStatsHeroPositionInfo__PositionPair CDOTAUserMsgStatsHeroPositionInfo__PositionPair;
typedef struct _CDOTAUserMsgStatsHeroMinuteDetails CDOTAUserMsgStatsHeroMinuteDetails;
typedef struct _CDOTAUserMsgStatsTeamMinuteDetails CDOTAUserMsgStatsTeamMinuteDetails;
typedef struct _CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance;
typedef struct _CDOTAUserMsgStatsPlayerKillShare CDOTAUserMsgStatsPlayerKillShare;
typedef struct _CDOTAUserMsgStatsKillDetails CDOTAUserMsgStatsKillDetails;
typedef struct _CDOTAUserMsgStatsMatchDetails CDOTAUserMsgStatsMatchDetails;
typedef struct _CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails;
typedef struct _CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails;
typedef struct _CDOTAUserMsgMiniTaunt CDOTAUserMsgMiniTaunt;
typedef struct _CDOTAUserMsgSpeechBubble CDOTAUserMsgSpeechBubble;
typedef struct _CDOTAUserMsgCustomHeaderMessage CDOTAUserMsgCustomHeaderMessage;
typedef struct _CMsgHeroAbilityStat CMsgHeroAbilityStat;
typedef struct _CMsgCombatAnalyzerPlayerStat CMsgCombatAnalyzerPlayerStat;
typedef struct _CMsgCombatAnalyzerStats CMsgCombatAnalyzerStats;
typedef struct _CDOTAUserMsgBeastChat CDOTAUserMsgBeastChat;
typedef struct _CDOTAUserMsgCustomHudElementCreate CDOTAUserMsgCustomHudElementCreate;
typedef struct _CDOTAUserMsgCustomHudElementModify CDOTAUserMsgCustomHudElementModify;
typedef struct _CDOTAUserMsgCustomHudElementDestroy CDOTAUserMsgCustomHudElementDestroy;
typedef struct _CDOTAUserMsgCompendiumStatePlayer CDOTAUserMsgCompendiumStatePlayer;
typedef struct _CDOTAUserMsgCompendiumState CDOTAUserMsgCompendiumState;
typedef struct _CDOTAUserMsgProjectionAbility CDOTAUserMsgProjectionAbility;
typedef struct _CDOTAUserMsgProjectionEvent CDOTAUserMsgProjectionEvent;
typedef struct _CDOTAUserMsgXPAlert CDOTAUserMsgXPAlert;
typedef struct _CDOTAUserMsgUpdateQuestProgress CDOTAUserMsgUpdateQuestProgress;
typedef struct _CDOTAUserMsgQuestStatus CDOTAUserMsgQuestStatus;


/* --- enums --- */

typedef enum _CDOTAUserMsgPredictionResult__Prediction__EResult {
  CDOTAUSER_MSG__PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_ItemGranted = 1,
  CDOTAUSER_MSG__PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_Destroyed = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CDOTAUSER_MSG__PREDICTION_RESULT__PREDICTION__ERESULT)
} CDOTAUserMsgPredictionResult__Prediction__EResult;
typedef enum _CDOTAResponseQuerySerialized__Fact__ValueType {
  CDOTARESPONSE_QUERY_SERIALIZED__FACT__VALUE_TYPE__NUMERIC = 1,
  CDOTARESPONSE_QUERY_SERIALIZED__FACT__VALUE_TYPE__STRING = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CDOTARESPONSE_QUERY_SERIALIZED__FACT__VALUE_TYPE)
} CDOTAResponseQuerySerialized__Fact__ValueType;
typedef enum _EDotaUserMessages {
  EDOTA_USER_MESSAGES__DOTA_UM_AddUnitToSelection = 464,
  EDOTA_USER_MESSAGES__DOTA_UM_AIDebugLine = 465,
  EDOTA_USER_MESSAGES__DOTA_UM_ChatEvent = 466,
  EDOTA_USER_MESSAGES__DOTA_UM_CombatHeroPositions = 467,
  EDOTA_USER_MESSAGES__DOTA_UM_CombatLogData = 468,
  EDOTA_USER_MESSAGES__DOTA_UM_CombatLogShowDeath = 470,
  EDOTA_USER_MESSAGES__DOTA_UM_CreateLinearProjectile = 471,
  EDOTA_USER_MESSAGES__DOTA_UM_DestroyLinearProjectile = 472,
  EDOTA_USER_MESSAGES__DOTA_UM_DodgeTrackingProjectiles = 473,
  EDOTA_USER_MESSAGES__DOTA_UM_GlobalLightColor = 474,
  EDOTA_USER_MESSAGES__DOTA_UM_GlobalLightDirection = 475,
  EDOTA_USER_MESSAGES__DOTA_UM_InvalidCommand = 476,
  EDOTA_USER_MESSAGES__DOTA_UM_LocationPing = 477,
  EDOTA_USER_MESSAGES__DOTA_UM_MapLine = 478,
  EDOTA_USER_MESSAGES__DOTA_UM_MiniKillCamInfo = 479,
  EDOTA_USER_MESSAGES__DOTA_UM_MinimapDebugPoint = 480,
  EDOTA_USER_MESSAGES__DOTA_UM_MinimapEvent = 481,
  EDOTA_USER_MESSAGES__DOTA_UM_NevermoreRequiem = 482,
  EDOTA_USER_MESSAGES__DOTA_UM_OverheadEvent = 483,
  EDOTA_USER_MESSAGES__DOTA_UM_SetNextAutobuyItem = 484,
  EDOTA_USER_MESSAGES__DOTA_UM_SharedCooldown = 485,
  EDOTA_USER_MESSAGES__DOTA_UM_SpectatorPlayerClick = 486,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialTipInfo = 487,
  EDOTA_USER_MESSAGES__DOTA_UM_UnitEvent = 488,
  EDOTA_USER_MESSAGES__DOTA_UM_ParticleManager = 489,
  EDOTA_USER_MESSAGES__DOTA_UM_BotChat = 490,
  EDOTA_USER_MESSAGES__DOTA_UM_HudError = 491,
  EDOTA_USER_MESSAGES__DOTA_UM_ItemPurchased = 492,
  EDOTA_USER_MESSAGES__DOTA_UM_Ping = 493,
  EDOTA_USER_MESSAGES__DOTA_UM_ItemFound = 494,
  EDOTA_USER_MESSAGES__DOTA_UM_CharacterSpeakConcept = 495,
  EDOTA_USER_MESSAGES__DOTA_UM_SwapVerify = 496,
  EDOTA_USER_MESSAGES__DOTA_UM_WorldLine = 497,
  EDOTA_USER_MESSAGES__DOTA_UM_TournamentDrop = 498,
  EDOTA_USER_MESSAGES__DOTA_UM_ItemAlert = 499,
  EDOTA_USER_MESSAGES__DOTA_UM_HalloweenDrops = 500,
  EDOTA_USER_MESSAGES__DOTA_UM_ChatWheel = 501,
  EDOTA_USER_MESSAGES__DOTA_UM_ReceivedXmasGift = 502,
  EDOTA_USER_MESSAGES__DOTA_UM_UpdateSharedContent = 503,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialRequestExp = 504,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialPingMinimap = 505,
  EDOTA_USER_MESSAGES__DOTA_UM_GamerulesStateChanged = 506,
  EDOTA_USER_MESSAGES__DOTA_UM_ShowSurvey = 507,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialFade = 508,
  EDOTA_USER_MESSAGES__DOTA_UM_AddQuestLogEntry = 509,
  EDOTA_USER_MESSAGES__DOTA_UM_SendStatPopup = 510,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialFinish = 511,
  EDOTA_USER_MESSAGES__DOTA_UM_SendRoshanPopup = 512,
  EDOTA_USER_MESSAGES__DOTA_UM_SendGenericToolTip = 513,
  EDOTA_USER_MESSAGES__DOTA_UM_SendFinalGold = 514,
  EDOTA_USER_MESSAGES__DOTA_UM_CustomMsg = 515,
  EDOTA_USER_MESSAGES__DOTA_UM_CoachHUDPing = 516,
  EDOTA_USER_MESSAGES__DOTA_UM_ClientLoadGridNav = 517,
  EDOTA_USER_MESSAGES__DOTA_UM_TE_Projectile = 518,
  EDOTA_USER_MESSAGES__DOTA_UM_TE_ProjectileLoc = 519,
  EDOTA_USER_MESSAGES__DOTA_UM_TE_DotaBloodImpact = 520,
  EDOTA_USER_MESSAGES__DOTA_UM_TE_UnitAnimation = 521,
  EDOTA_USER_MESSAGES__DOTA_UM_TE_UnitAnimationEnd = 522,
  EDOTA_USER_MESSAGES__DOTA_UM_AbilityPing = 523,
  EDOTA_USER_MESSAGES__DOTA_UM_ShowGenericPopup = 524,
  EDOTA_USER_MESSAGES__DOTA_UM_VoteStart = 525,
  EDOTA_USER_MESSAGES__DOTA_UM_VoteUpdate = 526,
  EDOTA_USER_MESSAGES__DOTA_UM_VoteEnd = 527,
  EDOTA_USER_MESSAGES__DOTA_UM_BoosterState = 528,
  EDOTA_USER_MESSAGES__DOTA_UM_WillPurchaseAlert = 529,
  EDOTA_USER_MESSAGES__DOTA_UM_TutorialMinimapPosition = 530,
  EDOTA_USER_MESSAGES__DOTA_UM_PlayerMMR = 531,
  EDOTA_USER_MESSAGES__DOTA_UM_AbilitySteal = 532,
  EDOTA_USER_MESSAGES__DOTA_UM_CourierKilledAlert = 533,
  EDOTA_USER_MESSAGES__DOTA_UM_EnemyItemAlert = 534,
  EDOTA_USER_MESSAGES__DOTA_UM_StatsMatchDetails = 535,
  EDOTA_USER_MESSAGES__DOTA_UM_MiniTaunt = 536,
  EDOTA_USER_MESSAGES__DOTA_UM_BuyBackStateAlert = 537,
  EDOTA_USER_MESSAGES__DOTA_UM_SpeechBubble = 538,
  EDOTA_USER_MESSAGES__DOTA_UM_CustomHeaderMessage = 539,
  EDOTA_USER_MESSAGES__DOTA_UM_QuickBuyAlert = 540,
  EDOTA_USER_MESSAGES__DOTA_UM_StatsHeroDetails = 541,
  EDOTA_USER_MESSAGES__DOTA_UM_PredictionResult = 542,
  EDOTA_USER_MESSAGES__DOTA_UM_ModifierAlert = 543,
  EDOTA_USER_MESSAGES__DOTA_UM_HPManaAlert = 544,
  EDOTA_USER_MESSAGES__DOTA_UM_GlyphAlert = 545,
  EDOTA_USER_MESSAGES__DOTA_UM_BeastChat = 546,
  EDOTA_USER_MESSAGES__DOTA_UM_SpectatorPlayerUnitOrders = 547,
  EDOTA_USER_MESSAGES__DOTA_UM_CustomHudElement_Create = 548,
  EDOTA_USER_MESSAGES__DOTA_UM_CustomHudElement_Modify = 549,
  EDOTA_USER_MESSAGES__DOTA_UM_CustomHudElement_Destroy = 550,
  EDOTA_USER_MESSAGES__DOTA_UM_CompendiumState = 551,
  EDOTA_USER_MESSAGES__DOTA_UM_ProjectionAbility = 552,
  EDOTA_USER_MESSAGES__DOTA_UM_ProjectionEvent = 553,
  EDOTA_USER_MESSAGES__DOTA_UM_CombatLogDataHLTV = 554,
  EDOTA_USER_MESSAGES__DOTA_UM_XPAlert = 555,
  EDOTA_USER_MESSAGES__DOTA_UM_UpdateQuestProgress = 556,
  EDOTA_USER_MESSAGES__DOTA_UM_MatchMetadata = 557,
  EDOTA_USER_MESSAGES__DOTA_UM_MatchDetails = 558,
  EDOTA_USER_MESSAGES__DOTA_UM_QuestStatus = 559
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTA_USER_MESSAGES)
} EDotaUserMessages;
typedef enum _DOTACHATMESSAGE {
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_INVALID = -1,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_KILL = 0,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_DENY = 1,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_BARRACKS_KILL = 2,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_TOWER_KILL = 3,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_TOWER_DENY = 4,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_FIRSTBLOOD = 5,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_STREAK_KILL = 6,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_BUYBACK = 7,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_AEGIS = 8,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ROSHAN_KILL = 9,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_COURIER_LOST = 10,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_COURIER_RESPAWNED = 11,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_GLYPH_USED = 12,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ITEM_PURCHASE = 13,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CONNECT = 14,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DISCONNECT = 15,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RECONNECT = 19,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_LEFT = 20,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_SAFE_TO_LEAVE = 21,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RUNE_PICKUP = 22,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RUNE_BOTTLE = 23,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_INTHEBAG = 24,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_SECRETSHOP = 25,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ITEMS_COMBINED = 27,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_SUPER_CREEPS = 28,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CHARGES_EXHAUSTED = 30,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CANTPAUSE = 31,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_NOPAUSESLEFT = 32,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CANTPAUSEYET = 33,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PAUSED = 34,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_UNPAUSED = 36,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_AUTO_UNPAUSED = 37,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_YOUPAUSED = 38,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CANTUNPAUSETEAM = 39,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_VOICE_TEXT_BANNED = 41,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_REPORT_REMINDER = 43,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ECON_ITEM = 44,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_TAUNT = 45,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RANDOM = 46,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RD_TURN = 47,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DROP_RATE_BONUS = 49,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_NO_BATTLE_POINTS = 50,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DENIED_AEGIS = 51,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_INFORMATIONAL = 52,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_AEGIS_STOLEN = 53,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ROSHAN_CANDY = 54,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ITEM_GIFTED = 55,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_LEFT_AFK = 73,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_ABANDONED = 75,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_COMPENDIUM_LEVEL = 85,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ASSASSIN_SUCCESS = 88,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_ASSASSIN_DENIED = 89,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_EFFIGY_KILL = 91,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_YEAR_BEAST_KILLED = 93,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_PAUSE_COUNTDOWN = 94,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_COINS_WAGERED = 95,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_NOMINATED_BAN = 96,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_BANNED = 97,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_HERO_BAN_COUNT = 98,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_RIVER_PAINTED = 99,
  DOTA__CHAT__MESSAGE__CHAT_MESSAGE_SCAN_USED = 100
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__CHAT__MESSAGE)
} DOTACHATMESSAGE;
typedef enum _DOTANOBATTLEPOINTSREASONS {
  DOTA__NO__BATTLE__POINTS__REASONS__NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1,
  DOTA__NO__BATTLE__POINTS__REASONS__NO_BATTLE_POINTS_PRACTICE_BOTS = 2,
  DOTA__NO__BATTLE__POINTS__REASONS__NO_BATTLE_POINTS_CHEATS_ENABLED = 3,
  DOTA__NO__BATTLE__POINTS__REASONS__NO_BATTLE_POINTS_LOW_PRIORITY = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__NO__BATTLE__POINTS__REASONS)
} DOTANOBATTLEPOINTSREASONS;
typedef enum _DOTACHATINFORMATIONAL {
  DOTA__CHAT__INFORMATIONAL__INFO_COOP_BATTLE_POINTS_RULES = 1,
  DOTA__CHAT__INFORMATIONAL__INFO_FROSTIVUS_ABANDON_REMINDER = 2,
  DOTA__CHAT__INFORMATIONAL__INFO_RANKED_REMINDER = 3,
  DOTA__CHAT__INFORMATIONAL__INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__CHAT__INFORMATIONAL)
} DOTACHATINFORMATIONAL;
typedef enum _DOTAABILITYPINGTYPE {
  DOTA__ABILITY__PING__TYPE__ABILITY_PING_READY = 1,
  DOTA__ABILITY__PING__TYPE__ABILITY_PING_MANA = 2,
  DOTA__ABILITY__PING__TYPE__ABILITY_PING_COOLDOWN = 3,
  DOTA__ABILITY__PING__TYPE__ABILITY_PING_ENEMY = 4,
  DOTA__ABILITY__PING__TYPE__ABILITY_PING_UNLEARNED = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__ABILITY__PING__TYPE)
} DOTAABILITYPINGTYPE;
typedef enum _EDotaEntityMessages {
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_SPEECH = 0,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_SPEECH_MUTE = 1,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_ADD_GESTURE = 2,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_REMOVE_GESTURE = 3,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_REMOVE_ALL_GESTURES = 4,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_FADE_GESTURE = 6,
  EDOTA_ENTITY_MESSAGES__DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EDOTA_ENTITY_MESSAGES)
} EDotaEntityMessages;
typedef enum _DOTAPARTICLEMESSAGE {
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_CREATE = 0,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE = 1,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_DESTROY = 7,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_RELEASE = 9,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_LATENCY = 10,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_FROZEN = 12,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13,
  DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__PARTICLE__MESSAGE)
} DOTAPARTICLEMESSAGE;
typedef enum _DOTAOVERHEADALERT {
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_GOLD = 0,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_DENY = 1,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_CRITICAL = 2,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_XP = 3,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_MISS = 5,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_DAMAGE = 6,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_EVADE = 7,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_BLOCK = 8,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_HEAL = 10,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_MANA_ADD = 11,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_MANA_LOSS = 12,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_LAST_HIT_EARLY = 13,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_LAST_HIT_CLOSE = 14,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_LAST_HIT_MISS = 15,
  DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_MAGICAL_BLOCK = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__OVERHEAD__ALERT)
} DOTAOVERHEADALERT;
typedef enum _DOTAPOSITIONCATEGORY {
  DOTA__POSITION__CATEGORY__DOTA_POSITION_NONE = 0,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_BOTTOM_LANE = 1,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_MID_LANE = 2,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_TOP_LANE = 3,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_RADIANT_JUNGLE = 4,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_DIRE_JUNGLE = 5,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_RADIANT_ANCIENTS = 6,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_DIRE_ANCIENTS = 7,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_RADIANT_SECRET_SHOP = 8,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_DIRE_SECRET_SHOP = 9,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_RIVER = 10,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_ROSHAN_PIT = 11,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_RADIANT_BASE = 12,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_DIRE_BASE = 13,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_FOUNTAIN = 14,
  DOTA__POSITION__CATEGORY__DOTA_POSITION_OTHER = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__POSITION__CATEGORY)
} DOTAPOSITIONCATEGORY;
typedef enum _DOTAABILITYTARGETTYPE {
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_NONE = 0,
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_SELF = 1,
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_ALLY_HERO = 2,
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_ALLY_CREEP = 3,
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_ENEMY_HERO = 4,
  DOTA__ABILITY__TARGET__TYPE__DOTA_ABILITY_TARGET_ENEMY_CREEP = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__ABILITY__TARGET__TYPE)
} DOTAABILITYTARGETTYPE;
typedef enum _EHeroStatType {
  EHERO_STAT_TYPE__k_EHeroStatType_None = 0,
  EHERO_STAT_TYPE__k_EHeroStatType_AxeTotalDamage = 2000,
  EHERO_STAT_TYPE__k_EHeroStatType_BattleHungerDamage = 2001,
  EHERO_STAT_TYPE__k_EHeroStatType_CounterHelixDamage = 2002,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeDamage = 2003,
  EHERO_STAT_TYPE__k_EHeroStatType_BerserkersCallCastCount = 2004,
  EHERO_STAT_TYPE__k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005,
  EHERO_STAT_TYPE__k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006,
  EHERO_STAT_TYPE__k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007,
  EHERO_STAT_TYPE__k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008,
  EHERO_STAT_TYPE__k_EHeroStatType_BattleHungerCastCount = 2009,
  EHERO_STAT_TYPE__k_EHeroStatType_BattleHungerPotentialDuration = 2010,
  EHERO_STAT_TYPE__k_EHeroStatType_BattleHungerAverageDuration = 2011,
  EHERO_STAT_TYPE__k_EHeroStatType_CounterHelixProcCount = 2012,
  EHERO_STAT_TYPE__k_EHeroStatType_CounterHelixHeroProcCount = 2013,
  EHERO_STAT_TYPE__k_EHeroStatType_CounterHelixHeroesHitAverage = 2014,
  EHERO_STAT_TYPE__k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeCastCount = 2016,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeKillCount = 2017,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeAverageHealthCulled = 2018,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019,
  EHERO_STAT_TYPE__k_EHeroStatType_CullingBladeHeroBuffAverage = 2020
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EHERO_STAT_TYPE)
} EHeroStatType;
typedef enum _EPlayerVoiceListenState {
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_None = 0,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedChatBanned = 1,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedPartner = 2,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedHLTVTalkerNotSpectator = 3,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedHLTVNoTalkerPlayerID = 4,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedHLTVTalkerNotBroadcaster = 5,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedTeamSpectator = 6,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_DeniedStudent = 8,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_Denied = 64,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowHLTVTalkerIsBroadcaster = 65,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowCoBroadcaster = 66,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowAllChat = 67,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowStudentToCoach = 68,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowFellowStudent = 69,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowTalkerIsCoach = 70,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowCoachHearTeam = 71,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowSameTeam = 72,
  EPLAYER_VOICE_LISTEN_STATE__kPVLS_AllowShowcase = 73
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPLAYER_VOICE_LISTEN_STATE)
} EPlayerVoiceListenState;
typedef enum _EProjectionEvent {
  EPROJECTION_EVENT__ePE_FirstBlood = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EPROJECTION_EVENT)
} EProjectionEvent;

/* --- messages --- */

struct  _CDOTAUserMsgAIDebugLine
{
  ProtobufCMessage base;
  char *message;
};
#define CDOTAUSER_MSG__AIDEBUG_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__aidebug_line__descriptor) \
    , NULL }


struct  _CDOTAUserMsgPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ping;
  uint32_t ping;
  protobuf_c_boolean has_loss;
  uint32_t loss;
};
#define CDOTAUSER_MSG__PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__ping__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgSwapVerify
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
};
#define CDOTAUSER_MSG__SWAP_VERIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__swap_verify__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgChatEvent
{
  ProtobufCMessage base;
  DOTACHATMESSAGE type;
  protobuf_c_boolean has_value;
  uint32_t value;
  protobuf_c_boolean has_playerid_1;
  int32_t playerid_1;
  protobuf_c_boolean has_playerid_2;
  int32_t playerid_2;
  protobuf_c_boolean has_playerid_3;
  int32_t playerid_3;
  protobuf_c_boolean has_playerid_4;
  int32_t playerid_4;
  protobuf_c_boolean has_playerid_5;
  int32_t playerid_5;
  protobuf_c_boolean has_playerid_6;
  int32_t playerid_6;
  protobuf_c_boolean has_value2;
  uint32_t value2;
  protobuf_c_boolean has_value3;
  uint32_t value3;
};
#define CDOTAUSER_MSG__CHAT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__chat_event__descriptor) \
    , DOTA__CHAT__MESSAGE__CHAT_MESSAGE_INVALID, 0,0, 0,-1, 0,-1, 0,-1, 0,-1, 0,-1, 0,-1, 0,0, 0,0 }


struct  _CDOTAUserMsgCombatLogShowDeath
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__COMBAT_LOG_SHOW_DEATH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__combat_log_show_death__descriptor) \
     }


struct  _CDOTAUserMsgBotChat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  char *format;
  char *message;
  char *target;
};
#define CDOTAUSER_MSG__BOT_CHAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__bot_chat__descriptor) \
    , 0,0, NULL, NULL, NULL }


struct  _CDOTAUserMsgCombatHeroPositions
{
  ProtobufCMessage base;
  protobuf_c_boolean has_index;
  uint32_t index;
  protobuf_c_boolean has_time;
  int32_t time;
  CMsgVector2D *world_pos;
  protobuf_c_boolean has_health;
  int32_t health;
};
#define CDOTAUSER_MSG__COMBAT_HERO_POSITIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__combat_hero_positions__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgMiniKillCamInfo__Attacker__Ability
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ability;
  uint32_t ability;
  protobuf_c_boolean has_damage;
  int32_t damage;
};
#define CDOTAUSER_MSG__MINI_KILL_CAM_INFO__ATTACKER__ABILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__mini_kill_cam_info__attacker__ability__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgMiniKillCamInfo__Attacker
{
  ProtobufCMessage base;
  protobuf_c_boolean has_attacker;
  uint32_t attacker;
  protobuf_c_boolean has_total_damage;
  int32_t total_damage;
  size_t n_abilities;
  CDOTAUserMsgMiniKillCamInfo__Attacker__Ability **abilities;
};
#define CDOTAUSER_MSG__MINI_KILL_CAM_INFO__ATTACKER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__mini_kill_cam_info__attacker__descriptor) \
    , 0,0, 0,0, 0,NULL }


struct  _CDOTAUserMsgMiniKillCamInfo
{
  ProtobufCMessage base;
  size_t n_attackers;
  CDOTAUserMsgMiniKillCamInfo__Attacker **attackers;
};
#define CDOTAUSER_MSG__MINI_KILL_CAM_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__mini_kill_cam_info__descriptor) \
    , 0,NULL }


struct  _CDOTAUserMsgGlobalLightColor
{
  ProtobufCMessage base;
  protobuf_c_boolean has_color;
  uint32_t color;
  protobuf_c_boolean has_duration;
  float duration;
};
#define CDOTAUSER_MSG__GLOBAL_LIGHT_COLOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__global_light_color__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgGlobalLightDirection
{
  ProtobufCMessage base;
  CMsgVector *direction;
  protobuf_c_boolean has_duration;
  float duration;
};
#define CDOTAUSER_MSG__GLOBAL_LIGHT_DIRECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__global_light_direction__descriptor) \
    , NULL, 0,0 }


struct  _CDOTAUserMsgLocationPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  CDOTAMsgLocationPing *location_ping;
};
#define CDOTAUSER_MSG__LOCATION_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__location_ping__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgItemAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  CDOTAMsgItemAlert *item_alert;
};
#define CDOTAUSER_MSG__ITEM_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__item_alert__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgEnemyItemAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_target_player_id;
  uint32_t target_player_id;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
  protobuf_c_boolean has_rune_type;
  uint32_t rune_type;
};
#define CDOTAUSER_MSG__ENEMY_ITEM_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__enemy_item_alert__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgModifierAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  char *class_name;
  protobuf_c_boolean has_stack_count;
  uint32_t stack_count;
  protobuf_c_boolean has_is_debuff;
  protobuf_c_boolean is_debuff;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTAUSER_MSG__MODIFIER_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__modifier_alert__descriptor) \
    , 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgHPManaAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTAUSER_MSG__HPMANA_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__hpmana_alert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgGlyphAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_negative;
  protobuf_c_boolean negative;
};
#define CDOTAUSER_MSG__GLYPH_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__glyph_alert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgWillPurchaseAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_gold_remaining;
  uint32_t gold_remaining;
};
#define CDOTAUSER_MSG__WILL_PURCHASE_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__will_purchase_alert__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgBuyBackStateAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
};
#define CDOTAUSER_MSG__BUY_BACK_STATE_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__buy_back_state_alert__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgQuickBuyAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_itemid;
  int32_t itemid;
  protobuf_c_boolean has_gold_required;
  int32_t gold_required;
};
#define CDOTAUSER_MSG__QUICK_BUY_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__quick_buy_alert__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgCourierKilledAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_team;
  uint32_t team;
  protobuf_c_boolean has_gold_value;
  uint32_t gold_value;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  protobuf_c_boolean has_timestamp;
  int32_t timestamp;
};
#define CDOTAUSER_MSG__COURIER_KILLED_ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__courier_killed_alert__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgMinimapEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_type;
  int32_t event_type;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  protobuf_c_boolean has_x;
  int32_t x;
  protobuf_c_boolean has_y;
  int32_t y;
  protobuf_c_boolean has_duration;
  int32_t duration;
};
#define CDOTAUSER_MSG__MINIMAP_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__minimap_event__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgMapLine
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  CDOTAMsgMapLine *mapline;
};
#define CDOTAUSER_MSG__MAP_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__map_line__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgMinimapDebugPoint
{
  ProtobufCMessage base;
  CMsgVector *location;
  protobuf_c_boolean has_color;
  uint32_t color;
  protobuf_c_boolean has_size;
  int32_t size;
  protobuf_c_boolean has_duration;
  float duration;
  protobuf_c_boolean has_index;
  int32_t index;
};
#define CDOTAUSER_MSG__MINIMAP_DEBUG_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__minimap_debug_point__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgCreateLinearProjectile
{
  ProtobufCMessage base;
  CMsgVector *origin;
  CMsgVector2D *velocity;
  protobuf_c_boolean has_entindex;
  int32_t entindex;
  protobuf_c_boolean has_particle_index;
  uint64_t particle_index;
  protobuf_c_boolean has_handle;
  int32_t handle;
  CMsgVector2D *acceleration;
  protobuf_c_boolean has_max_speed;
  float max_speed;
};
#define CDOTAUSER_MSG__CREATE_LINEAR_PROJECTILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__create_linear_projectile__descriptor) \
    , NULL, NULL, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgDestroyLinearProjectile
{
  ProtobufCMessage base;
  protobuf_c_boolean has_handle;
  int32_t handle;
};
#define CDOTAUSER_MSG__DESTROY_LINEAR_PROJECTILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__destroy_linear_projectile__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgDodgeTrackingProjectiles
{
  ProtobufCMessage base;
  int32_t entindex;
  protobuf_c_boolean has_attacks_only;
  protobuf_c_boolean attacks_only;
};
#define CDOTAUSER_MSG__DODGE_TRACKING_PROJECTILES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__dodge_tracking_projectiles__descriptor) \
    , 0, 0,0 }


struct  _CDOTAUserMsgSpectatorPlayerClick
{
  ProtobufCMessage base;
  int32_t entindex;
  protobuf_c_boolean has_order_type;
  int32_t order_type;
  protobuf_c_boolean has_target_index;
  int32_t target_index;
};
#define CDOTAUSER_MSG__SPECTATOR_PLAYER_CLICK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__spectator_player_click__descriptor) \
    , 0, 0,0, 0,0 }


struct  _CDOTAUserMsgSpectatorPlayerUnitOrders
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entindex;
  int32_t entindex;
  protobuf_c_boolean has_order_type;
  int32_t order_type;
  size_t n_units;
  int32_t *units;
  protobuf_c_boolean has_target_index;
  int32_t target_index;
  protobuf_c_boolean has_ability_index;
  int32_t ability_index;
  CMsgVector *position;
  protobuf_c_boolean has_queue;
  protobuf_c_boolean queue;
  protobuf_c_boolean has_sequence_number;
  int32_t sequence_number;
};
#define CDOTAUSER_MSG__SPECTATOR_PLAYER_UNIT_ORDERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__spectator_player_unit_orders__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,0, 0,0, NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgNevermoreRequiem
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  protobuf_c_boolean has_lines;
  int32_t lines;
  CMsgVector *origin;
  protobuf_c_boolean has_reverse;
  protobuf_c_boolean reverse;
};
#define CDOTAUSER_MSG__NEVERMORE_REQUIEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__nevermore_requiem__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgInvalidCommand
{
  ProtobufCMessage base;
  char *message;
};
#define CDOTAUSER_MSG__INVALID_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__invalid_command__descriptor) \
    , NULL }


struct  _CDOTAUserMsgHudError
{
  ProtobufCMessage base;
  protobuf_c_boolean has_order_id;
  int32_t order_id;
};
#define CDOTAUSER_MSG__HUD_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__hud_error__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgSharedCooldown
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entindex;
  int32_t entindex;
  char *name;
  protobuf_c_boolean has_cooldown;
  float cooldown;
  protobuf_c_boolean has_name_index;
  int32_t name_index;
};
#define CDOTAUSER_MSG__SHARED_COOLDOWN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__shared_cooldown__descriptor) \
    , 0,0, NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgSetNextAutobuyItem
{
  ProtobufCMessage base;
  char *name;
};
#define CDOTAUSER_MSG__SET_NEXT_AUTOBUY_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__set_next_autobuy_item__descriptor) \
    , NULL }


struct  _CDOTAUserMsgHalloweenDrops
{
  ProtobufCMessage base;
  size_t n_item_defs;
  uint32_t *item_defs;
  size_t n_player_ids;
  uint32_t *player_ids;
  protobuf_c_boolean has_prize_list;
  uint32_t prize_list;
};
#define CDOTAUSER_MSG__HALLOWEEN_DROPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__halloween_drops__descriptor) \
    , 0,NULL, 0,NULL, 0,0 }


struct  _CDOTAUserMsgPredictionResult__Prediction
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_def;
  uint32_t item_def;
  protobuf_c_boolean has_num_correct;
  uint32_t num_correct;
  protobuf_c_boolean has_num_fails;
  uint32_t num_fails;
  protobuf_c_boolean has_result;
  CDOTAUserMsgPredictionResult__Prediction__EResult result;
  size_t n_granted_item_defs;
  uint32_t *granted_item_defs;
};
#define CDOTAUSER_MSG__PREDICTION_RESULT__PREDICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__prediction_result__prediction__descriptor) \
    , 0,0, 0,0, 0,0, 0,CDOTAUSER_MSG__PREDICTION_RESULT__PREDICTION__ERESULT__k_eResult_ItemGranted, 0,NULL }


struct  _CDOTAUserMsgPredictionResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  protobuf_c_boolean has_correct;
  protobuf_c_boolean correct;
  size_t n_predictions;
  CDOTAUserMsgPredictionResult__Prediction **predictions;
};
#define CDOTAUSER_MSG__PREDICTION_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__prediction_result__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL }


struct  _CDOTAResponseQuerySerialized__Fact
{
  ProtobufCMessage base;
  int32_t key;
  CDOTAResponseQuerySerialized__Fact__ValueType valtype;
  protobuf_c_boolean has_val_numeric;
  float val_numeric;
  char *val_string;
};
#define CDOTARESPONSE_QUERY_SERIALIZED__FACT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaresponse_query_serialized__fact__descriptor) \
    , 0, CDOTARESPONSE_QUERY_SERIALIZED__FACT__VALUE_TYPE__NUMERIC, 0,0, NULL }


struct  _CDOTAResponseQuerySerialized
{
  ProtobufCMessage base;
  size_t n_facts;
  CDOTAResponseQuerySerialized__Fact **facts;
};
#define CDOTARESPONSE_QUERY_SERIALIZED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaresponse_query_serialized__descriptor) \
    , 0,NULL }


struct  _CDOTASpeechMatchOnClient
{
  ProtobufCMessage base;
  protobuf_c_boolean has_concept;
  int32_t concept;
  protobuf_c_boolean has_recipient_type;
  int32_t recipient_type;
  CDOTAResponseQuerySerialized *responsequery;
  protobuf_c_boolean has_randomseed;
  int32_t randomseed;
};
#define CDOTASPEECH_MATCH_ON_CLIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotaspeech_match_on_client__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgUnitEvent__Speech
{
  ProtobufCMessage base;
  protobuf_c_boolean has_concept;
  int32_t concept;
  char *response;
  protobuf_c_boolean has_recipient_type;
  int32_t recipient_type;
  protobuf_c_boolean has_level;
  int32_t level;
  protobuf_c_boolean has_muteable;
  protobuf_c_boolean muteable;
};
#define CDOTAUSER_MSG__UNIT_EVENT__SPEECH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__speech__descriptor) \
    , 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgUnitEvent__SpeechMute
{
  ProtobufCMessage base;
  protobuf_c_boolean has_delay;
  float delay;
};
#define CDOTAUSER_MSG__UNIT_EVENT__SPEECH_MUTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__speech_mute__descriptor) \
    , 0,0.5 }


struct  _CDOTAUserMsgUnitEvent__AddGesture
{
  ProtobufCMessage base;
  protobuf_c_boolean has_activity;
  int32_t activity;
  protobuf_c_boolean has_slot;
  int32_t slot;
  protobuf_c_boolean has_fade_in;
  float fade_in;
  protobuf_c_boolean has_fade_out;
  float fade_out;
  protobuf_c_boolean has_playback_rate;
  float playback_rate;
};
#define CDOTAUSER_MSG__UNIT_EVENT__ADD_GESTURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__add_gesture__descriptor) \
    , 0,0, 0,0, 0,0, 0,0.1, 0,1 }


struct  _CDOTAUserMsgUnitEvent__RemoveGesture
{
  ProtobufCMessage base;
  protobuf_c_boolean has_activity;
  int32_t activity;
};
#define CDOTAUSER_MSG__UNIT_EVENT__REMOVE_GESTURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__remove_gesture__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgUnitEvent__BloodImpact
{
  ProtobufCMessage base;
  protobuf_c_boolean has_scale;
  int32_t scale;
  protobuf_c_boolean has_x_normal;
  int32_t x_normal;
  protobuf_c_boolean has_y_normal;
  int32_t y_normal;
};
#define CDOTAUSER_MSG__UNIT_EVENT__BLOOD_IMPACT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__blood_impact__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgUnitEvent__FadeGesture
{
  ProtobufCMessage base;
  protobuf_c_boolean has_activity;
  int32_t activity;
};
#define CDOTAUSER_MSG__UNIT_EVENT__FADE_GESTURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__fade_gesture__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgUnitEvent
{
  ProtobufCMessage base;
  EDotaEntityMessages msg_type;
  int32_t entity_index;
  CDOTAUserMsgUnitEvent__Speech *speech;
  CDOTAUserMsgUnitEvent__SpeechMute *speech_mute;
  CDOTAUserMsgUnitEvent__AddGesture *add_gesture;
  CDOTAUserMsgUnitEvent__RemoveGesture *remove_gesture;
  CDOTAUserMsgUnitEvent__BloodImpact *blood_impact;
  CDOTAUserMsgUnitEvent__FadeGesture *fade_gesture;
  CDOTASpeechMatchOnClient *speech_match_on_client;
};
#define CDOTAUSER_MSG__UNIT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__unit_event__descriptor) \
    , EDOTA_ENTITY_MESSAGES__DOTA_UNIT_SPEECH, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _CDOTAUserMsgItemPurchased
{
  ProtobufCMessage base;
  protobuf_c_boolean has_item_index;
  int32_t item_index;
};
#define CDOTAUSER_MSG__ITEM_PURCHASED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__item_purchased__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgItemFound
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player;
  int32_t player;
  protobuf_c_boolean has_quality;
  int32_t quality;
  protobuf_c_boolean has_rarity;
  int32_t rarity;
  protobuf_c_boolean has_method;
  int32_t method;
  protobuf_c_boolean has_itemdef;
  int32_t itemdef;
};
#define CDOTAUSER_MSG__ITEM_FOUND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__item_found__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgParticleManager__ReleaseParticleIndex
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__RELEASE_PARTICLE_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__release_particle_index__descriptor) \
     }


struct  _CDOTAUserMsgParticleManager__CreateParticle
{
  ProtobufCMessage base;
  protobuf_c_boolean has_particle_name_index;
  uint64_t particle_name_index;
  protobuf_c_boolean has_attach_type;
  int32_t attach_type;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  protobuf_c_boolean has_entity_handle_for_modifiers;
  int32_t entity_handle_for_modifiers;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__CREATE_PARTICLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__create_particle__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgParticleManager__DestroyParticle
{
  ProtobufCMessage base;
  protobuf_c_boolean has_destroy_immediately;
  protobuf_c_boolean destroy_immediately;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__DESTROY_PARTICLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__destroy_particle__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgParticleManager__DestroyParticleInvolving
{
  ProtobufCMessage base;
  protobuf_c_boolean has_destroy_immediately;
  protobuf_c_boolean destroy_immediately;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__DESTROY_PARTICLE_INVOLVING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__destroy_particle_involving__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgParticleManager__UpdateParticle
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  CMsgVector *position;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgParticleManager__UpdateParticleFwd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  CMsgVector *forward;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_FWD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_fwd__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgParticleManager__UpdateParticleOrient
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  CMsgVector *forward;
  CMsgVector *right;
  CMsgVector *up;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_ORIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_orient__descriptor) \
    , 0,0, NULL, NULL, NULL }


struct  _CDOTAUserMsgParticleManager__UpdateParticleFallback
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  CMsgVector *position;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_FALLBACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_fallback__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgParticleManager__UpdateParticleOffset
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  CMsgVector *origin_offset;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_offset__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgParticleManager__UpdateParticleEnt
{
  ProtobufCMessage base;
  protobuf_c_boolean has_control_point;
  int32_t control_point;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  protobuf_c_boolean has_attach_type;
  int32_t attach_type;
  protobuf_c_boolean has_attachment;
  int32_t attachment;
  CMsgVector *fallback_position;
  protobuf_c_boolean has_include_wearables;
  protobuf_c_boolean include_wearables;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_ENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_ent__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgParticleManager__UpdateParticleSetFrozen
{
  ProtobufCMessage base;
  protobuf_c_boolean has_set_frozen;
  protobuf_c_boolean set_frozen;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_SET_FROZEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_set_frozen__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgParticleManager__UpdateParticleShouldDraw
{
  ProtobufCMessage base;
  protobuf_c_boolean has_should_draw;
  protobuf_c_boolean should_draw;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_PARTICLE_SHOULD_DRAW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_particle_should_draw__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgParticleManager__ChangeControlPointAttachment
{
  ProtobufCMessage base;
  protobuf_c_boolean has_attachment_old;
  int32_t attachment_old;
  protobuf_c_boolean has_attachment_new;
  int32_t attachment_new;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__CHANGE_CONTROL_POINT_ATTACHMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__change_control_point_attachment__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgParticleManager__UpdateEntityPosition
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entity_handle;
  int32_t entity_handle;
  CMsgVector *position;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__UPDATE_ENTITY_POSITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__update_entity_position__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgParticleManager
{
  ProtobufCMessage base;
  DOTAPARTICLEMESSAGE type;
  uint32_t index;
  CDOTAUserMsgParticleManager__ReleaseParticleIndex *release_particle_index;
  CDOTAUserMsgParticleManager__CreateParticle *create_particle;
  CDOTAUserMsgParticleManager__DestroyParticle *destroy_particle;
  CDOTAUserMsgParticleManager__DestroyParticleInvolving *destroy_particle_involving;
  CDOTAUserMsgParticleManager__UpdateParticle *update_particle;
  CDOTAUserMsgParticleManager__UpdateParticleFwd *update_particle_fwd;
  CDOTAUserMsgParticleManager__UpdateParticleOrient *update_particle_orient;
  CDOTAUserMsgParticleManager__UpdateParticleFallback *update_particle_fallback;
  CDOTAUserMsgParticleManager__UpdateParticleOffset *update_particle_offset;
  CDOTAUserMsgParticleManager__UpdateParticleEnt *update_particle_ent;
  CDOTAUserMsgParticleManager__UpdateParticleShouldDraw *update_particle_should_draw;
  CDOTAUserMsgParticleManager__UpdateParticleSetFrozen *update_particle_set_frozen;
  CDOTAUserMsgParticleManager__ChangeControlPointAttachment *change_control_point_attachment;
  CDOTAUserMsgParticleManager__UpdateEntityPosition *update_entity_position;
};
#define CDOTAUSER_MSG__PARTICLE_MANAGER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__particle_manager__descriptor) \
    , DOTA__PARTICLE__MESSAGE__DOTA_PARTICLE_MANAGER_EVENT_CREATE, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _CDOTAUserMsgOverheadEvent
{
  ProtobufCMessage base;
  DOTAOVERHEADALERT message_type;
  protobuf_c_boolean has_value;
  int32_t value;
  protobuf_c_boolean has_target_player_entindex;
  int32_t target_player_entindex;
  protobuf_c_boolean has_target_entindex;
  int32_t target_entindex;
  protobuf_c_boolean has_source_player_entindex;
  int32_t source_player_entindex;
};
#define CDOTAUSER_MSG__OVERHEAD_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__overhead_event__descriptor) \
    , DOTA__OVERHEAD__ALERT__OVERHEAD_ALERT_GOLD, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgTutorialTipInfo
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_progress;
  int32_t progress;
};
#define CDOTAUSER_MSG__TUTORIAL_TIP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_tip_info__descriptor) \
    , NULL, 0,0 }


struct  _CDOTAUserMsgTutorialFinish
{
  ProtobufCMessage base;
  char *heading;
  char *emblem;
  char *body;
  protobuf_c_boolean has_success;
  protobuf_c_boolean success;
};
#define CDOTAUSER_MSG__TUTORIAL_FINISH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_finish__descriptor) \
    , NULL, NULL, NULL, 0,0 }


struct  _CDOTAUserMsgTutorialMinimapPosition
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__TUTORIAL_MINIMAP_POSITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_minimap_position__descriptor) \
     }


struct  _CDOTAUserMsgSendGenericToolTip
{
  ProtobufCMessage base;
  char *title;
  char *text;
  protobuf_c_boolean has_entindex;
  int32_t entindex;
  protobuf_c_boolean has_close;
  protobuf_c_boolean close;
};
#define CDOTAUSER_MSG__SEND_GENERIC_TOOL_TIP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__send_generic_tool_tip__descriptor) \
    , NULL, NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgWorldLine
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  CDOTAMsgWorldLine *worldline;
};
#define CDOTAUSER_MSG__WORLD_LINE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__world_line__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgChatWheel
{
  ProtobufCMessage base;
  protobuf_c_boolean has_chat_message;
  EDOTAChatWheelMessage chat_message;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_param_hero_id;
  uint32_t param_hero_id;
};
#define CDOTAUSER_MSG__CHAT_WHEEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__chat_wheel__descriptor) \
    , 0,EDOTACHAT_WHEEL_MESSAGE__k_EDOTA_CW_Ok, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgReceivedXmasGift
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  char *item_name;
  protobuf_c_boolean has_inventory_slot;
  int32_t inventory_slot;
};
#define CDOTAUSER_MSG__RECEIVED_XMAS_GIFT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__received_xmas_gift__descriptor) \
    , 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgShowSurvey
{
  ProtobufCMessage base;
  protobuf_c_boolean has_survey_id;
  int32_t survey_id;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  char *response_style;
  protobuf_c_boolean has_teammate_hero_id;
  uint32_t teammate_hero_id;
  char *teammate_name;
  protobuf_c_boolean has_teammate_account_id;
  uint32_t teammate_account_id;
};
#define CDOTAUSER_MSG__SHOW_SURVEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__show_survey__descriptor) \
    , 0,0, 0,0, NULL, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgUpdateSharedContent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_slot_type;
  int32_t slot_type;
};
#define CDOTAUSER_MSG__UPDATE_SHARED_CONTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__update_shared_content__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgTutorialRequestExp
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__TUTORIAL_REQUEST_EXP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_request_exp__descriptor) \
     }


struct  _CDOTAUserMsgTutorialFade
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tgt_alpha;
  int32_t tgt_alpha;
};
#define CDOTAUSER_MSG__TUTORIAL_FADE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_fade__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgTutorialPingMinimap
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_pos_x;
  float pos_x;
  protobuf_c_boolean has_pos_y;
  float pos_y;
  protobuf_c_boolean has_pos_z;
  float pos_z;
  protobuf_c_boolean has_entity_index;
  int32_t entity_index;
};
#define CDOTAUSER_MSG__TUTORIAL_PING_MINIMAP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__tutorial_ping_minimap__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgGamerulesStateChanged
{
  ProtobufCMessage base;
  protobuf_c_boolean has_state;
  uint32_t state;
};
#define CDOTAUSER_MSG__GAMERULES_STATE_CHANGED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__gamerules_state_changed__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgAddQuestLogEntry
{
  ProtobufCMessage base;
  char *npc_name;
  char *npc_dialog;
};
#define CDOTAUSER_MSG__ADD_QUEST_LOG_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__add_quest_log_entry__descriptor) \
    , NULL, NULL }


struct  _CDOTAUserMsgSendStatPopup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  CDOTAMsgSendStatPopup *statpopup;
};
#define CDOTAUSER_MSG__SEND_STAT_POPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__send_stat_popup__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgSendRoshanPopup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_reclaimed;
  protobuf_c_boolean reclaimed;
  protobuf_c_boolean has_gametime;
  int32_t gametime;
};
#define CDOTAUSER_MSG__SEND_ROSHAN_POPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__send_roshan_popup__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgSendFinalGold
{
  ProtobufCMessage base;
  size_t n_reliable_gold;
  uint32_t *reliable_gold;
  size_t n_unreliable_gold;
  uint32_t *unreliable_gold;
};
#define CDOTAUSER_MSG__SEND_FINAL_GOLD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__send_final_gold__descriptor) \
    , 0,NULL, 0,NULL }


struct  _CDOTAUserMsgCustomMsg
{
  ProtobufCMessage base;
  char *message;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_value;
  int32_t value;
};
#define CDOTAUSER_MSG__CUSTOM_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__custom_msg__descriptor) \
    , NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgCoachHUDPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  CDOTAMsgCoachHUDPing *hud_ping;
};
#define CDOTAUSER_MSG__COACH_HUDPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__coach_hudping__descriptor) \
    , 0,0, NULL }


struct  _CDOTAUserMsgClientLoadGridNav
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__CLIENT_LOAD_GRID_NAV__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__client_load_grid_nav__descriptor) \
     }


struct  _CDOTAUserMsgTEProjectile
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hsource;
  int32_t hsource;
  protobuf_c_boolean has_htarget;
  int32_t htarget;
  protobuf_c_boolean has_movespeed;
  int32_t movespeed;
  protobuf_c_boolean has_sourceattachment;
  int32_t sourceattachment;
  protobuf_c_boolean has_particlesystemhandle;
  int64_t particlesystemhandle;
  protobuf_c_boolean has_dodgeable;
  protobuf_c_boolean dodgeable;
  protobuf_c_boolean has_isattack;
  protobuf_c_boolean isattack;
  protobuf_c_boolean has_isevaded;
  protobuf_c_boolean isevaded;
  protobuf_c_boolean has_expiretime;
  float expiretime;
  protobuf_c_boolean has_maximpacttime;
  float maximpacttime;
  protobuf_c_boolean has_colorgemcolor;
  uint32_t colorgemcolor;
};
#define CDOTAUSER_MSG__TE__PROJECTILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__te__projectile__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgTEProjectileLoc
{
  ProtobufCMessage base;
  CMsgVector *vsourceloc;
  protobuf_c_boolean has_htarget;
  int32_t htarget;
  protobuf_c_boolean has_movespeed;
  int32_t movespeed;
  protobuf_c_boolean has_particlesystemhandle;
  int64_t particlesystemhandle;
  protobuf_c_boolean has_dodgeable;
  protobuf_c_boolean dodgeable;
  protobuf_c_boolean has_isattack;
  protobuf_c_boolean isattack;
  protobuf_c_boolean has_isevaded;
  protobuf_c_boolean isevaded;
  protobuf_c_boolean has_expiretime;
  float expiretime;
  CMsgVector *vtargetloc;
  protobuf_c_boolean has_colorgemcolor;
  uint32_t colorgemcolor;
};
#define CDOTAUSER_MSG__TE__PROJECTILE_LOC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__te__projectile_loc__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0 }


struct  _CDOTAUserMsgTEDotaBloodImpact
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entity;
  int32_t entity;
  protobuf_c_boolean has_scale;
  float scale;
  protobuf_c_boolean has_xnormal;
  float xnormal;
  protobuf_c_boolean has_ynormal;
  float ynormal;
};
#define CDOTAUSER_MSG__TE__DOTA_BLOOD_IMPACT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__te__dota_blood_impact__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgAbilityPing
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_ability_id;
  uint32_t ability_id;
  protobuf_c_boolean has_type;
  DOTAABILITYPINGTYPE type;
  protobuf_c_boolean has_cooldown_seconds;
  uint32_t cooldown_seconds;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_passive;
  protobuf_c_boolean passive;
  protobuf_c_boolean has_mana_needed;
  uint32_t mana_needed;
};
#define CDOTAUSER_MSG__ABILITY_PING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__ability_ping__descriptor) \
    , 0,0, 0,0, 0,DOTA__ABILITY__PING__TYPE__ABILITY_PING_READY, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgTEUnitAnimation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entity;
  int32_t entity;
  protobuf_c_boolean has_sequencevariant;
  int32_t sequencevariant;
  protobuf_c_boolean has_playbackrate;
  float playbackrate;
  protobuf_c_boolean has_castpoint;
  float castpoint;
  protobuf_c_boolean has_type;
  int32_t type;
  protobuf_c_boolean has_activity;
  int32_t activity;
};
#define CDOTAUSER_MSG__TE__UNIT_ANIMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__te__unit_animation__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgTEUnitAnimationEnd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_entity;
  int32_t entity;
  protobuf_c_boolean has_snap;
  protobuf_c_boolean snap;
};
#define CDOTAUSER_MSG__TE__UNIT_ANIMATION_END__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__te__unit_animation_end__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgShowGenericPopup
{
  ProtobufCMessage base;
  char *header;
  char *body;
  char *param1;
  char *param2;
  protobuf_c_boolean has_tint_screen;
  protobuf_c_boolean tint_screen;
  protobuf_c_boolean has_show_no_other_dialogs;
  protobuf_c_boolean show_no_other_dialogs;
};
#define CDOTAUSER_MSG__SHOW_GENERIC_POPUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__show_generic_popup__descriptor) \
    , NULL, NULL, NULL, NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgVoteStart
{
  ProtobufCMessage base;
  char *title;
  protobuf_c_boolean has_duration;
  float duration;
  protobuf_c_boolean has_choice_count;
  int32_t choice_count;
  size_t n_choices;
  char **choices;
};
#define CDOTAUSER_MSG__VOTE_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__vote_start__descriptor) \
    , NULL, 0,0, 0,0, 0,NULL }


struct  _CDOTAUserMsgVoteUpdate
{
  ProtobufCMessage base;
  size_t n_choice_counts;
  int32_t *choice_counts;
};
#define CDOTAUSER_MSG__VOTE_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__vote_update__descriptor) \
    , 0,NULL }


struct  _CDOTAUserMsgVoteEnd
{
  ProtobufCMessage base;
  protobuf_c_boolean has_selected_choice;
  int32_t selected_choice;
};
#define CDOTAUSER_MSG__VOTE_END__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__vote_end__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgBoosterStatePlayer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_bonus;
  float bonus;
  protobuf_c_boolean has_event_bonus;
  float event_bonus;
  protobuf_c_boolean has_bonus_item_id;
  uint32_t bonus_item_id;
  protobuf_c_boolean has_event_bonus_item_id;
  uint32_t event_bonus_item_id;
};
#define CDOTAUSER_MSG__BOOSTER_STATE_PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__booster_state_player__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgBoosterState
{
  ProtobufCMessage base;
  size_t n_boosted_players;
  CDOTAUserMsgBoosterStatePlayer **boosted_players;
};
#define CDOTAUSER_MSG__BOOSTER_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__booster_state__descriptor) \
    , 0,NULL }


struct  _CDOTAUserMsgPlayerMMR
{
  ProtobufCMessage base;
  size_t n_mmr;
  int32_t *mmr;
};
#define CDOTAUSER_MSG__PLAYER_MMR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__player_mmr__descriptor) \
    , 0,NULL }


struct  _CDOTAUserMsgAbilitySteal
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_ability_id;
  uint32_t ability_id;
  protobuf_c_boolean has_ability_level;
  uint32_t ability_level;
};
#define CDOTAUSER_MSG__ABILITY_STEAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__ability_steal__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgStatsHeroLookup
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_hero_id;
  int32_t hero_id;
  char *hero_name;
  char *persona;
};
#define CDOTAUSER_MSG__STATS_HERO_LOOKUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_hero_lookup__descriptor) \
    , 0,0, 0,0, NULL, NULL }


struct  _CDOTAUserMsgStatsHeroPositionInfo__PositionPair
{
  ProtobufCMessage base;
  protobuf_c_boolean has_position_category;
  DOTAPOSITIONCATEGORY position_category;
  protobuf_c_boolean has_position_count;
  uint32_t position_count;
};
#define CDOTAUSER_MSG__STATS_HERO_POSITION_INFO__POSITION_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_hero_position_info__position_pair__descriptor) \
    , 0,DOTA__POSITION__CATEGORY__DOTA_POSITION_NONE, 0,0 }


struct  _CDOTAUserMsgStatsHeroPositionInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_average_position;
  float average_position;
  size_t n_position_details;
  CDOTAUserMsgStatsHeroPositionInfo__PositionPair **position_details;
};
#define CDOTAUSER_MSG__STATS_HERO_POSITION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_hero_position_info__descriptor) \
    , 0,0, 0,NULL }


struct  _CDOTAUserMsgStatsHeroMinuteDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_hero_kills;
  uint32_t hero_kills;
  protobuf_c_boolean has_hero_damage;
  uint32_t hero_damage;
  protobuf_c_boolean has_tower_damage;
  uint32_t tower_damage;
  CDOTAUserMsgStatsHeroPositionInfo *position_info;
  protobuf_c_boolean has_total_xp;
  uint32_t total_xp;
  protobuf_c_boolean has_net_worth;
  uint32_t net_worth;
  protobuf_c_boolean has_harvested_creep_gold;
  uint32_t harvested_creep_gold;
  protobuf_c_boolean has_claimed_farm;
  uint32_t claimed_farm;
  protobuf_c_boolean has_wards_placed;
  uint32_t wards_placed;
  protobuf_c_boolean has_runes_collected;
  uint32_t runes_collected;
  protobuf_c_boolean has_tps_used;
  uint32_t tps_used;
  size_t n_mana_spent;
  uint32_t *mana_spent;
  size_t n_damage_absorbed;
  uint32_t *damage_absorbed;
  size_t n_damage_done;
  uint32_t *damage_done;
};
#define CDOTAUSER_MSG__STATS_HERO_MINUTE_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_hero_minute_details__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL }


struct  _CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance
{
  ProtobufCMessage base;
  protobuf_c_boolean has_location_category;
  uint32_t location_category;
  protobuf_c_boolean has_stat_type;
  uint32_t stat_type;
  protobuf_c_boolean has_value;
  uint32_t value;
};
#define CDOTAUSER_MSG__STATS_TEAM_MINUTE_DETAILS__LOCATION_PERFORMANCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_team_minute_details__location_performance__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgStatsTeamMinuteDetails
{
  ProtobufCMessage base;
  size_t n_player_stats;
  CDOTAUserMsgStatsHeroMinuteDetails **player_stats;
  protobuf_c_boolean has_tower_kills;
  uint32_t tower_kills;
  protobuf_c_boolean has_barrack_kills;
  uint32_t barrack_kills;
  protobuf_c_boolean has_available_lane_creep_gold;
  uint32_t available_lane_creep_gold;
  protobuf_c_boolean has_balance_kill_value;
  uint32_t balance_kill_value;
  protobuf_c_boolean has_balance_tower_value;
  uint32_t balance_tower_value;
  protobuf_c_boolean has_balance_barracks_value;
  uint32_t balance_barracks_value;
  protobuf_c_boolean has_balance_gold_value;
  uint32_t balance_gold_value;
  protobuf_c_boolean has_balance_xp_value;
  uint32_t balance_xp_value;
  size_t n_lane_performance;
  CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance **lane_performance;
};
#define CDOTAUSER_MSG__STATS_TEAM_MINUTE_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_team_minute_details__descriptor) \
    , 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL }


struct  _CDOTAUserMsgStatsPlayerKillShare
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  int32_t player_id;
  protobuf_c_boolean has_kill_share_percent;
  float kill_share_percent;
  protobuf_c_boolean has_player_loc_x;
  float player_loc_x;
  protobuf_c_boolean has_player_loc_y;
  float player_loc_y;
  protobuf_c_boolean has_health_percent;
  float health_percent;
  protobuf_c_boolean has_mana_percent;
  float mana_percent;
};
#define CDOTAUSER_MSG__STATS_PLAYER_KILL_SHARE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_player_kill_share__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgStatsKillDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_victim_id;
  uint32_t victim_id;
  size_t n_kill_shares;
  CDOTAUserMsgStatsPlayerKillShare **kill_shares;
  protobuf_c_boolean has_damage_to_kill;
  uint32_t damage_to_kill;
  protobuf_c_boolean has_effective_health;
  uint32_t effective_health;
  protobuf_c_boolean has_death_time;
  float death_time;
  protobuf_c_boolean has_killer_id;
  uint32_t killer_id;
};
#define CDOTAUSER_MSG__STATS_KILL_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_kill_details__descriptor) \
    , 0,0, 0,NULL, 0,0, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails
{
  ProtobufCMessage base;
  size_t n_participants;
  uint32_t *participants;
  size_t n_deaths;
  uint32_t *deaths;
  protobuf_c_boolean has_gold_delta;
  uint32_t gold_delta;
  protobuf_c_boolean has_xp_delta;
  uint32_t xp_delta;
};
#define CDOTAUSER_MSG__STATS_MATCH_DETAILS__CDOTAUSER_MSG__STATS_FIGHT_TEAM_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_team_details__descriptor) \
    , 0,NULL, 0,NULL, 0,0, 0,0 }


struct  _CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails
{
  ProtobufCMessage base;
  protobuf_c_boolean has_start_time;
  float start_time;
  protobuf_c_boolean has_end_time;
  float end_time;
  CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails *radiant_fight_details;
  CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails *dire_fight_details;
};
#define CDOTAUSER_MSG__STATS_MATCH_DETAILS__CDOTAUSER_MSG__STATS_FIGHT_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_details__descriptor) \
    , 0,0, 0,0, NULL, NULL }


struct  _CDOTAUserMsgStatsMatchDetails
{
  ProtobufCMessage base;
  size_t n_hero_lookup;
  CDOTAUserMsgStatsHeroLookup **hero_lookup;
  size_t n_radiant_stats;
  CDOTAUserMsgStatsTeamMinuteDetails **radiant_stats;
  size_t n_dire_stats;
  CDOTAUserMsgStatsTeamMinuteDetails **dire_stats;
  size_t n_radiant_kills;
  CDOTAUserMsgStatsKillDetails **radiant_kills;
  size_t n_dire_kills;
  CDOTAUserMsgStatsKillDetails **dire_kills;
  size_t n_fight_details;
  CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails **fight_details;
};
#define CDOTAUSER_MSG__STATS_MATCH_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__stats_match_details__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _CDOTAUserMsgMiniTaunt
{
  ProtobufCMessage base;
  protobuf_c_boolean has_taunting_player_id;
  uint32_t taunting_player_id;
};
#define CDOTAUSER_MSG__MINI_TAUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__mini_taunt__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgSpeechBubble
{
  ProtobufCMessage base;
  protobuf_c_boolean has_destroy_all;
  protobuf_c_boolean destroy_all;
};
#define CDOTAUSER_MSG__SPEECH_BUBBLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__speech_bubble__descriptor) \
    , 0,0 }


struct  _CDOTAUserMsgCustomHeaderMessage
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_duration;
  float duration;
  char *message;
  protobuf_c_boolean has_value;
  int32_t value;
};
#define CDOTAUSER_MSG__CUSTOM_HEADER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__custom_header_message__descriptor) \
    , 0,0, 0,0, NULL, 0,0 }


struct  _CMsgHeroAbilityStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_stat_type;
  EHeroStatType stat_type;
  protobuf_c_boolean has_int_value;
  int32_t int_value;
  protobuf_c_boolean has_float_value;
  float float_value;
};
#define CMSG_HERO_ABILITY_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_hero_ability_stat__descriptor) \
    , 0,EHERO_STAT_TYPE__k_EHeroStatType_None, 0,0, 0,0 }


struct  _CMsgCombatAnalyzerPlayerStat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  size_t n_hero_ability_stats;
  CMsgHeroAbilityStat **hero_ability_stats;
};
#define CMSG_COMBAT_ANALYZER_PLAYER_STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_combat_analyzer_player_stat__descriptor) \
    , 0,0, 0,NULL }


struct  _CMsgCombatAnalyzerStats
{
  ProtobufCMessage base;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  size_t n_player_stats;
  CMsgCombatAnalyzerPlayerStat **player_stats;
};
#define CMSG_COMBAT_ANALYZER_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_combat_analyzer_stats__descriptor) \
    , 0,0, 0,NULL }


struct  _CDOTAUserMsgBeastChat
{
  ProtobufCMessage base;
  protobuf_c_boolean has_team;
  uint32_t team;
  char *format;
  char *message;
  char *target;
};
#define CDOTAUSER_MSG__BEAST_CHAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__beast_chat__descriptor) \
    , 0,0, NULL, NULL, NULL }


struct  _CDOTAUserMsgCustomHudElementCreate
{
  ProtobufCMessage base;
  char *element_id;
  char *layout_filename;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDOTAUSER_MSG__CUSTOM_HUD_ELEMENT__CREATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__custom_hud_element__create__descriptor) \
    , NULL, NULL, 0,{0,NULL} }


struct  _CDOTAUserMsgCustomHudElementModify
{
  ProtobufCMessage base;
  char *element_id;
  protobuf_c_boolean has_modify_visible;
  protobuf_c_boolean modify_visible;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define CDOTAUSER_MSG__CUSTOM_HUD_ELEMENT__MODIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__custom_hud_element__modify__descriptor) \
    , NULL, 0,0, 0,{0,NULL} }


struct  _CDOTAUserMsgCustomHudElementDestroy
{
  ProtobufCMessage base;
  char *element_id;
};
#define CDOTAUSER_MSG__CUSTOM_HUD_ELEMENT__DESTROY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__custom_hud_element__destroy__descriptor) \
    , NULL }


struct  _CDOTAUserMsgCompendiumStatePlayer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_level;
  uint32_t level;
};
#define CDOTAUSER_MSG__COMPENDIUM_STATE_PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__compendium_state_player__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgCompendiumState
{
  ProtobufCMessage base;
  size_t n_compendium_players;
  CDOTAUserMsgCompendiumStatePlayer **compendium_players;
};
#define CDOTAUSER_MSG__COMPENDIUM_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__compendium_state__descriptor) \
    , 0,NULL }


struct  _CDOTAUserMsgProjectionAbility
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ability_id;
  uint32_t ability_id;
  protobuf_c_boolean has_caster_ent_index;
  int32_t caster_ent_index;
  protobuf_c_boolean has_caster_team;
  int32_t caster_team;
  protobuf_c_boolean has_channel_end;
  protobuf_c_boolean channel_end;
  CMsgVector *origin;
  protobuf_c_boolean has_track_caster_only;
  protobuf_c_boolean track_caster_only;
  protobuf_c_boolean has_end_time;
  float end_time;
  protobuf_c_boolean has_victim_ent_index;
  int32_t victim_ent_index;
};
#define CDOTAUSER_MSG__PROJECTION_ABILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__projection_ability__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0 }


struct  _CDOTAUserMsgProjectionEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_event_id;
  EProjectionEvent event_id;
  protobuf_c_boolean has_team;
  uint32_t team;
};
#define CDOTAUSER_MSG__PROJECTION_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__projection_event__descriptor) \
    , 0,EPROJECTION_EVENT__ePE_FirstBlood, 0,0 }


struct  _CDOTAUserMsgXPAlert
{
  ProtobufCMessage base;
  protobuf_c_boolean has_player_id;
  uint32_t player_id;
  protobuf_c_boolean has_target_entindex;
  uint32_t target_entindex;
};
#define CDOTAUSER_MSG__XPALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__xpalert__descriptor) \
    , 0,0, 0,0 }


struct  _CDOTAUserMsgUpdateQuestProgress
{
  ProtobufCMessage base;
};
#define CDOTAUSER_MSG__UPDATE_QUEST_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__update_quest_progress__descriptor) \
     }


struct  _CDOTAUserMsgQuestStatus
{
  ProtobufCMessage base;
  uint32_t player_id;
  protobuf_c_boolean has_quest_id;
  uint32_t quest_id;
  protobuf_c_boolean has_challenge_id;
  uint32_t challenge_id;
  protobuf_c_boolean has_progress;
  uint32_t progress;
  protobuf_c_boolean has_goal;
  uint32_t goal;
  protobuf_c_boolean has_query;
  uint32_t query;
  protobuf_c_boolean has_fail_gametime;
  float fail_gametime;
  protobuf_c_boolean has_item_id;
  uint32_t item_id;
};
#define CDOTAUSER_MSG__QUEST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdotauser_msg__quest_status__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


/* CDOTAUserMsgAIDebugLine methods */
void   cdotauser_msg__aidebug_line__init
                     (CDOTAUserMsgAIDebugLine         *message);
size_t cdotauser_msg__aidebug_line__get_packed_size
                     (const CDOTAUserMsgAIDebugLine   *message);
size_t cdotauser_msg__aidebug_line__pack
                     (const CDOTAUserMsgAIDebugLine   *message,
                      uint8_t             *out);
size_t cdotauser_msg__aidebug_line__pack_to_buffer
                     (const CDOTAUserMsgAIDebugLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgAIDebugLine *
       cdotauser_msg__aidebug_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__aidebug_line__free_unpacked
                     (CDOTAUserMsgAIDebugLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgPing methods */
void   cdotauser_msg__ping__init
                     (CDOTAUserMsgPing         *message);
size_t cdotauser_msg__ping__get_packed_size
                     (const CDOTAUserMsgPing   *message);
size_t cdotauser_msg__ping__pack
                     (const CDOTAUserMsgPing   *message,
                      uint8_t             *out);
size_t cdotauser_msg__ping__pack_to_buffer
                     (const CDOTAUserMsgPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgPing *
       cdotauser_msg__ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__ping__free_unpacked
                     (CDOTAUserMsgPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSwapVerify methods */
void   cdotauser_msg__swap_verify__init
                     (CDOTAUserMsgSwapVerify         *message);
size_t cdotauser_msg__swap_verify__get_packed_size
                     (const CDOTAUserMsgSwapVerify   *message);
size_t cdotauser_msg__swap_verify__pack
                     (const CDOTAUserMsgSwapVerify   *message,
                      uint8_t             *out);
size_t cdotauser_msg__swap_verify__pack_to_buffer
                     (const CDOTAUserMsgSwapVerify   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSwapVerify *
       cdotauser_msg__swap_verify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__swap_verify__free_unpacked
                     (CDOTAUserMsgSwapVerify *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgChatEvent methods */
void   cdotauser_msg__chat_event__init
                     (CDOTAUserMsgChatEvent         *message);
size_t cdotauser_msg__chat_event__get_packed_size
                     (const CDOTAUserMsgChatEvent   *message);
size_t cdotauser_msg__chat_event__pack
                     (const CDOTAUserMsgChatEvent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__chat_event__pack_to_buffer
                     (const CDOTAUserMsgChatEvent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgChatEvent *
       cdotauser_msg__chat_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__chat_event__free_unpacked
                     (CDOTAUserMsgChatEvent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCombatLogShowDeath methods */
void   cdotauser_msg__combat_log_show_death__init
                     (CDOTAUserMsgCombatLogShowDeath         *message);
size_t cdotauser_msg__combat_log_show_death__get_packed_size
                     (const CDOTAUserMsgCombatLogShowDeath   *message);
size_t cdotauser_msg__combat_log_show_death__pack
                     (const CDOTAUserMsgCombatLogShowDeath   *message,
                      uint8_t             *out);
size_t cdotauser_msg__combat_log_show_death__pack_to_buffer
                     (const CDOTAUserMsgCombatLogShowDeath   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCombatLogShowDeath *
       cdotauser_msg__combat_log_show_death__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__combat_log_show_death__free_unpacked
                     (CDOTAUserMsgCombatLogShowDeath *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgBotChat methods */
void   cdotauser_msg__bot_chat__init
                     (CDOTAUserMsgBotChat         *message);
size_t cdotauser_msg__bot_chat__get_packed_size
                     (const CDOTAUserMsgBotChat   *message);
size_t cdotauser_msg__bot_chat__pack
                     (const CDOTAUserMsgBotChat   *message,
                      uint8_t             *out);
size_t cdotauser_msg__bot_chat__pack_to_buffer
                     (const CDOTAUserMsgBotChat   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgBotChat *
       cdotauser_msg__bot_chat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__bot_chat__free_unpacked
                     (CDOTAUserMsgBotChat *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCombatHeroPositions methods */
void   cdotauser_msg__combat_hero_positions__init
                     (CDOTAUserMsgCombatHeroPositions         *message);
size_t cdotauser_msg__combat_hero_positions__get_packed_size
                     (const CDOTAUserMsgCombatHeroPositions   *message);
size_t cdotauser_msg__combat_hero_positions__pack
                     (const CDOTAUserMsgCombatHeroPositions   *message,
                      uint8_t             *out);
size_t cdotauser_msg__combat_hero_positions__pack_to_buffer
                     (const CDOTAUserMsgCombatHeroPositions   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCombatHeroPositions *
       cdotauser_msg__combat_hero_positions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__combat_hero_positions__free_unpacked
                     (CDOTAUserMsgCombatHeroPositions *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgMiniKillCamInfo__Attacker__Ability methods */
void   cdotauser_msg__mini_kill_cam_info__attacker__ability__init
                     (CDOTAUserMsgMiniKillCamInfo__Attacker__Ability         *message);
/* CDOTAUserMsgMiniKillCamInfo__Attacker methods */
void   cdotauser_msg__mini_kill_cam_info__attacker__init
                     (CDOTAUserMsgMiniKillCamInfo__Attacker         *message);
/* CDOTAUserMsgMiniKillCamInfo methods */
void   cdotauser_msg__mini_kill_cam_info__init
                     (CDOTAUserMsgMiniKillCamInfo         *message);
size_t cdotauser_msg__mini_kill_cam_info__get_packed_size
                     (const CDOTAUserMsgMiniKillCamInfo   *message);
size_t cdotauser_msg__mini_kill_cam_info__pack
                     (const CDOTAUserMsgMiniKillCamInfo   *message,
                      uint8_t             *out);
size_t cdotauser_msg__mini_kill_cam_info__pack_to_buffer
                     (const CDOTAUserMsgMiniKillCamInfo   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgMiniKillCamInfo *
       cdotauser_msg__mini_kill_cam_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__mini_kill_cam_info__free_unpacked
                     (CDOTAUserMsgMiniKillCamInfo *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgGlobalLightColor methods */
void   cdotauser_msg__global_light_color__init
                     (CDOTAUserMsgGlobalLightColor         *message);
size_t cdotauser_msg__global_light_color__get_packed_size
                     (const CDOTAUserMsgGlobalLightColor   *message);
size_t cdotauser_msg__global_light_color__pack
                     (const CDOTAUserMsgGlobalLightColor   *message,
                      uint8_t             *out);
size_t cdotauser_msg__global_light_color__pack_to_buffer
                     (const CDOTAUserMsgGlobalLightColor   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgGlobalLightColor *
       cdotauser_msg__global_light_color__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__global_light_color__free_unpacked
                     (CDOTAUserMsgGlobalLightColor *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgGlobalLightDirection methods */
void   cdotauser_msg__global_light_direction__init
                     (CDOTAUserMsgGlobalLightDirection         *message);
size_t cdotauser_msg__global_light_direction__get_packed_size
                     (const CDOTAUserMsgGlobalLightDirection   *message);
size_t cdotauser_msg__global_light_direction__pack
                     (const CDOTAUserMsgGlobalLightDirection   *message,
                      uint8_t             *out);
size_t cdotauser_msg__global_light_direction__pack_to_buffer
                     (const CDOTAUserMsgGlobalLightDirection   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgGlobalLightDirection *
       cdotauser_msg__global_light_direction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__global_light_direction__free_unpacked
                     (CDOTAUserMsgGlobalLightDirection *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgLocationPing methods */
void   cdotauser_msg__location_ping__init
                     (CDOTAUserMsgLocationPing         *message);
size_t cdotauser_msg__location_ping__get_packed_size
                     (const CDOTAUserMsgLocationPing   *message);
size_t cdotauser_msg__location_ping__pack
                     (const CDOTAUserMsgLocationPing   *message,
                      uint8_t             *out);
size_t cdotauser_msg__location_ping__pack_to_buffer
                     (const CDOTAUserMsgLocationPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgLocationPing *
       cdotauser_msg__location_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__location_ping__free_unpacked
                     (CDOTAUserMsgLocationPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgItemAlert methods */
void   cdotauser_msg__item_alert__init
                     (CDOTAUserMsgItemAlert         *message);
size_t cdotauser_msg__item_alert__get_packed_size
                     (const CDOTAUserMsgItemAlert   *message);
size_t cdotauser_msg__item_alert__pack
                     (const CDOTAUserMsgItemAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__item_alert__pack_to_buffer
                     (const CDOTAUserMsgItemAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgItemAlert *
       cdotauser_msg__item_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__item_alert__free_unpacked
                     (CDOTAUserMsgItemAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgEnemyItemAlert methods */
void   cdotauser_msg__enemy_item_alert__init
                     (CDOTAUserMsgEnemyItemAlert         *message);
size_t cdotauser_msg__enemy_item_alert__get_packed_size
                     (const CDOTAUserMsgEnemyItemAlert   *message);
size_t cdotauser_msg__enemy_item_alert__pack
                     (const CDOTAUserMsgEnemyItemAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__enemy_item_alert__pack_to_buffer
                     (const CDOTAUserMsgEnemyItemAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgEnemyItemAlert *
       cdotauser_msg__enemy_item_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__enemy_item_alert__free_unpacked
                     (CDOTAUserMsgEnemyItemAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgModifierAlert methods */
void   cdotauser_msg__modifier_alert__init
                     (CDOTAUserMsgModifierAlert         *message);
size_t cdotauser_msg__modifier_alert__get_packed_size
                     (const CDOTAUserMsgModifierAlert   *message);
size_t cdotauser_msg__modifier_alert__pack
                     (const CDOTAUserMsgModifierAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__modifier_alert__pack_to_buffer
                     (const CDOTAUserMsgModifierAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgModifierAlert *
       cdotauser_msg__modifier_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__modifier_alert__free_unpacked
                     (CDOTAUserMsgModifierAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgHPManaAlert methods */
void   cdotauser_msg__hpmana_alert__init
                     (CDOTAUserMsgHPManaAlert         *message);
size_t cdotauser_msg__hpmana_alert__get_packed_size
                     (const CDOTAUserMsgHPManaAlert   *message);
size_t cdotauser_msg__hpmana_alert__pack
                     (const CDOTAUserMsgHPManaAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__hpmana_alert__pack_to_buffer
                     (const CDOTAUserMsgHPManaAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgHPManaAlert *
       cdotauser_msg__hpmana_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__hpmana_alert__free_unpacked
                     (CDOTAUserMsgHPManaAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgGlyphAlert methods */
void   cdotauser_msg__glyph_alert__init
                     (CDOTAUserMsgGlyphAlert         *message);
size_t cdotauser_msg__glyph_alert__get_packed_size
                     (const CDOTAUserMsgGlyphAlert   *message);
size_t cdotauser_msg__glyph_alert__pack
                     (const CDOTAUserMsgGlyphAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__glyph_alert__pack_to_buffer
                     (const CDOTAUserMsgGlyphAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgGlyphAlert *
       cdotauser_msg__glyph_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__glyph_alert__free_unpacked
                     (CDOTAUserMsgGlyphAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgWillPurchaseAlert methods */
void   cdotauser_msg__will_purchase_alert__init
                     (CDOTAUserMsgWillPurchaseAlert         *message);
size_t cdotauser_msg__will_purchase_alert__get_packed_size
                     (const CDOTAUserMsgWillPurchaseAlert   *message);
size_t cdotauser_msg__will_purchase_alert__pack
                     (const CDOTAUserMsgWillPurchaseAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__will_purchase_alert__pack_to_buffer
                     (const CDOTAUserMsgWillPurchaseAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgWillPurchaseAlert *
       cdotauser_msg__will_purchase_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__will_purchase_alert__free_unpacked
                     (CDOTAUserMsgWillPurchaseAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgBuyBackStateAlert methods */
void   cdotauser_msg__buy_back_state_alert__init
                     (CDOTAUserMsgBuyBackStateAlert         *message);
size_t cdotauser_msg__buy_back_state_alert__get_packed_size
                     (const CDOTAUserMsgBuyBackStateAlert   *message);
size_t cdotauser_msg__buy_back_state_alert__pack
                     (const CDOTAUserMsgBuyBackStateAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__buy_back_state_alert__pack_to_buffer
                     (const CDOTAUserMsgBuyBackStateAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgBuyBackStateAlert *
       cdotauser_msg__buy_back_state_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__buy_back_state_alert__free_unpacked
                     (CDOTAUserMsgBuyBackStateAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgQuickBuyAlert methods */
void   cdotauser_msg__quick_buy_alert__init
                     (CDOTAUserMsgQuickBuyAlert         *message);
size_t cdotauser_msg__quick_buy_alert__get_packed_size
                     (const CDOTAUserMsgQuickBuyAlert   *message);
size_t cdotauser_msg__quick_buy_alert__pack
                     (const CDOTAUserMsgQuickBuyAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__quick_buy_alert__pack_to_buffer
                     (const CDOTAUserMsgQuickBuyAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgQuickBuyAlert *
       cdotauser_msg__quick_buy_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__quick_buy_alert__free_unpacked
                     (CDOTAUserMsgQuickBuyAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCourierKilledAlert methods */
void   cdotauser_msg__courier_killed_alert__init
                     (CDOTAUserMsgCourierKilledAlert         *message);
size_t cdotauser_msg__courier_killed_alert__get_packed_size
                     (const CDOTAUserMsgCourierKilledAlert   *message);
size_t cdotauser_msg__courier_killed_alert__pack
                     (const CDOTAUserMsgCourierKilledAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__courier_killed_alert__pack_to_buffer
                     (const CDOTAUserMsgCourierKilledAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCourierKilledAlert *
       cdotauser_msg__courier_killed_alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__courier_killed_alert__free_unpacked
                     (CDOTAUserMsgCourierKilledAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgMinimapEvent methods */
void   cdotauser_msg__minimap_event__init
                     (CDOTAUserMsgMinimapEvent         *message);
size_t cdotauser_msg__minimap_event__get_packed_size
                     (const CDOTAUserMsgMinimapEvent   *message);
size_t cdotauser_msg__minimap_event__pack
                     (const CDOTAUserMsgMinimapEvent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__minimap_event__pack_to_buffer
                     (const CDOTAUserMsgMinimapEvent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgMinimapEvent *
       cdotauser_msg__minimap_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__minimap_event__free_unpacked
                     (CDOTAUserMsgMinimapEvent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgMapLine methods */
void   cdotauser_msg__map_line__init
                     (CDOTAUserMsgMapLine         *message);
size_t cdotauser_msg__map_line__get_packed_size
                     (const CDOTAUserMsgMapLine   *message);
size_t cdotauser_msg__map_line__pack
                     (const CDOTAUserMsgMapLine   *message,
                      uint8_t             *out);
size_t cdotauser_msg__map_line__pack_to_buffer
                     (const CDOTAUserMsgMapLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgMapLine *
       cdotauser_msg__map_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__map_line__free_unpacked
                     (CDOTAUserMsgMapLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgMinimapDebugPoint methods */
void   cdotauser_msg__minimap_debug_point__init
                     (CDOTAUserMsgMinimapDebugPoint         *message);
size_t cdotauser_msg__minimap_debug_point__get_packed_size
                     (const CDOTAUserMsgMinimapDebugPoint   *message);
size_t cdotauser_msg__minimap_debug_point__pack
                     (const CDOTAUserMsgMinimapDebugPoint   *message,
                      uint8_t             *out);
size_t cdotauser_msg__minimap_debug_point__pack_to_buffer
                     (const CDOTAUserMsgMinimapDebugPoint   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgMinimapDebugPoint *
       cdotauser_msg__minimap_debug_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__minimap_debug_point__free_unpacked
                     (CDOTAUserMsgMinimapDebugPoint *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCreateLinearProjectile methods */
void   cdotauser_msg__create_linear_projectile__init
                     (CDOTAUserMsgCreateLinearProjectile         *message);
size_t cdotauser_msg__create_linear_projectile__get_packed_size
                     (const CDOTAUserMsgCreateLinearProjectile   *message);
size_t cdotauser_msg__create_linear_projectile__pack
                     (const CDOTAUserMsgCreateLinearProjectile   *message,
                      uint8_t             *out);
size_t cdotauser_msg__create_linear_projectile__pack_to_buffer
                     (const CDOTAUserMsgCreateLinearProjectile   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCreateLinearProjectile *
       cdotauser_msg__create_linear_projectile__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__create_linear_projectile__free_unpacked
                     (CDOTAUserMsgCreateLinearProjectile *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgDestroyLinearProjectile methods */
void   cdotauser_msg__destroy_linear_projectile__init
                     (CDOTAUserMsgDestroyLinearProjectile         *message);
size_t cdotauser_msg__destroy_linear_projectile__get_packed_size
                     (const CDOTAUserMsgDestroyLinearProjectile   *message);
size_t cdotauser_msg__destroy_linear_projectile__pack
                     (const CDOTAUserMsgDestroyLinearProjectile   *message,
                      uint8_t             *out);
size_t cdotauser_msg__destroy_linear_projectile__pack_to_buffer
                     (const CDOTAUserMsgDestroyLinearProjectile   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgDestroyLinearProjectile *
       cdotauser_msg__destroy_linear_projectile__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__destroy_linear_projectile__free_unpacked
                     (CDOTAUserMsgDestroyLinearProjectile *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgDodgeTrackingProjectiles methods */
void   cdotauser_msg__dodge_tracking_projectiles__init
                     (CDOTAUserMsgDodgeTrackingProjectiles         *message);
size_t cdotauser_msg__dodge_tracking_projectiles__get_packed_size
                     (const CDOTAUserMsgDodgeTrackingProjectiles   *message);
size_t cdotauser_msg__dodge_tracking_projectiles__pack
                     (const CDOTAUserMsgDodgeTrackingProjectiles   *message,
                      uint8_t             *out);
size_t cdotauser_msg__dodge_tracking_projectiles__pack_to_buffer
                     (const CDOTAUserMsgDodgeTrackingProjectiles   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgDodgeTrackingProjectiles *
       cdotauser_msg__dodge_tracking_projectiles__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__dodge_tracking_projectiles__free_unpacked
                     (CDOTAUserMsgDodgeTrackingProjectiles *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSpectatorPlayerClick methods */
void   cdotauser_msg__spectator_player_click__init
                     (CDOTAUserMsgSpectatorPlayerClick         *message);
size_t cdotauser_msg__spectator_player_click__get_packed_size
                     (const CDOTAUserMsgSpectatorPlayerClick   *message);
size_t cdotauser_msg__spectator_player_click__pack
                     (const CDOTAUserMsgSpectatorPlayerClick   *message,
                      uint8_t             *out);
size_t cdotauser_msg__spectator_player_click__pack_to_buffer
                     (const CDOTAUserMsgSpectatorPlayerClick   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSpectatorPlayerClick *
       cdotauser_msg__spectator_player_click__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__spectator_player_click__free_unpacked
                     (CDOTAUserMsgSpectatorPlayerClick *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSpectatorPlayerUnitOrders methods */
void   cdotauser_msg__spectator_player_unit_orders__init
                     (CDOTAUserMsgSpectatorPlayerUnitOrders         *message);
size_t cdotauser_msg__spectator_player_unit_orders__get_packed_size
                     (const CDOTAUserMsgSpectatorPlayerUnitOrders   *message);
size_t cdotauser_msg__spectator_player_unit_orders__pack
                     (const CDOTAUserMsgSpectatorPlayerUnitOrders   *message,
                      uint8_t             *out);
size_t cdotauser_msg__spectator_player_unit_orders__pack_to_buffer
                     (const CDOTAUserMsgSpectatorPlayerUnitOrders   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSpectatorPlayerUnitOrders *
       cdotauser_msg__spectator_player_unit_orders__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__spectator_player_unit_orders__free_unpacked
                     (CDOTAUserMsgSpectatorPlayerUnitOrders *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgNevermoreRequiem methods */
void   cdotauser_msg__nevermore_requiem__init
                     (CDOTAUserMsgNevermoreRequiem         *message);
size_t cdotauser_msg__nevermore_requiem__get_packed_size
                     (const CDOTAUserMsgNevermoreRequiem   *message);
size_t cdotauser_msg__nevermore_requiem__pack
                     (const CDOTAUserMsgNevermoreRequiem   *message,
                      uint8_t             *out);
size_t cdotauser_msg__nevermore_requiem__pack_to_buffer
                     (const CDOTAUserMsgNevermoreRequiem   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgNevermoreRequiem *
       cdotauser_msg__nevermore_requiem__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__nevermore_requiem__free_unpacked
                     (CDOTAUserMsgNevermoreRequiem *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgInvalidCommand methods */
void   cdotauser_msg__invalid_command__init
                     (CDOTAUserMsgInvalidCommand         *message);
size_t cdotauser_msg__invalid_command__get_packed_size
                     (const CDOTAUserMsgInvalidCommand   *message);
size_t cdotauser_msg__invalid_command__pack
                     (const CDOTAUserMsgInvalidCommand   *message,
                      uint8_t             *out);
size_t cdotauser_msg__invalid_command__pack_to_buffer
                     (const CDOTAUserMsgInvalidCommand   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgInvalidCommand *
       cdotauser_msg__invalid_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__invalid_command__free_unpacked
                     (CDOTAUserMsgInvalidCommand *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgHudError methods */
void   cdotauser_msg__hud_error__init
                     (CDOTAUserMsgHudError         *message);
size_t cdotauser_msg__hud_error__get_packed_size
                     (const CDOTAUserMsgHudError   *message);
size_t cdotauser_msg__hud_error__pack
                     (const CDOTAUserMsgHudError   *message,
                      uint8_t             *out);
size_t cdotauser_msg__hud_error__pack_to_buffer
                     (const CDOTAUserMsgHudError   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgHudError *
       cdotauser_msg__hud_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__hud_error__free_unpacked
                     (CDOTAUserMsgHudError *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSharedCooldown methods */
void   cdotauser_msg__shared_cooldown__init
                     (CDOTAUserMsgSharedCooldown         *message);
size_t cdotauser_msg__shared_cooldown__get_packed_size
                     (const CDOTAUserMsgSharedCooldown   *message);
size_t cdotauser_msg__shared_cooldown__pack
                     (const CDOTAUserMsgSharedCooldown   *message,
                      uint8_t             *out);
size_t cdotauser_msg__shared_cooldown__pack_to_buffer
                     (const CDOTAUserMsgSharedCooldown   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSharedCooldown *
       cdotauser_msg__shared_cooldown__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__shared_cooldown__free_unpacked
                     (CDOTAUserMsgSharedCooldown *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSetNextAutobuyItem methods */
void   cdotauser_msg__set_next_autobuy_item__init
                     (CDOTAUserMsgSetNextAutobuyItem         *message);
size_t cdotauser_msg__set_next_autobuy_item__get_packed_size
                     (const CDOTAUserMsgSetNextAutobuyItem   *message);
size_t cdotauser_msg__set_next_autobuy_item__pack
                     (const CDOTAUserMsgSetNextAutobuyItem   *message,
                      uint8_t             *out);
size_t cdotauser_msg__set_next_autobuy_item__pack_to_buffer
                     (const CDOTAUserMsgSetNextAutobuyItem   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSetNextAutobuyItem *
       cdotauser_msg__set_next_autobuy_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__set_next_autobuy_item__free_unpacked
                     (CDOTAUserMsgSetNextAutobuyItem *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgHalloweenDrops methods */
void   cdotauser_msg__halloween_drops__init
                     (CDOTAUserMsgHalloweenDrops         *message);
size_t cdotauser_msg__halloween_drops__get_packed_size
                     (const CDOTAUserMsgHalloweenDrops   *message);
size_t cdotauser_msg__halloween_drops__pack
                     (const CDOTAUserMsgHalloweenDrops   *message,
                      uint8_t             *out);
size_t cdotauser_msg__halloween_drops__pack_to_buffer
                     (const CDOTAUserMsgHalloweenDrops   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgHalloweenDrops *
       cdotauser_msg__halloween_drops__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__halloween_drops__free_unpacked
                     (CDOTAUserMsgHalloweenDrops *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgPredictionResult__Prediction methods */
void   cdotauser_msg__prediction_result__prediction__init
                     (CDOTAUserMsgPredictionResult__Prediction         *message);
/* CDOTAUserMsgPredictionResult methods */
void   cdotauser_msg__prediction_result__init
                     (CDOTAUserMsgPredictionResult         *message);
size_t cdotauser_msg__prediction_result__get_packed_size
                     (const CDOTAUserMsgPredictionResult   *message);
size_t cdotauser_msg__prediction_result__pack
                     (const CDOTAUserMsgPredictionResult   *message,
                      uint8_t             *out);
size_t cdotauser_msg__prediction_result__pack_to_buffer
                     (const CDOTAUserMsgPredictionResult   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgPredictionResult *
       cdotauser_msg__prediction_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__prediction_result__free_unpacked
                     (CDOTAUserMsgPredictionResult *message,
                      ProtobufCAllocator *allocator);
/* CDOTAResponseQuerySerialized__Fact methods */
void   cdotaresponse_query_serialized__fact__init
                     (CDOTAResponseQuerySerialized__Fact         *message);
/* CDOTAResponseQuerySerialized methods */
void   cdotaresponse_query_serialized__init
                     (CDOTAResponseQuerySerialized         *message);
size_t cdotaresponse_query_serialized__get_packed_size
                     (const CDOTAResponseQuerySerialized   *message);
size_t cdotaresponse_query_serialized__pack
                     (const CDOTAResponseQuerySerialized   *message,
                      uint8_t             *out);
size_t cdotaresponse_query_serialized__pack_to_buffer
                     (const CDOTAResponseQuerySerialized   *message,
                      ProtobufCBuffer     *buffer);
CDOTAResponseQuerySerialized *
       cdotaresponse_query_serialized__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaresponse_query_serialized__free_unpacked
                     (CDOTAResponseQuerySerialized *message,
                      ProtobufCAllocator *allocator);
/* CDOTASpeechMatchOnClient methods */
void   cdotaspeech_match_on_client__init
                     (CDOTASpeechMatchOnClient         *message);
size_t cdotaspeech_match_on_client__get_packed_size
                     (const CDOTASpeechMatchOnClient   *message);
size_t cdotaspeech_match_on_client__pack
                     (const CDOTASpeechMatchOnClient   *message,
                      uint8_t             *out);
size_t cdotaspeech_match_on_client__pack_to_buffer
                     (const CDOTASpeechMatchOnClient   *message,
                      ProtobufCBuffer     *buffer);
CDOTASpeechMatchOnClient *
       cdotaspeech_match_on_client__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotaspeech_match_on_client__free_unpacked
                     (CDOTASpeechMatchOnClient *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgUnitEvent__Speech methods */
void   cdotauser_msg__unit_event__speech__init
                     (CDOTAUserMsgUnitEvent__Speech         *message);
/* CDOTAUserMsgUnitEvent__SpeechMute methods */
void   cdotauser_msg__unit_event__speech_mute__init
                     (CDOTAUserMsgUnitEvent__SpeechMute         *message);
/* CDOTAUserMsgUnitEvent__AddGesture methods */
void   cdotauser_msg__unit_event__add_gesture__init
                     (CDOTAUserMsgUnitEvent__AddGesture         *message);
/* CDOTAUserMsgUnitEvent__RemoveGesture methods */
void   cdotauser_msg__unit_event__remove_gesture__init
                     (CDOTAUserMsgUnitEvent__RemoveGesture         *message);
/* CDOTAUserMsgUnitEvent__BloodImpact methods */
void   cdotauser_msg__unit_event__blood_impact__init
                     (CDOTAUserMsgUnitEvent__BloodImpact         *message);
/* CDOTAUserMsgUnitEvent__FadeGesture methods */
void   cdotauser_msg__unit_event__fade_gesture__init
                     (CDOTAUserMsgUnitEvent__FadeGesture         *message);
/* CDOTAUserMsgUnitEvent methods */
void   cdotauser_msg__unit_event__init
                     (CDOTAUserMsgUnitEvent         *message);
size_t cdotauser_msg__unit_event__get_packed_size
                     (const CDOTAUserMsgUnitEvent   *message);
size_t cdotauser_msg__unit_event__pack
                     (const CDOTAUserMsgUnitEvent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__unit_event__pack_to_buffer
                     (const CDOTAUserMsgUnitEvent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgUnitEvent *
       cdotauser_msg__unit_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__unit_event__free_unpacked
                     (CDOTAUserMsgUnitEvent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgItemPurchased methods */
void   cdotauser_msg__item_purchased__init
                     (CDOTAUserMsgItemPurchased         *message);
size_t cdotauser_msg__item_purchased__get_packed_size
                     (const CDOTAUserMsgItemPurchased   *message);
size_t cdotauser_msg__item_purchased__pack
                     (const CDOTAUserMsgItemPurchased   *message,
                      uint8_t             *out);
size_t cdotauser_msg__item_purchased__pack_to_buffer
                     (const CDOTAUserMsgItemPurchased   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgItemPurchased *
       cdotauser_msg__item_purchased__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__item_purchased__free_unpacked
                     (CDOTAUserMsgItemPurchased *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgItemFound methods */
void   cdotauser_msg__item_found__init
                     (CDOTAUserMsgItemFound         *message);
size_t cdotauser_msg__item_found__get_packed_size
                     (const CDOTAUserMsgItemFound   *message);
size_t cdotauser_msg__item_found__pack
                     (const CDOTAUserMsgItemFound   *message,
                      uint8_t             *out);
size_t cdotauser_msg__item_found__pack_to_buffer
                     (const CDOTAUserMsgItemFound   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgItemFound *
       cdotauser_msg__item_found__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__item_found__free_unpacked
                     (CDOTAUserMsgItemFound *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgParticleManager__ReleaseParticleIndex methods */
void   cdotauser_msg__particle_manager__release_particle_index__init
                     (CDOTAUserMsgParticleManager__ReleaseParticleIndex         *message);
/* CDOTAUserMsgParticleManager__CreateParticle methods */
void   cdotauser_msg__particle_manager__create_particle__init
                     (CDOTAUserMsgParticleManager__CreateParticle         *message);
/* CDOTAUserMsgParticleManager__DestroyParticle methods */
void   cdotauser_msg__particle_manager__destroy_particle__init
                     (CDOTAUserMsgParticleManager__DestroyParticle         *message);
/* CDOTAUserMsgParticleManager__DestroyParticleInvolving methods */
void   cdotauser_msg__particle_manager__destroy_particle_involving__init
                     (CDOTAUserMsgParticleManager__DestroyParticleInvolving         *message);
/* CDOTAUserMsgParticleManager__UpdateParticle methods */
void   cdotauser_msg__particle_manager__update_particle__init
                     (CDOTAUserMsgParticleManager__UpdateParticle         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleFwd methods */
void   cdotauser_msg__particle_manager__update_particle_fwd__init
                     (CDOTAUserMsgParticleManager__UpdateParticleFwd         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleOrient methods */
void   cdotauser_msg__particle_manager__update_particle_orient__init
                     (CDOTAUserMsgParticleManager__UpdateParticleOrient         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleFallback methods */
void   cdotauser_msg__particle_manager__update_particle_fallback__init
                     (CDOTAUserMsgParticleManager__UpdateParticleFallback         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleOffset methods */
void   cdotauser_msg__particle_manager__update_particle_offset__init
                     (CDOTAUserMsgParticleManager__UpdateParticleOffset         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleEnt methods */
void   cdotauser_msg__particle_manager__update_particle_ent__init
                     (CDOTAUserMsgParticleManager__UpdateParticleEnt         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleSetFrozen methods */
void   cdotauser_msg__particle_manager__update_particle_set_frozen__init
                     (CDOTAUserMsgParticleManager__UpdateParticleSetFrozen         *message);
/* CDOTAUserMsgParticleManager__UpdateParticleShouldDraw methods */
void   cdotauser_msg__particle_manager__update_particle_should_draw__init
                     (CDOTAUserMsgParticleManager__UpdateParticleShouldDraw         *message);
/* CDOTAUserMsgParticleManager__ChangeControlPointAttachment methods */
void   cdotauser_msg__particle_manager__change_control_point_attachment__init
                     (CDOTAUserMsgParticleManager__ChangeControlPointAttachment         *message);
/* CDOTAUserMsgParticleManager__UpdateEntityPosition methods */
void   cdotauser_msg__particle_manager__update_entity_position__init
                     (CDOTAUserMsgParticleManager__UpdateEntityPosition         *message);
/* CDOTAUserMsgParticleManager methods */
void   cdotauser_msg__particle_manager__init
                     (CDOTAUserMsgParticleManager         *message);
size_t cdotauser_msg__particle_manager__get_packed_size
                     (const CDOTAUserMsgParticleManager   *message);
size_t cdotauser_msg__particle_manager__pack
                     (const CDOTAUserMsgParticleManager   *message,
                      uint8_t             *out);
size_t cdotauser_msg__particle_manager__pack_to_buffer
                     (const CDOTAUserMsgParticleManager   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgParticleManager *
       cdotauser_msg__particle_manager__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__particle_manager__free_unpacked
                     (CDOTAUserMsgParticleManager *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgOverheadEvent methods */
void   cdotauser_msg__overhead_event__init
                     (CDOTAUserMsgOverheadEvent         *message);
size_t cdotauser_msg__overhead_event__get_packed_size
                     (const CDOTAUserMsgOverheadEvent   *message);
size_t cdotauser_msg__overhead_event__pack
                     (const CDOTAUserMsgOverheadEvent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__overhead_event__pack_to_buffer
                     (const CDOTAUserMsgOverheadEvent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgOverheadEvent *
       cdotauser_msg__overhead_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__overhead_event__free_unpacked
                     (CDOTAUserMsgOverheadEvent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialTipInfo methods */
void   cdotauser_msg__tutorial_tip_info__init
                     (CDOTAUserMsgTutorialTipInfo         *message);
size_t cdotauser_msg__tutorial_tip_info__get_packed_size
                     (const CDOTAUserMsgTutorialTipInfo   *message);
size_t cdotauser_msg__tutorial_tip_info__pack
                     (const CDOTAUserMsgTutorialTipInfo   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_tip_info__pack_to_buffer
                     (const CDOTAUserMsgTutorialTipInfo   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialTipInfo *
       cdotauser_msg__tutorial_tip_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_tip_info__free_unpacked
                     (CDOTAUserMsgTutorialTipInfo *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialFinish methods */
void   cdotauser_msg__tutorial_finish__init
                     (CDOTAUserMsgTutorialFinish         *message);
size_t cdotauser_msg__tutorial_finish__get_packed_size
                     (const CDOTAUserMsgTutorialFinish   *message);
size_t cdotauser_msg__tutorial_finish__pack
                     (const CDOTAUserMsgTutorialFinish   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_finish__pack_to_buffer
                     (const CDOTAUserMsgTutorialFinish   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialFinish *
       cdotauser_msg__tutorial_finish__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_finish__free_unpacked
                     (CDOTAUserMsgTutorialFinish *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialMinimapPosition methods */
void   cdotauser_msg__tutorial_minimap_position__init
                     (CDOTAUserMsgTutorialMinimapPosition         *message);
size_t cdotauser_msg__tutorial_minimap_position__get_packed_size
                     (const CDOTAUserMsgTutorialMinimapPosition   *message);
size_t cdotauser_msg__tutorial_minimap_position__pack
                     (const CDOTAUserMsgTutorialMinimapPosition   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_minimap_position__pack_to_buffer
                     (const CDOTAUserMsgTutorialMinimapPosition   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialMinimapPosition *
       cdotauser_msg__tutorial_minimap_position__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_minimap_position__free_unpacked
                     (CDOTAUserMsgTutorialMinimapPosition *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSendGenericToolTip methods */
void   cdotauser_msg__send_generic_tool_tip__init
                     (CDOTAUserMsgSendGenericToolTip         *message);
size_t cdotauser_msg__send_generic_tool_tip__get_packed_size
                     (const CDOTAUserMsgSendGenericToolTip   *message);
size_t cdotauser_msg__send_generic_tool_tip__pack
                     (const CDOTAUserMsgSendGenericToolTip   *message,
                      uint8_t             *out);
size_t cdotauser_msg__send_generic_tool_tip__pack_to_buffer
                     (const CDOTAUserMsgSendGenericToolTip   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSendGenericToolTip *
       cdotauser_msg__send_generic_tool_tip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__send_generic_tool_tip__free_unpacked
                     (CDOTAUserMsgSendGenericToolTip *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgWorldLine methods */
void   cdotauser_msg__world_line__init
                     (CDOTAUserMsgWorldLine         *message);
size_t cdotauser_msg__world_line__get_packed_size
                     (const CDOTAUserMsgWorldLine   *message);
size_t cdotauser_msg__world_line__pack
                     (const CDOTAUserMsgWorldLine   *message,
                      uint8_t             *out);
size_t cdotauser_msg__world_line__pack_to_buffer
                     (const CDOTAUserMsgWorldLine   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgWorldLine *
       cdotauser_msg__world_line__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__world_line__free_unpacked
                     (CDOTAUserMsgWorldLine *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgChatWheel methods */
void   cdotauser_msg__chat_wheel__init
                     (CDOTAUserMsgChatWheel         *message);
size_t cdotauser_msg__chat_wheel__get_packed_size
                     (const CDOTAUserMsgChatWheel   *message);
size_t cdotauser_msg__chat_wheel__pack
                     (const CDOTAUserMsgChatWheel   *message,
                      uint8_t             *out);
size_t cdotauser_msg__chat_wheel__pack_to_buffer
                     (const CDOTAUserMsgChatWheel   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgChatWheel *
       cdotauser_msg__chat_wheel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__chat_wheel__free_unpacked
                     (CDOTAUserMsgChatWheel *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgReceivedXmasGift methods */
void   cdotauser_msg__received_xmas_gift__init
                     (CDOTAUserMsgReceivedXmasGift         *message);
size_t cdotauser_msg__received_xmas_gift__get_packed_size
                     (const CDOTAUserMsgReceivedXmasGift   *message);
size_t cdotauser_msg__received_xmas_gift__pack
                     (const CDOTAUserMsgReceivedXmasGift   *message,
                      uint8_t             *out);
size_t cdotauser_msg__received_xmas_gift__pack_to_buffer
                     (const CDOTAUserMsgReceivedXmasGift   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgReceivedXmasGift *
       cdotauser_msg__received_xmas_gift__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__received_xmas_gift__free_unpacked
                     (CDOTAUserMsgReceivedXmasGift *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgShowSurvey methods */
void   cdotauser_msg__show_survey__init
                     (CDOTAUserMsgShowSurvey         *message);
size_t cdotauser_msg__show_survey__get_packed_size
                     (const CDOTAUserMsgShowSurvey   *message);
size_t cdotauser_msg__show_survey__pack
                     (const CDOTAUserMsgShowSurvey   *message,
                      uint8_t             *out);
size_t cdotauser_msg__show_survey__pack_to_buffer
                     (const CDOTAUserMsgShowSurvey   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgShowSurvey *
       cdotauser_msg__show_survey__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__show_survey__free_unpacked
                     (CDOTAUserMsgShowSurvey *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgUpdateSharedContent methods */
void   cdotauser_msg__update_shared_content__init
                     (CDOTAUserMsgUpdateSharedContent         *message);
size_t cdotauser_msg__update_shared_content__get_packed_size
                     (const CDOTAUserMsgUpdateSharedContent   *message);
size_t cdotauser_msg__update_shared_content__pack
                     (const CDOTAUserMsgUpdateSharedContent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__update_shared_content__pack_to_buffer
                     (const CDOTAUserMsgUpdateSharedContent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgUpdateSharedContent *
       cdotauser_msg__update_shared_content__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__update_shared_content__free_unpacked
                     (CDOTAUserMsgUpdateSharedContent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialRequestExp methods */
void   cdotauser_msg__tutorial_request_exp__init
                     (CDOTAUserMsgTutorialRequestExp         *message);
size_t cdotauser_msg__tutorial_request_exp__get_packed_size
                     (const CDOTAUserMsgTutorialRequestExp   *message);
size_t cdotauser_msg__tutorial_request_exp__pack
                     (const CDOTAUserMsgTutorialRequestExp   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_request_exp__pack_to_buffer
                     (const CDOTAUserMsgTutorialRequestExp   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialRequestExp *
       cdotauser_msg__tutorial_request_exp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_request_exp__free_unpacked
                     (CDOTAUserMsgTutorialRequestExp *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialFade methods */
void   cdotauser_msg__tutorial_fade__init
                     (CDOTAUserMsgTutorialFade         *message);
size_t cdotauser_msg__tutorial_fade__get_packed_size
                     (const CDOTAUserMsgTutorialFade   *message);
size_t cdotauser_msg__tutorial_fade__pack
                     (const CDOTAUserMsgTutorialFade   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_fade__pack_to_buffer
                     (const CDOTAUserMsgTutorialFade   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialFade *
       cdotauser_msg__tutorial_fade__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_fade__free_unpacked
                     (CDOTAUserMsgTutorialFade *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTutorialPingMinimap methods */
void   cdotauser_msg__tutorial_ping_minimap__init
                     (CDOTAUserMsgTutorialPingMinimap         *message);
size_t cdotauser_msg__tutorial_ping_minimap__get_packed_size
                     (const CDOTAUserMsgTutorialPingMinimap   *message);
size_t cdotauser_msg__tutorial_ping_minimap__pack
                     (const CDOTAUserMsgTutorialPingMinimap   *message,
                      uint8_t             *out);
size_t cdotauser_msg__tutorial_ping_minimap__pack_to_buffer
                     (const CDOTAUserMsgTutorialPingMinimap   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTutorialPingMinimap *
       cdotauser_msg__tutorial_ping_minimap__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__tutorial_ping_minimap__free_unpacked
                     (CDOTAUserMsgTutorialPingMinimap *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgGamerulesStateChanged methods */
void   cdotauser_msg__gamerules_state_changed__init
                     (CDOTAUserMsgGamerulesStateChanged         *message);
size_t cdotauser_msg__gamerules_state_changed__get_packed_size
                     (const CDOTAUserMsgGamerulesStateChanged   *message);
size_t cdotauser_msg__gamerules_state_changed__pack
                     (const CDOTAUserMsgGamerulesStateChanged   *message,
                      uint8_t             *out);
size_t cdotauser_msg__gamerules_state_changed__pack_to_buffer
                     (const CDOTAUserMsgGamerulesStateChanged   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgGamerulesStateChanged *
       cdotauser_msg__gamerules_state_changed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__gamerules_state_changed__free_unpacked
                     (CDOTAUserMsgGamerulesStateChanged *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgAddQuestLogEntry methods */
void   cdotauser_msg__add_quest_log_entry__init
                     (CDOTAUserMsgAddQuestLogEntry         *message);
size_t cdotauser_msg__add_quest_log_entry__get_packed_size
                     (const CDOTAUserMsgAddQuestLogEntry   *message);
size_t cdotauser_msg__add_quest_log_entry__pack
                     (const CDOTAUserMsgAddQuestLogEntry   *message,
                      uint8_t             *out);
size_t cdotauser_msg__add_quest_log_entry__pack_to_buffer
                     (const CDOTAUserMsgAddQuestLogEntry   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgAddQuestLogEntry *
       cdotauser_msg__add_quest_log_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__add_quest_log_entry__free_unpacked
                     (CDOTAUserMsgAddQuestLogEntry *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSendStatPopup methods */
void   cdotauser_msg__send_stat_popup__init
                     (CDOTAUserMsgSendStatPopup         *message);
size_t cdotauser_msg__send_stat_popup__get_packed_size
                     (const CDOTAUserMsgSendStatPopup   *message);
size_t cdotauser_msg__send_stat_popup__pack
                     (const CDOTAUserMsgSendStatPopup   *message,
                      uint8_t             *out);
size_t cdotauser_msg__send_stat_popup__pack_to_buffer
                     (const CDOTAUserMsgSendStatPopup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSendStatPopup *
       cdotauser_msg__send_stat_popup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__send_stat_popup__free_unpacked
                     (CDOTAUserMsgSendStatPopup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSendRoshanPopup methods */
void   cdotauser_msg__send_roshan_popup__init
                     (CDOTAUserMsgSendRoshanPopup         *message);
size_t cdotauser_msg__send_roshan_popup__get_packed_size
                     (const CDOTAUserMsgSendRoshanPopup   *message);
size_t cdotauser_msg__send_roshan_popup__pack
                     (const CDOTAUserMsgSendRoshanPopup   *message,
                      uint8_t             *out);
size_t cdotauser_msg__send_roshan_popup__pack_to_buffer
                     (const CDOTAUserMsgSendRoshanPopup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSendRoshanPopup *
       cdotauser_msg__send_roshan_popup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__send_roshan_popup__free_unpacked
                     (CDOTAUserMsgSendRoshanPopup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSendFinalGold methods */
void   cdotauser_msg__send_final_gold__init
                     (CDOTAUserMsgSendFinalGold         *message);
size_t cdotauser_msg__send_final_gold__get_packed_size
                     (const CDOTAUserMsgSendFinalGold   *message);
size_t cdotauser_msg__send_final_gold__pack
                     (const CDOTAUserMsgSendFinalGold   *message,
                      uint8_t             *out);
size_t cdotauser_msg__send_final_gold__pack_to_buffer
                     (const CDOTAUserMsgSendFinalGold   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSendFinalGold *
       cdotauser_msg__send_final_gold__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__send_final_gold__free_unpacked
                     (CDOTAUserMsgSendFinalGold *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCustomMsg methods */
void   cdotauser_msg__custom_msg__init
                     (CDOTAUserMsgCustomMsg         *message);
size_t cdotauser_msg__custom_msg__get_packed_size
                     (const CDOTAUserMsgCustomMsg   *message);
size_t cdotauser_msg__custom_msg__pack
                     (const CDOTAUserMsgCustomMsg   *message,
                      uint8_t             *out);
size_t cdotauser_msg__custom_msg__pack_to_buffer
                     (const CDOTAUserMsgCustomMsg   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCustomMsg *
       cdotauser_msg__custom_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__custom_msg__free_unpacked
                     (CDOTAUserMsgCustomMsg *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCoachHUDPing methods */
void   cdotauser_msg__coach_hudping__init
                     (CDOTAUserMsgCoachHUDPing         *message);
size_t cdotauser_msg__coach_hudping__get_packed_size
                     (const CDOTAUserMsgCoachHUDPing   *message);
size_t cdotauser_msg__coach_hudping__pack
                     (const CDOTAUserMsgCoachHUDPing   *message,
                      uint8_t             *out);
size_t cdotauser_msg__coach_hudping__pack_to_buffer
                     (const CDOTAUserMsgCoachHUDPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCoachHUDPing *
       cdotauser_msg__coach_hudping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__coach_hudping__free_unpacked
                     (CDOTAUserMsgCoachHUDPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgClientLoadGridNav methods */
void   cdotauser_msg__client_load_grid_nav__init
                     (CDOTAUserMsgClientLoadGridNav         *message);
size_t cdotauser_msg__client_load_grid_nav__get_packed_size
                     (const CDOTAUserMsgClientLoadGridNav   *message);
size_t cdotauser_msg__client_load_grid_nav__pack
                     (const CDOTAUserMsgClientLoadGridNav   *message,
                      uint8_t             *out);
size_t cdotauser_msg__client_load_grid_nav__pack_to_buffer
                     (const CDOTAUserMsgClientLoadGridNav   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgClientLoadGridNav *
       cdotauser_msg__client_load_grid_nav__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__client_load_grid_nav__free_unpacked
                     (CDOTAUserMsgClientLoadGridNav *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTEProjectile methods */
void   cdotauser_msg__te__projectile__init
                     (CDOTAUserMsgTEProjectile         *message);
size_t cdotauser_msg__te__projectile__get_packed_size
                     (const CDOTAUserMsgTEProjectile   *message);
size_t cdotauser_msg__te__projectile__pack
                     (const CDOTAUserMsgTEProjectile   *message,
                      uint8_t             *out);
size_t cdotauser_msg__te__projectile__pack_to_buffer
                     (const CDOTAUserMsgTEProjectile   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTEProjectile *
       cdotauser_msg__te__projectile__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__te__projectile__free_unpacked
                     (CDOTAUserMsgTEProjectile *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTEProjectileLoc methods */
void   cdotauser_msg__te__projectile_loc__init
                     (CDOTAUserMsgTEProjectileLoc         *message);
size_t cdotauser_msg__te__projectile_loc__get_packed_size
                     (const CDOTAUserMsgTEProjectileLoc   *message);
size_t cdotauser_msg__te__projectile_loc__pack
                     (const CDOTAUserMsgTEProjectileLoc   *message,
                      uint8_t             *out);
size_t cdotauser_msg__te__projectile_loc__pack_to_buffer
                     (const CDOTAUserMsgTEProjectileLoc   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTEProjectileLoc *
       cdotauser_msg__te__projectile_loc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__te__projectile_loc__free_unpacked
                     (CDOTAUserMsgTEProjectileLoc *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTEDotaBloodImpact methods */
void   cdotauser_msg__te__dota_blood_impact__init
                     (CDOTAUserMsgTEDotaBloodImpact         *message);
size_t cdotauser_msg__te__dota_blood_impact__get_packed_size
                     (const CDOTAUserMsgTEDotaBloodImpact   *message);
size_t cdotauser_msg__te__dota_blood_impact__pack
                     (const CDOTAUserMsgTEDotaBloodImpact   *message,
                      uint8_t             *out);
size_t cdotauser_msg__te__dota_blood_impact__pack_to_buffer
                     (const CDOTAUserMsgTEDotaBloodImpact   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTEDotaBloodImpact *
       cdotauser_msg__te__dota_blood_impact__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__te__dota_blood_impact__free_unpacked
                     (CDOTAUserMsgTEDotaBloodImpact *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgAbilityPing methods */
void   cdotauser_msg__ability_ping__init
                     (CDOTAUserMsgAbilityPing         *message);
size_t cdotauser_msg__ability_ping__get_packed_size
                     (const CDOTAUserMsgAbilityPing   *message);
size_t cdotauser_msg__ability_ping__pack
                     (const CDOTAUserMsgAbilityPing   *message,
                      uint8_t             *out);
size_t cdotauser_msg__ability_ping__pack_to_buffer
                     (const CDOTAUserMsgAbilityPing   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgAbilityPing *
       cdotauser_msg__ability_ping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__ability_ping__free_unpacked
                     (CDOTAUserMsgAbilityPing *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTEUnitAnimation methods */
void   cdotauser_msg__te__unit_animation__init
                     (CDOTAUserMsgTEUnitAnimation         *message);
size_t cdotauser_msg__te__unit_animation__get_packed_size
                     (const CDOTAUserMsgTEUnitAnimation   *message);
size_t cdotauser_msg__te__unit_animation__pack
                     (const CDOTAUserMsgTEUnitAnimation   *message,
                      uint8_t             *out);
size_t cdotauser_msg__te__unit_animation__pack_to_buffer
                     (const CDOTAUserMsgTEUnitAnimation   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTEUnitAnimation *
       cdotauser_msg__te__unit_animation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__te__unit_animation__free_unpacked
                     (CDOTAUserMsgTEUnitAnimation *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgTEUnitAnimationEnd methods */
void   cdotauser_msg__te__unit_animation_end__init
                     (CDOTAUserMsgTEUnitAnimationEnd         *message);
size_t cdotauser_msg__te__unit_animation_end__get_packed_size
                     (const CDOTAUserMsgTEUnitAnimationEnd   *message);
size_t cdotauser_msg__te__unit_animation_end__pack
                     (const CDOTAUserMsgTEUnitAnimationEnd   *message,
                      uint8_t             *out);
size_t cdotauser_msg__te__unit_animation_end__pack_to_buffer
                     (const CDOTAUserMsgTEUnitAnimationEnd   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgTEUnitAnimationEnd *
       cdotauser_msg__te__unit_animation_end__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__te__unit_animation_end__free_unpacked
                     (CDOTAUserMsgTEUnitAnimationEnd *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgShowGenericPopup methods */
void   cdotauser_msg__show_generic_popup__init
                     (CDOTAUserMsgShowGenericPopup         *message);
size_t cdotauser_msg__show_generic_popup__get_packed_size
                     (const CDOTAUserMsgShowGenericPopup   *message);
size_t cdotauser_msg__show_generic_popup__pack
                     (const CDOTAUserMsgShowGenericPopup   *message,
                      uint8_t             *out);
size_t cdotauser_msg__show_generic_popup__pack_to_buffer
                     (const CDOTAUserMsgShowGenericPopup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgShowGenericPopup *
       cdotauser_msg__show_generic_popup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__show_generic_popup__free_unpacked
                     (CDOTAUserMsgShowGenericPopup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgVoteStart methods */
void   cdotauser_msg__vote_start__init
                     (CDOTAUserMsgVoteStart         *message);
size_t cdotauser_msg__vote_start__get_packed_size
                     (const CDOTAUserMsgVoteStart   *message);
size_t cdotauser_msg__vote_start__pack
                     (const CDOTAUserMsgVoteStart   *message,
                      uint8_t             *out);
size_t cdotauser_msg__vote_start__pack_to_buffer
                     (const CDOTAUserMsgVoteStart   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgVoteStart *
       cdotauser_msg__vote_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__vote_start__free_unpacked
                     (CDOTAUserMsgVoteStart *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgVoteUpdate methods */
void   cdotauser_msg__vote_update__init
                     (CDOTAUserMsgVoteUpdate         *message);
size_t cdotauser_msg__vote_update__get_packed_size
                     (const CDOTAUserMsgVoteUpdate   *message);
size_t cdotauser_msg__vote_update__pack
                     (const CDOTAUserMsgVoteUpdate   *message,
                      uint8_t             *out);
size_t cdotauser_msg__vote_update__pack_to_buffer
                     (const CDOTAUserMsgVoteUpdate   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgVoteUpdate *
       cdotauser_msg__vote_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__vote_update__free_unpacked
                     (CDOTAUserMsgVoteUpdate *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgVoteEnd methods */
void   cdotauser_msg__vote_end__init
                     (CDOTAUserMsgVoteEnd         *message);
size_t cdotauser_msg__vote_end__get_packed_size
                     (const CDOTAUserMsgVoteEnd   *message);
size_t cdotauser_msg__vote_end__pack
                     (const CDOTAUserMsgVoteEnd   *message,
                      uint8_t             *out);
size_t cdotauser_msg__vote_end__pack_to_buffer
                     (const CDOTAUserMsgVoteEnd   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgVoteEnd *
       cdotauser_msg__vote_end__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__vote_end__free_unpacked
                     (CDOTAUserMsgVoteEnd *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgBoosterStatePlayer methods */
void   cdotauser_msg__booster_state_player__init
                     (CDOTAUserMsgBoosterStatePlayer         *message);
size_t cdotauser_msg__booster_state_player__get_packed_size
                     (const CDOTAUserMsgBoosterStatePlayer   *message);
size_t cdotauser_msg__booster_state_player__pack
                     (const CDOTAUserMsgBoosterStatePlayer   *message,
                      uint8_t             *out);
size_t cdotauser_msg__booster_state_player__pack_to_buffer
                     (const CDOTAUserMsgBoosterStatePlayer   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgBoosterStatePlayer *
       cdotauser_msg__booster_state_player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__booster_state_player__free_unpacked
                     (CDOTAUserMsgBoosterStatePlayer *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgBoosterState methods */
void   cdotauser_msg__booster_state__init
                     (CDOTAUserMsgBoosterState         *message);
size_t cdotauser_msg__booster_state__get_packed_size
                     (const CDOTAUserMsgBoosterState   *message);
size_t cdotauser_msg__booster_state__pack
                     (const CDOTAUserMsgBoosterState   *message,
                      uint8_t             *out);
size_t cdotauser_msg__booster_state__pack_to_buffer
                     (const CDOTAUserMsgBoosterState   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgBoosterState *
       cdotauser_msg__booster_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__booster_state__free_unpacked
                     (CDOTAUserMsgBoosterState *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgPlayerMMR methods */
void   cdotauser_msg__player_mmr__init
                     (CDOTAUserMsgPlayerMMR         *message);
size_t cdotauser_msg__player_mmr__get_packed_size
                     (const CDOTAUserMsgPlayerMMR   *message);
size_t cdotauser_msg__player_mmr__pack
                     (const CDOTAUserMsgPlayerMMR   *message,
                      uint8_t             *out);
size_t cdotauser_msg__player_mmr__pack_to_buffer
                     (const CDOTAUserMsgPlayerMMR   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgPlayerMMR *
       cdotauser_msg__player_mmr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__player_mmr__free_unpacked
                     (CDOTAUserMsgPlayerMMR *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgAbilitySteal methods */
void   cdotauser_msg__ability_steal__init
                     (CDOTAUserMsgAbilitySteal         *message);
size_t cdotauser_msg__ability_steal__get_packed_size
                     (const CDOTAUserMsgAbilitySteal   *message);
size_t cdotauser_msg__ability_steal__pack
                     (const CDOTAUserMsgAbilitySteal   *message,
                      uint8_t             *out);
size_t cdotauser_msg__ability_steal__pack_to_buffer
                     (const CDOTAUserMsgAbilitySteal   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgAbilitySteal *
       cdotauser_msg__ability_steal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__ability_steal__free_unpacked
                     (CDOTAUserMsgAbilitySteal *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsHeroLookup methods */
void   cdotauser_msg__stats_hero_lookup__init
                     (CDOTAUserMsgStatsHeroLookup         *message);
size_t cdotauser_msg__stats_hero_lookup__get_packed_size
                     (const CDOTAUserMsgStatsHeroLookup   *message);
size_t cdotauser_msg__stats_hero_lookup__pack
                     (const CDOTAUserMsgStatsHeroLookup   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_hero_lookup__pack_to_buffer
                     (const CDOTAUserMsgStatsHeroLookup   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsHeroLookup *
       cdotauser_msg__stats_hero_lookup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_hero_lookup__free_unpacked
                     (CDOTAUserMsgStatsHeroLookup *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsHeroPositionInfo__PositionPair methods */
void   cdotauser_msg__stats_hero_position_info__position_pair__init
                     (CDOTAUserMsgStatsHeroPositionInfo__PositionPair         *message);
/* CDOTAUserMsgStatsHeroPositionInfo methods */
void   cdotauser_msg__stats_hero_position_info__init
                     (CDOTAUserMsgStatsHeroPositionInfo         *message);
size_t cdotauser_msg__stats_hero_position_info__get_packed_size
                     (const CDOTAUserMsgStatsHeroPositionInfo   *message);
size_t cdotauser_msg__stats_hero_position_info__pack
                     (const CDOTAUserMsgStatsHeroPositionInfo   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_hero_position_info__pack_to_buffer
                     (const CDOTAUserMsgStatsHeroPositionInfo   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsHeroPositionInfo *
       cdotauser_msg__stats_hero_position_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_hero_position_info__free_unpacked
                     (CDOTAUserMsgStatsHeroPositionInfo *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsHeroMinuteDetails methods */
void   cdotauser_msg__stats_hero_minute_details__init
                     (CDOTAUserMsgStatsHeroMinuteDetails         *message);
size_t cdotauser_msg__stats_hero_minute_details__get_packed_size
                     (const CDOTAUserMsgStatsHeroMinuteDetails   *message);
size_t cdotauser_msg__stats_hero_minute_details__pack
                     (const CDOTAUserMsgStatsHeroMinuteDetails   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_hero_minute_details__pack_to_buffer
                     (const CDOTAUserMsgStatsHeroMinuteDetails   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsHeroMinuteDetails *
       cdotauser_msg__stats_hero_minute_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_hero_minute_details__free_unpacked
                     (CDOTAUserMsgStatsHeroMinuteDetails *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance methods */
void   cdotauser_msg__stats_team_minute_details__location_performance__init
                     (CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance         *message);
/* CDOTAUserMsgStatsTeamMinuteDetails methods */
void   cdotauser_msg__stats_team_minute_details__init
                     (CDOTAUserMsgStatsTeamMinuteDetails         *message);
size_t cdotauser_msg__stats_team_minute_details__get_packed_size
                     (const CDOTAUserMsgStatsTeamMinuteDetails   *message);
size_t cdotauser_msg__stats_team_minute_details__pack
                     (const CDOTAUserMsgStatsTeamMinuteDetails   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_team_minute_details__pack_to_buffer
                     (const CDOTAUserMsgStatsTeamMinuteDetails   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsTeamMinuteDetails *
       cdotauser_msg__stats_team_minute_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_team_minute_details__free_unpacked
                     (CDOTAUserMsgStatsTeamMinuteDetails *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsPlayerKillShare methods */
void   cdotauser_msg__stats_player_kill_share__init
                     (CDOTAUserMsgStatsPlayerKillShare         *message);
size_t cdotauser_msg__stats_player_kill_share__get_packed_size
                     (const CDOTAUserMsgStatsPlayerKillShare   *message);
size_t cdotauser_msg__stats_player_kill_share__pack
                     (const CDOTAUserMsgStatsPlayerKillShare   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_player_kill_share__pack_to_buffer
                     (const CDOTAUserMsgStatsPlayerKillShare   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsPlayerKillShare *
       cdotauser_msg__stats_player_kill_share__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_player_kill_share__free_unpacked
                     (CDOTAUserMsgStatsPlayerKillShare *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsKillDetails methods */
void   cdotauser_msg__stats_kill_details__init
                     (CDOTAUserMsgStatsKillDetails         *message);
size_t cdotauser_msg__stats_kill_details__get_packed_size
                     (const CDOTAUserMsgStatsKillDetails   *message);
size_t cdotauser_msg__stats_kill_details__pack
                     (const CDOTAUserMsgStatsKillDetails   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_kill_details__pack_to_buffer
                     (const CDOTAUserMsgStatsKillDetails   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsKillDetails *
       cdotauser_msg__stats_kill_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_kill_details__free_unpacked
                     (CDOTAUserMsgStatsKillDetails *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails methods */
void   cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_team_details__init
                     (CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails         *message);
/* CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails methods */
void   cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_details__init
                     (CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails         *message);
/* CDOTAUserMsgStatsMatchDetails methods */
void   cdotauser_msg__stats_match_details__init
                     (CDOTAUserMsgStatsMatchDetails         *message);
size_t cdotauser_msg__stats_match_details__get_packed_size
                     (const CDOTAUserMsgStatsMatchDetails   *message);
size_t cdotauser_msg__stats_match_details__pack
                     (const CDOTAUserMsgStatsMatchDetails   *message,
                      uint8_t             *out);
size_t cdotauser_msg__stats_match_details__pack_to_buffer
                     (const CDOTAUserMsgStatsMatchDetails   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgStatsMatchDetails *
       cdotauser_msg__stats_match_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__stats_match_details__free_unpacked
                     (CDOTAUserMsgStatsMatchDetails *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgMiniTaunt methods */
void   cdotauser_msg__mini_taunt__init
                     (CDOTAUserMsgMiniTaunt         *message);
size_t cdotauser_msg__mini_taunt__get_packed_size
                     (const CDOTAUserMsgMiniTaunt   *message);
size_t cdotauser_msg__mini_taunt__pack
                     (const CDOTAUserMsgMiniTaunt   *message,
                      uint8_t             *out);
size_t cdotauser_msg__mini_taunt__pack_to_buffer
                     (const CDOTAUserMsgMiniTaunt   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgMiniTaunt *
       cdotauser_msg__mini_taunt__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__mini_taunt__free_unpacked
                     (CDOTAUserMsgMiniTaunt *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgSpeechBubble methods */
void   cdotauser_msg__speech_bubble__init
                     (CDOTAUserMsgSpeechBubble         *message);
size_t cdotauser_msg__speech_bubble__get_packed_size
                     (const CDOTAUserMsgSpeechBubble   *message);
size_t cdotauser_msg__speech_bubble__pack
                     (const CDOTAUserMsgSpeechBubble   *message,
                      uint8_t             *out);
size_t cdotauser_msg__speech_bubble__pack_to_buffer
                     (const CDOTAUserMsgSpeechBubble   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgSpeechBubble *
       cdotauser_msg__speech_bubble__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__speech_bubble__free_unpacked
                     (CDOTAUserMsgSpeechBubble *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCustomHeaderMessage methods */
void   cdotauser_msg__custom_header_message__init
                     (CDOTAUserMsgCustomHeaderMessage         *message);
size_t cdotauser_msg__custom_header_message__get_packed_size
                     (const CDOTAUserMsgCustomHeaderMessage   *message);
size_t cdotauser_msg__custom_header_message__pack
                     (const CDOTAUserMsgCustomHeaderMessage   *message,
                      uint8_t             *out);
size_t cdotauser_msg__custom_header_message__pack_to_buffer
                     (const CDOTAUserMsgCustomHeaderMessage   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCustomHeaderMessage *
       cdotauser_msg__custom_header_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__custom_header_message__free_unpacked
                     (CDOTAUserMsgCustomHeaderMessage *message,
                      ProtobufCAllocator *allocator);
/* CMsgHeroAbilityStat methods */
void   cmsg_hero_ability_stat__init
                     (CMsgHeroAbilityStat         *message);
size_t cmsg_hero_ability_stat__get_packed_size
                     (const CMsgHeroAbilityStat   *message);
size_t cmsg_hero_ability_stat__pack
                     (const CMsgHeroAbilityStat   *message,
                      uint8_t             *out);
size_t cmsg_hero_ability_stat__pack_to_buffer
                     (const CMsgHeroAbilityStat   *message,
                      ProtobufCBuffer     *buffer);
CMsgHeroAbilityStat *
       cmsg_hero_ability_stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_hero_ability_stat__free_unpacked
                     (CMsgHeroAbilityStat *message,
                      ProtobufCAllocator *allocator);
/* CMsgCombatAnalyzerPlayerStat methods */
void   cmsg_combat_analyzer_player_stat__init
                     (CMsgCombatAnalyzerPlayerStat         *message);
size_t cmsg_combat_analyzer_player_stat__get_packed_size
                     (const CMsgCombatAnalyzerPlayerStat   *message);
size_t cmsg_combat_analyzer_player_stat__pack
                     (const CMsgCombatAnalyzerPlayerStat   *message,
                      uint8_t             *out);
size_t cmsg_combat_analyzer_player_stat__pack_to_buffer
                     (const CMsgCombatAnalyzerPlayerStat   *message,
                      ProtobufCBuffer     *buffer);
CMsgCombatAnalyzerPlayerStat *
       cmsg_combat_analyzer_player_stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_combat_analyzer_player_stat__free_unpacked
                     (CMsgCombatAnalyzerPlayerStat *message,
                      ProtobufCAllocator *allocator);
/* CMsgCombatAnalyzerStats methods */
void   cmsg_combat_analyzer_stats__init
                     (CMsgCombatAnalyzerStats         *message);
size_t cmsg_combat_analyzer_stats__get_packed_size
                     (const CMsgCombatAnalyzerStats   *message);
size_t cmsg_combat_analyzer_stats__pack
                     (const CMsgCombatAnalyzerStats   *message,
                      uint8_t             *out);
size_t cmsg_combat_analyzer_stats__pack_to_buffer
                     (const CMsgCombatAnalyzerStats   *message,
                      ProtobufCBuffer     *buffer);
CMsgCombatAnalyzerStats *
       cmsg_combat_analyzer_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_combat_analyzer_stats__free_unpacked
                     (CMsgCombatAnalyzerStats *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgBeastChat methods */
void   cdotauser_msg__beast_chat__init
                     (CDOTAUserMsgBeastChat         *message);
size_t cdotauser_msg__beast_chat__get_packed_size
                     (const CDOTAUserMsgBeastChat   *message);
size_t cdotauser_msg__beast_chat__pack
                     (const CDOTAUserMsgBeastChat   *message,
                      uint8_t             *out);
size_t cdotauser_msg__beast_chat__pack_to_buffer
                     (const CDOTAUserMsgBeastChat   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgBeastChat *
       cdotauser_msg__beast_chat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__beast_chat__free_unpacked
                     (CDOTAUserMsgBeastChat *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCustomHudElementCreate methods */
void   cdotauser_msg__custom_hud_element__create__init
                     (CDOTAUserMsgCustomHudElementCreate         *message);
size_t cdotauser_msg__custom_hud_element__create__get_packed_size
                     (const CDOTAUserMsgCustomHudElementCreate   *message);
size_t cdotauser_msg__custom_hud_element__create__pack
                     (const CDOTAUserMsgCustomHudElementCreate   *message,
                      uint8_t             *out);
size_t cdotauser_msg__custom_hud_element__create__pack_to_buffer
                     (const CDOTAUserMsgCustomHudElementCreate   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCustomHudElementCreate *
       cdotauser_msg__custom_hud_element__create__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__custom_hud_element__create__free_unpacked
                     (CDOTAUserMsgCustomHudElementCreate *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCustomHudElementModify methods */
void   cdotauser_msg__custom_hud_element__modify__init
                     (CDOTAUserMsgCustomHudElementModify         *message);
size_t cdotauser_msg__custom_hud_element__modify__get_packed_size
                     (const CDOTAUserMsgCustomHudElementModify   *message);
size_t cdotauser_msg__custom_hud_element__modify__pack
                     (const CDOTAUserMsgCustomHudElementModify   *message,
                      uint8_t             *out);
size_t cdotauser_msg__custom_hud_element__modify__pack_to_buffer
                     (const CDOTAUserMsgCustomHudElementModify   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCustomHudElementModify *
       cdotauser_msg__custom_hud_element__modify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__custom_hud_element__modify__free_unpacked
                     (CDOTAUserMsgCustomHudElementModify *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCustomHudElementDestroy methods */
void   cdotauser_msg__custom_hud_element__destroy__init
                     (CDOTAUserMsgCustomHudElementDestroy         *message);
size_t cdotauser_msg__custom_hud_element__destroy__get_packed_size
                     (const CDOTAUserMsgCustomHudElementDestroy   *message);
size_t cdotauser_msg__custom_hud_element__destroy__pack
                     (const CDOTAUserMsgCustomHudElementDestroy   *message,
                      uint8_t             *out);
size_t cdotauser_msg__custom_hud_element__destroy__pack_to_buffer
                     (const CDOTAUserMsgCustomHudElementDestroy   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCustomHudElementDestroy *
       cdotauser_msg__custom_hud_element__destroy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__custom_hud_element__destroy__free_unpacked
                     (CDOTAUserMsgCustomHudElementDestroy *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCompendiumStatePlayer methods */
void   cdotauser_msg__compendium_state_player__init
                     (CDOTAUserMsgCompendiumStatePlayer         *message);
size_t cdotauser_msg__compendium_state_player__get_packed_size
                     (const CDOTAUserMsgCompendiumStatePlayer   *message);
size_t cdotauser_msg__compendium_state_player__pack
                     (const CDOTAUserMsgCompendiumStatePlayer   *message,
                      uint8_t             *out);
size_t cdotauser_msg__compendium_state_player__pack_to_buffer
                     (const CDOTAUserMsgCompendiumStatePlayer   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCompendiumStatePlayer *
       cdotauser_msg__compendium_state_player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__compendium_state_player__free_unpacked
                     (CDOTAUserMsgCompendiumStatePlayer *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgCompendiumState methods */
void   cdotauser_msg__compendium_state__init
                     (CDOTAUserMsgCompendiumState         *message);
size_t cdotauser_msg__compendium_state__get_packed_size
                     (const CDOTAUserMsgCompendiumState   *message);
size_t cdotauser_msg__compendium_state__pack
                     (const CDOTAUserMsgCompendiumState   *message,
                      uint8_t             *out);
size_t cdotauser_msg__compendium_state__pack_to_buffer
                     (const CDOTAUserMsgCompendiumState   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgCompendiumState *
       cdotauser_msg__compendium_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__compendium_state__free_unpacked
                     (CDOTAUserMsgCompendiumState *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgProjectionAbility methods */
void   cdotauser_msg__projection_ability__init
                     (CDOTAUserMsgProjectionAbility         *message);
size_t cdotauser_msg__projection_ability__get_packed_size
                     (const CDOTAUserMsgProjectionAbility   *message);
size_t cdotauser_msg__projection_ability__pack
                     (const CDOTAUserMsgProjectionAbility   *message,
                      uint8_t             *out);
size_t cdotauser_msg__projection_ability__pack_to_buffer
                     (const CDOTAUserMsgProjectionAbility   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgProjectionAbility *
       cdotauser_msg__projection_ability__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__projection_ability__free_unpacked
                     (CDOTAUserMsgProjectionAbility *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgProjectionEvent methods */
void   cdotauser_msg__projection_event__init
                     (CDOTAUserMsgProjectionEvent         *message);
size_t cdotauser_msg__projection_event__get_packed_size
                     (const CDOTAUserMsgProjectionEvent   *message);
size_t cdotauser_msg__projection_event__pack
                     (const CDOTAUserMsgProjectionEvent   *message,
                      uint8_t             *out);
size_t cdotauser_msg__projection_event__pack_to_buffer
                     (const CDOTAUserMsgProjectionEvent   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgProjectionEvent *
       cdotauser_msg__projection_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__projection_event__free_unpacked
                     (CDOTAUserMsgProjectionEvent *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgXPAlert methods */
void   cdotauser_msg__xpalert__init
                     (CDOTAUserMsgXPAlert         *message);
size_t cdotauser_msg__xpalert__get_packed_size
                     (const CDOTAUserMsgXPAlert   *message);
size_t cdotauser_msg__xpalert__pack
                     (const CDOTAUserMsgXPAlert   *message,
                      uint8_t             *out);
size_t cdotauser_msg__xpalert__pack_to_buffer
                     (const CDOTAUserMsgXPAlert   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgXPAlert *
       cdotauser_msg__xpalert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__xpalert__free_unpacked
                     (CDOTAUserMsgXPAlert *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgUpdateQuestProgress methods */
void   cdotauser_msg__update_quest_progress__init
                     (CDOTAUserMsgUpdateQuestProgress         *message);
size_t cdotauser_msg__update_quest_progress__get_packed_size
                     (const CDOTAUserMsgUpdateQuestProgress   *message);
size_t cdotauser_msg__update_quest_progress__pack
                     (const CDOTAUserMsgUpdateQuestProgress   *message,
                      uint8_t             *out);
size_t cdotauser_msg__update_quest_progress__pack_to_buffer
                     (const CDOTAUserMsgUpdateQuestProgress   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgUpdateQuestProgress *
       cdotauser_msg__update_quest_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__update_quest_progress__free_unpacked
                     (CDOTAUserMsgUpdateQuestProgress *message,
                      ProtobufCAllocator *allocator);
/* CDOTAUserMsgQuestStatus methods */
void   cdotauser_msg__quest_status__init
                     (CDOTAUserMsgQuestStatus         *message);
size_t cdotauser_msg__quest_status__get_packed_size
                     (const CDOTAUserMsgQuestStatus   *message);
size_t cdotauser_msg__quest_status__pack
                     (const CDOTAUserMsgQuestStatus   *message,
                      uint8_t             *out);
size_t cdotauser_msg__quest_status__pack_to_buffer
                     (const CDOTAUserMsgQuestStatus   *message,
                      ProtobufCBuffer     *buffer);
CDOTAUserMsgQuestStatus *
       cdotauser_msg__quest_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdotauser_msg__quest_status__free_unpacked
                     (CDOTAUserMsgQuestStatus *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CDOTAUserMsgAIDebugLine_Closure)
                 (const CDOTAUserMsgAIDebugLine *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgPing_Closure)
                 (const CDOTAUserMsgPing *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSwapVerify_Closure)
                 (const CDOTAUserMsgSwapVerify *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgChatEvent_Closure)
                 (const CDOTAUserMsgChatEvent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCombatLogShowDeath_Closure)
                 (const CDOTAUserMsgCombatLogShowDeath *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgBotChat_Closure)
                 (const CDOTAUserMsgBotChat *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCombatHeroPositions_Closure)
                 (const CDOTAUserMsgCombatHeroPositions *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMiniKillCamInfo__Attacker__Ability_Closure)
                 (const CDOTAUserMsgMiniKillCamInfo__Attacker__Ability *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMiniKillCamInfo__Attacker_Closure)
                 (const CDOTAUserMsgMiniKillCamInfo__Attacker *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMiniKillCamInfo_Closure)
                 (const CDOTAUserMsgMiniKillCamInfo *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgGlobalLightColor_Closure)
                 (const CDOTAUserMsgGlobalLightColor *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgGlobalLightDirection_Closure)
                 (const CDOTAUserMsgGlobalLightDirection *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgLocationPing_Closure)
                 (const CDOTAUserMsgLocationPing *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgItemAlert_Closure)
                 (const CDOTAUserMsgItemAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgEnemyItemAlert_Closure)
                 (const CDOTAUserMsgEnemyItemAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgModifierAlert_Closure)
                 (const CDOTAUserMsgModifierAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgHPManaAlert_Closure)
                 (const CDOTAUserMsgHPManaAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgGlyphAlert_Closure)
                 (const CDOTAUserMsgGlyphAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgWillPurchaseAlert_Closure)
                 (const CDOTAUserMsgWillPurchaseAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgBuyBackStateAlert_Closure)
                 (const CDOTAUserMsgBuyBackStateAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgQuickBuyAlert_Closure)
                 (const CDOTAUserMsgQuickBuyAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCourierKilledAlert_Closure)
                 (const CDOTAUserMsgCourierKilledAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMinimapEvent_Closure)
                 (const CDOTAUserMsgMinimapEvent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMapLine_Closure)
                 (const CDOTAUserMsgMapLine *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMinimapDebugPoint_Closure)
                 (const CDOTAUserMsgMinimapDebugPoint *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCreateLinearProjectile_Closure)
                 (const CDOTAUserMsgCreateLinearProjectile *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgDestroyLinearProjectile_Closure)
                 (const CDOTAUserMsgDestroyLinearProjectile *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgDodgeTrackingProjectiles_Closure)
                 (const CDOTAUserMsgDodgeTrackingProjectiles *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSpectatorPlayerClick_Closure)
                 (const CDOTAUserMsgSpectatorPlayerClick *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSpectatorPlayerUnitOrders_Closure)
                 (const CDOTAUserMsgSpectatorPlayerUnitOrders *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgNevermoreRequiem_Closure)
                 (const CDOTAUserMsgNevermoreRequiem *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgInvalidCommand_Closure)
                 (const CDOTAUserMsgInvalidCommand *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgHudError_Closure)
                 (const CDOTAUserMsgHudError *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSharedCooldown_Closure)
                 (const CDOTAUserMsgSharedCooldown *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSetNextAutobuyItem_Closure)
                 (const CDOTAUserMsgSetNextAutobuyItem *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgHalloweenDrops_Closure)
                 (const CDOTAUserMsgHalloweenDrops *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgPredictionResult__Prediction_Closure)
                 (const CDOTAUserMsgPredictionResult__Prediction *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgPredictionResult_Closure)
                 (const CDOTAUserMsgPredictionResult *message,
                  void *closure_data);
typedef void (*CDOTAResponseQuerySerialized__Fact_Closure)
                 (const CDOTAResponseQuerySerialized__Fact *message,
                  void *closure_data);
typedef void (*CDOTAResponseQuerySerialized_Closure)
                 (const CDOTAResponseQuerySerialized *message,
                  void *closure_data);
typedef void (*CDOTASpeechMatchOnClient_Closure)
                 (const CDOTASpeechMatchOnClient *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__Speech_Closure)
                 (const CDOTAUserMsgUnitEvent__Speech *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__SpeechMute_Closure)
                 (const CDOTAUserMsgUnitEvent__SpeechMute *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__AddGesture_Closure)
                 (const CDOTAUserMsgUnitEvent__AddGesture *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__RemoveGesture_Closure)
                 (const CDOTAUserMsgUnitEvent__RemoveGesture *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__BloodImpact_Closure)
                 (const CDOTAUserMsgUnitEvent__BloodImpact *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent__FadeGesture_Closure)
                 (const CDOTAUserMsgUnitEvent__FadeGesture *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUnitEvent_Closure)
                 (const CDOTAUserMsgUnitEvent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgItemPurchased_Closure)
                 (const CDOTAUserMsgItemPurchased *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgItemFound_Closure)
                 (const CDOTAUserMsgItemFound *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__ReleaseParticleIndex_Closure)
                 (const CDOTAUserMsgParticleManager__ReleaseParticleIndex *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__CreateParticle_Closure)
                 (const CDOTAUserMsgParticleManager__CreateParticle *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__DestroyParticle_Closure)
                 (const CDOTAUserMsgParticleManager__DestroyParticle *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__DestroyParticleInvolving_Closure)
                 (const CDOTAUserMsgParticleManager__DestroyParticleInvolving *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticle_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticle *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleFwd_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleFwd *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleOrient_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleOrient *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleFallback_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleFallback *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleOffset_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleOffset *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleEnt_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleEnt *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleSetFrozen_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleSetFrozen *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateParticleShouldDraw_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateParticleShouldDraw *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__ChangeControlPointAttachment_Closure)
                 (const CDOTAUserMsgParticleManager__ChangeControlPointAttachment *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager__UpdateEntityPosition_Closure)
                 (const CDOTAUserMsgParticleManager__UpdateEntityPosition *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgParticleManager_Closure)
                 (const CDOTAUserMsgParticleManager *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgOverheadEvent_Closure)
                 (const CDOTAUserMsgOverheadEvent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialTipInfo_Closure)
                 (const CDOTAUserMsgTutorialTipInfo *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialFinish_Closure)
                 (const CDOTAUserMsgTutorialFinish *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialMinimapPosition_Closure)
                 (const CDOTAUserMsgTutorialMinimapPosition *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSendGenericToolTip_Closure)
                 (const CDOTAUserMsgSendGenericToolTip *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgWorldLine_Closure)
                 (const CDOTAUserMsgWorldLine *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgChatWheel_Closure)
                 (const CDOTAUserMsgChatWheel *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgReceivedXmasGift_Closure)
                 (const CDOTAUserMsgReceivedXmasGift *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgShowSurvey_Closure)
                 (const CDOTAUserMsgShowSurvey *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUpdateSharedContent_Closure)
                 (const CDOTAUserMsgUpdateSharedContent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialRequestExp_Closure)
                 (const CDOTAUserMsgTutorialRequestExp *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialFade_Closure)
                 (const CDOTAUserMsgTutorialFade *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTutorialPingMinimap_Closure)
                 (const CDOTAUserMsgTutorialPingMinimap *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgGamerulesStateChanged_Closure)
                 (const CDOTAUserMsgGamerulesStateChanged *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgAddQuestLogEntry_Closure)
                 (const CDOTAUserMsgAddQuestLogEntry *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSendStatPopup_Closure)
                 (const CDOTAUserMsgSendStatPopup *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSendRoshanPopup_Closure)
                 (const CDOTAUserMsgSendRoshanPopup *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSendFinalGold_Closure)
                 (const CDOTAUserMsgSendFinalGold *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCustomMsg_Closure)
                 (const CDOTAUserMsgCustomMsg *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCoachHUDPing_Closure)
                 (const CDOTAUserMsgCoachHUDPing *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgClientLoadGridNav_Closure)
                 (const CDOTAUserMsgClientLoadGridNav *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTEProjectile_Closure)
                 (const CDOTAUserMsgTEProjectile *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTEProjectileLoc_Closure)
                 (const CDOTAUserMsgTEProjectileLoc *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTEDotaBloodImpact_Closure)
                 (const CDOTAUserMsgTEDotaBloodImpact *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgAbilityPing_Closure)
                 (const CDOTAUserMsgAbilityPing *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTEUnitAnimation_Closure)
                 (const CDOTAUserMsgTEUnitAnimation *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgTEUnitAnimationEnd_Closure)
                 (const CDOTAUserMsgTEUnitAnimationEnd *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgShowGenericPopup_Closure)
                 (const CDOTAUserMsgShowGenericPopup *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgVoteStart_Closure)
                 (const CDOTAUserMsgVoteStart *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgVoteUpdate_Closure)
                 (const CDOTAUserMsgVoteUpdate *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgVoteEnd_Closure)
                 (const CDOTAUserMsgVoteEnd *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgBoosterStatePlayer_Closure)
                 (const CDOTAUserMsgBoosterStatePlayer *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgBoosterState_Closure)
                 (const CDOTAUserMsgBoosterState *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgPlayerMMR_Closure)
                 (const CDOTAUserMsgPlayerMMR *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgAbilitySteal_Closure)
                 (const CDOTAUserMsgAbilitySteal *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsHeroLookup_Closure)
                 (const CDOTAUserMsgStatsHeroLookup *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsHeroPositionInfo__PositionPair_Closure)
                 (const CDOTAUserMsgStatsHeroPositionInfo__PositionPair *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsHeroPositionInfo_Closure)
                 (const CDOTAUserMsgStatsHeroPositionInfo *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsHeroMinuteDetails_Closure)
                 (const CDOTAUserMsgStatsHeroMinuteDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance_Closure)
                 (const CDOTAUserMsgStatsTeamMinuteDetails__LocationPerformance *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsTeamMinuteDetails_Closure)
                 (const CDOTAUserMsgStatsTeamMinuteDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsPlayerKillShare_Closure)
                 (const CDOTAUserMsgStatsPlayerKillShare *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsKillDetails_Closure)
                 (const CDOTAUserMsgStatsKillDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails_Closure)
                 (const CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightTeamDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails_Closure)
                 (const CDOTAUserMsgStatsMatchDetails__CDOTAUserMsgStatsFightDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgStatsMatchDetails_Closure)
                 (const CDOTAUserMsgStatsMatchDetails *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgMiniTaunt_Closure)
                 (const CDOTAUserMsgMiniTaunt *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgSpeechBubble_Closure)
                 (const CDOTAUserMsgSpeechBubble *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCustomHeaderMessage_Closure)
                 (const CDOTAUserMsgCustomHeaderMessage *message,
                  void *closure_data);
typedef void (*CMsgHeroAbilityStat_Closure)
                 (const CMsgHeroAbilityStat *message,
                  void *closure_data);
typedef void (*CMsgCombatAnalyzerPlayerStat_Closure)
                 (const CMsgCombatAnalyzerPlayerStat *message,
                  void *closure_data);
typedef void (*CMsgCombatAnalyzerStats_Closure)
                 (const CMsgCombatAnalyzerStats *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgBeastChat_Closure)
                 (const CDOTAUserMsgBeastChat *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCustomHudElementCreate_Closure)
                 (const CDOTAUserMsgCustomHudElementCreate *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCustomHudElementModify_Closure)
                 (const CDOTAUserMsgCustomHudElementModify *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCustomHudElementDestroy_Closure)
                 (const CDOTAUserMsgCustomHudElementDestroy *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCompendiumStatePlayer_Closure)
                 (const CDOTAUserMsgCompendiumStatePlayer *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgCompendiumState_Closure)
                 (const CDOTAUserMsgCompendiumState *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgProjectionAbility_Closure)
                 (const CDOTAUserMsgProjectionAbility *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgProjectionEvent_Closure)
                 (const CDOTAUserMsgProjectionEvent *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgXPAlert_Closure)
                 (const CDOTAUserMsgXPAlert *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgUpdateQuestProgress_Closure)
                 (const CDOTAUserMsgUpdateQuestProgress *message,
                  void *closure_data);
typedef void (*CDOTAUserMsgQuestStatus_Closure)
                 (const CDOTAUserMsgQuestStatus *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    edota_user_messages__descriptor;
extern const ProtobufCEnumDescriptor    dota__chat__message__descriptor;
extern const ProtobufCEnumDescriptor    dota__no__battle__points__reasons__descriptor;
extern const ProtobufCEnumDescriptor    dota__chat__informational__descriptor;
extern const ProtobufCEnumDescriptor    dota__ability__ping__type__descriptor;
extern const ProtobufCEnumDescriptor    edota_entity_messages__descriptor;
extern const ProtobufCEnumDescriptor    dota__particle__message__descriptor;
extern const ProtobufCEnumDescriptor    dota__overhead__alert__descriptor;
extern const ProtobufCEnumDescriptor    dota__position__category__descriptor;
extern const ProtobufCEnumDescriptor    dota__ability__target__type__descriptor;
extern const ProtobufCEnumDescriptor    ehero_stat_type__descriptor;
extern const ProtobufCEnumDescriptor    eplayer_voice_listen_state__descriptor;
extern const ProtobufCEnumDescriptor    eprojection_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__aidebug_line__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__ping__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__swap_verify__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__chat_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__combat_log_show_death__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__bot_chat__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__combat_hero_positions__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__mini_kill_cam_info__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__mini_kill_cam_info__attacker__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__mini_kill_cam_info__attacker__ability__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__global_light_color__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__global_light_direction__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__location_ping__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__item_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__enemy_item_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__modifier_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__hpmana_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__glyph_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__will_purchase_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__buy_back_state_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__quick_buy_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__courier_killed_alert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__minimap_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__map_line__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__minimap_debug_point__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__create_linear_projectile__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__destroy_linear_projectile__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__dodge_tracking_projectiles__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__spectator_player_click__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__spectator_player_unit_orders__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__nevermore_requiem__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__invalid_command__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__hud_error__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__shared_cooldown__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__set_next_autobuy_item__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__halloween_drops__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__prediction_result__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__prediction_result__prediction__descriptor;
extern const ProtobufCEnumDescriptor    cdotauser_msg__prediction_result__prediction__eresult__descriptor;
extern const ProtobufCMessageDescriptor cdotaresponse_query_serialized__descriptor;
extern const ProtobufCMessageDescriptor cdotaresponse_query_serialized__fact__descriptor;
extern const ProtobufCEnumDescriptor    cdotaresponse_query_serialized__fact__value_type__descriptor;
extern const ProtobufCMessageDescriptor cdotaspeech_match_on_client__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__speech__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__speech_mute__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__add_gesture__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__remove_gesture__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__blood_impact__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__unit_event__fade_gesture__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__item_purchased__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__item_found__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__release_particle_index__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__create_particle__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__destroy_particle__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__destroy_particle_involving__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_fwd__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_orient__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_fallback__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_offset__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_ent__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_set_frozen__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_particle_should_draw__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__change_control_point_attachment__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__particle_manager__update_entity_position__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__overhead_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_tip_info__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_finish__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_minimap_position__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__send_generic_tool_tip__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__world_line__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__chat_wheel__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__received_xmas_gift__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__show_survey__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__update_shared_content__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_request_exp__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_fade__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__tutorial_ping_minimap__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__gamerules_state_changed__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__add_quest_log_entry__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__send_stat_popup__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__send_roshan_popup__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__send_final_gold__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__custom_msg__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__coach_hudping__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__client_load_grid_nav__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__te__projectile__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__te__projectile_loc__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__te__dota_blood_impact__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__ability_ping__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__te__unit_animation__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__te__unit_animation_end__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__show_generic_popup__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__vote_start__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__vote_update__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__vote_end__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__booster_state_player__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__booster_state__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__player_mmr__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__ability_steal__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_hero_lookup__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_hero_position_info__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_hero_position_info__position_pair__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_hero_minute_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_team_minute_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_team_minute_details__location_performance__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_player_kill_share__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_kill_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_match_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_team_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__stats_match_details__cdotauser_msg__stats_fight_details__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__mini_taunt__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__speech_bubble__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__custom_header_message__descriptor;
extern const ProtobufCMessageDescriptor cmsg_hero_ability_stat__descriptor;
extern const ProtobufCMessageDescriptor cmsg_combat_analyzer_player_stat__descriptor;
extern const ProtobufCMessageDescriptor cmsg_combat_analyzer_stats__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__beast_chat__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__custom_hud_element__create__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__custom_hud_element__modify__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__custom_hud_element__destroy__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__compendium_state_player__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__compendium_state__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__projection_ability__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__projection_event__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__xpalert__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__update_quest_progress__descriptor;
extern const ProtobufCMessageDescriptor cdotauser_msg__quest_status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_dota_5fusermessages_2eproto__INCLUDED */
